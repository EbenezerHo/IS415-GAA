[
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "IS415-GAA",
    "section": "",
    "text": "Welcome to IS415 Geospatial Analytics and Application"
  },
  {
    "objectID": "In-class_Ex/In-class_Ex02/In-class_Ex02.html",
    "href": "In-class_Ex/In-class_Ex02/In-class_Ex02.html",
    "title": "In class Exercise 02",
    "section": "",
    "text": "arrow used for reading and writing parquet file. lubridate used for date and time\n\npacman:: p_load (arrow, lubridate, tidyverse, tmap, sf)\n\n\n\n\n\ndf &lt;- read_parquet(\"data/GrabPosisi/part-00000-8bbff892-97d2-4011-9961-703e38972569.c000.snappy.parquet\")\n\n\n\n\n\ndf$pingtimestamp &lt;- as_datetime(df$pingtimestamp)\n# df is to say that it is froma dataframe. then $pingtimestamp is the column name\n# reassign back data frame with the &lt;-\n\n\n\n\n\n\n\n\n\n\n\n\n\norigin_df &lt;- df %&gt;%  \n  group_by(trj_id) %&gt;% # group by trip id\n  arrange(pingtimestamp) %&gt;% # arrange by pingtimestamp to sort the data\n  filter(row_number() == 1) %&gt;% # get the first row of all the trip id\n  mutate(weekday = wday(pingtimestamp, label = TRUE, abbr = TRUE), # get the day of the week\n         start_hr = factor(hour(pingtimestamp)),# use factor to get ordinal data\n         day= factor(day(pingtimestamp)))\n\n\n\n\n\n\ndestination_df &lt;- df %&gt;%  \n  group_by(trj_id) %&gt;% # group by trip id\n  arrange(desc(pingtimestamp)) %&gt;%  # arrange descending by pingtimestamp to sort the data\n  filter(row_number() == 1) %&gt;% # get the last row of all the trip id\n  mutate(weekday = wday(pingtimestamp, label = TRUE, abbr = TRUE), # get the day of the week\n         end_hr = factor(hour(pingtimestamp)),# use factor to get ordinal data\n         day= factor(day(pingtimestamp)))\n\n\n\n\n# if working on the next day, just run this read since the data is already prepped\norigin_df &lt;- read_rds(\"data/rds/origin_df.rds\") \ndestination_df &lt;- read_rds(\"data/rds/destination_df.rds\")"
  },
  {
    "objectID": "In-class_Ex/In-class_Ex02/In-class_Ex02.html#loading-r-packages",
    "href": "In-class_Ex/In-class_Ex02/In-class_Ex02.html#loading-r-packages",
    "title": "In class Exercise 02",
    "section": "",
    "text": "arrow used for reading and writing parquet file. lubridate used for date and time\n\npacman:: p_load (arrow, lubridate, tidyverse, tmap, sf)"
  },
  {
    "objectID": "In-class_Ex/In-class_Ex02/In-class_Ex02.html#reading-the-data",
    "href": "In-class_Ex/In-class_Ex02/In-class_Ex02.html#reading-the-data",
    "title": "In class Exercise 02",
    "section": "",
    "text": "df &lt;- read_parquet(\"data/GrabPosisi/part-00000-8bbff892-97d2-4011-9961-703e38972569.c000.snappy.parquet\")"
  },
  {
    "objectID": "In-class_Ex/In-class_Ex02/In-class_Ex02.html#convert-the-data-type-of-pingtimestamp-from-character-to-date-time",
    "href": "In-class_Ex/In-class_Ex02/In-class_Ex02.html#convert-the-data-type-of-pingtimestamp-from-character-to-date-time",
    "title": "In class Exercise 02",
    "section": "",
    "text": "df$pingtimestamp &lt;- as_datetime(df$pingtimestamp)\n# df is to say that it is froma dataframe. then $pingtimestamp is the column name\n# reassign back data frame with the &lt;-"
  },
  {
    "objectID": "In-class_Ex/In-class_Ex02/In-class_Ex02.html#extracting-trip-starting-locations",
    "href": "In-class_Ex/In-class_Ex02/In-class_Ex02.html#extracting-trip-starting-locations",
    "title": "In class Exercise 02",
    "section": "",
    "text": "origin_df &lt;- df %&gt;%  \n  group_by(trj_id) %&gt;% # group by trip id\n  arrange(pingtimestamp) %&gt;% # arrange by pingtimestamp to sort the data\n  filter(row_number() == 1) %&gt;% # get the first row of all the trip id\n  mutate(weekday = wday(pingtimestamp, label = TRUE, abbr = TRUE), # get the day of the week\n         start_hr = factor(hour(pingtimestamp)),# use factor to get ordinal data\n         day= factor(day(pingtimestamp)))"
  },
  {
    "objectID": "In-class_Ex/In-class_Ex02/In-class_Ex02.html#extracting-trip-ending-locations",
    "href": "In-class_Ex/In-class_Ex02/In-class_Ex02.html#extracting-trip-ending-locations",
    "title": "In class Exercise 02",
    "section": "",
    "text": "destination_df &lt;- df %&gt;%  \n  group_by(trj_id) %&gt;% # group by trip id\n  arrange(desc(pingtimestamp)) %&gt;%  # arrange descending by pingtimestamp to sort the data\n  filter(row_number() == 1) %&gt;% # get the last row of all the trip id\n  mutate(weekday = wday(pingtimestamp, label = TRUE, abbr = TRUE), # get the day of the week\n         end_hr = factor(hour(pingtimestamp)),# use factor to get ordinal data\n         day= factor(day(pingtimestamp)))\n\n\n\n\n# if working on the next day, just run this read since the data is already prepped\norigin_df &lt;- read_rds(\"data/rds/origin_df.rds\") \ndestination_df &lt;- read_rds(\"data/rds/destination_df.rds\")"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex03/Hands-on_Ex03-part1.html",
    "href": "Hands-on_Ex/Hands-on_Ex03/Hands-on_Ex03-part1.html",
    "title": "In class Exercise 03",
    "section": "",
    "text": "pacman::p_load(tidyverse, sf, raster, spatstat, tmap,maptools)\n\n\n\n\n\n\n\n\nchildcare_sf &lt;- st_read(\"data/ChildCareServices.geojson\") %&gt;%\n  st_transform(crs = 3414)\n\nReading layer `ChildCareServices' from data source \n  `C:\\EbenezerHo\\IS415-GAA\\Hands-on_Ex\\Hands-on_Ex03\\data\\ChildCareServices.geojson' \n  using driver `GeoJSON'\nSimple feature collection with 1925 features and 2 fields\nGeometry type: POINT\nDimension:     XYZ\nBounding box:  xmin: 103.6878 ymin: 1.247759 xmax: 103.9897 ymax: 1.462134\nz_range:       zmin: 0 zmax: 0\nGeodetic CRS:  WGS 84\n\n\n\nmpsz_sf &lt;- st_read(dsn = \"data\", \n                layer = \"MP14_SUBZONE_WEB_PL\")\n\nReading layer `MP14_SUBZONE_WEB_PL' from data source \n  `C:\\EbenezerHo\\IS415-GAA\\Hands-on_Ex\\Hands-on_Ex03\\data' using driver `ESRI Shapefile'\nSimple feature collection with 323 features and 15 fields\nGeometry type: MULTIPOLYGON\nDimension:     XY\nBounding box:  xmin: 2667.538 ymin: 15748.72 xmax: 56396.44 ymax: 50256.33\nProjected CRS: SVY21\n\n\n\nsg_sf &lt;- st_transform(st_union(mpsz_sf), crs = 3414)\n\n\nplot(sg_sf)\n\n\n\n\n\n\n\n\nwrite_rds(childcare_sf, \"data/rds/childcare_sf.rds\")\nwrite_rds(mpsz_sf, \"data/rds/mpsz_sf.rds\")\nwrite_rds(sg_sf, \"data/rds/sg_sf.rds\")\n\n\n\n\nmap mpsz_sf then add childcare_sf\n\ntm_shape(mpsz_sf)+\n  tm_polygons()+\n  tm_shape(childcare_sf)+\n  tm_dots()\n\n\n\n\n\ntmap_mode('view')\ntm_shape(childcare_sf)+\n  tm_dots()\n\n\n\n\n\n\nRemember to set back tmap mode to plot instead of view. avoid more than 10 interactive maps\n\ntmap_mode('plot')\n\n\n\n\nConverting sf data frames to sp’s Spatial* class\n\nchildcare &lt;- as_Spatial(childcare_sf)\nmpsz &lt;- as_Spatial(mpsz_sf)\nsg &lt;- as_Spatial(sg_sf)\n\n\nchildcare\n\nclass       : SpatialPointsDataFrame \nfeatures    : 1925 \nextent      : 11810.03, 45404.24, 25596.33, 49300.88  (xmin, xmax, ymin, ymax)\ncrs         : +proj=tmerc +lat_0=1.36666666666667 +lon_0=103.833333333333 +k=1 +x_0=28001.642 +y_0=38744.572 +ellps=WGS84 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs \nvariables   : 2\nnames       :    Nameescription \nmin values  :   kml_1, &lt;center&gt;&lt;table&gt;&lt;tr&gt;&lt;th colspan='2' align='center'&gt;&lt;em&gt;Attributes&lt;/em&gt;&lt;/th&gt;&lt;/tr&gt;&lt;tr bgcolor=\"#E3E3F3\"&gt; &lt;th&gt;ADDRESSBLOCKHOUSENUMBER&lt;/th&gt; &lt;td&gt;&lt;/td&gt; &lt;/tr&gt;&lt;tr bgcolor=\"\"&gt; &lt;th&gt;ADDRESSBUILDINGNAME&lt;/th&gt; &lt;td&gt;&lt;/td&gt; &lt;/tr&gt;&lt;tr bgcolor=\"#E3E3F3\"&gt; &lt;th&gt;ADDRESSPOSTALCODE&lt;/th&gt; &lt;td&gt;100044&lt;/td&gt; &lt;/tr&gt;&lt;tr bgcolor=\"\"&gt; &lt;th&gt;ADDRESSSTREETNAME&lt;/th&gt; &lt;td&gt;44, TELOK BLANGAH DRIVE, #01 - 19/51, SINGAPORE 100044&lt;/td&gt; &lt;/tr&gt;&lt;tr bgcolor=\"#E3E3F3\"&gt; &lt;th&gt;ADDRESSTYPE&lt;/th&gt; &lt;td&gt;&lt;/td&gt; &lt;/tr&gt;&lt;tr bgcolor=\"\"&gt; &lt;th&gt;DESCRIPTION&lt;/th&gt; &lt;td&gt;Child Care Services&lt;/td&gt; &lt;/tr&gt;&lt;tr bgcolor=\"#E3E3F3\"&gt; &lt;th&gt;HYPERLINK&lt;/th&gt; &lt;td&gt;&lt;/td&gt; &lt;/tr&gt;&lt;tr bgcolor=\"\"&gt; &lt;th&gt;LANDXADDRESSPOINT&lt;/th&gt; &lt;td&gt;&lt;/td&gt; &lt;/tr&gt;&lt;tr bgcolor=\"#E3E3F3\"&gt; &lt;th&gt;LANDYADDRESSPOINT&lt;/th&gt; &lt;td&gt;&lt;/td&gt; &lt;/tr&gt;&lt;tr bgcolor=\"\"&gt; &lt;th&gt;NAME&lt;/th&gt; &lt;td&gt;PCF SPARKLETOTS PRESCHOOL @ TELOK BLANGAH BLK 44 (CC)&lt;/td&gt; &lt;/tr&gt;&lt;tr bgcolor=\"#E3E3F3\"&gt; &lt;th&gt;PHOTOURL&lt;/th&gt; &lt;td&gt;&lt;/td&gt; &lt;/tr&gt;&lt;tr bgcolor=\"\"&gt; &lt;th&gt;ADDRESSFLOORNUMBER&lt;/th&gt; &lt;td&gt;&lt;/td&gt; &lt;/tr&gt;&lt;tr bgcolor=\"#E3E3F3\"&gt; &lt;th&gt;INC_CRC&lt;/th&gt; &lt;td&gt;349C54F201805938&lt;/td&gt; &lt;/tr&gt;&lt;tr bgcolor=\"\"&gt; &lt;th&gt;FMEL_UPD_D&lt;/th&gt; &lt;td&gt;20211201093837&lt;/td&gt; &lt;/tr&gt;&lt;tr bgcolor=\"#E3E3F3\"&gt; &lt;th&gt;ADDRESSUNITNUMBER&lt;/th&gt; &lt;td&gt;&lt;/td&gt; &lt;/tr&gt;&lt;/table&gt;&lt;/center&gt; \nmax values  : kml_999,                                            &lt;center&gt;&lt;table&gt;&lt;tr&gt;&lt;th colspan='2' align='center'&gt;&lt;em&gt;Attributes&lt;/em&gt;&lt;/th&gt;&lt;/tr&gt;&lt;tr bgcolor=\"#E3E3F3\"&gt; &lt;th&gt;ADDRESSBLOCKHOUSENUMBER&lt;/th&gt; &lt;td&gt;&lt;/td&gt; &lt;/tr&gt;&lt;tr bgcolor=\"\"&gt; &lt;th&gt;ADDRESSBUILDINGNAME&lt;/th&gt; &lt;td&gt;&lt;/td&gt; &lt;/tr&gt;&lt;tr bgcolor=\"#E3E3F3\"&gt; &lt;th&gt;ADDRESSPOSTALCODE&lt;/th&gt; &lt;td&gt;99982&lt;/td&gt; &lt;/tr&gt;&lt;tr bgcolor=\"\"&gt; &lt;th&gt;ADDRESSSTREETNAME&lt;/th&gt; &lt;td&gt;35, ALLANBROOKE ROAD, SINGAPORE 099982&lt;/td&gt; &lt;/tr&gt;&lt;tr bgcolor=\"#E3E3F3\"&gt; &lt;th&gt;ADDRESSTYPE&lt;/th&gt; &lt;td&gt;&lt;/td&gt; &lt;/tr&gt;&lt;tr bgcolor=\"\"&gt; &lt;th&gt;DESCRIPTION&lt;/th&gt; &lt;td&gt;Child Care Services&lt;/td&gt; &lt;/tr&gt;&lt;tr bgcolor=\"#E3E3F3\"&gt; &lt;th&gt;HYPERLINK&lt;/th&gt; &lt;td&gt;&lt;/td&gt; &lt;/tr&gt;&lt;tr bgcolor=\"\"&gt; &lt;th&gt;LANDXADDRESSPOINT&lt;/th&gt; &lt;td&gt;&lt;/td&gt; &lt;/tr&gt;&lt;tr bgcolor=\"#E3E3F3\"&gt; &lt;th&gt;LANDYADDRESSPOINT&lt;/th&gt; &lt;td&gt;&lt;/td&gt; &lt;/tr&gt;&lt;tr bgcolor=\"\"&gt; &lt;th&gt;NAME&lt;/th&gt; &lt;td&gt;ISLANDER PRE-SCHOOL PTE LTD&lt;/td&gt; &lt;/tr&gt;&lt;tr bgcolor=\"#E3E3F3\"&gt; &lt;th&gt;PHOTOURL&lt;/th&gt; &lt;td&gt;&lt;/td&gt; &lt;/tr&gt;&lt;tr bgcolor=\"\"&gt; &lt;th&gt;ADDRESSFLOORNUMBER&lt;/th&gt; &lt;td&gt;&lt;/td&gt; &lt;/tr&gt;&lt;tr bgcolor=\"#E3E3F3\"&gt; &lt;th&gt;INC_CRC&lt;/th&gt; &lt;td&gt;4F63ACF93EFABE7F&lt;/td&gt; &lt;/tr&gt;&lt;tr bgcolor=\"\"&gt; &lt;th&gt;FMEL_UPD_D&lt;/th&gt; &lt;td&gt;20211201093837&lt;/td&gt; &lt;/tr&gt;&lt;tr bgcolor=\"#E3E3F3\"&gt; &lt;th&gt;ADDRESSUNITNUMBER&lt;/th&gt; &lt;td&gt;&lt;/td&gt; &lt;/tr&gt;&lt;/table&gt;&lt;/center&gt; \n\n\n\nmpsz\n\nclass       : SpatialPolygonsDataFrame \nfeatures    : 323 \nextent      : 2667.538, 56396.44, 15748.72, 50256.33  (xmin, xmax, ymin, ymax)\ncrs         : +proj=tmerc +lat_0=1.36666666666667 +lon_0=103.833333333333 +k=1 +x_0=28001.642 +y_0=38744.572 +datum=WGS84 +units=m +no_defs \nvariables   : 15\nnames       : OBJECTID, SUBZONE_NO, SUBZONE_N, SUBZONE_C, CA_IND, PLN_AREA_N, PLN_AREA_C,       REGION_N, REGION_C,          INC_CRC, FMEL_UPD_D,     X_ADDR,     Y_ADDR,    SHAPE_Leng,    SHAPE_Area \nmin values  :        1,          1, ADMIRALTY,    AMSZ01,      N, ANG MO KIO,         AM, CENTRAL REGION,       CR, 00F5E30B5C9B7AD8,      16409,  5092.8949,  19579.069, 871.554887798, 39437.9352703 \nmax values  :      323,         17,    YUNNAN,    YSSZ09,      Y,     YISHUN,         YS,    WEST REGION,       WR, FFCCF172717C2EAF,      16409, 50424.7923, 49552.7904, 68083.9364708,  69748298.792 \n\n\n\nsg\n\nclass       : SpatialPolygons \nfeatures    : 1 \nextent      : 2667.538, 56396.44, 15748.72, 50256.33  (xmin, xmax, ymin, ymax)\ncrs         : +proj=tmerc +lat_0=1.36666666666667 +lon_0=103.833333333333 +k=1 +x_0=28001.642 +y_0=38744.572 +ellps=WGS84 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs \n\n\n\n\n\n\nchildcare_sp &lt;- as(childcare, \"SpatialPoints\")\nsg_sp &lt;- as(sg, \"SpatialPolygons\")\n\n\nchildcare_sp\n\nclass       : SpatialPoints \nfeatures    : 1925 \nextent      : 11810.03, 45404.24, 25596.33, 49300.88  (xmin, xmax, ymin, ymax)\ncrs         : +proj=tmerc +lat_0=1.36666666666667 +lon_0=103.833333333333 +k=1 +x_0=28001.642 +y_0=38744.572 +ellps=WGS84 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs \n\n\n\nsg_sp\n\nclass       : SpatialPolygons \nfeatures    : 1 \nextent      : 2667.538, 56396.44, 15748.72, 50256.33  (xmin, xmax, ymin, ymax)\ncrs         : +proj=tmerc +lat_0=1.36666666666667 +lon_0=103.833333333333 +k=1 +x_0=28001.642 +y_0=38744.572 +ellps=WGS84 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs \n\n\n\n\n\n\nchildcare_ppp &lt;- as(childcare_sp, \"ppp\")\nchildcare_ppp\n\nPlanar point pattern: 1925 points\nwindow: rectangle = [11810.03, 45404.24] x [25596.33, 49300.88] units\n\n\nplot childcare ppp\n\nplot(childcare_ppp)\n\n\n\n\n\nsummary(childcare_ppp)\n\nPlanar point pattern:  1925 points\nAverage intensity 2.417323e-06 points per square unit\n\n*Pattern contains duplicated points*\n\nCoordinates are given to 3 decimal places\ni.e. rounded to the nearest multiple of 0.001 units\n\nWindow: rectangle = [11810.03, 45404.24] x [25596.33, 49300.88] units\n                    (33590 x 23700 units)\nWindow area = 796335000 square units\n\n\ncheck for duplicates\n\nany(duplicated(childcare_ppp))\n\n[1] TRUE\n\n\ncount the number of co-indicence points\n\nmultiplicity(childcare_ppp)\n\n   1    2    3    4    5    6    7    8    9   10   11   12   13   14   15   16 \n   1    2    1    1    1    1    2    1    1    1    1    1    1    3    1    1 \n  17   18   19   20   21   22   23   24   25   26   27   28   29   30   31   32 \n   1    3    1    1    1    1    1    1    1    1    1    1    1    1    1    1 \n  33   34   35   36   37   38   39   40   41   42   43   44   45   46   47   48 \n   1    1    1    1    4    1    1    1    1    1    1    1    1    1    1    2 \n  49   50   51   52   53   54   55   56   57   58   59   60   61   62   63   64 \n   1    1    1    2    1    1    1    1    1    1    1    1    1    2    1    1 \n  65   66   67   68   69   70   71   72   73   74   75   76   77   78   79   80 \n   1    3    1    1    1    2    1   10    1    1    1    1    1    1    1    1 \n  81   82   83   84   85   86   87   88   89   90   91   92   93   94   95   96 \n   1    1    1    1    1    1    1    1    1    1    1    1    1    1    1    1 \n  97   98   99  100  101  102  103  104  105  106  107  108  109  110  111  112 \n   1    1    1    1    1    1    1    2    1    1    3    1    1    1    2    1 \n 113  114  115  116  117  118  119  120  121  122  123  124  125  126  127  128 \n   1    2    2    2    1    1    1    1    1    1    1    1    2    1    1    1 \n 129  130  131  132  133  134  135  136  137  138  139  140  141  142  143  144 \n   1    1    1    1    1    3    1    1    1    1    1    1    1    1    1    1 \n 145  146  147  148  149  150  151  152  153  154  155  156  157  158  159  160 \n   1    1    1    1    1    1    1    1    1    1    1    1    1    1    1    1 \n 161  162  163  164  165  166  167  168  169  170  171  172  173  174  175  176 \n   1    1    2    2    2    1    1    1    1    1    2    1    4    1    1    2 \n 177  178  179  180  181  182  183  184  185  186  187  188  189  190  191  192 \n   1    1    1    1    1    1    1    1    2    1    1    1    1    1    1    1 \n 193  194  195  196  197  198  199  200  201  202  203  204  205  206  207  208 \n   3    1    1    1    1    1    3    1    1    1    1    1    1    1    1    1 \n 209  210  211  212  213  214  215  216  217  218  219  220  221  222  223  224 \n   1    1    1    1    1   10    1    1    3    1    1    1    1    1    1    1 \n 225  226  227  228  229  230  231  232  233  234  235  236  237  238  239  240 \n   1    1    1    2    1    1    1    1    1    1    1    1    1    1    1    1 \n 241  242  243  244  245  246  247  248  249  250  251  252  253  254  255  256 \n   1    1    2    6    1    2    1    1    2    1    1    1    1    1    1    1 \n 257  258  259  260  261  262  263  264  265  266  267  268  269  270  271  272 \n   3    2    3    2    1    2    1    1    2    4    1    6    6    1    1    1 \n 273  274  275  276  277  278  279  280  281  282  283  284  285  286  287  288 \n   2    1    1    1    1    2    1    1    1    1    1    1    3    1    1    1 \n 289  290  291  292  293  294  295  296  297  298  299  300  301  302  303  304 \n   1    1    4    1    2    1    1    1    1    1    1    1    1    1    1    1 \n 305  306  307  308  309  310  311  312  313  314  315  316  317  318  319  320 \n   1    1    1    1    1    1    1    1    1    1    1    2    1    1    1    1 \n 321  322  323  324  325  326  327  328  329  330  331  332  333  334  335  336 \n   1    1    1    1    1    1    1    1    1    1    1    1    1    1    1    1 \n 337  338  339  340  341  342  343  344  345  346  347  348  349  350  351  352 \n   1    1    2    1    1    1    2    1    1    1    2    1    1    1    1    1 \n 353  354  355  356  357  358  359  360  361  362  363  364  365  366  367  368 \n   1    1    1    1    2    1    2    2    1    1    1    1    2    1    1    1 \n 369  370  371  372  373  374  375  376  377  378  379  380  381  382  383  384 \n   4    1    1    1    1    2    1    1    1    1    1    1    2    1    1    1 \n 385  386  387  388  389  390  391  392  393  394  395  396  397  398  399  400 \n   1    1    1    1    1    1    1    1    1    1    1    1    1    1    1    2 \n 401  402  403  404  405  406  407  408  409  410  411  412  413  414  415  416 \n   2    1    1    1    1    1    1    1    1    1    1    1    1    1    1    4 \n 417  418  419  420  421  422  423  424  425  426  427  428  429  430  431  432 \n   1    1    1    1    1    1    1    1    1    1    1    1    1    1    1    1 \n 433  434  435  436  437  438  439  440  441  442  443  444  445  446  447  448 \n   1    1    1    1    1    1    1    1    1    2    1    1    1    1    1    1 \n 449  450  451  452  453  454  455  456  457  458  459  460  461  462  463  464 \n   1    1    2    1    1    1    1    1    1    1    1    1    2    1    1    1 \n 465  466  467  468  469  470  471  472  473  474  475  476  477  478  479  480 \n   1    1    2    1    1    1    1    1    1    1    1    1    1    1    1    1 \n 481  482  483  484  485  486  487  488  489  490  491  492  493  494  495  496 \n   2    2    1    1    1    1    1   10    1    2    1    1    1    2    1    3 \n 497  498  499  500  501  502  503  504  505  506  507  508  509  510  511  512 \n   1    1    1    1   10   10   10    1    1    1    1    1    1    1    1    1 \n 513  514  515  516  517  518  519  520  521  522  523  524  525  526  527  528 \n   1    1    1    2    1    2    1    1    1    1    3    1    2    1    1    1 \n 529  530  531  532  533  534  535  536  537  538  539  540  541  542  543  544 \n   1    1    1    1    1    1    3    1    1    1    1    1    2    1    1    2 \n 545  546  547  548  549  550  551  552  553  554  555  556  557  558  559  560 \n   1    1    3    1    1    1    1    1    1    1    1    2    2    2    1    1 \n 561  562  563  564  565  566  567  568  569  570  571  572  573  574  575  576 \n   2    3    1    1    1    2    1    1    1    2    2    1    1    1    1    1 \n 577  578  579  580  581  582  583  584  585  586  587  588  589  590  591  592 \n   1    1    1    1    1    1    1    1    1    1    1    1    1    4    1    1 \n 593  594  595  596  597  598  599  600  601  602  603  604  605  606  607  608 \n   1    1    1    1    1    3    1    1    1    1    1    1    1    1    1    1 \n 609  610  611  612  613  614  615  616  617  618  619  620  621  622  623  624 \n   1    1    1    1    1    4    1    1    1    1    1    1    4    1    1    1 \n 625  626  627  628  629  630  631  632  633  634  635  636  637  638  639  640 \n   1    1    1    1    1    2    1    1    1    1    1    1    1    1    1    1 \n 641  642  643  644  645  646  647  648  649  650  651  652  653  654  655  656 \n   1    1    1    1    2    1    1    1    1    1    1    1    1    2    1    1 \n 657  658  659  660  661  662  663  664  665  666  667  668  669  670  671  672 \n   1    1    1    1    1    1    1    1    1    1    2    1    1    3    1    1 \n 673  674  675  676  677  678  679  680  681  682  683  684  685  686  687  688 \n   1    1    1    1    1    1    1    1    1   10    1    1    1    1    1    2 \n 689  690  691  692  693  694  695  696  697  698  699  700  701  702  703  704 \n   1    1    1    1    1    1    1    1    1    1    1    1    1    1    1    1 \n 705  706  707  708  709  710  711  712  713  714  715  716  717  718  719  720 \n   1    1    1    2    1    2    1   10    1    4    1    2    1    1    1    1 \n 721  722  723  724  725  726  727  728  729  730  731  732  733  734  735  736 \n   3    1    1    1    1    1    1    1    1    1    1    1    1    1    1    1 \n 737  738  739  740  741  742  743  744  745  746  747  748  749  750  751  752 \n   1    1    1    1    1    1    1    1    1    1    1    1    1    1    1    1 \n 753  754  755  756  757  758  759  760  761  762  763  764  765  766  767  768 \n   1    3    1    1    3    1    1    1    1    2    1    1    1    1    1    1 \n 769  770  771  772  773  774  775  776  777  778  779  780  781  782  783  784 \n   1    1    1    1    1    1    1    1    1    1    1    1    1    1    1    1 \n 785  786  787  788  789  790  791  792  793  794  795  796  797  798  799  800 \n   1    1    1    1    1    1    1    1    1    1    2    1    1    1    1    1 \n 801  802  803  804  805  806  807  808  809  810  811  812  813  814  815  816 \n   1    1    1    1    1    1    1    1    1    1    1    1    1    1    1    1 \n 817  818  819  820  821  822  823  824  825  826  827  828  829  830  831  832 \n   1    1    1    1    1    1    1    1    1    1    1    1    1    1    1    1 \n 833  834  835  836  837  838  839  840  841  842  843  844  845  846  847  848 \n   1    1    1    1    1    1    1    1    1    1    1    1    1    1    1    1 \n 849  850  851  852  853  854  855  856  857  858  859  860  861  862  863  864 \n   1    1    1    1    1    1    1    1    1    1    1    1    1    1    1    1 \n 865  866  867  868  869  870  871  872  873  874  875  876  877  878  879  880 \n   1    1    1    1    1    1    1    1    1    1    1    1    1    1    1    1 \n 881  882  883  884  885  886  887  888  889  890  891  892  893  894  895  896 \n   1    1    1    1    1    1    1    1    1    2    1    1    1    1    1    2 \n 897  898  899  900  901  902  903  904  905  906  907  908  909  910  911  912 \n   1    1    1    2    1    1    1    1    1    1    1    1    1    1    1    1 \n 913  914  915  916  917  918  919  920  921  922  923  924  925  926  927  928 \n   1    1    2    1    1    1    1    1    2    2    1    1    1    1    2    1 \n 929  930  931  932  933  934  935  936  937  938  939  940  941  942  943  944 \n   1    1    2    1    2    1    1    1    2    1    1    1    2    1    1    1 \n 945  946  947  948  949  950  951  952  953  954  955  956  957  958  959  960 \n   1    1    2    1    1    2    1    1    1    1    1    1    1    1    2    1 \n 961  962  963  964  965  966  967  968  969  970  971  972  973  974  975  976 \n   1    2    2    1    1    1    1    2    1    1    1    1    2    1    1    2 \n 977  978  979  980  981  982  983  984  985  986  987  988  989  990  991  992 \n   1    1    1    1    2    1    1    1    1    1    1    1    1    1    1    1 \n 993  994  995  996  997  998  999 1000 1001 1002 1003 1004 1005 1006 1007 1008 \n   1    1    1    1    1    1    1    1    1    1    1    1    1    1    1    1 \n1009 1010 1011 1012 1013 1014 1015 1016 1017 1018 1019 1020 1021 1022 1023 1024 \n   1    1    1    2    4    1    1    1    1    1    1    2    1    2    2    2 \n1025 1026 1027 1028 1029 1030 1031 1032 1033 1034 1035 1036 1037 1038 1039 1040 \n   2    1    1    1    1    2    1    1    2    2    2    2    1    1    1    1 \n1041 1042 1043 1044 1045 1046 1047 1048 1049 1050 1051 1052 1053 1054 1055 1056 \n   2    1    1    1    2    1    2    1    1    1    1    1    1    1    1    1 \n1057 1058 1059 1060 1061 1062 1063 1064 1065 1066 1067 1068 1069 1070 1071 1072 \n   1    2    2    2    1    1    1    1    1    2    1    1    2    2    2    1 \n1073 1074 1075 1076 1077 1078 1079 1080 1081 1082 1083 1084 1085 1086 1087 1088 \n   1    1    1    1    2    1    1    2    1    1    1    1    1    1    1    1 \n1089 1090 1091 1092 1093 1094 1095 1096 1097 1098 1099 1100 1101 1102 1103 1104 \n   1    3    1    1    1    1    1    1    1    1    1    1    1    1    1    1 \n1105 1106 1107 1108 1109 1110 1111 1112 1113 1114 1115 1116 1117 1118 1119 1120 \n   2    1    2    1    2    1    1    1    1    1    1    2    2    1    1    2 \n1121 1122 1123 1124 1125 1126 1127 1128 1129 1130 1131 1132 1133 1134 1135 1136 \n   1    2    1    2    1    2    1    1    1    1    1    2    1    1    1    1 \n1137 1138 1139 1140 1141 1142 1143 1144 1145 1146 1147 1148 1149 1150 1151 1152 \n   1    2    1    2    2    2    2    2    1    1    1    1    1    2    1    1 \n1153 1154 1155 1156 1157 1158 1159 1160 1161 1162 1163 1164 1165 1166 1167 1168 \n   1    1    1    1    1    2    1    1    2    1    1    1    1    2    1    1 \n1169 1170 1171 1172 1173 1174 1175 1176 1177 1178 1179 1180 1181 1182 1183 1184 \n   1    2    1    1    1    1    2    1    1    1    1    1    1    1    1    1 \n1185 1186 1187 1188 1189 1190 1191 1192 1193 1194 1195 1196 1197 1198 1199 1200 \n   1    1    1    1    1    1    1    1    1    2    1    1    1    1    1    1 \n1201 1202 1203 1204 1205 1206 1207 1208 1209 1210 1211 1212 1213 1214 1215 1216 \n   1    1    1    1    1    1    1    1    1    1    1    1    1    1    1    1 \n1217 1218 1219 1220 1221 1222 1223 1224 1225 1226 1227 1228 1229 1230 1231 1232 \n   1    1    1    2    1    1    1    3    1    1    1    1    1    1    1   10 \n1233 1234 1235 1236 1237 1238 1239 1240 1241 1242 1243 1244 1245 1246 1247 1248 \n   2    1    3    2    1    2    1    1    2    3    2    1    1    1    1    1 \n1249 1250 1251 1252 1253 1254 1255 1256 1257 1258 1259 1260 1261 1262 1263 1264 \n   1    1    1    1    1    2    1    2    1    1    1    1    1    1    1    1 \n1265 1266 1267 1268 1269 1270 1271 1272 1273 1274 1275 1276 1277 1278 1279 1280 \n   1    1    1    1    1    1    1    1    1    1    4    1    1    1    1    1 \n1281 1282 1283 1284 1285 1286 1287 1288 1289 1290 1291 1292 1293 1294 1295 1296 \n   2    1    1    1    2    1    2    1    1    1    1    1    1    1    1    1 \n1297 1298 1299 1300 1301 1302 1303 1304 1305 1306 1307 1308 1309 1310 1311 1312 \n   1    1    1    1    1    1    1    1    1    1    1    1    1    1    1    1 \n1313 1314 1315 1316 1317 1318 1319 1320 1321 1322 1323 1324 1325 1326 1327 1328 \n  10    1    2    4    1    1    1    4    1    4    1    1    1    1    1    1 \n1329 1330 1331 1332 1333 1334 1335 1336 1337 1338 1339 1340 1341 1342 1343 1344 \n   1    1    1    1    1    1    1    1    1    4    2    3    2    1    1    1 \n1345 1346 1347 1348 1349 1350 1351 1352 1353 1354 1355 1356 1357 1358 1359 1360 \n   2    2    1    1    1    1    1    2    2    3    1    1    1    1    1    2 \n1361 1362 1363 1364 1365 1366 1367 1368 1369 1370 1371 1372 1373 1374 1375 1376 \n   1    1    1    1    1    1    1    1    1    1    1    1    1    1    1    1 \n1377 1378 1379 1380 1381 1382 1383 1384 1385 1386 1387 1388 1389 1390 1391 1392 \n   2    1    1    1    1    1    1    1    1    1    1    1    1    1    1    1 \n1393 1394 1395 1396 1397 1398 1399 1400 1401 1402 1403 1404 1405 1406 1407 1408 \n   1    1    1    1    1    1    1    1    1    1    1    1    1    1    1    1 \n1409 1410 1411 1412 1413 1414 1415 1416 1417 1418 1419 1420 1421 1422 1423 1424 \n   1    1    1    2    1    1    1    1    1    1    1    1    1    1    1    1 \n1425 1426 1427 1428 1429 1430 1431 1432 1433 1434 1435 1436 1437 1438 1439 1440 \n   2    2    2    1    1    1    6    1    1    1    1    1    1    1    1    1 \n1441 1442 1443 1444 1445 1446 1447 1448 1449 1450 1451 1452 1453 1454 1455 1456 \n   1    1    1    4    1    1    1    1    1    1    1    1    1    1    1    1 \n1457 1458 1459 1460 1461 1462 1463 1464 1465 1466 1467 1468 1469 1470 1471 1472 \n   1    1    1    1    2    2    1    1    1    1    1    1    1    1    1    1 \n1473 1474 1475 1476 1477 1478 1479 1480 1481 1482 1483 1484 1485 1486 1487 1488 \n   1    1    1    1    2    1    1    1    1    2    1    1    1    1    2    1 \n1489 1490 1491 1492 1493 1494 1495 1496 1497 1498 1499 1500 1501 1502 1503 1504 \n   2    1    1    1    1    1    1    1    1    1    1    1    1    1    1    1 \n1505 1506 1507 1508 1509 1510 1511 1512 1513 1514 1515 1516 1517 1518 1519 1520 \n   2    1    1    1    1    1    1    3    1    1    1    1    1    1    1    1 \n1521 1522 1523 1524 1525 1526 1527 1528 1529 1530 1531 1532 1533 1534 1535 1536 \n   1    1    1    1    1    1    1    1    1    1    1    1    1    1    1    1 \n1537 1538 1539 1540 1541 1542 1543 1544 1545 1546 1547 1548 1549 1550 1551 1552 \n   1    1    1    1    1    1    1    1    1    6    1    1    1    1    1    1 \n1553 1554 1555 1556 1557 1558 1559 1560 1561 1562 1563 1564 1565 1566 1567 1568 \n   1    1    1    1    1    1    1    3    1    1    4    1    1    2    1    1 \n1569 1570 1571 1572 1573 1574 1575 1576 1577 1578 1579 1580 1581 1582 1583 1584 \n   2    1    1    1    2    1    4    1    2    1    1    1    1    1    1    1 \n1585 1586 1587 1588 1589 1590 1591 1592 1593 1594 1595 1596 1597 1598 1599 1600 \n   1    1    1    1    1    1    1    1    2    1    1    2    1    1    1    1 \n1601 1602 1603 1604 1605 1606 1607 1608 1609 1610 1611 1612 1613 1614 1615 1616 \n   1    1    1    1    2    1    1    3    1    1    1    2    1    1    1    1 \n1617 1618 1619 1620 1621 1622 1623 1624 1625 1626 1627 1628 1629 1630 1631 1632 \n   2    1    1    1    1    1    1    2    1    1    2    1    1    1    1    1 \n1633 1634 1635 1636 1637 1638 1639 1640 1641 1642 1643 1644 1645 1646 1647 1648 \n   3    1    1    2    1    1    1    1    1    1    1    1    1    2    1    1 \n1649 1650 1651 1652 1653 1654 1655 1656 1657 1658 1659 1660 1661 1662 1663 1664 \n   1    1    1    1    1    1    1    2    1    1    1    1    1    1    1    1 \n1665 1666 1667 1668 1669 1670 1671 1672 1673 1674 1675 1676 1677 1678 1679 1680 \n   1    1    1    4    1    1    1    6    1    1    1    1    1    1    1    1 \n1681 1682 1683 1684 1685 1686 1687 1688 1689 1690 1691 1692 1693 1694 1695 1696 \n   1    1    1    2    1    1    1    2    1    1    1    1    1    2    1    1 \n1697 1698 1699 1700 1701 1702 1703 1704 1705 1706 1707 1708 1709 1710 1711 1712 \n   1    2    1    1    1    1    1    1    1    1    2    2    2    1    1    1 \n1713 1714 1715 1716 1717 1718 1719 1720 1721 1722 1723 1724 1725 1726 1727 1728 \n   2    1    2    1    2    1    2    1    1    2    1    2    2    2    2    1 \n1729 1730 1731 1732 1733 1734 1735 1736 1737 1738 1739 1740 1741 1742 1743 1744 \n   1    1    1    1    1    2    1    1    1    2    1    1    1    1    2    1 \n1745 1746 1747 1748 1749 1750 1751 1752 1753 1754 1755 1756 1757 1758 1759 1760 \n   1    4    1    4    1    4    1    1    2    1    1    1    1    1    3    1 \n1761 1762 1763 1764 1765 1766 1767 1768 1769 1770 1771 1772 1773 1774 1775 1776 \n   1    1    1    2    2    2    2    2    2    2    2    1    1    2    2    2 \n1777 1778 1779 1780 1781 1782 1783 1784 1785 1786 1787 1788 1789 1790 1791 1792 \n   1    2    1    1    1    1    1    2    2    2    1    2    2    2    2    1 \n1793 1794 1795 1796 1797 1798 1799 1800 1801 1802 1803 1804 1805 1806 1807 1808 \n   2    1    1    1    1    1    1    1    2    2    1    2    1    1    1    1 \n1809 1810 1811 1812 1813 1814 1815 1816 1817 1818 1819 1820 1821 1822 1823 1824 \n   1    1    1    1    2    1    2    2    2    2    2    2    1    1    2    1 \n1825 1826 1827 1828 1829 1830 1831 1832 1833 1834 1835 1836 1837 1838 1839 1840 \n   1    1    1    2    2    2    2    2    1    1    1    2    1    1    2    2 \n1841 1842 1843 1844 1845 1846 1847 1848 1849 1850 1851 1852 1853 1854 1855 1856 \n   1    2    1    1    2    1    1    2    2    2    1    2    1    2    1    1 \n1857 1858 1859 1860 1861 1862 1863 1864 1865 1866 1867 1868 1869 1870 1871 1872 \n   1    1    1    1    1    1    2    1    1    1    1    4    1    1    1    1 \n1873 1874 1875 1876 1877 1878 1879 1880 1881 1882 1883 1884 1885 1886 1887 1888 \n   3    1    1    2    1    1    1    2    1    1    1    1    1    2    2    1 \n1889 1890 1891 1892 1893 1894 1895 1896 1897 1898 1899 1900 1901 1902 1903 1904 \n   1    1    2    1    2    2    1    1    1    1    1    2    1    1    2    1 \n1905 1906 1907 1908 1909 1910 1911 1912 1913 1914 1915 1916 1917 1918 1919 1920 \n   1    3    2    2    2    1    2    1    3    1    1    1    1    1    1    1 \n1921 1922 1923 1924 1925 \n   1    1    1    1    3 \n\n\nIf we want to know how many locations have more than one point event, we can use the code chunk below.\n\nsum(multiplicity(childcare_ppp) &gt; 1)\n\n[1] 338\n\n\nthis shows that there are 338 duplicates\n\ntmap_mode('view')\ntm_shape(childcare) +\n  tm_dots(alpha=0.4, \n          size=0.05)\n\n\n\n\n\n\n\ntmap_mode('plot')\n\nThere are three ways to overcome this problem. The easiest way is to delete the duplicates. But, that will also mean that some useful point events will be lost.\nThe second solution is use jittering, which will add a small perturbation to the duplicate points so that they do not occupy the exact same space.\nThe third solution is to make each point “unique” and then attach the duplicates of the points to the patterns as marks, as attributes of the points. Then you would need analytical techniques that take into account these marks.\njittering approach\n\nchildcare_ppp_jit &lt;- rjitter(childcare_ppp, \n                             retry=TRUE, \n                             nsim=1, \n                             drop=TRUE)\n\ncheck again\n\nany(duplicated(childcare_ppp_jit))\n\n[1] FALSE\n\n\n\n\n\nWhen analysing spatial point patterns, it is a good practice to confine the analysis with a geographical area like Singapore boundary. In spatstat, an object called owin is specially designed to represent this polygonal region.\nThe code chunk below is used to covert sg SpatialPolygon object into owin object of spatstat.\n\nsg_owin &lt;- as(sg_sp, \"owin\")\n\n\nplot(sg_owin)\n\n\n\n\n\nsummary(sg_owin)\n\nWindow: polygonal boundary\n80 separate polygons (35 holes)\n                  vertices         area relative.area\npolygon 1                4  9.47108e+01      1.21e-07\npolygon 2               37  1.29481e+04      1.66e-05\npolygon 3               30  4.28933e+03      5.49e-06\npolygon 4              145  9.61782e+05      1.23e-03\npolygon 5              227  1.10308e+06      1.41e-03\npolygon 6               19  3.09221e+04      3.95e-05\npolygon 7               10  6.60195e+03      8.44e-06\npolygon 8              234  2.08755e+06      2.67e-03\npolygon 9               22  6.74651e+03      8.63e-06\npolygon 10              71  5.63061e+03      7.20e-06\npolygon 11              10  1.99717e+02      2.55e-07\npolygon 12           14663  6.97996e+08      8.93e-01\npolygon 13 (hole)        3 -2.05920e-03     -2.63e-12\npolygon 14 (hole)        3 -2.89050e-05     -3.70e-14\npolygon 15 (hole)        3 -2.83151e-01     -3.62e-10\npolygon 16 (hole)        3 -3.99521e-02     -5.11e-11\npolygon 17 (hole)        3 -4.95057e-02     -6.33e-11\npolygon 18 (hole)        3 -3.65501e-03     -4.67e-12\npolygon 19 (hole)        4 -2.05611e-02     -2.63e-11\npolygon 20 (hole)        3 -1.68316e-04     -2.15e-13\npolygon 21 (hole)       26 -1.25665e+03     -1.61e-06\npolygon 22 (hole)        3 -2.18000e-06     -2.79e-15\npolygon 23 (hole)        3 -6.62377e-01     -8.47e-10\npolygon 24 (hole)        3 -2.09065e-03     -2.67e-12\npolygon 25 (hole)       36 -7.79904e+03     -9.97e-06\npolygon 26 (hole)        3 -8.83647e-03     -1.13e-11\npolygon 27 (hole)        3 -2.21090e+00     -2.83e-09\npolygon 28 (hole)       40 -6.00381e+03     -7.68e-06\npolygon 29 (hole)        7 -1.40545e-01     -1.80e-10\npolygon 30 (hole)       20 -4.39069e+00     -5.62e-09\npolygon 31 (hole)       28 -1.99862e+01     -2.56e-08\npolygon 32 (hole)       48 -1.38338e+02     -1.77e-07\npolygon 33 (hole)      351 -1.21433e+03     -1.55e-06\npolygon 34 (hole)       12 -8.36709e+01     -1.07e-07\npolygon 35 (hole)      317 -5.11280e+04     -6.54e-05\npolygon 36 (hole)       36 -4.01660e+04     -5.14e-05\npolygon 37              30  2.80002e+04      3.58e-05\npolygon 38              27  1.50315e+04      1.92e-05\npolygon 39              15  4.03300e+04      5.16e-05\npolygon 40            1045  4.44510e+06      5.68e-03\npolygon 41 (hole)       13 -3.91907e+02     -5.01e-07\npolygon 42              47  3.82087e+04      4.89e-05\npolygon 43              65  8.42861e+04      1.08e-04\npolygon 44             478  2.06120e+06      2.64e-03\npolygon 45             266  1.50631e+06      1.93e-03\npolygon 46             234  4.72886e+05      6.05e-04\npolygon 47              14  5.86546e+03      7.50e-06\npolygon 48              83  5.28920e+03      6.76e-06\npolygon 49              75  1.73526e+04      2.22e-05\npolygon 50             148  3.10395e+03      3.97e-06\npolygon 51             142  3.22293e+03      4.12e-06\npolygon 52              45  2.51218e+03      3.21e-06\npolygon 53              40  1.38607e+04      1.77e-05\npolygon 54              10  4.90942e+02      6.28e-07\npolygon 55              95  5.96187e+04      7.62e-05\npolygon 56 (hole)        4 -1.86410e-02     -2.38e-11\npolygon 57              64  3.43149e+04      4.39e-05\npolygon 58 (hole)        3 -1.98390e-03     -2.54e-12\npolygon 59 (hole)        3 -5.55856e-03     -7.11e-12\npolygon 60 (hole)        3 -5.12482e-03     -6.55e-12\npolygon 61 (hole)        3 -1.96410e-03     -2.51e-12\npolygon 62 (hole)        4 -1.13774e-02     -1.46e-11\npolygon 63             155  2.67502e+05      3.42e-04\npolygon 64             106  3.04104e+03      3.89e-06\npolygon 65            1027  1.27782e+06      1.63e-03\npolygon 66 (hole)        3 -3.23310e-04     -4.13e-13\npolygon 67 (hole)        3 -1.16959e-03     -1.50e-12\npolygon 68 (hole)        3 -1.46474e-03     -1.87e-12\npolygon 69             211  4.70521e+05      6.02e-04\npolygon 70               4  2.69313e+02      3.44e-07\npolygon 71             132  9.53357e+04      1.22e-04\npolygon 72               6  4.50259e+02      5.76e-07\npolygon 73             285  1.61128e+06      2.06e-03\npolygon 74              91  1.49663e+04      1.91e-05\npolygon 75              71  8.18750e+03      1.05e-05\npolygon 76             668  5.40368e+07      6.91e-02\npolygon 77              77  3.29939e+05      4.22e-04\npolygon 78             711  1.28815e+07      1.65e-02\npolygon 79 (hole)        3 -3.41405e-01     -4.37e-10\npolygon 80              44  2.26577e+03      2.90e-06\nenclosing rectangle: [2667.54, 56396.44] x [15748.72, 50256.33] units\n                     (53730 x 34510 units)\nWindow area = 781945000 square units\nFraction of frame area: 0.422\n\n\n\n\n\n\nchildcareSG_ppp = childcare_ppp[sg_owin]\n\n\nsummary(childcareSG_ppp)\n\nPlanar point pattern:  1925 points\nAverage intensity 2.461811e-06 points per square unit\n\n*Pattern contains duplicated points*\n\nCoordinates are given to 3 decimal places\ni.e. rounded to the nearest multiple of 0.001 units\n\nWindow: polygonal boundary\n80 separate polygons (35 holes)\n                  vertices         area relative.area\npolygon 1                4  9.47108e+01      1.21e-07\npolygon 2               37  1.29481e+04      1.66e-05\npolygon 3               30  4.28933e+03      5.49e-06\npolygon 4              145  9.61782e+05      1.23e-03\npolygon 5              227  1.10308e+06      1.41e-03\npolygon 6               19  3.09221e+04      3.95e-05\npolygon 7               10  6.60195e+03      8.44e-06\npolygon 8              234  2.08755e+06      2.67e-03\npolygon 9               22  6.74651e+03      8.63e-06\npolygon 10              71  5.63061e+03      7.20e-06\npolygon 11              10  1.99717e+02      2.55e-07\npolygon 12           14663  6.97996e+08      8.93e-01\npolygon 13 (hole)        3 -2.05920e-03     -2.63e-12\npolygon 14 (hole)        3 -2.89050e-05     -3.70e-14\npolygon 15 (hole)        3 -2.83151e-01     -3.62e-10\npolygon 16 (hole)        3 -3.99521e-02     -5.11e-11\npolygon 17 (hole)        3 -4.95057e-02     -6.33e-11\npolygon 18 (hole)        3 -3.65501e-03     -4.67e-12\npolygon 19 (hole)        4 -2.05611e-02     -2.63e-11\npolygon 20 (hole)        3 -1.68316e-04     -2.15e-13\npolygon 21 (hole)       26 -1.25665e+03     -1.61e-06\npolygon 22 (hole)        3 -2.18000e-06     -2.79e-15\npolygon 23 (hole)        3 -6.62377e-01     -8.47e-10\npolygon 24 (hole)        3 -2.09065e-03     -2.67e-12\npolygon 25 (hole)       36 -7.79904e+03     -9.97e-06\npolygon 26 (hole)        3 -8.83647e-03     -1.13e-11\npolygon 27 (hole)        3 -2.21090e+00     -2.83e-09\npolygon 28 (hole)       40 -6.00381e+03     -7.68e-06\npolygon 29 (hole)        7 -1.40545e-01     -1.80e-10\npolygon 30 (hole)       20 -4.39069e+00     -5.62e-09\npolygon 31 (hole)       28 -1.99862e+01     -2.56e-08\npolygon 32 (hole)       48 -1.38338e+02     -1.77e-07\npolygon 33 (hole)      351 -1.21433e+03     -1.55e-06\npolygon 34 (hole)       12 -8.36709e+01     -1.07e-07\npolygon 35 (hole)      317 -5.11280e+04     -6.54e-05\npolygon 36 (hole)       36 -4.01660e+04     -5.14e-05\npolygon 37              30  2.80002e+04      3.58e-05\npolygon 38              27  1.50315e+04      1.92e-05\npolygon 39              15  4.03300e+04      5.16e-05\npolygon 40            1045  4.44510e+06      5.68e-03\npolygon 41 (hole)       13 -3.91907e+02     -5.01e-07\npolygon 42              47  3.82087e+04      4.89e-05\npolygon 43              65  8.42861e+04      1.08e-04\npolygon 44             478  2.06120e+06      2.64e-03\npolygon 45             266  1.50631e+06      1.93e-03\npolygon 46             234  4.72886e+05      6.05e-04\npolygon 47              14  5.86546e+03      7.50e-06\npolygon 48              83  5.28920e+03      6.76e-06\npolygon 49              75  1.73526e+04      2.22e-05\npolygon 50             148  3.10395e+03      3.97e-06\npolygon 51             142  3.22293e+03      4.12e-06\npolygon 52              45  2.51218e+03      3.21e-06\npolygon 53              40  1.38607e+04      1.77e-05\npolygon 54              10  4.90942e+02      6.28e-07\npolygon 55              95  5.96187e+04      7.62e-05\npolygon 56 (hole)        4 -1.86410e-02     -2.38e-11\npolygon 57              64  3.43149e+04      4.39e-05\npolygon 58 (hole)        3 -1.98390e-03     -2.54e-12\npolygon 59 (hole)        3 -5.55856e-03     -7.11e-12\npolygon 60 (hole)        3 -5.12482e-03     -6.55e-12\npolygon 61 (hole)        3 -1.96410e-03     -2.51e-12\npolygon 62 (hole)        4 -1.13774e-02     -1.46e-11\npolygon 63             155  2.67502e+05      3.42e-04\npolygon 64             106  3.04104e+03      3.89e-06\npolygon 65            1027  1.27782e+06      1.63e-03\npolygon 66 (hole)        3 -3.23310e-04     -4.13e-13\npolygon 67 (hole)        3 -1.16959e-03     -1.50e-12\npolygon 68 (hole)        3 -1.46474e-03     -1.87e-12\npolygon 69             211  4.70521e+05      6.02e-04\npolygon 70               4  2.69313e+02      3.44e-07\npolygon 71             132  9.53357e+04      1.22e-04\npolygon 72               6  4.50259e+02      5.76e-07\npolygon 73             285  1.61128e+06      2.06e-03\npolygon 74              91  1.49663e+04      1.91e-05\npolygon 75              71  8.18750e+03      1.05e-05\npolygon 76             668  5.40368e+07      6.91e-02\npolygon 77              77  3.29939e+05      4.22e-04\npolygon 78             711  1.28815e+07      1.65e-02\npolygon 79 (hole)        3 -3.41405e-01     -4.37e-10\npolygon 80              44  2.26577e+03      2.90e-06\nenclosing rectangle: [2667.54, 56396.44] x [15748.72, 50256.33] units\n                     (53730 x 34510 units)\nWindow area = 781945000 square units\nFraction of frame area: 0.422\n\n\n\nplot(childcareSG_ppp)"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex03/Hands-on_Ex03-part1.html#install-and-load-r-packages",
    "href": "Hands-on_Ex/Hands-on_Ex03/Hands-on_Ex03-part1.html#install-and-load-r-packages",
    "title": "In class Exercise 03",
    "section": "",
    "text": "pacman::p_load(tidyverse, sf, raster, spatstat, tmap,maptools)"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex03/Hands-on_Ex03-part1.html#importing-spatial-dataa",
    "href": "Hands-on_Ex/Hands-on_Ex03/Hands-on_Ex03-part1.html#importing-spatial-dataa",
    "title": "In class Exercise 03",
    "section": "",
    "text": "childcare_sf &lt;- st_read(\"data/ChildCareServices.geojson\") %&gt;%\n  st_transform(crs = 3414)\n\nReading layer `ChildCareServices' from data source \n  `C:\\EbenezerHo\\IS415-GAA\\Hands-on_Ex\\Hands-on_Ex03\\data\\ChildCareServices.geojson' \n  using driver `GeoJSON'\nSimple feature collection with 1925 features and 2 fields\nGeometry type: POINT\nDimension:     XYZ\nBounding box:  xmin: 103.6878 ymin: 1.247759 xmax: 103.9897 ymax: 1.462134\nz_range:       zmin: 0 zmax: 0\nGeodetic CRS:  WGS 84\n\n\n\nmpsz_sf &lt;- st_read(dsn = \"data\", \n                layer = \"MP14_SUBZONE_WEB_PL\")\n\nReading layer `MP14_SUBZONE_WEB_PL' from data source \n  `C:\\EbenezerHo\\IS415-GAA\\Hands-on_Ex\\Hands-on_Ex03\\data' using driver `ESRI Shapefile'\nSimple feature collection with 323 features and 15 fields\nGeometry type: MULTIPOLYGON\nDimension:     XY\nBounding box:  xmin: 2667.538 ymin: 15748.72 xmax: 56396.44 ymax: 50256.33\nProjected CRS: SVY21\n\n\n\nsg_sf &lt;- st_transform(st_union(mpsz_sf), crs = 3414)\n\n\nplot(sg_sf)"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex03/Hands-on_Ex03-part1.html#store-data-in-rds-for-future-use",
    "href": "Hands-on_Ex/Hands-on_Ex03/Hands-on_Ex03-part1.html#store-data-in-rds-for-future-use",
    "title": "In class Exercise 03",
    "section": "",
    "text": "write_rds(childcare_sf, \"data/rds/childcare_sf.rds\")\nwrite_rds(mpsz_sf, \"data/rds/mpsz_sf.rds\")\nwrite_rds(sg_sf, \"data/rds/sg_sf.rds\")"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex03/Hands-on_Ex03-part1.html#mapping-geospatial-daa-of-childcare-services",
    "href": "Hands-on_Ex/Hands-on_Ex03/Hands-on_Ex03-part1.html#mapping-geospatial-daa-of-childcare-services",
    "title": "In class Exercise 03",
    "section": "",
    "text": "map mpsz_sf then add childcare_sf\n\ntm_shape(mpsz_sf)+\n  tm_polygons()+\n  tm_shape(childcare_sf)+\n  tm_dots()\n\n\n\n\n\ntmap_mode('view')\ntm_shape(childcare_sf)+\n  tm_dots()\n\n\n\n\n\n\nRemember to set back tmap mode to plot instead of view. avoid more than 10 interactive maps\n\ntmap_mode('plot')"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex03/Hands-on_Ex03-part1.html#data-wrangling",
    "href": "Hands-on_Ex/Hands-on_Ex03/Hands-on_Ex03-part1.html#data-wrangling",
    "title": "In class Exercise 03",
    "section": "",
    "text": "Converting sf data frames to sp’s Spatial* class\n\nchildcare &lt;- as_Spatial(childcare_sf)\nmpsz &lt;- as_Spatial(mpsz_sf)\nsg &lt;- as_Spatial(sg_sf)\n\n\nchildcare\n\nclass       : SpatialPointsDataFrame \nfeatures    : 1925 \nextent      : 11810.03, 45404.24, 25596.33, 49300.88  (xmin, xmax, ymin, ymax)\ncrs         : +proj=tmerc +lat_0=1.36666666666667 +lon_0=103.833333333333 +k=1 +x_0=28001.642 +y_0=38744.572 +ellps=WGS84 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs \nvariables   : 2\nnames       :    Nameescription \nmin values  :   kml_1, &lt;center&gt;&lt;table&gt;&lt;tr&gt;&lt;th colspan='2' align='center'&gt;&lt;em&gt;Attributes&lt;/em&gt;&lt;/th&gt;&lt;/tr&gt;&lt;tr bgcolor=\"#E3E3F3\"&gt; &lt;th&gt;ADDRESSBLOCKHOUSENUMBER&lt;/th&gt; &lt;td&gt;&lt;/td&gt; &lt;/tr&gt;&lt;tr bgcolor=\"\"&gt; &lt;th&gt;ADDRESSBUILDINGNAME&lt;/th&gt; &lt;td&gt;&lt;/td&gt; &lt;/tr&gt;&lt;tr bgcolor=\"#E3E3F3\"&gt; &lt;th&gt;ADDRESSPOSTALCODE&lt;/th&gt; &lt;td&gt;100044&lt;/td&gt; &lt;/tr&gt;&lt;tr bgcolor=\"\"&gt; &lt;th&gt;ADDRESSSTREETNAME&lt;/th&gt; &lt;td&gt;44, TELOK BLANGAH DRIVE, #01 - 19/51, SINGAPORE 100044&lt;/td&gt; &lt;/tr&gt;&lt;tr bgcolor=\"#E3E3F3\"&gt; &lt;th&gt;ADDRESSTYPE&lt;/th&gt; &lt;td&gt;&lt;/td&gt; &lt;/tr&gt;&lt;tr bgcolor=\"\"&gt; &lt;th&gt;DESCRIPTION&lt;/th&gt; &lt;td&gt;Child Care Services&lt;/td&gt; &lt;/tr&gt;&lt;tr bgcolor=\"#E3E3F3\"&gt; &lt;th&gt;HYPERLINK&lt;/th&gt; &lt;td&gt;&lt;/td&gt; &lt;/tr&gt;&lt;tr bgcolor=\"\"&gt; &lt;th&gt;LANDXADDRESSPOINT&lt;/th&gt; &lt;td&gt;&lt;/td&gt; &lt;/tr&gt;&lt;tr bgcolor=\"#E3E3F3\"&gt; &lt;th&gt;LANDYADDRESSPOINT&lt;/th&gt; &lt;td&gt;&lt;/td&gt; &lt;/tr&gt;&lt;tr bgcolor=\"\"&gt; &lt;th&gt;NAME&lt;/th&gt; &lt;td&gt;PCF SPARKLETOTS PRESCHOOL @ TELOK BLANGAH BLK 44 (CC)&lt;/td&gt; &lt;/tr&gt;&lt;tr bgcolor=\"#E3E3F3\"&gt; &lt;th&gt;PHOTOURL&lt;/th&gt; &lt;td&gt;&lt;/td&gt; &lt;/tr&gt;&lt;tr bgcolor=\"\"&gt; &lt;th&gt;ADDRESSFLOORNUMBER&lt;/th&gt; &lt;td&gt;&lt;/td&gt; &lt;/tr&gt;&lt;tr bgcolor=\"#E3E3F3\"&gt; &lt;th&gt;INC_CRC&lt;/th&gt; &lt;td&gt;349C54F201805938&lt;/td&gt; &lt;/tr&gt;&lt;tr bgcolor=\"\"&gt; &lt;th&gt;FMEL_UPD_D&lt;/th&gt; &lt;td&gt;20211201093837&lt;/td&gt; &lt;/tr&gt;&lt;tr bgcolor=\"#E3E3F3\"&gt; &lt;th&gt;ADDRESSUNITNUMBER&lt;/th&gt; &lt;td&gt;&lt;/td&gt; &lt;/tr&gt;&lt;/table&gt;&lt;/center&gt; \nmax values  : kml_999,                                            &lt;center&gt;&lt;table&gt;&lt;tr&gt;&lt;th colspan='2' align='center'&gt;&lt;em&gt;Attributes&lt;/em&gt;&lt;/th&gt;&lt;/tr&gt;&lt;tr bgcolor=\"#E3E3F3\"&gt; &lt;th&gt;ADDRESSBLOCKHOUSENUMBER&lt;/th&gt; &lt;td&gt;&lt;/td&gt; &lt;/tr&gt;&lt;tr bgcolor=\"\"&gt; &lt;th&gt;ADDRESSBUILDINGNAME&lt;/th&gt; &lt;td&gt;&lt;/td&gt; &lt;/tr&gt;&lt;tr bgcolor=\"#E3E3F3\"&gt; &lt;th&gt;ADDRESSPOSTALCODE&lt;/th&gt; &lt;td&gt;99982&lt;/td&gt; &lt;/tr&gt;&lt;tr bgcolor=\"\"&gt; &lt;th&gt;ADDRESSSTREETNAME&lt;/th&gt; &lt;td&gt;35, ALLANBROOKE ROAD, SINGAPORE 099982&lt;/td&gt; &lt;/tr&gt;&lt;tr bgcolor=\"#E3E3F3\"&gt; &lt;th&gt;ADDRESSTYPE&lt;/th&gt; &lt;td&gt;&lt;/td&gt; &lt;/tr&gt;&lt;tr bgcolor=\"\"&gt; &lt;th&gt;DESCRIPTION&lt;/th&gt; &lt;td&gt;Child Care Services&lt;/td&gt; &lt;/tr&gt;&lt;tr bgcolor=\"#E3E3F3\"&gt; &lt;th&gt;HYPERLINK&lt;/th&gt; &lt;td&gt;&lt;/td&gt; &lt;/tr&gt;&lt;tr bgcolor=\"\"&gt; &lt;th&gt;LANDXADDRESSPOINT&lt;/th&gt; &lt;td&gt;&lt;/td&gt; &lt;/tr&gt;&lt;tr bgcolor=\"#E3E3F3\"&gt; &lt;th&gt;LANDYADDRESSPOINT&lt;/th&gt; &lt;td&gt;&lt;/td&gt; &lt;/tr&gt;&lt;tr bgcolor=\"\"&gt; &lt;th&gt;NAME&lt;/th&gt; &lt;td&gt;ISLANDER PRE-SCHOOL PTE LTD&lt;/td&gt; &lt;/tr&gt;&lt;tr bgcolor=\"#E3E3F3\"&gt; &lt;th&gt;PHOTOURL&lt;/th&gt; &lt;td&gt;&lt;/td&gt; &lt;/tr&gt;&lt;tr bgcolor=\"\"&gt; &lt;th&gt;ADDRESSFLOORNUMBER&lt;/th&gt; &lt;td&gt;&lt;/td&gt; &lt;/tr&gt;&lt;tr bgcolor=\"#E3E3F3\"&gt; &lt;th&gt;INC_CRC&lt;/th&gt; &lt;td&gt;4F63ACF93EFABE7F&lt;/td&gt; &lt;/tr&gt;&lt;tr bgcolor=\"\"&gt; &lt;th&gt;FMEL_UPD_D&lt;/th&gt; &lt;td&gt;20211201093837&lt;/td&gt; &lt;/tr&gt;&lt;tr bgcolor=\"#E3E3F3\"&gt; &lt;th&gt;ADDRESSUNITNUMBER&lt;/th&gt; &lt;td&gt;&lt;/td&gt; &lt;/tr&gt;&lt;/table&gt;&lt;/center&gt; \n\n\n\nmpsz\n\nclass       : SpatialPolygonsDataFrame \nfeatures    : 323 \nextent      : 2667.538, 56396.44, 15748.72, 50256.33  (xmin, xmax, ymin, ymax)\ncrs         : +proj=tmerc +lat_0=1.36666666666667 +lon_0=103.833333333333 +k=1 +x_0=28001.642 +y_0=38744.572 +datum=WGS84 +units=m +no_defs \nvariables   : 15\nnames       : OBJECTID, SUBZONE_NO, SUBZONE_N, SUBZONE_C, CA_IND, PLN_AREA_N, PLN_AREA_C,       REGION_N, REGION_C,          INC_CRC, FMEL_UPD_D,     X_ADDR,     Y_ADDR,    SHAPE_Leng,    SHAPE_Area \nmin values  :        1,          1, ADMIRALTY,    AMSZ01,      N, ANG MO KIO,         AM, CENTRAL REGION,       CR, 00F5E30B5C9B7AD8,      16409,  5092.8949,  19579.069, 871.554887798, 39437.9352703 \nmax values  :      323,         17,    YUNNAN,    YSSZ09,      Y,     YISHUN,         YS,    WEST REGION,       WR, FFCCF172717C2EAF,      16409, 50424.7923, 49552.7904, 68083.9364708,  69748298.792 \n\n\n\nsg\n\nclass       : SpatialPolygons \nfeatures    : 1 \nextent      : 2667.538, 56396.44, 15748.72, 50256.33  (xmin, xmax, ymin, ymax)\ncrs         : +proj=tmerc +lat_0=1.36666666666667 +lon_0=103.833333333333 +k=1 +x_0=28001.642 +y_0=38744.572 +ellps=WGS84 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex03/Hands-on_Ex03-part1.html#converting-spatial-classes-into-generic-sp-format",
    "href": "Hands-on_Ex/Hands-on_Ex03/Hands-on_Ex03-part1.html#converting-spatial-classes-into-generic-sp-format",
    "title": "In class Exercise 03",
    "section": "",
    "text": "childcare_sp &lt;- as(childcare, \"SpatialPoints\")\nsg_sp &lt;- as(sg, \"SpatialPolygons\")\n\n\nchildcare_sp\n\nclass       : SpatialPoints \nfeatures    : 1925 \nextent      : 11810.03, 45404.24, 25596.33, 49300.88  (xmin, xmax, ymin, ymax)\ncrs         : +proj=tmerc +lat_0=1.36666666666667 +lon_0=103.833333333333 +k=1 +x_0=28001.642 +y_0=38744.572 +ellps=WGS84 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs \n\n\n\nsg_sp\n\nclass       : SpatialPolygons \nfeatures    : 1 \nextent      : 2667.538, 56396.44, 15748.72, 50256.33  (xmin, xmax, ymin, ymax)\ncrs         : +proj=tmerc +lat_0=1.36666666666667 +lon_0=103.833333333333 +k=1 +x_0=28001.642 +y_0=38744.572 +ellps=WGS84 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex03/Hands-on_Ex03-part1.html#converting-the-generic-sp-format-into-spatstats-ppp-format",
    "href": "Hands-on_Ex/Hands-on_Ex03/Hands-on_Ex03-part1.html#converting-the-generic-sp-format-into-spatstats-ppp-format",
    "title": "In class Exercise 03",
    "section": "",
    "text": "childcare_ppp &lt;- as(childcare_sp, \"ppp\")\nchildcare_ppp\n\nPlanar point pattern: 1925 points\nwindow: rectangle = [11810.03, 45404.24] x [25596.33, 49300.88] units\n\n\nplot childcare ppp\n\nplot(childcare_ppp)\n\n\n\n\n\nsummary(childcare_ppp)\n\nPlanar point pattern:  1925 points\nAverage intensity 2.417323e-06 points per square unit\n\n*Pattern contains duplicated points*\n\nCoordinates are given to 3 decimal places\ni.e. rounded to the nearest multiple of 0.001 units\n\nWindow: rectangle = [11810.03, 45404.24] x [25596.33, 49300.88] units\n                    (33590 x 23700 units)\nWindow area = 796335000 square units\n\n\ncheck for duplicates\n\nany(duplicated(childcare_ppp))\n\n[1] TRUE\n\n\ncount the number of co-indicence points\n\nmultiplicity(childcare_ppp)\n\n   1    2    3    4    5    6    7    8    9   10   11   12   13   14   15   16 \n   1    2    1    1    1    1    2    1    1    1    1    1    1    3    1    1 \n  17   18   19   20   21   22   23   24   25   26   27   28   29   30   31   32 \n   1    3    1    1    1    1    1    1    1    1    1    1    1    1    1    1 \n  33   34   35   36   37   38   39   40   41   42   43   44   45   46   47   48 \n   1    1    1    1    4    1    1    1    1    1    1    1    1    1    1    2 \n  49   50   51   52   53   54   55   56   57   58   59   60   61   62   63   64 \n   1    1    1    2    1    1    1    1    1    1    1    1    1    2    1    1 \n  65   66   67   68   69   70   71   72   73   74   75   76   77   78   79   80 \n   1    3    1    1    1    2    1   10    1    1    1    1    1    1    1    1 \n  81   82   83   84   85   86   87   88   89   90   91   92   93   94   95   96 \n   1    1    1    1    1    1    1    1    1    1    1    1    1    1    1    1 \n  97   98   99  100  101  102  103  104  105  106  107  108  109  110  111  112 \n   1    1    1    1    1    1    1    2    1    1    3    1    1    1    2    1 \n 113  114  115  116  117  118  119  120  121  122  123  124  125  126  127  128 \n   1    2    2    2    1    1    1    1    1    1    1    1    2    1    1    1 \n 129  130  131  132  133  134  135  136  137  138  139  140  141  142  143  144 \n   1    1    1    1    1    3    1    1    1    1    1    1    1    1    1    1 \n 145  146  147  148  149  150  151  152  153  154  155  156  157  158  159  160 \n   1    1    1    1    1    1    1    1    1    1    1    1    1    1    1    1 \n 161  162  163  164  165  166  167  168  169  170  171  172  173  174  175  176 \n   1    1    2    2    2    1    1    1    1    1    2    1    4    1    1    2 \n 177  178  179  180  181  182  183  184  185  186  187  188  189  190  191  192 \n   1    1    1    1    1    1    1    1    2    1    1    1    1    1    1    1 \n 193  194  195  196  197  198  199  200  201  202  203  204  205  206  207  208 \n   3    1    1    1    1    1    3    1    1    1    1    1    1    1    1    1 \n 209  210  211  212  213  214  215  216  217  218  219  220  221  222  223  224 \n   1    1    1    1    1   10    1    1    3    1    1    1    1    1    1    1 \n 225  226  227  228  229  230  231  232  233  234  235  236  237  238  239  240 \n   1    1    1    2    1    1    1    1    1    1    1    1    1    1    1    1 \n 241  242  243  244  245  246  247  248  249  250  251  252  253  254  255  256 \n   1    1    2    6    1    2    1    1    2    1    1    1    1    1    1    1 \n 257  258  259  260  261  262  263  264  265  266  267  268  269  270  271  272 \n   3    2    3    2    1    2    1    1    2    4    1    6    6    1    1    1 \n 273  274  275  276  277  278  279  280  281  282  283  284  285  286  287  288 \n   2    1    1    1    1    2    1    1    1    1    1    1    3    1    1    1 \n 289  290  291  292  293  294  295  296  297  298  299  300  301  302  303  304 \n   1    1    4    1    2    1    1    1    1    1    1    1    1    1    1    1 \n 305  306  307  308  309  310  311  312  313  314  315  316  317  318  319  320 \n   1    1    1    1    1    1    1    1    1    1    1    2    1    1    1    1 \n 321  322  323  324  325  326  327  328  329  330  331  332  333  334  335  336 \n   1    1    1    1    1    1    1    1    1    1    1    1    1    1    1    1 \n 337  338  339  340  341  342  343  344  345  346  347  348  349  350  351  352 \n   1    1    2    1    1    1    2    1    1    1    2    1    1    1    1    1 \n 353  354  355  356  357  358  359  360  361  362  363  364  365  366  367  368 \n   1    1    1    1    2    1    2    2    1    1    1    1    2    1    1    1 \n 369  370  371  372  373  374  375  376  377  378  379  380  381  382  383  384 \n   4    1    1    1    1    2    1    1    1    1    1    1    2    1    1    1 \n 385  386  387  388  389  390  391  392  393  394  395  396  397  398  399  400 \n   1    1    1    1    1    1    1    1    1    1    1    1    1    1    1    2 \n 401  402  403  404  405  406  407  408  409  410  411  412  413  414  415  416 \n   2    1    1    1    1    1    1    1    1    1    1    1    1    1    1    4 \n 417  418  419  420  421  422  423  424  425  426  427  428  429  430  431  432 \n   1    1    1    1    1    1    1    1    1    1    1    1    1    1    1    1 \n 433  434  435  436  437  438  439  440  441  442  443  444  445  446  447  448 \n   1    1    1    1    1    1    1    1    1    2    1    1    1    1    1    1 \n 449  450  451  452  453  454  455  456  457  458  459  460  461  462  463  464 \n   1    1    2    1    1    1    1    1    1    1    1    1    2    1    1    1 \n 465  466  467  468  469  470  471  472  473  474  475  476  477  478  479  480 \n   1    1    2    1    1    1    1    1    1    1    1    1    1    1    1    1 \n 481  482  483  484  485  486  487  488  489  490  491  492  493  494  495  496 \n   2    2    1    1    1    1    1   10    1    2    1    1    1    2    1    3 \n 497  498  499  500  501  502  503  504  505  506  507  508  509  510  511  512 \n   1    1    1    1   10   10   10    1    1    1    1    1    1    1    1    1 \n 513  514  515  516  517  518  519  520  521  522  523  524  525  526  527  528 \n   1    1    1    2    1    2    1    1    1    1    3    1    2    1    1    1 \n 529  530  531  532  533  534  535  536  537  538  539  540  541  542  543  544 \n   1    1    1    1    1    1    3    1    1    1    1    1    2    1    1    2 \n 545  546  547  548  549  550  551  552  553  554  555  556  557  558  559  560 \n   1    1    3    1    1    1    1    1    1    1    1    2    2    2    1    1 \n 561  562  563  564  565  566  567  568  569  570  571  572  573  574  575  576 \n   2    3    1    1    1    2    1    1    1    2    2    1    1    1    1    1 \n 577  578  579  580  581  582  583  584  585  586  587  588  589  590  591  592 \n   1    1    1    1    1    1    1    1    1    1    1    1    1    4    1    1 \n 593  594  595  596  597  598  599  600  601  602  603  604  605  606  607  608 \n   1    1    1    1    1    3    1    1    1    1    1    1    1    1    1    1 \n 609  610  611  612  613  614  615  616  617  618  619  620  621  622  623  624 \n   1    1    1    1    1    4    1    1    1    1    1    1    4    1    1    1 \n 625  626  627  628  629  630  631  632  633  634  635  636  637  638  639  640 \n   1    1    1    1    1    2    1    1    1    1    1    1    1    1    1    1 \n 641  642  643  644  645  646  647  648  649  650  651  652  653  654  655  656 \n   1    1    1    1    2    1    1    1    1    1    1    1    1    2    1    1 \n 657  658  659  660  661  662  663  664  665  666  667  668  669  670  671  672 \n   1    1    1    1    1    1    1    1    1    1    2    1    1    3    1    1 \n 673  674  675  676  677  678  679  680  681  682  683  684  685  686  687  688 \n   1    1    1    1    1    1    1    1    1   10    1    1    1    1    1    2 \n 689  690  691  692  693  694  695  696  697  698  699  700  701  702  703  704 \n   1    1    1    1    1    1    1    1    1    1    1    1    1    1    1    1 \n 705  706  707  708  709  710  711  712  713  714  715  716  717  718  719  720 \n   1    1    1    2    1    2    1   10    1    4    1    2    1    1    1    1 \n 721  722  723  724  725  726  727  728  729  730  731  732  733  734  735  736 \n   3    1    1    1    1    1    1    1    1    1    1    1    1    1    1    1 \n 737  738  739  740  741  742  743  744  745  746  747  748  749  750  751  752 \n   1    1    1    1    1    1    1    1    1    1    1    1    1    1    1    1 \n 753  754  755  756  757  758  759  760  761  762  763  764  765  766  767  768 \n   1    3    1    1    3    1    1    1    1    2    1    1    1    1    1    1 \n 769  770  771  772  773  774  775  776  777  778  779  780  781  782  783  784 \n   1    1    1    1    1    1    1    1    1    1    1    1    1    1    1    1 \n 785  786  787  788  789  790  791  792  793  794  795  796  797  798  799  800 \n   1    1    1    1    1    1    1    1    1    1    2    1    1    1    1    1 \n 801  802  803  804  805  806  807  808  809  810  811  812  813  814  815  816 \n   1    1    1    1    1    1    1    1    1    1    1    1    1    1    1    1 \n 817  818  819  820  821  822  823  824  825  826  827  828  829  830  831  832 \n   1    1    1    1    1    1    1    1    1    1    1    1    1    1    1    1 \n 833  834  835  836  837  838  839  840  841  842  843  844  845  846  847  848 \n   1    1    1    1    1    1    1    1    1    1    1    1    1    1    1    1 \n 849  850  851  852  853  854  855  856  857  858  859  860  861  862  863  864 \n   1    1    1    1    1    1    1    1    1    1    1    1    1    1    1    1 \n 865  866  867  868  869  870  871  872  873  874  875  876  877  878  879  880 \n   1    1    1    1    1    1    1    1    1    1    1    1    1    1    1    1 \n 881  882  883  884  885  886  887  888  889  890  891  892  893  894  895  896 \n   1    1    1    1    1    1    1    1    1    2    1    1    1    1    1    2 \n 897  898  899  900  901  902  903  904  905  906  907  908  909  910  911  912 \n   1    1    1    2    1    1    1    1    1    1    1    1    1    1    1    1 \n 913  914  915  916  917  918  919  920  921  922  923  924  925  926  927  928 \n   1    1    2    1    1    1    1    1    2    2    1    1    1    1    2    1 \n 929  930  931  932  933  934  935  936  937  938  939  940  941  942  943  944 \n   1    1    2    1    2    1    1    1    2    1    1    1    2    1    1    1 \n 945  946  947  948  949  950  951  952  953  954  955  956  957  958  959  960 \n   1    1    2    1    1    2    1    1    1    1    1    1    1    1    2    1 \n 961  962  963  964  965  966  967  968  969  970  971  972  973  974  975  976 \n   1    2    2    1    1    1    1    2    1    1    1    1    2    1    1    2 \n 977  978  979  980  981  982  983  984  985  986  987  988  989  990  991  992 \n   1    1    1    1    2    1    1    1    1    1    1    1    1    1    1    1 \n 993  994  995  996  997  998  999 1000 1001 1002 1003 1004 1005 1006 1007 1008 \n   1    1    1    1    1    1    1    1    1    1    1    1    1    1    1    1 \n1009 1010 1011 1012 1013 1014 1015 1016 1017 1018 1019 1020 1021 1022 1023 1024 \n   1    1    1    2    4    1    1    1    1    1    1    2    1    2    2    2 \n1025 1026 1027 1028 1029 1030 1031 1032 1033 1034 1035 1036 1037 1038 1039 1040 \n   2    1    1    1    1    2    1    1    2    2    2    2    1    1    1    1 \n1041 1042 1043 1044 1045 1046 1047 1048 1049 1050 1051 1052 1053 1054 1055 1056 \n   2    1    1    1    2    1    2    1    1    1    1    1    1    1    1    1 \n1057 1058 1059 1060 1061 1062 1063 1064 1065 1066 1067 1068 1069 1070 1071 1072 \n   1    2    2    2    1    1    1    1    1    2    1    1    2    2    2    1 \n1073 1074 1075 1076 1077 1078 1079 1080 1081 1082 1083 1084 1085 1086 1087 1088 \n   1    1    1    1    2    1    1    2    1    1    1    1    1    1    1    1 \n1089 1090 1091 1092 1093 1094 1095 1096 1097 1098 1099 1100 1101 1102 1103 1104 \n   1    3    1    1    1    1    1    1    1    1    1    1    1    1    1    1 \n1105 1106 1107 1108 1109 1110 1111 1112 1113 1114 1115 1116 1117 1118 1119 1120 \n   2    1    2    1    2    1    1    1    1    1    1    2    2    1    1    2 \n1121 1122 1123 1124 1125 1126 1127 1128 1129 1130 1131 1132 1133 1134 1135 1136 \n   1    2    1    2    1    2    1    1    1    1    1    2    1    1    1    1 \n1137 1138 1139 1140 1141 1142 1143 1144 1145 1146 1147 1148 1149 1150 1151 1152 \n   1    2    1    2    2    2    2    2    1    1    1    1    1    2    1    1 \n1153 1154 1155 1156 1157 1158 1159 1160 1161 1162 1163 1164 1165 1166 1167 1168 \n   1    1    1    1    1    2    1    1    2    1    1    1    1    2    1    1 \n1169 1170 1171 1172 1173 1174 1175 1176 1177 1178 1179 1180 1181 1182 1183 1184 \n   1    2    1    1    1    1    2    1    1    1    1    1    1    1    1    1 \n1185 1186 1187 1188 1189 1190 1191 1192 1193 1194 1195 1196 1197 1198 1199 1200 \n   1    1    1    1    1    1    1    1    1    2    1    1    1    1    1    1 \n1201 1202 1203 1204 1205 1206 1207 1208 1209 1210 1211 1212 1213 1214 1215 1216 \n   1    1    1    1    1    1    1    1    1    1    1    1    1    1    1    1 \n1217 1218 1219 1220 1221 1222 1223 1224 1225 1226 1227 1228 1229 1230 1231 1232 \n   1    1    1    2    1    1    1    3    1    1    1    1    1    1    1   10 \n1233 1234 1235 1236 1237 1238 1239 1240 1241 1242 1243 1244 1245 1246 1247 1248 \n   2    1    3    2    1    2    1    1    2    3    2    1    1    1    1    1 \n1249 1250 1251 1252 1253 1254 1255 1256 1257 1258 1259 1260 1261 1262 1263 1264 \n   1    1    1    1    1    2    1    2    1    1    1    1    1    1    1    1 \n1265 1266 1267 1268 1269 1270 1271 1272 1273 1274 1275 1276 1277 1278 1279 1280 \n   1    1    1    1    1    1    1    1    1    1    4    1    1    1    1    1 \n1281 1282 1283 1284 1285 1286 1287 1288 1289 1290 1291 1292 1293 1294 1295 1296 \n   2    1    1    1    2    1    2    1    1    1    1    1    1    1    1    1 \n1297 1298 1299 1300 1301 1302 1303 1304 1305 1306 1307 1308 1309 1310 1311 1312 \n   1    1    1    1    1    1    1    1    1    1    1    1    1    1    1    1 \n1313 1314 1315 1316 1317 1318 1319 1320 1321 1322 1323 1324 1325 1326 1327 1328 \n  10    1    2    4    1    1    1    4    1    4    1    1    1    1    1    1 \n1329 1330 1331 1332 1333 1334 1335 1336 1337 1338 1339 1340 1341 1342 1343 1344 \n   1    1    1    1    1    1    1    1    1    4    2    3    2    1    1    1 \n1345 1346 1347 1348 1349 1350 1351 1352 1353 1354 1355 1356 1357 1358 1359 1360 \n   2    2    1    1    1    1    1    2    2    3    1    1    1    1    1    2 \n1361 1362 1363 1364 1365 1366 1367 1368 1369 1370 1371 1372 1373 1374 1375 1376 \n   1    1    1    1    1    1    1    1    1    1    1    1    1    1    1    1 \n1377 1378 1379 1380 1381 1382 1383 1384 1385 1386 1387 1388 1389 1390 1391 1392 \n   2    1    1    1    1    1    1    1    1    1    1    1    1    1    1    1 \n1393 1394 1395 1396 1397 1398 1399 1400 1401 1402 1403 1404 1405 1406 1407 1408 \n   1    1    1    1    1    1    1    1    1    1    1    1    1    1    1    1 \n1409 1410 1411 1412 1413 1414 1415 1416 1417 1418 1419 1420 1421 1422 1423 1424 \n   1    1    1    2    1    1    1    1    1    1    1    1    1    1    1    1 \n1425 1426 1427 1428 1429 1430 1431 1432 1433 1434 1435 1436 1437 1438 1439 1440 \n   2    2    2    1    1    1    6    1    1    1    1    1    1    1    1    1 \n1441 1442 1443 1444 1445 1446 1447 1448 1449 1450 1451 1452 1453 1454 1455 1456 \n   1    1    1    4    1    1    1    1    1    1    1    1    1    1    1    1 \n1457 1458 1459 1460 1461 1462 1463 1464 1465 1466 1467 1468 1469 1470 1471 1472 \n   1    1    1    1    2    2    1    1    1    1    1    1    1    1    1    1 \n1473 1474 1475 1476 1477 1478 1479 1480 1481 1482 1483 1484 1485 1486 1487 1488 \n   1    1    1    1    2    1    1    1    1    2    1    1    1    1    2    1 \n1489 1490 1491 1492 1493 1494 1495 1496 1497 1498 1499 1500 1501 1502 1503 1504 \n   2    1    1    1    1    1    1    1    1    1    1    1    1    1    1    1 \n1505 1506 1507 1508 1509 1510 1511 1512 1513 1514 1515 1516 1517 1518 1519 1520 \n   2    1    1    1    1    1    1    3    1    1    1    1    1    1    1    1 \n1521 1522 1523 1524 1525 1526 1527 1528 1529 1530 1531 1532 1533 1534 1535 1536 \n   1    1    1    1    1    1    1    1    1    1    1    1    1    1    1    1 \n1537 1538 1539 1540 1541 1542 1543 1544 1545 1546 1547 1548 1549 1550 1551 1552 \n   1    1    1    1    1    1    1    1    1    6    1    1    1    1    1    1 \n1553 1554 1555 1556 1557 1558 1559 1560 1561 1562 1563 1564 1565 1566 1567 1568 \n   1    1    1    1    1    1    1    3    1    1    4    1    1    2    1    1 \n1569 1570 1571 1572 1573 1574 1575 1576 1577 1578 1579 1580 1581 1582 1583 1584 \n   2    1    1    1    2    1    4    1    2    1    1    1    1    1    1    1 \n1585 1586 1587 1588 1589 1590 1591 1592 1593 1594 1595 1596 1597 1598 1599 1600 \n   1    1    1    1    1    1    1    1    2    1    1    2    1    1    1    1 \n1601 1602 1603 1604 1605 1606 1607 1608 1609 1610 1611 1612 1613 1614 1615 1616 \n   1    1    1    1    2    1    1    3    1    1    1    2    1    1    1    1 \n1617 1618 1619 1620 1621 1622 1623 1624 1625 1626 1627 1628 1629 1630 1631 1632 \n   2    1    1    1    1    1    1    2    1    1    2    1    1    1    1    1 \n1633 1634 1635 1636 1637 1638 1639 1640 1641 1642 1643 1644 1645 1646 1647 1648 \n   3    1    1    2    1    1    1    1    1    1    1    1    1    2    1    1 \n1649 1650 1651 1652 1653 1654 1655 1656 1657 1658 1659 1660 1661 1662 1663 1664 \n   1    1    1    1    1    1    1    2    1    1    1    1    1    1    1    1 \n1665 1666 1667 1668 1669 1670 1671 1672 1673 1674 1675 1676 1677 1678 1679 1680 \n   1    1    1    4    1    1    1    6    1    1    1    1    1    1    1    1 \n1681 1682 1683 1684 1685 1686 1687 1688 1689 1690 1691 1692 1693 1694 1695 1696 \n   1    1    1    2    1    1    1    2    1    1    1    1    1    2    1    1 \n1697 1698 1699 1700 1701 1702 1703 1704 1705 1706 1707 1708 1709 1710 1711 1712 \n   1    2    1    1    1    1    1    1    1    1    2    2    2    1    1    1 \n1713 1714 1715 1716 1717 1718 1719 1720 1721 1722 1723 1724 1725 1726 1727 1728 \n   2    1    2    1    2    1    2    1    1    2    1    2    2    2    2    1 \n1729 1730 1731 1732 1733 1734 1735 1736 1737 1738 1739 1740 1741 1742 1743 1744 \n   1    1    1    1    1    2    1    1    1    2    1    1    1    1    2    1 \n1745 1746 1747 1748 1749 1750 1751 1752 1753 1754 1755 1756 1757 1758 1759 1760 \n   1    4    1    4    1    4    1    1    2    1    1    1    1    1    3    1 \n1761 1762 1763 1764 1765 1766 1767 1768 1769 1770 1771 1772 1773 1774 1775 1776 \n   1    1    1    2    2    2    2    2    2    2    2    1    1    2    2    2 \n1777 1778 1779 1780 1781 1782 1783 1784 1785 1786 1787 1788 1789 1790 1791 1792 \n   1    2    1    1    1    1    1    2    2    2    1    2    2    2    2    1 \n1793 1794 1795 1796 1797 1798 1799 1800 1801 1802 1803 1804 1805 1806 1807 1808 \n   2    1    1    1    1    1    1    1    2    2    1    2    1    1    1    1 \n1809 1810 1811 1812 1813 1814 1815 1816 1817 1818 1819 1820 1821 1822 1823 1824 \n   1    1    1    1    2    1    2    2    2    2    2    2    1    1    2    1 \n1825 1826 1827 1828 1829 1830 1831 1832 1833 1834 1835 1836 1837 1838 1839 1840 \n   1    1    1    2    2    2    2    2    1    1    1    2    1    1    2    2 \n1841 1842 1843 1844 1845 1846 1847 1848 1849 1850 1851 1852 1853 1854 1855 1856 \n   1    2    1    1    2    1    1    2    2    2    1    2    1    2    1    1 \n1857 1858 1859 1860 1861 1862 1863 1864 1865 1866 1867 1868 1869 1870 1871 1872 \n   1    1    1    1    1    1    2    1    1    1    1    4    1    1    1    1 \n1873 1874 1875 1876 1877 1878 1879 1880 1881 1882 1883 1884 1885 1886 1887 1888 \n   3    1    1    2    1    1    1    2    1    1    1    1    1    2    2    1 \n1889 1890 1891 1892 1893 1894 1895 1896 1897 1898 1899 1900 1901 1902 1903 1904 \n   1    1    2    1    2    2    1    1    1    1    1    2    1    1    2    1 \n1905 1906 1907 1908 1909 1910 1911 1912 1913 1914 1915 1916 1917 1918 1919 1920 \n   1    3    2    2    2    1    2    1    3    1    1    1    1    1    1    1 \n1921 1922 1923 1924 1925 \n   1    1    1    1    3 \n\n\nIf we want to know how many locations have more than one point event, we can use the code chunk below.\n\nsum(multiplicity(childcare_ppp) &gt; 1)\n\n[1] 338\n\n\nthis shows that there are 338 duplicates\n\ntmap_mode('view')\ntm_shape(childcare) +\n  tm_dots(alpha=0.4, \n          size=0.05)\n\n\n\n\n\n\n\ntmap_mode('plot')\n\nThere are three ways to overcome this problem. The easiest way is to delete the duplicates. But, that will also mean that some useful point events will be lost.\nThe second solution is use jittering, which will add a small perturbation to the duplicate points so that they do not occupy the exact same space.\nThe third solution is to make each point “unique” and then attach the duplicates of the points to the patterns as marks, as attributes of the points. Then you would need analytical techniques that take into account these marks.\njittering approach\n\nchildcare_ppp_jit &lt;- rjitter(childcare_ppp, \n                             retry=TRUE, \n                             nsim=1, \n                             drop=TRUE)\n\ncheck again\n\nany(duplicated(childcare_ppp_jit))\n\n[1] FALSE"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex03/Hands-on_Ex03-part1.html#creating-owin-object",
    "href": "Hands-on_Ex/Hands-on_Ex03/Hands-on_Ex03-part1.html#creating-owin-object",
    "title": "In class Exercise 03",
    "section": "",
    "text": "When analysing spatial point patterns, it is a good practice to confine the analysis with a geographical area like Singapore boundary. In spatstat, an object called owin is specially designed to represent this polygonal region.\nThe code chunk below is used to covert sg SpatialPolygon object into owin object of spatstat.\n\nsg_owin &lt;- as(sg_sp, \"owin\")\n\n\nplot(sg_owin)\n\n\n\n\n\nsummary(sg_owin)\n\nWindow: polygonal boundary\n80 separate polygons (35 holes)\n                  vertices         area relative.area\npolygon 1                4  9.47108e+01      1.21e-07\npolygon 2               37  1.29481e+04      1.66e-05\npolygon 3               30  4.28933e+03      5.49e-06\npolygon 4              145  9.61782e+05      1.23e-03\npolygon 5              227  1.10308e+06      1.41e-03\npolygon 6               19  3.09221e+04      3.95e-05\npolygon 7               10  6.60195e+03      8.44e-06\npolygon 8              234  2.08755e+06      2.67e-03\npolygon 9               22  6.74651e+03      8.63e-06\npolygon 10              71  5.63061e+03      7.20e-06\npolygon 11              10  1.99717e+02      2.55e-07\npolygon 12           14663  6.97996e+08      8.93e-01\npolygon 13 (hole)        3 -2.05920e-03     -2.63e-12\npolygon 14 (hole)        3 -2.89050e-05     -3.70e-14\npolygon 15 (hole)        3 -2.83151e-01     -3.62e-10\npolygon 16 (hole)        3 -3.99521e-02     -5.11e-11\npolygon 17 (hole)        3 -4.95057e-02     -6.33e-11\npolygon 18 (hole)        3 -3.65501e-03     -4.67e-12\npolygon 19 (hole)        4 -2.05611e-02     -2.63e-11\npolygon 20 (hole)        3 -1.68316e-04     -2.15e-13\npolygon 21 (hole)       26 -1.25665e+03     -1.61e-06\npolygon 22 (hole)        3 -2.18000e-06     -2.79e-15\npolygon 23 (hole)        3 -6.62377e-01     -8.47e-10\npolygon 24 (hole)        3 -2.09065e-03     -2.67e-12\npolygon 25 (hole)       36 -7.79904e+03     -9.97e-06\npolygon 26 (hole)        3 -8.83647e-03     -1.13e-11\npolygon 27 (hole)        3 -2.21090e+00     -2.83e-09\npolygon 28 (hole)       40 -6.00381e+03     -7.68e-06\npolygon 29 (hole)        7 -1.40545e-01     -1.80e-10\npolygon 30 (hole)       20 -4.39069e+00     -5.62e-09\npolygon 31 (hole)       28 -1.99862e+01     -2.56e-08\npolygon 32 (hole)       48 -1.38338e+02     -1.77e-07\npolygon 33 (hole)      351 -1.21433e+03     -1.55e-06\npolygon 34 (hole)       12 -8.36709e+01     -1.07e-07\npolygon 35 (hole)      317 -5.11280e+04     -6.54e-05\npolygon 36 (hole)       36 -4.01660e+04     -5.14e-05\npolygon 37              30  2.80002e+04      3.58e-05\npolygon 38              27  1.50315e+04      1.92e-05\npolygon 39              15  4.03300e+04      5.16e-05\npolygon 40            1045  4.44510e+06      5.68e-03\npolygon 41 (hole)       13 -3.91907e+02     -5.01e-07\npolygon 42              47  3.82087e+04      4.89e-05\npolygon 43              65  8.42861e+04      1.08e-04\npolygon 44             478  2.06120e+06      2.64e-03\npolygon 45             266  1.50631e+06      1.93e-03\npolygon 46             234  4.72886e+05      6.05e-04\npolygon 47              14  5.86546e+03      7.50e-06\npolygon 48              83  5.28920e+03      6.76e-06\npolygon 49              75  1.73526e+04      2.22e-05\npolygon 50             148  3.10395e+03      3.97e-06\npolygon 51             142  3.22293e+03      4.12e-06\npolygon 52              45  2.51218e+03      3.21e-06\npolygon 53              40  1.38607e+04      1.77e-05\npolygon 54              10  4.90942e+02      6.28e-07\npolygon 55              95  5.96187e+04      7.62e-05\npolygon 56 (hole)        4 -1.86410e-02     -2.38e-11\npolygon 57              64  3.43149e+04      4.39e-05\npolygon 58 (hole)        3 -1.98390e-03     -2.54e-12\npolygon 59 (hole)        3 -5.55856e-03     -7.11e-12\npolygon 60 (hole)        3 -5.12482e-03     -6.55e-12\npolygon 61 (hole)        3 -1.96410e-03     -2.51e-12\npolygon 62 (hole)        4 -1.13774e-02     -1.46e-11\npolygon 63             155  2.67502e+05      3.42e-04\npolygon 64             106  3.04104e+03      3.89e-06\npolygon 65            1027  1.27782e+06      1.63e-03\npolygon 66 (hole)        3 -3.23310e-04     -4.13e-13\npolygon 67 (hole)        3 -1.16959e-03     -1.50e-12\npolygon 68 (hole)        3 -1.46474e-03     -1.87e-12\npolygon 69             211  4.70521e+05      6.02e-04\npolygon 70               4  2.69313e+02      3.44e-07\npolygon 71             132  9.53357e+04      1.22e-04\npolygon 72               6  4.50259e+02      5.76e-07\npolygon 73             285  1.61128e+06      2.06e-03\npolygon 74              91  1.49663e+04      1.91e-05\npolygon 75              71  8.18750e+03      1.05e-05\npolygon 76             668  5.40368e+07      6.91e-02\npolygon 77              77  3.29939e+05      4.22e-04\npolygon 78             711  1.28815e+07      1.65e-02\npolygon 79 (hole)        3 -3.41405e-01     -4.37e-10\npolygon 80              44  2.26577e+03      2.90e-06\nenclosing rectangle: [2667.54, 56396.44] x [15748.72, 50256.33] units\n                     (53730 x 34510 units)\nWindow area = 781945000 square units\nFraction of frame area: 0.422"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex03/Hands-on_Ex03-part1.html#combining-point-events-object-and-owin-object",
    "href": "Hands-on_Ex/Hands-on_Ex03/Hands-on_Ex03-part1.html#combining-point-events-object-and-owin-object",
    "title": "In class Exercise 03",
    "section": "",
    "text": "childcareSG_ppp = childcare_ppp[sg_owin]\n\n\nsummary(childcareSG_ppp)\n\nPlanar point pattern:  1925 points\nAverage intensity 2.461811e-06 points per square unit\n\n*Pattern contains duplicated points*\n\nCoordinates are given to 3 decimal places\ni.e. rounded to the nearest multiple of 0.001 units\n\nWindow: polygonal boundary\n80 separate polygons (35 holes)\n                  vertices         area relative.area\npolygon 1                4  9.47108e+01      1.21e-07\npolygon 2               37  1.29481e+04      1.66e-05\npolygon 3               30  4.28933e+03      5.49e-06\npolygon 4              145  9.61782e+05      1.23e-03\npolygon 5              227  1.10308e+06      1.41e-03\npolygon 6               19  3.09221e+04      3.95e-05\npolygon 7               10  6.60195e+03      8.44e-06\npolygon 8              234  2.08755e+06      2.67e-03\npolygon 9               22  6.74651e+03      8.63e-06\npolygon 10              71  5.63061e+03      7.20e-06\npolygon 11              10  1.99717e+02      2.55e-07\npolygon 12           14663  6.97996e+08      8.93e-01\npolygon 13 (hole)        3 -2.05920e-03     -2.63e-12\npolygon 14 (hole)        3 -2.89050e-05     -3.70e-14\npolygon 15 (hole)        3 -2.83151e-01     -3.62e-10\npolygon 16 (hole)        3 -3.99521e-02     -5.11e-11\npolygon 17 (hole)        3 -4.95057e-02     -6.33e-11\npolygon 18 (hole)        3 -3.65501e-03     -4.67e-12\npolygon 19 (hole)        4 -2.05611e-02     -2.63e-11\npolygon 20 (hole)        3 -1.68316e-04     -2.15e-13\npolygon 21 (hole)       26 -1.25665e+03     -1.61e-06\npolygon 22 (hole)        3 -2.18000e-06     -2.79e-15\npolygon 23 (hole)        3 -6.62377e-01     -8.47e-10\npolygon 24 (hole)        3 -2.09065e-03     -2.67e-12\npolygon 25 (hole)       36 -7.79904e+03     -9.97e-06\npolygon 26 (hole)        3 -8.83647e-03     -1.13e-11\npolygon 27 (hole)        3 -2.21090e+00     -2.83e-09\npolygon 28 (hole)       40 -6.00381e+03     -7.68e-06\npolygon 29 (hole)        7 -1.40545e-01     -1.80e-10\npolygon 30 (hole)       20 -4.39069e+00     -5.62e-09\npolygon 31 (hole)       28 -1.99862e+01     -2.56e-08\npolygon 32 (hole)       48 -1.38338e+02     -1.77e-07\npolygon 33 (hole)      351 -1.21433e+03     -1.55e-06\npolygon 34 (hole)       12 -8.36709e+01     -1.07e-07\npolygon 35 (hole)      317 -5.11280e+04     -6.54e-05\npolygon 36 (hole)       36 -4.01660e+04     -5.14e-05\npolygon 37              30  2.80002e+04      3.58e-05\npolygon 38              27  1.50315e+04      1.92e-05\npolygon 39              15  4.03300e+04      5.16e-05\npolygon 40            1045  4.44510e+06      5.68e-03\npolygon 41 (hole)       13 -3.91907e+02     -5.01e-07\npolygon 42              47  3.82087e+04      4.89e-05\npolygon 43              65  8.42861e+04      1.08e-04\npolygon 44             478  2.06120e+06      2.64e-03\npolygon 45             266  1.50631e+06      1.93e-03\npolygon 46             234  4.72886e+05      6.05e-04\npolygon 47              14  5.86546e+03      7.50e-06\npolygon 48              83  5.28920e+03      6.76e-06\npolygon 49              75  1.73526e+04      2.22e-05\npolygon 50             148  3.10395e+03      3.97e-06\npolygon 51             142  3.22293e+03      4.12e-06\npolygon 52              45  2.51218e+03      3.21e-06\npolygon 53              40  1.38607e+04      1.77e-05\npolygon 54              10  4.90942e+02      6.28e-07\npolygon 55              95  5.96187e+04      7.62e-05\npolygon 56 (hole)        4 -1.86410e-02     -2.38e-11\npolygon 57              64  3.43149e+04      4.39e-05\npolygon 58 (hole)        3 -1.98390e-03     -2.54e-12\npolygon 59 (hole)        3 -5.55856e-03     -7.11e-12\npolygon 60 (hole)        3 -5.12482e-03     -6.55e-12\npolygon 61 (hole)        3 -1.96410e-03     -2.51e-12\npolygon 62 (hole)        4 -1.13774e-02     -1.46e-11\npolygon 63             155  2.67502e+05      3.42e-04\npolygon 64             106  3.04104e+03      3.89e-06\npolygon 65            1027  1.27782e+06      1.63e-03\npolygon 66 (hole)        3 -3.23310e-04     -4.13e-13\npolygon 67 (hole)        3 -1.16959e-03     -1.50e-12\npolygon 68 (hole)        3 -1.46474e-03     -1.87e-12\npolygon 69             211  4.70521e+05      6.02e-04\npolygon 70               4  2.69313e+02      3.44e-07\npolygon 71             132  9.53357e+04      1.22e-04\npolygon 72               6  4.50259e+02      5.76e-07\npolygon 73             285  1.61128e+06      2.06e-03\npolygon 74              91  1.49663e+04      1.91e-05\npolygon 75              71  8.18750e+03      1.05e-05\npolygon 76             668  5.40368e+07      6.91e-02\npolygon 77              77  3.29939e+05      4.22e-04\npolygon 78             711  1.28815e+07      1.65e-02\npolygon 79 (hole)        3 -3.41405e-01     -4.37e-10\npolygon 80              44  2.26577e+03      2.90e-06\nenclosing rectangle: [2667.54, 56396.44] x [15748.72, 50256.33] units\n                     (53730 x 34510 units)\nWindow area = 781945000 square units\nFraction of frame area: 0.422\n\n\n\nplot(childcareSG_ppp)"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex03/Hands-on_Ex03-part1.html#kernel-density-estimation",
    "href": "Hands-on_Ex/Hands-on_Ex03/Hands-on_Ex03-part1.html#kernel-density-estimation",
    "title": "In class Exercise 03",
    "section": "Kernel Density Estimation",
    "text": "Kernel Density Estimation\n\nkde_childcareSG_bw &lt;- density(childcareSG_ppp,\n                              sigma=bw.diggle,\n                              edge=TRUE,\n                            kernel=\"gaussian\") \n\n\nplot(kde_childcareSG_bw)\n\n\n\n\nretrieving bandwidth\n\nbw &lt;- bw.diggle(childcareSG_ppp)\nbw\n\n   sigma \n295.4419 \n\n\nrescalling kde values to change the legend or indicator on the right\n\nchildcareSG_ppp.km &lt;- rescale(childcareSG_ppp, 1000, \"km\")\n\n\nkde_childcareSG.bw &lt;- density(childcareSG_ppp.km, sigma=bw.diggle, edge=TRUE, kernel=\"gaussian\")\nplot(kde_childcareSG.bw)\n\n\n\n\nWorking with different automatic badwidth methods\n\n bw.CvL(childcareSG_ppp.km)\n\n  sigma \n4.54311 \n\n\n\nbw.scott(childcareSG_ppp.km)\n\n sigma.x  sigma.y \n2.159749 1.396455 \n\n\n\nbw.ppl(childcareSG_ppp.km)\n\n    sigma \n0.3897017 \n\n\n\nbw.diggle(childcareSG_ppp.km)\n\n    sigma \n0.2954419 \n\n\ncompare output of diggle and ppl\n\nkde_childcareSG.ppl &lt;- density(childcareSG_ppp.km, \n                               sigma=bw.ppl, \n                               edge=TRUE,\n                               kernel=\"gaussian\")\npar(mfrow=c(1,2))\nplot(kde_childcareSG.bw, main = \"bw.diggle\")\nplot(kde_childcareSG.ppl, main = \"bw.ppl\")"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex03/Hands-on_Ex03-part1.html#working-with-different-kernel-methods",
    "href": "Hands-on_Ex/Hands-on_Ex03/Hands-on_Ex03-part1.html#working-with-different-kernel-methods",
    "title": "In class Exercise 03",
    "section": "Working with different kernel methods",
    "text": "Working with different kernel methods\n\npar(mfrow=c(2,2))\nplot(density(childcareSG_ppp.km, \n             sigma=bw.ppl, \n             edge=TRUE, \n             kernel=\"gaussian\"), \n     main=\"Gaussian\")\nplot(density(childcareSG_ppp.km, \n             sigma=bw.ppl, \n             edge=TRUE, \n             kernel=\"epanechnikov\"), \n     main=\"Epanechnikov\")\nplot(density(childcareSG_ppp.km, \n             sigma=bw.ppl, \n             edge=TRUE, \n             kernel=\"quartic\"), \n     main=\"Quartic\")\nplot(density(childcareSG_ppp.km, \n             sigma=bw.ppl, \n             edge=TRUE, \n             kernel=\"disc\"), \n     main=\"Disc\")"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex03/Hands-on_Ex03-part1.html#computing-kde-by-using-fixed-bandwidth",
    "href": "Hands-on_Ex/Hands-on_Ex03/Hands-on_Ex03-part1.html#computing-kde-by-using-fixed-bandwidth",
    "title": "In class Exercise 03",
    "section": "Computing KDE by using fixed bandwidth",
    "text": "Computing KDE by using fixed bandwidth\n\nkde_childcareSG_600 &lt;- density(childcareSG_ppp.km, sigma=0.6, edge=TRUE, kernel=\"gaussian\")\nplot(kde_childcareSG_600)"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex03/Hands-on_Ex03-part1.html#computing-kde-by-using-adaptive-bandwidth",
    "href": "Hands-on_Ex/Hands-on_Ex03/Hands-on_Ex03-part1.html#computing-kde-by-using-adaptive-bandwidth",
    "title": "In class Exercise 03",
    "section": "Computing KDE by using adaptive bandwidth",
    "text": "Computing KDE by using adaptive bandwidth\n\nkde_childcareSG_adaptive &lt;- adaptive.density(childcareSG_ppp.km, method=\"kernel\")\nplot(kde_childcareSG_adaptive)\n\n\n\n\ncompare both\n\npar(mfrow=c(1,2))\nplot(kde_childcareSG.bw, main = \"Fixed bandwidth\")\nplot(kde_childcareSG_adaptive, main = \"Adaptive bandwidth\")"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex03/Hands-on_Ex03-part1.html#convert-kde-output-into-grid-object",
    "href": "Hands-on_Ex/Hands-on_Ex03/Hands-on_Ex03-part1.html#convert-kde-output-into-grid-object",
    "title": "In class Exercise 03",
    "section": "convert KDE output into grid object",
    "text": "convert KDE output into grid object\n\ngridded_kde_childcareSG_bw &lt;- as.SpatialGridDataFrame.im(kde_childcareSG.bw)\nspplot(gridded_kde_childcareSG_bw)\n\n\n\n\nconvert grid object into raster\n\nkde_childcareSG_bw_raster &lt;- raster(gridded_kde_childcareSG_bw)\n\n\nkde_childcareSG_bw_raster\n\nclass      : RasterLayer \ndimensions : 128, 128, 16384  (nrow, ncol, ncell)\nresolution : 0.419757, 0.2695907  (x, y)\nextent     : 2.667538, 56.39644, 15.74872, 50.25633  (xmin, xmax, ymin, ymax)\ncrs        : NA \nsource     : memory\nnames      : v \nvalues     : -1.293897e-14, 37.27443  (min, max)\n\n\nassigning projection system ???\n\nprojection(kde_childcareSG_bw_raster) &lt;- CRS(\"+init=EPSG:3414\")\nkde_childcareSG_bw_raster\n\nclass      : RasterLayer \ndimensions : 128, 128, 16384  (nrow, ncol, ncell)\nresolution : 0.419757, 0.2695907  (x, y)\nextent     : 2.667538, 56.39644, 15.74872, 50.25633  (xmin, xmax, ymin, ymax)\ncrs        : +proj=tmerc +lat_0=1.36666666666667 +lon_0=103.833333333333 +k=1 +x_0=28001.642 +y_0=38744.572 +ellps=WGS84 +units=m +no_defs \nsource     : memory\nnames      : v \nvalues     : -1.293897e-14, 37.27443  (min, max)"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex03/Hands-on_Ex03-part1.html#visualising-output",
    "href": "Hands-on_Ex/Hands-on_Ex03/Hands-on_Ex03-part1.html#visualising-output",
    "title": "In class Exercise 03",
    "section": "visualising output",
    "text": "visualising output\n\ntm_shape(kde_childcareSG_bw_raster) + \n  tm_raster(\"v\") +\n  tm_layout(legend.position = c(\"right\", \"bottom\"), frame = FALSE)\n\n\n\n\nComparing Spatial Point Patterns using KDE\n\npg = mpsz[mpsz@data$PLN_AREA_N == \"PUNGGOL\",]\ntm = mpsz[mpsz@data$PLN_AREA_N == \"TAMPINES\",]\nck = mpsz[mpsz@data$PLN_AREA_N == \"CHOA CHU KANG\",]\njw = mpsz[mpsz@data$PLN_AREA_N == \"JURONG WEST\",]\n\nplotting target areas\n\npar(mfrow=c(2,2))\nplot(pg, main = \"Ponggol\")\nplot(tm, main = \"Tampines\")\nplot(ck, main = \"Choa Chu Kang\")\nplot(jw, main = \"Jurong West\")\n\n\n\n\nConverting the spatial point data frame into generic sp format\n\npg_sp = as(pg, \"SpatialPolygons\")\ntm_sp = as(tm, \"SpatialPolygons\")\nck_sp = as(ck, \"SpatialPolygons\")\njw_sp = as(jw, \"SpatialPolygons\")\n\nowin object\n\npg_owin = as(pg_sp, \"owin\")\ntm_owin = as(tm_sp, \"owin\")\nck_owin = as(ck_sp, \"owin\")\njw_owin = as(jw_sp, \"owin\")\n\nCombining childcare points and the study area\n\nchildcare_pg_ppp = childcare_ppp_jit[pg_owin]\nchildcare_tm_ppp = childcare_ppp_jit[tm_owin]\nchildcare_ck_ppp = childcare_ppp_jit[ck_owin]\nchildcare_jw_ppp = childcare_ppp_jit[jw_owin]\n\nNext, rescale() function is used to trasnform the unit of measurement from metre to kilometre.\n\nchildcare_pg_ppp.km = rescale(childcare_pg_ppp, 1000, \"km\")\nchildcare_tm_ppp.km = rescale(childcare_tm_ppp, 1000, \"km\")\nchildcare_ck_ppp.km = rescale(childcare_ck_ppp, 1000, \"km\")\nchildcare_jw_ppp.km = rescale(childcare_jw_ppp, 1000, \"km\")\n\nThe code chunk below is used to plot these four study areas and the locations of the childcare centres.\n\npar(mfrow=c(2,2))\nplot(childcare_pg_ppp.km, main=\"Punggol\")\nplot(childcare_tm_ppp.km, main=\"Tampines\")\nplot(childcare_ck_ppp.km, main=\"Choa Chu Kang\")\nplot(childcare_jw_ppp.km, main=\"Jurong West\")\n\n\n\n\ncomputing KDE\n\npar(mfrow=c(2,2))\nplot(density(childcare_pg_ppp.km, \n             sigma=bw.diggle, \n             edge=TRUE, \n             kernel=\"gaussian\"),\n     main=\"Punggol\")\nplot(density(childcare_tm_ppp.km, \n             sigma=bw.diggle, \n             edge=TRUE, \n             kernel=\"gaussian\"),\n     main=\"Tempines\")\nplot(density(childcare_ck_ppp.km, \n             sigma=bw.diggle, \n             edge=TRUE, \n             kernel=\"gaussian\"),\n     main=\"Choa Chu Kang\")\nplot(density(childcare_jw_ppp.km, \n             sigma=bw.diggle, \n             edge=TRUE, \n             kernel=\"gaussian\"),\n     main=\"JUrong West\")\n\n\n\n\ncomputing bandwidth\n\npar(mfrow=c(2,2))\nplot(density(childcare_ck_ppp.km, \n             sigma=0.25, \n             edge=TRUE, \n             kernel=\"gaussian\"),\n     main=\"Chou Chu Kang\")\nplot(density(childcare_jw_ppp.km, \n             sigma=0.25, \n             edge=TRUE, \n             kernel=\"gaussian\"),\n     main=\"JUrong West\")\nplot(density(childcare_pg_ppp.km, \n             sigma=0.25, \n             edge=TRUE, \n             kernel=\"gaussian\"),\n     main=\"Punggol\")\nplot(density(childcare_tm_ppp.km, \n             sigma=0.25, \n             edge=TRUE, \n             kernel=\"gaussian\"),\n     main=\"Tampines\")"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex03/Hands-on_Ex03-part1.html#testing-spatial-point-patterns-using-clark-and-evans-test",
    "href": "Hands-on_Ex/Hands-on_Ex03/Hands-on_Ex03-part1.html#testing-spatial-point-patterns-using-clark-and-evans-test",
    "title": "In class Exercise 03",
    "section": "Testing spatial point patterns using Clark and Evans Test",
    "text": "Testing spatial point patterns using Clark and Evans Test\n\nclarkevans.test(childcareSG_ppp,\n                correction=\"none\",\n                clipregion=\"sg_owin\",\n                alternative=c(\"clustered\"),\n                nsim=99)\n\n\n    Clark-Evans test\n    No edge correction\n    Z-test\n\ndata:  childcareSG_ppp\nR = 0.49534, p-value &lt; 2.2e-16\nalternative hypothesis: clustered (R &lt; 1)\n\n\nconlusion: looking at p value of 2.2e-16, we can reject the null hypothesis and conclude that the distribution of childcare services are not randomly distributed."
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex03/Hands-on_Ex03-part1.html#clark-and-evans-test-choa-chu-kang-planning-area",
    "href": "Hands-on_Ex/Hands-on_Ex03/Hands-on_Ex03-part1.html#clark-and-evans-test-choa-chu-kang-planning-area",
    "title": "In class Exercise 03",
    "section": "Clark and Evans Test: Choa Chu Kang planning area",
    "text": "Clark and Evans Test: Choa Chu Kang planning area\n\nclarkevans.test(childcare_ck_ppp,\n                correction=\"none\",\n                clipregion=NULL,\n                alternative=c(\"two.sided\"),\n                nsim=999)\n\n\n    Clark-Evans test\n    No edge correction\n    Z-test\n\ndata:  childcare_ck_ppp\nR = 0.85966, p-value = 0.02091\nalternative hypothesis: two-sided"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex03/Hands-on_Ex03-part1.html#clark-and-evans-test-tampines-planning-area",
    "href": "Hands-on_Ex/Hands-on_Ex03/Hands-on_Ex03-part1.html#clark-and-evans-test-tampines-planning-area",
    "title": "In class Exercise 03",
    "section": "Clark and Evans Test: Tampines planning area",
    "text": "Clark and Evans Test: Tampines planning area\n\nclarkevans.test(childcare_tm_ppp,\n                correction=\"none\",\n                clipregion=NULL,\n                alternative=c(\"two.sided\"),\n                nsim=999)\n\n\n    Clark-Evans test\n    No edge correction\n    Z-test\n\ndata:  childcare_tm_ppp\nR = 0.69217, p-value = 1.892e-10\nalternative hypothesis: two-sided\n\n\nConclusion: looking at p value of choa chu kang and tampines,for tampines, we can reject the null hypothesis and conclude that the distribution of childcare services are not randomly distributed. However, for choa chu kang, we cannot reject the null hypothesis and conclude that the distribution of childcare services are randomly distributed."
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html",
    "href": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html",
    "title": "Hands-on Exercise 1",
    "section": "",
    "text": "In this section, I will install and load tidyverse and sf packages\n\npacman::p_load(tidyverse, sf)\n\n\n\n\n\nmpsz = st_read(dsn = \"data/geospatial\", \n                  layer = \"MP14_SUBZONE_WEB_PL\")\n\nReading layer `MP14_SUBZONE_WEB_PL' from data source \n  `C:\\EbenezerHo\\IS415-GAA\\Hands-on_Ex\\Hands-on_Ex01\\data\\geospatial' \n  using driver `ESRI Shapefile'\nSimple feature collection with 323 features and 15 fields\nGeometry type: MULTIPOLYGON\nDimension:     XY\nBounding box:  xmin: 2667.538 ymin: 15748.72 xmax: 56396.44 ymax: 50256.33\nProjected CRS: SVY21\n\n\n\ncyclingpath = st_read(dsn = \"data/geospatial\", \n                         layer = \"CyclingPathGazette\")\n\nReading layer `CyclingPathGazette' from data source \n  `C:\\EbenezerHo\\IS415-GAA\\Hands-on_Ex\\Hands-on_Ex01\\data\\geospatial' \n  using driver `ESRI Shapefile'\nSimple feature collection with 2558 features and 2 fields\nGeometry type: MULTILINESTRING\nDimension:     XY\nBounding box:  xmin: 11854.32 ymin: 28347.98 xmax: 42626.09 ymax: 48948.15\nProjected CRS: SVY21\n\n\n\n\n\n\npreschool = st_read(\"data/geospatial/PreSchoolsLocation.kml\")\n\nReading layer `PRESCHOOLS_LOCATION' from data source \n  `C:\\EbenezerHo\\IS415-GAA\\Hands-on_Ex\\Hands-on_Ex01\\data\\geospatial\\PreSchoolsLocation.kml' \n  using driver `KML'\nSimple feature collection with 2290 features and 2 fields\nGeometry type: POINT\nDimension:     XYZ\nBounding box:  xmin: 103.6878 ymin: 1.247759 xmax: 103.9897 ymax: 1.462134\nz_range:       zmin: 0 zmax: 0\nGeodetic CRS:  WGS 84\n\n\n\n\n\n\n\n\nst_geometry(mpsz)\n\nGeometry set for 323 features \nGeometry type: MULTIPOLYGON\nDimension:     XY\nBounding box:  xmin: 2667.538 ymin: 15748.72 xmax: 56396.44 ymax: 50256.33\nProjected CRS: SVY21\nFirst 5 geometries:\n\n\n\n\n\n\nglimpse(mpsz)\n\nRows: 323\nColumns: 16\n$ OBJECTID   &lt;int&gt; 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, …\n$ SUBZONE_NO &lt;int&gt; 1, 1, 3, 8, 3, 7, 9, 2, 13, 7, 12, 6, 1, 5, 1, 1, 3, 2, 2, …\n$ SUBZONE_N  &lt;chr&gt; \"MARINA SOUTH\", \"PEARL'S HILL\", \"BOAT QUAY\", \"HENDERSON HIL…\n$ SUBZONE_C  &lt;chr&gt; \"MSSZ01\", \"OTSZ01\", \"SRSZ03\", \"BMSZ08\", \"BMSZ03\", \"BMSZ07\",…\n$ CA_IND     &lt;chr&gt; \"Y\", \"Y\", \"Y\", \"N\", \"N\", \"N\", \"N\", \"Y\", \"N\", \"N\", \"N\", \"N\",…\n$ PLN_AREA_N &lt;chr&gt; \"MARINA SOUTH\", \"OUTRAM\", \"SINGAPORE RIVER\", \"BUKIT MERAH\",…\n$ PLN_AREA_C &lt;chr&gt; \"MS\", \"OT\", \"SR\", \"BM\", \"BM\", \"BM\", \"BM\", \"SR\", \"QT\", \"QT\",…\n$ REGION_N   &lt;chr&gt; \"CENTRAL REGION\", \"CENTRAL REGION\", \"CENTRAL REGION\", \"CENT…\n$ REGION_C   &lt;chr&gt; \"CR\", \"CR\", \"CR\", \"CR\", \"CR\", \"CR\", \"CR\", \"CR\", \"CR\", \"CR\",…\n$ INC_CRC    &lt;chr&gt; \"5ED7EB253F99252E\", \"8C7149B9EB32EEFC\", \"C35FEFF02B13E0E5\",…\n$ FMEL_UPD_D &lt;date&gt; 2014-12-05, 2014-12-05, 2014-12-05, 2014-12-05, 2014-12-05…\n$ X_ADDR     &lt;dbl&gt; 31595.84, 28679.06, 29654.96, 26782.83, 26201.96, 25358.82,…\n$ Y_ADDR     &lt;dbl&gt; 29220.19, 29782.05, 29974.66, 29933.77, 30005.70, 29991.38,…\n$ SHAPE_Leng &lt;dbl&gt; 5267.381, 3506.107, 1740.926, 3313.625, 2825.594, 4428.913,…\n$ SHAPE_Area &lt;dbl&gt; 1630379.27, 559816.25, 160807.50, 595428.89, 387429.44, 103…\n$ geometry   &lt;MULTIPOLYGON [m]&gt; MULTIPOLYGON (((31495.56 30..., MULTIPOLYGON (…\n\n\n\n\n\n\nhead(mpsz,n=5)\n\nSimple feature collection with 5 features and 15 fields\nGeometry type: MULTIPOLYGON\nDimension:     XY\nBounding box:  xmin: 25867.68 ymin: 28369.47 xmax: 32362.39 ymax: 30435.54\nProjected CRS: SVY21\n  OBJECTID SUBZONE_NO      SUBZONE_N SUBZONE_C CA_IND      PLN_AREA_N\n1        1          1   MARINA SOUTH    MSSZ01      Y    MARINA SOUTH\n2        2          1   PEARL'S HILL    OTSZ01      Y          OUTRAM\n3        3          3      BOAT QUAY    SRSZ03      Y SINGAPORE RIVER\n4        4          8 HENDERSON HILL    BMSZ08      N     BUKIT MERAH\n5        5          3        REDHILL    BMSZ03      N     BUKIT MERAH\n  PLN_AREA_C       REGION_N REGION_C          INC_CRC FMEL_UPD_D   X_ADDR\n1         MS CENTRAL REGION       CR 5ED7EB253F99252E 2014-12-05 31595.84\n2         OT CENTRAL REGION       CR 8C7149B9EB32EEFC 2014-12-05 28679.06\n3         SR CENTRAL REGION       CR C35FEFF02B13E0E5 2014-12-05 29654.96\n4         BM CENTRAL REGION       CR 3775D82C5DDBEFBD 2014-12-05 26782.83\n5         BM CENTRAL REGION       CR 85D9ABEF0A40678F 2014-12-05 26201.96\n    Y_ADDR SHAPE_Leng SHAPE_Area                       geometry\n1 29220.19   5267.381  1630379.3 MULTIPOLYGON (((31495.56 30...\n2 29782.05   3506.107   559816.2 MULTIPOLYGON (((29092.28 30...\n3 29974.66   1740.926   160807.5 MULTIPOLYGON (((29932.33 29...\n4 29933.77   3313.625   595428.9 MULTIPOLYGON (((27131.28 30...\n5 30005.70   2825.594   387429.4 MULTIPOLYGON (((26451.03 30...\n\n\n\n\n\n\n\nplot(mpsz)\n\n\n\n\n\nplot(st_geometry(mpsz))\n\n\n\n\n\nplot(mpsz[\"PLN_AREA_N\"])\n\n\n\n\n\n\n\n\n\n\nst_crs(mpsz)\n\nCoordinate Reference System:\n  User input: SVY21 \n  wkt:\nPROJCRS[\"SVY21\",\n    BASEGEOGCRS[\"SVY21[WGS84]\",\n        DATUM[\"World Geodetic System 1984\",\n            ELLIPSOID[\"WGS 84\",6378137,298.257223563,\n                LENGTHUNIT[\"metre\",1]],\n            ID[\"EPSG\",6326]],\n        PRIMEM[\"Greenwich\",0,\n            ANGLEUNIT[\"Degree\",0.0174532925199433]]],\n    CONVERSION[\"unnamed\",\n        METHOD[\"Transverse Mercator\",\n            ID[\"EPSG\",9807]],\n        PARAMETER[\"Latitude of natural origin\",1.36666666666667,\n            ANGLEUNIT[\"Degree\",0.0174532925199433],\n            ID[\"EPSG\",8801]],\n        PARAMETER[\"Longitude of natural origin\",103.833333333333,\n            ANGLEUNIT[\"Degree\",0.0174532925199433],\n            ID[\"EPSG\",8802]],\n        PARAMETER[\"Scale factor at natural origin\",1,\n            SCALEUNIT[\"unity\",1],\n            ID[\"EPSG\",8805]],\n        PARAMETER[\"False easting\",28001.642,\n            LENGTHUNIT[\"metre\",1],\n            ID[\"EPSG\",8806]],\n        PARAMETER[\"False northing\",38744.572,\n            LENGTHUNIT[\"metre\",1],\n            ID[\"EPSG\",8807]]],\n    CS[Cartesian,2],\n        AXIS[\"(E)\",east,\n            ORDER[1],\n            LENGTHUNIT[\"metre\",1,\n                ID[\"EPSG\",9001]]],\n        AXIS[\"(N)\",north,\n            ORDER[2],\n            LENGTHUNIT[\"metre\",1,\n                ID[\"EPSG\",9001]]]]\n\n\n\nmpsz3414 &lt;- st_set_crs(mpsz, 3414)\n\n\nst_crs(mpsz3414)\n\nCoordinate Reference System:\n  User input: EPSG:3414 \n  wkt:\nPROJCRS[\"SVY21 / Singapore TM\",\n    BASEGEOGCRS[\"SVY21\",\n        DATUM[\"SVY21\",\n            ELLIPSOID[\"WGS 84\",6378137,298.257223563,\n                LENGTHUNIT[\"metre\",1]]],\n        PRIMEM[\"Greenwich\",0,\n            ANGLEUNIT[\"degree\",0.0174532925199433]],\n        ID[\"EPSG\",4757]],\n    CONVERSION[\"Singapore Transverse Mercator\",\n        METHOD[\"Transverse Mercator\",\n            ID[\"EPSG\",9807]],\n        PARAMETER[\"Latitude of natural origin\",1.36666666666667,\n            ANGLEUNIT[\"degree\",0.0174532925199433],\n            ID[\"EPSG\",8801]],\n        PARAMETER[\"Longitude of natural origin\",103.833333333333,\n            ANGLEUNIT[\"degree\",0.0174532925199433],\n            ID[\"EPSG\",8802]],\n        PARAMETER[\"Scale factor at natural origin\",1,\n            SCALEUNIT[\"unity\",1],\n            ID[\"EPSG\",8805]],\n        PARAMETER[\"False easting\",28001.642,\n            LENGTHUNIT[\"metre\",1],\n            ID[\"EPSG\",8806]],\n        PARAMETER[\"False northing\",38744.572,\n            LENGTHUNIT[\"metre\",1],\n            ID[\"EPSG\",8807]]],\n    CS[Cartesian,2],\n        AXIS[\"northing (N)\",north,\n            ORDER[1],\n            LENGTHUNIT[\"metre\",1]],\n        AXIS[\"easting (E)\",east,\n            ORDER[2],\n            LENGTHUNIT[\"metre\",1]],\n    USAGE[\n        SCOPE[\"Cadastre, engineering survey, topographic mapping.\"],\n        AREA[\"Singapore - onshore and offshore.\"],\n        BBOX[1.13,103.59,1.47,104.07]],\n    ID[\"EPSG\",3414]]\n\n\n\n\n\n\npreschool3414 &lt;- st_transform(preschool, \n                              crs = 3414)\n\n\n\n\n\n\nlistings &lt;- read_csv(\"data/aspatial/listings.csv\")\n\nlist(listings) \n\n[[1]]\n# A tibble: 3,457 × 18\n       id name      host_id host_name neighbourhood_group neighbourhood latitude\n    &lt;dbl&gt; &lt;chr&gt;       &lt;dbl&gt; &lt;chr&gt;     &lt;chr&gt;               &lt;chr&gt;            &lt;dbl&gt;\n 1  71609 Villa in…  367042 Belinda   East Region         Tampines          1.35\n 2  71896 Home in …  367042 Belinda   East Region         Tampines          1.35\n 3  71903 Home in …  367042 Belinda   East Region         Tampines          1.35\n 4 275343 Rental u… 1439258 Kay       Central Region      Bukit Merah       1.29\n 5 275344 Rental u… 1439258 Kay       Central Region      Bukit Merah       1.29\n 6 289234 Home in …  367042 Belinda   East Region         Tampines          1.34\n 7 294281 Rental u… 1521514 Elizabeth Central Region      Newton            1.31\n 8 324945 Rental u… 1439258 Kay       Central Region      Bukit Merah       1.29\n 9 330095 Rental u… 1439258 Kay       Central Region      Bukit Merah       1.29\n10 369141 Place to… 1521514 Elizabeth Central Region      Newton            1.31\n# ℹ 3,447 more rows\n# ℹ 11 more variables: longitude &lt;dbl&gt;, room_type &lt;chr&gt;, price &lt;dbl&gt;,\n#   minimum_nights &lt;dbl&gt;, number_of_reviews &lt;dbl&gt;, last_review &lt;date&gt;,\n#   reviews_per_month &lt;dbl&gt;, calculated_host_listings_count &lt;dbl&gt;,\n#   availability_365 &lt;dbl&gt;, number_of_reviews_ltm &lt;dbl&gt;, license &lt;chr&gt;\n\n\n\n\n\nlistings_sf &lt;- st_as_sf(listings, \n                       coords = c(\"longitude\", \"latitude\"),\n                       crs=4326) %&gt;%\n  st_transform(crs = 3414)\n\n\nglimpse(listings_sf)\n\nRows: 3,457\nColumns: 17\n$ id                             &lt;dbl&gt; 71609, 71896, 71903, 275343, 275344, 28…\n$ name                           &lt;chr&gt; \"Villa in Singapore · ★4.44 · 2 bedroom…\n$ host_id                        &lt;dbl&gt; 367042, 367042, 367042, 1439258, 143925…\n$ host_name                      &lt;chr&gt; \"Belinda\", \"Belinda\", \"Belinda\", \"Kay\",…\n$ neighbourhood_group            &lt;chr&gt; \"East Region\", \"East Region\", \"East Reg…\n$ neighbourhood                  &lt;chr&gt; \"Tampines\", \"Tampines\", \"Tampines\", \"Bu…\n$ room_type                      &lt;chr&gt; \"Private room\", \"Private room\", \"Privat…\n$ price                          &lt;dbl&gt; 150, 80, 80, 64, 78, 220, 85, 75, 69, 7…\n$ minimum_nights                 &lt;dbl&gt; 92, 92, 92, 60, 60, 92, 92, 60, 60, 92,…\n$ number_of_reviews              &lt;dbl&gt; 19, 24, 46, 20, 16, 12, 131, 17, 5, 81,…\n$ last_review                    &lt;date&gt; 2020-01-17, 2019-10-13, 2020-01-09, 20…\n$ reviews_per_month              &lt;dbl&gt; 0.13, 0.16, 0.30, 0.15, 0.11, 0.09, 0.9…\n$ calculated_host_listings_count &lt;dbl&gt; 5, 5, 5, 51, 51, 5, 7, 51, 51, 7, 7, 1,…\n$ availability_365               &lt;dbl&gt; 55, 91, 91, 183, 183, 54, 365, 183, 183…\n$ number_of_reviews_ltm          &lt;dbl&gt; 0, 0, 0, 0, 3, 0, 0, 1, 2, 0, 0, 0, 0, …\n$ license                        &lt;chr&gt; NA, NA, NA, \"S0399\", \"S0399\", NA, NA, \"…\n$ geometry                       &lt;POINT [m]&gt; POINT (41972.5 36390.05), POINT (…\n\n\n\n\n\n\n\n\n\nbuffer_cycling &lt;- st_buffer(cyclingpath, \n                               dist=5, nQuadSegs = 30)\n\n\nbuffer_cycling$AREA &lt;- st_area(buffer_cycling)\n\n\nsum(buffer_cycling$AREA)\n\n1774367 [m^2]\n\n\n\n\n\n\nmpsz3414$`PreSch Count`&lt;- lengths(st_intersects(mpsz3414, preschool3414))\n\n\nsummary(mpsz3414$`PreSch Count`)\n\n   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. \n   0.00    0.00    4.00    7.09   10.00   72.00 \n\n\n\ntop_n(mpsz3414, 1, `PreSch Count`)\n\nSimple feature collection with 1 feature and 16 fields\nGeometry type: MULTIPOLYGON\nDimension:     XY\nBounding box:  xmin: 39655.33 ymin: 35966 xmax: 42940.57 ymax: 38622.37\nProjected CRS: SVY21 / Singapore TM\n  OBJECTID SUBZONE_NO     SUBZONE_N SUBZONE_C CA_IND PLN_AREA_N PLN_AREA_C\n1      189          2 TAMPINES EAST    TMSZ02      N   TAMPINES         TM\n     REGION_N REGION_C          INC_CRC FMEL_UPD_D   X_ADDR   Y_ADDR SHAPE_Leng\n1 EAST REGION       ER 21658EAAF84F4D8D 2014-12-05 41122.55 37392.39   10180.62\n  SHAPE_Area                       geometry PreSch Count\n1    4339824 MULTIPOLYGON (((42196.76 38...           72\n\n\n\nmpsz3414$Area &lt;- mpsz3414 %&gt;%\n  st_area()\n\n\nmpsz3414 &lt;- mpsz3414 %&gt;%\n  mutate(`PreSch Density` = `PreSch Count`/Area * 1000000)\n\n\n\n\n\n\nhist(mpsz3414$`PreSch Density`)\n\n\n\n\n\nggplot(data=mpsz3414, \n       aes(x= as.numeric(`PreSch Density`)))+\n  geom_histogram(bins=20, \n                 color=\"black\", \n                 fill=\"light blue\") +\n  labs(title = \"Are pre-school even distributed in Singapore?\",\n       subtitle= \"There are many planning sub-zones with a single pre-school, on the other hand, \\nthere are two planning sub-zones with at least 20 pre-schools\",\n      x = \"Pre-school density (per km sq)\",\n      y = \"Frequency\")\n\n\n\n\n\nggplot(data=mpsz3414, \n       aes(y = `PreSch Count`, \n           x= as.numeric(`PreSch Density`)))+\n  geom_point(color=\"black\", \n             fill=\"light blue\") +\n  xlim(0, 40) +\n  ylim(0, 40) +\n  labs(title = \"\",\n      x = \"Pre-school density (per km sq)\",\n      y = \"Pre-school count\")"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#installing-and-loading-r-packages",
    "href": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#installing-and-loading-r-packages",
    "title": "Hands-on Exercise 1",
    "section": "",
    "text": "In this section, I will install and load tidyverse and sf packages\n\npacman::p_load(tidyverse, sf)"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#importing-a-geospatial-data-in-shapefile-format",
    "href": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#importing-a-geospatial-data-in-shapefile-format",
    "title": "Hands-on Exercise 1",
    "section": "",
    "text": "mpsz = st_read(dsn = \"data/geospatial\", \n                  layer = \"MP14_SUBZONE_WEB_PL\")\n\nReading layer `MP14_SUBZONE_WEB_PL' from data source \n  `C:\\EbenezerHo\\IS415-GAA\\Hands-on_Ex\\Hands-on_Ex01\\data\\geospatial' \n  using driver `ESRI Shapefile'\nSimple feature collection with 323 features and 15 fields\nGeometry type: MULTIPOLYGON\nDimension:     XY\nBounding box:  xmin: 2667.538 ymin: 15748.72 xmax: 56396.44 ymax: 50256.33\nProjected CRS: SVY21\n\n\n\ncyclingpath = st_read(dsn = \"data/geospatial\", \n                         layer = \"CyclingPathGazette\")\n\nReading layer `CyclingPathGazette' from data source \n  `C:\\EbenezerHo\\IS415-GAA\\Hands-on_Ex\\Hands-on_Ex01\\data\\geospatial' \n  using driver `ESRI Shapefile'\nSimple feature collection with 2558 features and 2 fields\nGeometry type: MULTILINESTRING\nDimension:     XY\nBounding box:  xmin: 11854.32 ymin: 28347.98 xmax: 42626.09 ymax: 48948.15\nProjected CRS: SVY21"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#importing-gis-data-in-kml-format",
    "href": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#importing-gis-data-in-kml-format",
    "title": "Hands-on Exercise 1",
    "section": "",
    "text": "preschool = st_read(\"data/geospatial/PreSchoolsLocation.kml\")\n\nReading layer `PRESCHOOLS_LOCATION' from data source \n  `C:\\EbenezerHo\\IS415-GAA\\Hands-on_Ex\\Hands-on_Ex01\\data\\geospatial\\PreSchoolsLocation.kml' \n  using driver `KML'\nSimple feature collection with 2290 features and 2 fields\nGeometry type: POINT\nDimension:     XYZ\nBounding box:  xmin: 103.6878 ymin: 1.247759 xmax: 103.9897 ymax: 1.462134\nz_range:       zmin: 0 zmax: 0\nGeodetic CRS:  WGS 84"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#checking-the-content-of-a-simple-feature-data-frame",
    "href": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#checking-the-content-of-a-simple-feature-data-frame",
    "title": "Hands-on Exercise 1",
    "section": "",
    "text": "st_geometry(mpsz)\n\nGeometry set for 323 features \nGeometry type: MULTIPOLYGON\nDimension:     XY\nBounding box:  xmin: 2667.538 ymin: 15748.72 xmax: 56396.44 ymax: 50256.33\nProjected CRS: SVY21\nFirst 5 geometries:\n\n\n\n\n\n\nglimpse(mpsz)\n\nRows: 323\nColumns: 16\n$ OBJECTID   &lt;int&gt; 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, …\n$ SUBZONE_NO &lt;int&gt; 1, 1, 3, 8, 3, 7, 9, 2, 13, 7, 12, 6, 1, 5, 1, 1, 3, 2, 2, …\n$ SUBZONE_N  &lt;chr&gt; \"MARINA SOUTH\", \"PEARL'S HILL\", \"BOAT QUAY\", \"HENDERSON HIL…\n$ SUBZONE_C  &lt;chr&gt; \"MSSZ01\", \"OTSZ01\", \"SRSZ03\", \"BMSZ08\", \"BMSZ03\", \"BMSZ07\",…\n$ CA_IND     &lt;chr&gt; \"Y\", \"Y\", \"Y\", \"N\", \"N\", \"N\", \"N\", \"Y\", \"N\", \"N\", \"N\", \"N\",…\n$ PLN_AREA_N &lt;chr&gt; \"MARINA SOUTH\", \"OUTRAM\", \"SINGAPORE RIVER\", \"BUKIT MERAH\",…\n$ PLN_AREA_C &lt;chr&gt; \"MS\", \"OT\", \"SR\", \"BM\", \"BM\", \"BM\", \"BM\", \"SR\", \"QT\", \"QT\",…\n$ REGION_N   &lt;chr&gt; \"CENTRAL REGION\", \"CENTRAL REGION\", \"CENTRAL REGION\", \"CENT…\n$ REGION_C   &lt;chr&gt; \"CR\", \"CR\", \"CR\", \"CR\", \"CR\", \"CR\", \"CR\", \"CR\", \"CR\", \"CR\",…\n$ INC_CRC    &lt;chr&gt; \"5ED7EB253F99252E\", \"8C7149B9EB32EEFC\", \"C35FEFF02B13E0E5\",…\n$ FMEL_UPD_D &lt;date&gt; 2014-12-05, 2014-12-05, 2014-12-05, 2014-12-05, 2014-12-05…\n$ X_ADDR     &lt;dbl&gt; 31595.84, 28679.06, 29654.96, 26782.83, 26201.96, 25358.82,…\n$ Y_ADDR     &lt;dbl&gt; 29220.19, 29782.05, 29974.66, 29933.77, 30005.70, 29991.38,…\n$ SHAPE_Leng &lt;dbl&gt; 5267.381, 3506.107, 1740.926, 3313.625, 2825.594, 4428.913,…\n$ SHAPE_Area &lt;dbl&gt; 1630379.27, 559816.25, 160807.50, 595428.89, 387429.44, 103…\n$ geometry   &lt;MULTIPOLYGON [m]&gt; MULTIPOLYGON (((31495.56 30..., MULTIPOLYGON (…\n\n\n\n\n\n\nhead(mpsz,n=5)\n\nSimple feature collection with 5 features and 15 fields\nGeometry type: MULTIPOLYGON\nDimension:     XY\nBounding box:  xmin: 25867.68 ymin: 28369.47 xmax: 32362.39 ymax: 30435.54\nProjected CRS: SVY21\n  OBJECTID SUBZONE_NO      SUBZONE_N SUBZONE_C CA_IND      PLN_AREA_N\n1        1          1   MARINA SOUTH    MSSZ01      Y    MARINA SOUTH\n2        2          1   PEARL'S HILL    OTSZ01      Y          OUTRAM\n3        3          3      BOAT QUAY    SRSZ03      Y SINGAPORE RIVER\n4        4          8 HENDERSON HILL    BMSZ08      N     BUKIT MERAH\n5        5          3        REDHILL    BMSZ03      N     BUKIT MERAH\n  PLN_AREA_C       REGION_N REGION_C          INC_CRC FMEL_UPD_D   X_ADDR\n1         MS CENTRAL REGION       CR 5ED7EB253F99252E 2014-12-05 31595.84\n2         OT CENTRAL REGION       CR 8C7149B9EB32EEFC 2014-12-05 28679.06\n3         SR CENTRAL REGION       CR C35FEFF02B13E0E5 2014-12-05 29654.96\n4         BM CENTRAL REGION       CR 3775D82C5DDBEFBD 2014-12-05 26782.83\n5         BM CENTRAL REGION       CR 85D9ABEF0A40678F 2014-12-05 26201.96\n    Y_ADDR SHAPE_Leng SHAPE_Area                       geometry\n1 29220.19   5267.381  1630379.3 MULTIPOLYGON (((31495.56 30...\n2 29782.05   3506.107   559816.2 MULTIPOLYGON (((29092.28 30...\n3 29974.66   1740.926   160807.5 MULTIPOLYGON (((29932.33 29...\n4 29933.77   3313.625   595428.9 MULTIPOLYGON (((27131.28 30...\n5 30005.70   2825.594   387429.4 MULTIPOLYGON (((26451.03 30..."
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#plotting-geospatial-data",
    "href": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#plotting-geospatial-data",
    "title": "Hands-on Exercise 1",
    "section": "",
    "text": "plot(mpsz)\n\n\n\n\n\nplot(st_geometry(mpsz))\n\n\n\n\n\nplot(mpsz[\"PLN_AREA_N\"])"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#working-with-projection",
    "href": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#working-with-projection",
    "title": "Hands-on Exercise 1",
    "section": "",
    "text": "st_crs(mpsz)\n\nCoordinate Reference System:\n  User input: SVY21 \n  wkt:\nPROJCRS[\"SVY21\",\n    BASEGEOGCRS[\"SVY21[WGS84]\",\n        DATUM[\"World Geodetic System 1984\",\n            ELLIPSOID[\"WGS 84\",6378137,298.257223563,\n                LENGTHUNIT[\"metre\",1]],\n            ID[\"EPSG\",6326]],\n        PRIMEM[\"Greenwich\",0,\n            ANGLEUNIT[\"Degree\",0.0174532925199433]]],\n    CONVERSION[\"unnamed\",\n        METHOD[\"Transverse Mercator\",\n            ID[\"EPSG\",9807]],\n        PARAMETER[\"Latitude of natural origin\",1.36666666666667,\n            ANGLEUNIT[\"Degree\",0.0174532925199433],\n            ID[\"EPSG\",8801]],\n        PARAMETER[\"Longitude of natural origin\",103.833333333333,\n            ANGLEUNIT[\"Degree\",0.0174532925199433],\n            ID[\"EPSG\",8802]],\n        PARAMETER[\"Scale factor at natural origin\",1,\n            SCALEUNIT[\"unity\",1],\n            ID[\"EPSG\",8805]],\n        PARAMETER[\"False easting\",28001.642,\n            LENGTHUNIT[\"metre\",1],\n            ID[\"EPSG\",8806]],\n        PARAMETER[\"False northing\",38744.572,\n            LENGTHUNIT[\"metre\",1],\n            ID[\"EPSG\",8807]]],\n    CS[Cartesian,2],\n        AXIS[\"(E)\",east,\n            ORDER[1],\n            LENGTHUNIT[\"metre\",1,\n                ID[\"EPSG\",9001]]],\n        AXIS[\"(N)\",north,\n            ORDER[2],\n            LENGTHUNIT[\"metre\",1,\n                ID[\"EPSG\",9001]]]]\n\n\n\nmpsz3414 &lt;- st_set_crs(mpsz, 3414)\n\n\nst_crs(mpsz3414)\n\nCoordinate Reference System:\n  User input: EPSG:3414 \n  wkt:\nPROJCRS[\"SVY21 / Singapore TM\",\n    BASEGEOGCRS[\"SVY21\",\n        DATUM[\"SVY21\",\n            ELLIPSOID[\"WGS 84\",6378137,298.257223563,\n                LENGTHUNIT[\"metre\",1]]],\n        PRIMEM[\"Greenwich\",0,\n            ANGLEUNIT[\"degree\",0.0174532925199433]],\n        ID[\"EPSG\",4757]],\n    CONVERSION[\"Singapore Transverse Mercator\",\n        METHOD[\"Transverse Mercator\",\n            ID[\"EPSG\",9807]],\n        PARAMETER[\"Latitude of natural origin\",1.36666666666667,\n            ANGLEUNIT[\"degree\",0.0174532925199433],\n            ID[\"EPSG\",8801]],\n        PARAMETER[\"Longitude of natural origin\",103.833333333333,\n            ANGLEUNIT[\"degree\",0.0174532925199433],\n            ID[\"EPSG\",8802]],\n        PARAMETER[\"Scale factor at natural origin\",1,\n            SCALEUNIT[\"unity\",1],\n            ID[\"EPSG\",8805]],\n        PARAMETER[\"False easting\",28001.642,\n            LENGTHUNIT[\"metre\",1],\n            ID[\"EPSG\",8806]],\n        PARAMETER[\"False northing\",38744.572,\n            LENGTHUNIT[\"metre\",1],\n            ID[\"EPSG\",8807]]],\n    CS[Cartesian,2],\n        AXIS[\"northing (N)\",north,\n            ORDER[1],\n            LENGTHUNIT[\"metre\",1]],\n        AXIS[\"easting (E)\",east,\n            ORDER[2],\n            LENGTHUNIT[\"metre\",1]],\n    USAGE[\n        SCOPE[\"Cadastre, engineering survey, topographic mapping.\"],\n        AREA[\"Singapore - onshore and offshore.\"],\n        BBOX[1.13,103.59,1.47,104.07]],\n    ID[\"EPSG\",3414]]\n\n\n\n\n\n\npreschool3414 &lt;- st_transform(preschool, \n                              crs = 3414)"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#importing-and-converting-an-aspatial-data",
    "href": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#importing-and-converting-an-aspatial-data",
    "title": "Hands-on Exercise 1",
    "section": "",
    "text": "listings &lt;- read_csv(\"data/aspatial/listings.csv\")\n\nlist(listings) \n\n[[1]]\n# A tibble: 3,457 × 18\n       id name      host_id host_name neighbourhood_group neighbourhood latitude\n    &lt;dbl&gt; &lt;chr&gt;       &lt;dbl&gt; &lt;chr&gt;     &lt;chr&gt;               &lt;chr&gt;            &lt;dbl&gt;\n 1  71609 Villa in…  367042 Belinda   East Region         Tampines          1.35\n 2  71896 Home in …  367042 Belinda   East Region         Tampines          1.35\n 3  71903 Home in …  367042 Belinda   East Region         Tampines          1.35\n 4 275343 Rental u… 1439258 Kay       Central Region      Bukit Merah       1.29\n 5 275344 Rental u… 1439258 Kay       Central Region      Bukit Merah       1.29\n 6 289234 Home in …  367042 Belinda   East Region         Tampines          1.34\n 7 294281 Rental u… 1521514 Elizabeth Central Region      Newton            1.31\n 8 324945 Rental u… 1439258 Kay       Central Region      Bukit Merah       1.29\n 9 330095 Rental u… 1439258 Kay       Central Region      Bukit Merah       1.29\n10 369141 Place to… 1521514 Elizabeth Central Region      Newton            1.31\n# ℹ 3,447 more rows\n# ℹ 11 more variables: longitude &lt;dbl&gt;, room_type &lt;chr&gt;, price &lt;dbl&gt;,\n#   minimum_nights &lt;dbl&gt;, number_of_reviews &lt;dbl&gt;, last_review &lt;date&gt;,\n#   reviews_per_month &lt;dbl&gt;, calculated_host_listings_count &lt;dbl&gt;,\n#   availability_365 &lt;dbl&gt;, number_of_reviews_ltm &lt;dbl&gt;, license &lt;chr&gt;\n\n\n\n\n\nlistings_sf &lt;- st_as_sf(listings, \n                       coords = c(\"longitude\", \"latitude\"),\n                       crs=4326) %&gt;%\n  st_transform(crs = 3414)\n\n\nglimpse(listings_sf)\n\nRows: 3,457\nColumns: 17\n$ id                             &lt;dbl&gt; 71609, 71896, 71903, 275343, 275344, 28…\n$ name                           &lt;chr&gt; \"Villa in Singapore · ★4.44 · 2 bedroom…\n$ host_id                        &lt;dbl&gt; 367042, 367042, 367042, 1439258, 143925…\n$ host_name                      &lt;chr&gt; \"Belinda\", \"Belinda\", \"Belinda\", \"Kay\",…\n$ neighbourhood_group            &lt;chr&gt; \"East Region\", \"East Region\", \"East Reg…\n$ neighbourhood                  &lt;chr&gt; \"Tampines\", \"Tampines\", \"Tampines\", \"Bu…\n$ room_type                      &lt;chr&gt; \"Private room\", \"Private room\", \"Privat…\n$ price                          &lt;dbl&gt; 150, 80, 80, 64, 78, 220, 85, 75, 69, 7…\n$ minimum_nights                 &lt;dbl&gt; 92, 92, 92, 60, 60, 92, 92, 60, 60, 92,…\n$ number_of_reviews              &lt;dbl&gt; 19, 24, 46, 20, 16, 12, 131, 17, 5, 81,…\n$ last_review                    &lt;date&gt; 2020-01-17, 2019-10-13, 2020-01-09, 20…\n$ reviews_per_month              &lt;dbl&gt; 0.13, 0.16, 0.30, 0.15, 0.11, 0.09, 0.9…\n$ calculated_host_listings_count &lt;dbl&gt; 5, 5, 5, 51, 51, 5, 7, 51, 51, 7, 7, 1,…\n$ availability_365               &lt;dbl&gt; 55, 91, 91, 183, 183, 54, 365, 183, 183…\n$ number_of_reviews_ltm          &lt;dbl&gt; 0, 0, 0, 0, 3, 0, 0, 1, 2, 0, 0, 0, 0, …\n$ license                        &lt;chr&gt; NA, NA, NA, \"S0399\", \"S0399\", NA, NA, \"…\n$ geometry                       &lt;POINT [m]&gt; POINT (41972.5 36390.05), POINT (…"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#geoprocessing-with-sf-package",
    "href": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#geoprocessing-with-sf-package",
    "title": "Hands-on Exercise 1",
    "section": "",
    "text": "buffer_cycling &lt;- st_buffer(cyclingpath, \n                               dist=5, nQuadSegs = 30)\n\n\nbuffer_cycling$AREA &lt;- st_area(buffer_cycling)\n\n\nsum(buffer_cycling$AREA)\n\n1774367 [m^2]\n\n\n\n\n\n\nmpsz3414$`PreSch Count`&lt;- lengths(st_intersects(mpsz3414, preschool3414))\n\n\nsummary(mpsz3414$`PreSch Count`)\n\n   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. \n   0.00    0.00    4.00    7.09   10.00   72.00 \n\n\n\ntop_n(mpsz3414, 1, `PreSch Count`)\n\nSimple feature collection with 1 feature and 16 fields\nGeometry type: MULTIPOLYGON\nDimension:     XY\nBounding box:  xmin: 39655.33 ymin: 35966 xmax: 42940.57 ymax: 38622.37\nProjected CRS: SVY21 / Singapore TM\n  OBJECTID SUBZONE_NO     SUBZONE_N SUBZONE_C CA_IND PLN_AREA_N PLN_AREA_C\n1      189          2 TAMPINES EAST    TMSZ02      N   TAMPINES         TM\n     REGION_N REGION_C          INC_CRC FMEL_UPD_D   X_ADDR   Y_ADDR SHAPE_Leng\n1 EAST REGION       ER 21658EAAF84F4D8D 2014-12-05 41122.55 37392.39   10180.62\n  SHAPE_Area                       geometry PreSch Count\n1    4339824 MULTIPOLYGON (((42196.76 38...           72\n\n\n\nmpsz3414$Area &lt;- mpsz3414 %&gt;%\n  st_area()\n\n\nmpsz3414 &lt;- mpsz3414 %&gt;%\n  mutate(`PreSch Density` = `PreSch Count`/Area * 1000000)"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#eda-lets-go",
    "href": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#eda-lets-go",
    "title": "Hands-on Exercise 1",
    "section": "",
    "text": "hist(mpsz3414$`PreSch Density`)\n\n\n\n\n\nggplot(data=mpsz3414, \n       aes(x= as.numeric(`PreSch Density`)))+\n  geom_histogram(bins=20, \n                 color=\"black\", \n                 fill=\"light blue\") +\n  labs(title = \"Are pre-school even distributed in Singapore?\",\n       subtitle= \"There are many planning sub-zones with a single pre-school, on the other hand, \\nthere are two planning sub-zones with at least 20 pre-schools\",\n      x = \"Pre-school density (per km sq)\",\n      y = \"Frequency\")\n\n\n\n\n\nggplot(data=mpsz3414, \n       aes(y = `PreSch Count`, \n           x= as.numeric(`PreSch Density`)))+\n  geom_point(color=\"black\", \n             fill=\"light blue\") +\n  xlim(0, 40) +\n  ylim(0, 40) +\n  labs(title = \"\",\n      x = \"Pre-school density (per km sq)\",\n      y = \"Pre-school count\")"
  },
  {
    "objectID": "about.html",
    "href": "about.html",
    "title": "About",
    "section": "",
    "text": "About this site\n\n1 + 1\n\n[1] 2"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex02/Hands-on_EX02.html",
    "href": "Hands-on_Ex/Hands-on_Ex02/Hands-on_EX02.html",
    "title": "IS415-GAA",
    "section": "",
    "text": "Hands on Exercise 02\nHello this is my hands on exercise 02 i try my best :3"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex02/Hands-on_EX02.html#getting-started",
    "href": "Hands-on_Ex/Hands-on_Ex02/Hands-on_EX02.html#getting-started",
    "title": "IS415-GAA",
    "section": "Getting started",
    "text": "Getting started\ninstall and load packages\n\npacman::p_load(sf, tmap, tidyverse)"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex02/Hands-on_EX02.html#importing-geospatial-data-to-r",
    "href": "Hands-on_Ex/Hands-on_Ex02/Hands-on_EX02.html#importing-geospatial-data-to-r",
    "title": "IS415-GAA",
    "section": "importing geospatial data to R",
    "text": "importing geospatial data to R\nExtracting SHAPEFILE data from the internet (take note shapefiles are in .shp)\n\nmpsz &lt;- st_read(dsn = \"data/geospatial\",layer = \"MP14_SUBZONE_WEB_PL\")\n\nReading layer `MP14_SUBZONE_WEB_PL' from data source \n  `C:\\EbenezerHo\\IS415-GAA\\Hands-on_Ex\\Hands-on_Ex02\\data\\geospatial' \n  using driver `ESRI Shapefile'\nSimple feature collection with 323 features and 15 fields\nGeometry type: MULTIPOLYGON\nDimension:     XY\nBounding box:  xmin: 2667.538 ymin: 15748.72 xmax: 56396.44 ymax: 50256.33\nProjected CRS: SVY21\n\n\nload to see mpsz\n\nmpsz\n\nSimple feature collection with 323 features and 15 fields\nGeometry type: MULTIPOLYGON\nDimension:     XY\nBounding box:  xmin: 2667.538 ymin: 15748.72 xmax: 56396.44 ymax: 50256.33\nProjected CRS: SVY21\nFirst 10 features:\n   OBJECTID SUBZONE_NO       SUBZONE_N SUBZONE_C CA_IND      PLN_AREA_N\n1         1          1    MARINA SOUTH    MSSZ01      Y    MARINA SOUTH\n2         2          1    PEARL'S HILL    OTSZ01      Y          OUTRAM\n3         3          3       BOAT QUAY    SRSZ03      Y SINGAPORE RIVER\n4         4          8  HENDERSON HILL    BMSZ08      N     BUKIT MERAH\n5         5          3         REDHILL    BMSZ03      N     BUKIT MERAH\n6         6          7  ALEXANDRA HILL    BMSZ07      N     BUKIT MERAH\n7         7          9   BUKIT HO SWEE    BMSZ09      N     BUKIT MERAH\n8         8          2     CLARKE QUAY    SRSZ02      Y SINGAPORE RIVER\n9         9         13 PASIR PANJANG 1    QTSZ13      N      QUEENSTOWN\n10       10          7       QUEENSWAY    QTSZ07      N      QUEENSTOWN\n   PLN_AREA_C       REGION_N REGION_C          INC_CRC FMEL_UPD_D   X_ADDR\n1          MS CENTRAL REGION       CR 5ED7EB253F99252E 2014-12-05 31595.84\n2          OT CENTRAL REGION       CR 8C7149B9EB32EEFC 2014-12-05 28679.06\n3          SR CENTRAL REGION       CR C35FEFF02B13E0E5 2014-12-05 29654.96\n4          BM CENTRAL REGION       CR 3775D82C5DDBEFBD 2014-12-05 26782.83\n5          BM CENTRAL REGION       CR 85D9ABEF0A40678F 2014-12-05 26201.96\n6          BM CENTRAL REGION       CR 9D286521EF5E3B59 2014-12-05 25358.82\n7          BM CENTRAL REGION       CR 7839A8577144EFE2 2014-12-05 27680.06\n8          SR CENTRAL REGION       CR 48661DC0FBA09F7A 2014-12-05 29253.21\n9          QT CENTRAL REGION       CR 1F721290C421BFAB 2014-12-05 22077.34\n10         QT CENTRAL REGION       CR 3580D2AFFBEE914C 2014-12-05 24168.31\n     Y_ADDR SHAPE_Leng SHAPE_Area                       geometry\n1  29220.19   5267.381  1630379.3 MULTIPOLYGON (((31495.56 30...\n2  29782.05   3506.107   559816.2 MULTIPOLYGON (((29092.28 30...\n3  29974.66   1740.926   160807.5 MULTIPOLYGON (((29932.33 29...\n4  29933.77   3313.625   595428.9 MULTIPOLYGON (((27131.28 30...\n5  30005.70   2825.594   387429.4 MULTIPOLYGON (((26451.03 30...\n6  29991.38   4428.913  1030378.8 MULTIPOLYGON (((25899.7 297...\n7  30230.86   3275.312   551732.0 MULTIPOLYGON (((27746.95 30...\n8  30222.86   2208.619   290184.7 MULTIPOLYGON (((29351.26 29...\n9  29893.78   6571.323  1084792.3 MULTIPOLYGON (((20996.49 30...\n10 30104.18   3454.239   631644.3 MULTIPOLYGON (((24472.11 29..."
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex02/Hands-on_EX02.html#importing-attribute-data-into-r",
    "href": "Hands-on_Ex/Hands-on_Ex02/Hands-on_EX02.html#importing-attribute-data-into-r",
    "title": "IS415-GAA",
    "section": "importing attribute data into r",
    "text": "importing attribute data into r\n\npopdata &lt;- read_csv(\"data/aspatial/respopagesextod2011to2020.csv\")\n\nRows: 984656 Columns: 7\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr (5): PA, SZ, AG, Sex, TOD\ndbl (2): Pop, Time\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message."
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex02/Hands-on_EX02.html#data-preparation",
    "href": "Hands-on_Ex/Hands-on_Ex02/Hands-on_EX02.html#data-preparation",
    "title": "IS415-GAA",
    "section": "data preparation",
    "text": "data preparation\ndata wrangling\n\npopdata2020 &lt;- popdata %&gt;%\n  filter(Time == 2020) %&gt;%\n  group_by(PA, SZ, AG) %&gt;%\n  summarise(`POP` = sum(`Pop`)) %&gt;%\n  ungroup()%&gt;%\n  pivot_wider(names_from=AG, \n              values_from=POP) %&gt;%\n  mutate(YOUNG = rowSums(.[3:6])\n         +rowSums(.[12])) %&gt;%\nmutate(`ECONOMY ACTIVE` = rowSums(.[7:11])+\nrowSums(.[13:15]))%&gt;%\nmutate(`AGED`=rowSums(.[16:21])) %&gt;%\nmutate(`TOTAL`=rowSums(.[3:21])) %&gt;%  \nmutate(`DEPENDENCY` = (`YOUNG` + `AGED`)\n/`ECONOMY ACTIVE`) %&gt;%\n  select(`PA`, `SZ`, `YOUNG`, \n       `ECONOMY ACTIVE`, `AGED`, \n       `TOTAL`, `DEPENDENCY`)\n\n`summarise()` has grouped output by 'PA', 'SZ'. You can override using the\n`.groups` argument.\n\n\njoin the attribute data and geospatial data\n\npopdata2020 &lt;- popdata2020 %&gt;%\n  mutate_at(.vars = vars(PA, SZ), \n          .funs = list(toupper)) %&gt;%\n  filter(`ECONOMY ACTIVE` &gt; 0)\n\nNext, left_join() of dplyr is used to join the geographical data and attribute table using planning subzone name e.g. SUBZONE_N and SZ as the common identifier.\n\nmpsz_pop2020 &lt;- left_join(mpsz, popdata2020,\n                          by = c(\"SUBZONE_N\" = \"SZ\"))\n\nThing to learn from the code chunk above:\nleft_join() of dplyr package is used with mpsz simple feature data frame as the left data table is to ensure that the output will be a simple features data frame.\nsave the object into rds file\n\nwrite_rds(mpsz_pop2020, \"data/rds/mpsz_pop2020.rds\")"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex02/Hands-on_EX02.html#choropleth-mapping-geospatial-data-using-tmap",
    "href": "Hands-on_Ex/Hands-on_Ex02/Hands-on_EX02.html#choropleth-mapping-geospatial-data-using-tmap",
    "title": "IS415-GAA",
    "section": "Choropleth Mapping Geospatial Data Using tmap",
    "text": "Choropleth Mapping Geospatial Data Using tmap\nplot quickly using qtm()\n\ntmap_mode(\"plot\")\n\ntmap mode set to plotting\n\nqtm(mpsz_pop2020, \n    fill = \"DEPENDENCY\")\n\n\n\n\nThings to learn from the code chunk above:\ntmap_mode() with “plot” option is used to produce a static map. For interactive mode, “view” option should be used. fill argument is used to map the attribute (i.e. DEPENDENCY)\nCreating a choropleth map by using tmap’s elements\n\ntm_shape(mpsz_pop2020)+\n  tm_fill(\"DEPENDENCY\", \n          style = \"quantile\", \n          palette = \"Blues\",\n          title = \"Dependency ratio\") +\n  tm_layout(main.title = \"Distribution of Dependency Ratio by planning subzone\",\n            main.title.position = \"center\",\n            main.title.size = 1.2,\n            legend.height = 0.45, \n            legend.width = 0.35,\n            frame = TRUE) +\n  tm_borders(alpha = 0.5) +\n  tm_compass(type=\"8star\", size = 2) +\n  tm_scale_bar() +\n  tm_grid(alpha =0.2) +\n  tm_credits(\"Source: Planning Sub-zone boundary from Urban Redevelopment Authorithy (URA)\\n and Population data from Department of Statistics DOS\", \n             position = c(\"left\", \"bottom\"))\n\n\n\n\ndrawing base map\n\ntm_shape(mpsz_pop2020) +\n  tm_polygons()\n\n\n\n\nDrawing a choropleth map using tm_polygons()\n\ntm_shape(mpsz_pop2020)+\n  tm_polygons(\"DEPENDENCY\")\n\n\n\n\nDrawing a choropleth map using tm_fill() and *tm_border()**\n\ntm_shape(mpsz_pop2020)+\n  tm_fill(\"DEPENDENCY\")\n\n\n\n\nadd boundary of planning subzones\n\ntm_shape(mpsz_pop2020)+\n  tm_fill(\"DEPENDENCY\") +\n  tm_borders(lwd = 0.1,  alpha = 1)"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex02/Hands-on_EX02.html#data-classification-methods-of-tmap",
    "href": "Hands-on_Ex/Hands-on_Ex02/Hands-on_EX02.html#data-classification-methods-of-tmap",
    "title": "IS415-GAA",
    "section": "Data classification methods of tmap",
    "text": "Data classification methods of tmap\nusing quantile method\n\ntm_shape(mpsz_pop2020)+\n  tm_fill(\"DEPENDENCY\",\n          n = 5,\n          style = \"quantile\") +\n  tm_borders(alpha = 0.5)\n\n\n\n\nusing equal data method\n\ntm_shape(mpsz_pop2020)+\n  tm_fill(\"DEPENDENCY\",\n          n = 5,\n          style = \"equal\") +\n  tm_borders(alpha = 0.5)\n\n\n\n\nDIY: Using what you had learned, prepare choropleth maps by using different classification methods supported by tmap and compare their differences.\nusing quantile method with quantile instead of jenks\n\ntm_shape(mpsz_pop2020)+\n  tm_fill(\"DEPENDENCY\",\n          n = 5,\n          style = \"quantile\") +\n  tm_borders(alpha = 0.5)\n\n\n\n\nusing natural breaks method without style and declaring n to allow tmap to decide the number of classes\n\ntm_shape(mpsz_pop2020)+\n  tm_fill(\"DEPENDENCY\",\n          ) +\n  tm_borders(alpha = 0.5)\n\n\n\n\nusing standard deviation method\n\ntm_shape(mpsz_pop2020)+\n  tm_fill(\"DEPENDENCY\",\n          n = 5,\n          style = \"sd\") +\n  tm_borders(alpha = 0.5)\n\n\n\n\nDIY: Preparing choropleth maps by using similar classification method but with different numbers of classes (i.e. 2, 6, 10, 20). Compare the output maps, what observation can you draw?\nSince jenks method seems to provide the best distribution amongst the other data classification methods, we will use it for the rest of the exercise.\nWith 2 classes\n\ntm_shape(mpsz_pop2020)+\n  tm_fill(\"DEPENDENCY\",\n          n = 2,\n          style = \"jenks\") +\n  tm_borders(alpha = 0.5)\n\n\n\n\nWith 6 classes\n\ntm_shape(mpsz_pop2020)+\n  tm_fill(\"DEPENDENCY\",\n          n = 6,\n          style = \"jenks\") +\n  tm_borders(alpha = 0.5)\n\n\n\n\nWith 10 classes\n\ntm_shape(mpsz_pop2020)+\n  tm_fill(\"DEPENDENCY\",\n          n = 10,\n          style = \"jenks\") +\n  tm_borders(alpha = 0.5)\n\n\n\n\nWith 20 classes\n\ntm_shape(mpsz_pop2020)+\n  tm_fill(\"DEPENDENCY\",\n          n = 20,\n          style = \"jenks\") +\n  tm_borders(alpha = 0.5)\n\n\n\n\n\n\n\nObservation\n\n\n\nThe more classes we have, the more detailed the map is. However, the more classes we have, the more difficult it is to interpret the map. Out of the 4 options, 6 & 10 classes seems to be the best option as it provides a good balance between the level of detail and ease of interpretation. However, 10 gives a more distinctive split between the classes."
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex02/Hands-on_EX02.html#plotting-choropleth-map-with-custome-break",
    "href": "Hands-on_Ex/Hands-on_Ex02/Hands-on_EX02.html#plotting-choropleth-map-with-custome-break",
    "title": "IS415-GAA",
    "section": "Plotting choropleth map with custome break",
    "text": "Plotting choropleth map with custome break\n\nsummary(mpsz_pop2020$DEPENDENCY)\n\n   Min. 1st Qu.  Median    Mean 3rd Qu.    Max.    NA's \n 0.1111  0.7147  0.7866  0.8585  0.8763 19.0000      92 \n\n\n\ntm_shape(mpsz_pop2020)+\n  tm_fill(\"DEPENDENCY\",\n          breaks = c(0, 0.60, 0.70, 0.80, 0.90, 1.00)) +\n  tm_borders(alpha = 0.5)\n\nWarning: Values have found that are higher than the highest break"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex02/Hands-on_EX02.html#colour-scheme",
    "href": "Hands-on_Ex/Hands-on_Ex02/Hands-on_EX02.html#colour-scheme",
    "title": "IS415-GAA",
    "section": "Colour scheme",
    "text": "Colour scheme\nwith colorbrewer\n\ntm_shape(mpsz_pop2020)+\n  tm_fill(\"DEPENDENCY\",\n          n = 6,\n          style = \"quantile\",\n          palette = \"Blues\") +\n  tm_borders(alpha = 0.5)\n\n\n\n\nreverse\n\ntm_shape(mpsz_pop2020)+\n  tm_fill(\"DEPENDENCY\",\n          style = \"quantile\",\n          palette = \"-Greens\") +\n  tm_borders(alpha = 0.5)"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex02/Hands-on_EX02.html#map-layouts",
    "href": "Hands-on_Ex/Hands-on_Ex02/Hands-on_EX02.html#map-layouts",
    "title": "IS415-GAA",
    "section": "Map layouts",
    "text": "Map layouts\nmap legends\n\ntm_shape(mpsz_pop2020)+\n  tm_fill(\"DEPENDENCY\", \n          style = \"jenks\", \n          palette = \"Blues\", \n          legend.hist = TRUE, \n          legend.is.portrait = TRUE,\n          legend.hist.z = 0.1) +\n  tm_layout(main.title = \"Distribution of Dependency Ratio by planning subzone \\n(Jenks classification)\",\n            main.title.position = \"center\",\n            main.title.size = 1,\n            legend.height = 0.45, \n            legend.width = 0.35,\n            legend.outside = FALSE,\n            legend.position = c(\"right\", \"bottom\"),\n            frame = FALSE) +\n  tm_borders(alpha = 0.5)\n\n\n\n\nmap styles\n\ntm_shape(mpsz_pop2020)+\n  tm_fill(\"DEPENDENCY\", \n          style = \"quantile\", \n          palette = \"-Greens\") +\n  tm_borders(alpha = 0.5) +\n  tmap_style(\"classic\")\n\ntmap style set to \"classic\"\n\n\nother available styles are: \"white\", \"gray\", \"natural\", \"cobalt\", \"col_blind\", \"albatross\", \"beaver\", \"bw\", \"watercolor\" \n\n\n\n\n\nCartographic Furniture\n\ntm_shape(mpsz_pop2020)+\n  tm_fill(\"DEPENDENCY\", \n          style = \"quantile\", \n          palette = \"Blues\",\n          title = \"No. of persons\") +\n  tm_layout(main.title = \"Distribution of Dependency Ratio \\nby planning subzone\",\n            main.title.position = \"center\",\n            main.title.size = 1.2,\n            legend.height = 0.45, \n            legend.width = 0.35,\n            frame = TRUE) +\n  tm_borders(alpha = 0.5) +\n  tm_compass(type=\"8star\", size = 2) +\n  tm_scale_bar(width = 0.15) +\n  tm_grid(lwd = 0.1, alpha = 0.2) +\n  tm_credits(\"Source: Planning Sub-zone boundary from Urban Redevelopment Authorithy (URA)\\n and Population data from Department of Statistics DOS\", \n             position = c(\"left\", \"bottom\"))\n\n\n\n\nreset default style\n\ntmap_style(\"white\")\n\ntmap style set to \"white\"\n\n\nother available styles are: \"gray\", \"natural\", \"cobalt\", \"col_blind\", \"albatross\", \"beaver\", \"bw\", \"classic\", \"watercolor\""
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex02/Hands-on_EX02.html#drawing-small-multiple-chrolopleth-map",
    "href": "Hands-on_Ex/Hands-on_Ex02/Hands-on_EX02.html#drawing-small-multiple-chrolopleth-map",
    "title": "IS415-GAA",
    "section": "drawing small multiple chrolopleth map",
    "text": "drawing small multiple chrolopleth map\n\ntm_shape(mpsz_pop2020)+\n  tm_fill(c(\"YOUNG\", \"AGED\"),\n          style = \"equal\", \n          palette = \"Blues\") +\n  tm_layout(legend.position = c(\"right\", \"bottom\")) +\n  tm_borders(alpha = 0.5) +\n  tmap_style(\"white\")\n\ntmap style set to \"white\"\n\n\nother available styles are: \"gray\", \"natural\", \"cobalt\", \"col_blind\", \"albatross\", \"beaver\", \"bw\", \"classic\", \"watercolor\" \n\n\n\n\n\nIn this example, small multiple choropleth maps are created by assigning multiple values to at least one of the aesthetic arguments\n\ntm_shape(mpsz_pop2020)+ \n  tm_polygons(c(\"DEPENDENCY\",\"AGED\"),\n          style = c(\"equal\", \"quantile\"), \n          palette = list(\"Blues\",\"Greens\")) +\n  tm_layout(legend.position = c(\"right\", \"bottom\"))\n\n\n\n\nBy defining a group-by variable in tm_facets()\n\ntm_shape(mpsz_pop2020) +\n  tm_fill(\"DEPENDENCY\",\n          style = \"quantile\",\n          palette = \"Blues\",\n          thres.poly = 0) + \n  tm_facets(by=\"REGION_N\", \n            free.coords=TRUE, \n            drop.shapes=TRUE) +\n  tm_layout(legend.show = FALSE,\n            title.position = c(\"center\", \"center\"), \n            title.size = 20) +\n  tm_borders(alpha = 0.5)\n\nWarning: The argument drop.shapes has been renamed to drop.units, and is\ntherefore deprecated\n\n\n\n\n\nmultiple stand alone maps\n\nyoungmap &lt;- tm_shape(mpsz_pop2020)+ \n  tm_polygons(\"YOUNG\", \n              style = \"quantile\", \n              palette = \"Blues\")\n\nagedmap &lt;- tm_shape(mpsz_pop2020)+ \n  tm_polygons(\"AGED\", \n              style = \"quantile\", \n              palette = \"Blues\")\n\ntmap_arrange(youngmap, agedmap, asp=1, ncol=2)\n\n\n\n\nMappping Spatial Object Meeting a Selection Criterion\n\ntm_shape(mpsz_pop2020[mpsz_pop2020$REGION_N==\"CENTRAL REGION\", ])+\n  tm_fill(\"DEPENDENCY\", \n          style = \"quantile\", \n          palette = \"Blues\", \n          legend.hist = TRUE, \n          legend.is.portrait = TRUE,\n          legend.hist.z = 0.1) +\n  tm_layout(legend.outside = TRUE,\n            legend.height = 0.45, \n            legend.width = 5.0,\n            legend.position = c(\"right\", \"bottom\"),\n            frame = FALSE) +\n  tm_borders(alpha = 0.5)\n\nWarning in pre_process_gt(x, interactive = interactive, orig_crs =\ngm$shape.orig_crs): legend.width controls the width of the legend within a map.\nPlease use legend.outside.size to control the width of the outside legend"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex03/Hands-on_Ex03-part2.html",
    "href": "Hands-on_Ex/Hands-on_Ex03/Hands-on_Ex03-part2.html",
    "title": "In class Exercise 03",
    "section": "",
    "text": "pacman::p_load(maptools, sf, raster, spatstat, tmap, tidyverse)\n\n\nchildcare_sf &lt;- read_rds(\"data/rds/childcare_sf.rds\") \nmpsz_sf &lt;- read_rds(\"data/rds/mpsz_sf.rds\") \nsg_sf &lt;- read_rds(\"data/rds/sg_sf.rds\") \n\n\nst_crs(mpsz_sf)\n\nCoordinate Reference System:\n  User input: SVY21 \n  wkt:\nPROJCRS[\"SVY21\",\n    BASEGEOGCRS[\"SVY21[WGS84]\",\n        DATUM[\"World Geodetic System 1984\",\n            ELLIPSOID[\"WGS 84\",6378137,298.257223563,\n                LENGTHUNIT[\"metre\",1]],\n            ID[\"EPSG\",6326]],\n        PRIMEM[\"Greenwich\",0,\n            ANGLEUNIT[\"Degree\",0.0174532925199433]]],\n    CONVERSION[\"unnamed\",\n        METHOD[\"Transverse Mercator\",\n            ID[\"EPSG\",9807]],\n        PARAMETER[\"Latitude of natural origin\",1.36666666666667,\n            ANGLEUNIT[\"Degree\",0.0174532925199433],\n            ID[\"EPSG\",8801]],\n        PARAMETER[\"Longitude of natural origin\",103.833333333333,\n            ANGLEUNIT[\"Degree\",0.0174532925199433],\n            ID[\"EPSG\",8802]],\n        PARAMETER[\"Scale factor at natural origin\",1,\n            SCALEUNIT[\"unity\",1],\n            ID[\"EPSG\",8805]],\n        PARAMETER[\"False easting\",28001.642,\n            LENGTHUNIT[\"metre\",1],\n            ID[\"EPSG\",8806]],\n        PARAMETER[\"False northing\",38744.572,\n            LENGTHUNIT[\"metre\",1],\n            ID[\"EPSG\",8807]]],\n    CS[Cartesian,2],\n        AXIS[\"(E)\",east,\n            ORDER[1],\n            LENGTHUNIT[\"metre\",1,\n                ID[\"EPSG\",9001]]],\n        AXIS[\"(N)\",north,\n            ORDER[2],\n            LENGTHUNIT[\"metre\",1,\n                ID[\"EPSG\",9001]]]]\n\n\n\n\n\n\nmpsz_sf &lt;- st_transform(mpsz_sf, 3414)\n\nchecking\n\nst_crs(mpsz_sf)\n\nCoordinate Reference System:\n  User input: EPSG:3414 \n  wkt:\nPROJCRS[\"SVY21 / Singapore TM\",\n    BASEGEOGCRS[\"SVY21\",\n        DATUM[\"SVY21\",\n            ELLIPSOID[\"WGS 84\",6378137,298.257223563,\n                LENGTHUNIT[\"metre\",1]]],\n        PRIMEM[\"Greenwich\",0,\n            ANGLEUNIT[\"degree\",0.0174532925199433]],\n        ID[\"EPSG\",4757]],\n    CONVERSION[\"Singapore Transverse Mercator\",\n        METHOD[\"Transverse Mercator\",\n            ID[\"EPSG\",9807]],\n        PARAMETER[\"Latitude of natural origin\",1.36666666666667,\n            ANGLEUNIT[\"degree\",0.0174532925199433],\n            ID[\"EPSG\",8801]],\n        PARAMETER[\"Longitude of natural origin\",103.833333333333,\n            ANGLEUNIT[\"degree\",0.0174532925199433],\n            ID[\"EPSG\",8802]],\n        PARAMETER[\"Scale factor at natural origin\",1,\n            SCALEUNIT[\"unity\",1],\n            ID[\"EPSG\",8805]],\n        PARAMETER[\"False easting\",28001.642,\n            LENGTHUNIT[\"metre\",1],\n            ID[\"EPSG\",8806]],\n        PARAMETER[\"False northing\",38744.572,\n            LENGTHUNIT[\"metre\",1],\n            ID[\"EPSG\",8807]]],\n    CS[Cartesian,2],\n        AXIS[\"northing (N)\",north,\n            ORDER[1],\n            LENGTHUNIT[\"metre\",1]],\n        AXIS[\"easting (E)\",east,\n            ORDER[2],\n            LENGTHUNIT[\"metre\",1]],\n    USAGE[\n        SCOPE[\"Cadastre, engineering survey, topographic mapping.\"],\n        AREA[\"Singapore - onshore and offshore.\"],\n        BBOX[1.13,103.59,1.47,104.07]],\n    ID[\"EPSG\",3414]]\n\n\nchecking sg_sf\n\nst_crs(sg_sf)\n\nCoordinate Reference System:\n  User input: EPSG:3414 \n  wkt:\nPROJCRS[\"SVY21 / Singapore TM\",\n    BASEGEOGCRS[\"SVY21\",\n        DATUM[\"SVY21\",\n            ELLIPSOID[\"WGS 84\",6378137,298.257223563,\n                LENGTHUNIT[\"metre\",1]]],\n        PRIMEM[\"Greenwich\",0,\n            ANGLEUNIT[\"degree\",0.0174532925199433]],\n        ID[\"EPSG\",4757]],\n    CONVERSION[\"Singapore Transverse Mercator\",\n        METHOD[\"Transverse Mercator\",\n            ID[\"EPSG\",9807]],\n        PARAMETER[\"Latitude of natural origin\",1.36666666666667,\n            ANGLEUNIT[\"degree\",0.0174532925199433],\n            ID[\"EPSG\",8801]],\n        PARAMETER[\"Longitude of natural origin\",103.833333333333,\n            ANGLEUNIT[\"degree\",0.0174532925199433],\n            ID[\"EPSG\",8802]],\n        PARAMETER[\"Scale factor at natural origin\",1,\n            SCALEUNIT[\"unity\",1],\n            ID[\"EPSG\",8805]],\n        PARAMETER[\"False easting\",28001.642,\n            LENGTHUNIT[\"metre\",1],\n            ID[\"EPSG\",8806]],\n        PARAMETER[\"False northing\",38744.572,\n            LENGTHUNIT[\"metre\",1],\n            ID[\"EPSG\",8807]]],\n    CS[Cartesian,2],\n        AXIS[\"northing (N)\",north,\n            ORDER[1],\n            LENGTHUNIT[\"metre\",1]],\n        AXIS[\"easting (E)\",east,\n            ORDER[2],\n            LENGTHUNIT[\"metre\",1]],\n    USAGE[\n        SCOPE[\"Cadastre, engineering survey, topographic mapping.\"],\n        AREA[\"Singapore - onshore and offshore.\"],\n        BBOX[1.13,103.59,1.47,104.07]],\n    ID[\"EPSG\",3414]]\n\n\n\n\n\n\ntm_shape(mpsz_sf)+\n  tm_polygons()+\n  tm_shape(childcare_sf)+\n  tm_dots()"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex03/Hands-on_Ex03-part2.html#import-data-and-load-packages",
    "href": "Hands-on_Ex/Hands-on_Ex03/Hands-on_Ex03-part2.html#import-data-and-load-packages",
    "title": "In class Exercise 03",
    "section": "",
    "text": "pacman::p_load(maptools, sf, raster, spatstat, tmap, tidyverse)\n\n\nchildcare_sf &lt;- read_rds(\"data/rds/childcare_sf.rds\") \nmpsz_sf &lt;- read_rds(\"data/rds/mpsz_sf.rds\") \nsg_sf &lt;- read_rds(\"data/rds/sg_sf.rds\") \n\n\nst_crs(mpsz_sf)\n\nCoordinate Reference System:\n  User input: SVY21 \n  wkt:\nPROJCRS[\"SVY21\",\n    BASEGEOGCRS[\"SVY21[WGS84]\",\n        DATUM[\"World Geodetic System 1984\",\n            ELLIPSOID[\"WGS 84\",6378137,298.257223563,\n                LENGTHUNIT[\"metre\",1]],\n            ID[\"EPSG\",6326]],\n        PRIMEM[\"Greenwich\",0,\n            ANGLEUNIT[\"Degree\",0.0174532925199433]]],\n    CONVERSION[\"unnamed\",\n        METHOD[\"Transverse Mercator\",\n            ID[\"EPSG\",9807]],\n        PARAMETER[\"Latitude of natural origin\",1.36666666666667,\n            ANGLEUNIT[\"Degree\",0.0174532925199433],\n            ID[\"EPSG\",8801]],\n        PARAMETER[\"Longitude of natural origin\",103.833333333333,\n            ANGLEUNIT[\"Degree\",0.0174532925199433],\n            ID[\"EPSG\",8802]],\n        PARAMETER[\"Scale factor at natural origin\",1,\n            SCALEUNIT[\"unity\",1],\n            ID[\"EPSG\",8805]],\n        PARAMETER[\"False easting\",28001.642,\n            LENGTHUNIT[\"metre\",1],\n            ID[\"EPSG\",8806]],\n        PARAMETER[\"False northing\",38744.572,\n            LENGTHUNIT[\"metre\",1],\n            ID[\"EPSG\",8807]]],\n    CS[Cartesian,2],\n        AXIS[\"(E)\",east,\n            ORDER[1],\n            LENGTHUNIT[\"metre\",1,\n                ID[\"EPSG\",9001]]],\n        AXIS[\"(N)\",north,\n            ORDER[2],\n            LENGTHUNIT[\"metre\",1,\n                ID[\"EPSG\",9001]]]]"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex03/Hands-on_Ex03-part2.html#changing-mpsz_sf-to-3414",
    "href": "Hands-on_Ex/Hands-on_Ex03/Hands-on_Ex03-part2.html#changing-mpsz_sf-to-3414",
    "title": "In class Exercise 03",
    "section": "",
    "text": "mpsz_sf &lt;- st_transform(mpsz_sf, 3414)\n\nchecking\n\nst_crs(mpsz_sf)\n\nCoordinate Reference System:\n  User input: EPSG:3414 \n  wkt:\nPROJCRS[\"SVY21 / Singapore TM\",\n    BASEGEOGCRS[\"SVY21\",\n        DATUM[\"SVY21\",\n            ELLIPSOID[\"WGS 84\",6378137,298.257223563,\n                LENGTHUNIT[\"metre\",1]]],\n        PRIMEM[\"Greenwich\",0,\n            ANGLEUNIT[\"degree\",0.0174532925199433]],\n        ID[\"EPSG\",4757]],\n    CONVERSION[\"Singapore Transverse Mercator\",\n        METHOD[\"Transverse Mercator\",\n            ID[\"EPSG\",9807]],\n        PARAMETER[\"Latitude of natural origin\",1.36666666666667,\n            ANGLEUNIT[\"degree\",0.0174532925199433],\n            ID[\"EPSG\",8801]],\n        PARAMETER[\"Longitude of natural origin\",103.833333333333,\n            ANGLEUNIT[\"degree\",0.0174532925199433],\n            ID[\"EPSG\",8802]],\n        PARAMETER[\"Scale factor at natural origin\",1,\n            SCALEUNIT[\"unity\",1],\n            ID[\"EPSG\",8805]],\n        PARAMETER[\"False easting\",28001.642,\n            LENGTHUNIT[\"metre\",1],\n            ID[\"EPSG\",8806]],\n        PARAMETER[\"False northing\",38744.572,\n            LENGTHUNIT[\"metre\",1],\n            ID[\"EPSG\",8807]]],\n    CS[Cartesian,2],\n        AXIS[\"northing (N)\",north,\n            ORDER[1],\n            LENGTHUNIT[\"metre\",1]],\n        AXIS[\"easting (E)\",east,\n            ORDER[2],\n            LENGTHUNIT[\"metre\",1]],\n    USAGE[\n        SCOPE[\"Cadastre, engineering survey, topographic mapping.\"],\n        AREA[\"Singapore - onshore and offshore.\"],\n        BBOX[1.13,103.59,1.47,104.07]],\n    ID[\"EPSG\",3414]]\n\n\nchecking sg_sf\n\nst_crs(sg_sf)\n\nCoordinate Reference System:\n  User input: EPSG:3414 \n  wkt:\nPROJCRS[\"SVY21 / Singapore TM\",\n    BASEGEOGCRS[\"SVY21\",\n        DATUM[\"SVY21\",\n            ELLIPSOID[\"WGS 84\",6378137,298.257223563,\n                LENGTHUNIT[\"metre\",1]]],\n        PRIMEM[\"Greenwich\",0,\n            ANGLEUNIT[\"degree\",0.0174532925199433]],\n        ID[\"EPSG\",4757]],\n    CONVERSION[\"Singapore Transverse Mercator\",\n        METHOD[\"Transverse Mercator\",\n            ID[\"EPSG\",9807]],\n        PARAMETER[\"Latitude of natural origin\",1.36666666666667,\n            ANGLEUNIT[\"degree\",0.0174532925199433],\n            ID[\"EPSG\",8801]],\n        PARAMETER[\"Longitude of natural origin\",103.833333333333,\n            ANGLEUNIT[\"degree\",0.0174532925199433],\n            ID[\"EPSG\",8802]],\n        PARAMETER[\"Scale factor at natural origin\",1,\n            SCALEUNIT[\"unity\",1],\n            ID[\"EPSG\",8805]],\n        PARAMETER[\"False easting\",28001.642,\n            LENGTHUNIT[\"metre\",1],\n            ID[\"EPSG\",8806]],\n        PARAMETER[\"False northing\",38744.572,\n            LENGTHUNIT[\"metre\",1],\n            ID[\"EPSG\",8807]]],\n    CS[Cartesian,2],\n        AXIS[\"northing (N)\",north,\n            ORDER[1],\n            LENGTHUNIT[\"metre\",1]],\n        AXIS[\"easting (E)\",east,\n            ORDER[2],\n            LENGTHUNIT[\"metre\",1]],\n    USAGE[\n        SCOPE[\"Cadastre, engineering survey, topographic mapping.\"],\n        AREA[\"Singapore - onshore and offshore.\"],\n        BBOX[1.13,103.59,1.47,104.07]],\n    ID[\"EPSG\",3414]]"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex03/Hands-on_Ex03-part2.html#mapping-geospatial-dataset",
    "href": "Hands-on_Ex/Hands-on_Ex03/Hands-on_Ex03-part2.html#mapping-geospatial-dataset",
    "title": "In class Exercise 03",
    "section": "",
    "text": "tm_shape(mpsz_sf)+\n  tm_polygons()+\n  tm_shape(childcare_sf)+\n  tm_dots()"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex03/Hands-on_Ex03-part2.html#converting-sf-data-frames-to-sps-spatial-class",
    "href": "Hands-on_Ex/Hands-on_Ex03/Hands-on_Ex03-part2.html#converting-sf-data-frames-to-sps-spatial-class",
    "title": "In class Exercise 03",
    "section": "Converting sf data frames to sp’s Spatial* class",
    "text": "Converting sf data frames to sp’s Spatial* class\n\nchildcare &lt;- as_Spatial(childcare_sf)\nmpsz &lt;- as_Spatial(mpsz_sf)\nsg &lt;- as_Spatial(sg_sf)"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex03/Hands-on_Ex03-part2.html#display-the-information-of-the-above-3-spatial-classes",
    "href": "Hands-on_Ex/Hands-on_Ex03/Hands-on_Ex03-part2.html#display-the-information-of-the-above-3-spatial-classes",
    "title": "In class Exercise 03",
    "section": "display the information of the above 3 spatial classes",
    "text": "display the information of the above 3 spatial classes\n\nchildcare\n\nclass       : SpatialPointsDataFrame \nfeatures    : 1925 \nextent      : 11810.03, 45404.24, 25596.33, 49300.88  (xmin, xmax, ymin, ymax)\ncrs         : +proj=tmerc +lat_0=1.36666666666667 +lon_0=103.833333333333 +k=1 +x_0=28001.642 +y_0=38744.572 +ellps=WGS84 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs \nvariables   : 2\nnames       :    Nameescription \nmin values  :   kml_1, &lt;center&gt;&lt;table&gt;&lt;tr&gt;&lt;th colspan='2' align='center'&gt;&lt;em&gt;Attributes&lt;/em&gt;&lt;/th&gt;&lt;/tr&gt;&lt;tr bgcolor=\"#E3E3F3\"&gt; &lt;th&gt;ADDRESSBLOCKHOUSENUMBER&lt;/th&gt; &lt;td&gt;&lt;/td&gt; &lt;/tr&gt;&lt;tr bgcolor=\"\"&gt; &lt;th&gt;ADDRESSBUILDINGNAME&lt;/th&gt; &lt;td&gt;&lt;/td&gt; &lt;/tr&gt;&lt;tr bgcolor=\"#E3E3F3\"&gt; &lt;th&gt;ADDRESSPOSTALCODE&lt;/th&gt; &lt;td&gt;100044&lt;/td&gt; &lt;/tr&gt;&lt;tr bgcolor=\"\"&gt; &lt;th&gt;ADDRESSSTREETNAME&lt;/th&gt; &lt;td&gt;44, TELOK BLANGAH DRIVE, #01 - 19/51, SINGAPORE 100044&lt;/td&gt; &lt;/tr&gt;&lt;tr bgcolor=\"#E3E3F3\"&gt; &lt;th&gt;ADDRESSTYPE&lt;/th&gt; &lt;td&gt;&lt;/td&gt; &lt;/tr&gt;&lt;tr bgcolor=\"\"&gt; &lt;th&gt;DESCRIPTION&lt;/th&gt; &lt;td&gt;Child Care Services&lt;/td&gt; &lt;/tr&gt;&lt;tr bgcolor=\"#E3E3F3\"&gt; &lt;th&gt;HYPERLINK&lt;/th&gt; &lt;td&gt;&lt;/td&gt; &lt;/tr&gt;&lt;tr bgcolor=\"\"&gt; &lt;th&gt;LANDXADDRESSPOINT&lt;/th&gt; &lt;td&gt;&lt;/td&gt; &lt;/tr&gt;&lt;tr bgcolor=\"#E3E3F3\"&gt; &lt;th&gt;LANDYADDRESSPOINT&lt;/th&gt; &lt;td&gt;&lt;/td&gt; &lt;/tr&gt;&lt;tr bgcolor=\"\"&gt; &lt;th&gt;NAME&lt;/th&gt; &lt;td&gt;PCF SPARKLETOTS PRESCHOOL @ TELOK BLANGAH BLK 44 (CC)&lt;/td&gt; &lt;/tr&gt;&lt;tr bgcolor=\"#E3E3F3\"&gt; &lt;th&gt;PHOTOURL&lt;/th&gt; &lt;td&gt;&lt;/td&gt; &lt;/tr&gt;&lt;tr bgcolor=\"\"&gt; &lt;th&gt;ADDRESSFLOORNUMBER&lt;/th&gt; &lt;td&gt;&lt;/td&gt; &lt;/tr&gt;&lt;tr bgcolor=\"#E3E3F3\"&gt; &lt;th&gt;INC_CRC&lt;/th&gt; &lt;td&gt;349C54F201805938&lt;/td&gt; &lt;/tr&gt;&lt;tr bgcolor=\"\"&gt; &lt;th&gt;FMEL_UPD_D&lt;/th&gt; &lt;td&gt;20211201093837&lt;/td&gt; &lt;/tr&gt;&lt;tr bgcolor=\"#E3E3F3\"&gt; &lt;th&gt;ADDRESSUNITNUMBER&lt;/th&gt; &lt;td&gt;&lt;/td&gt; &lt;/tr&gt;&lt;/table&gt;&lt;/center&gt; \nmax values  : kml_999,                                            &lt;center&gt;&lt;table&gt;&lt;tr&gt;&lt;th colspan='2' align='center'&gt;&lt;em&gt;Attributes&lt;/em&gt;&lt;/th&gt;&lt;/tr&gt;&lt;tr bgcolor=\"#E3E3F3\"&gt; &lt;th&gt;ADDRESSBLOCKHOUSENUMBER&lt;/th&gt; &lt;td&gt;&lt;/td&gt; &lt;/tr&gt;&lt;tr bgcolor=\"\"&gt; &lt;th&gt;ADDRESSBUILDINGNAME&lt;/th&gt; &lt;td&gt;&lt;/td&gt; &lt;/tr&gt;&lt;tr bgcolor=\"#E3E3F3\"&gt; &lt;th&gt;ADDRESSPOSTALCODE&lt;/th&gt; &lt;td&gt;99982&lt;/td&gt; &lt;/tr&gt;&lt;tr bgcolor=\"\"&gt; &lt;th&gt;ADDRESSSTREETNAME&lt;/th&gt; &lt;td&gt;35, ALLANBROOKE ROAD, SINGAPORE 099982&lt;/td&gt; &lt;/tr&gt;&lt;tr bgcolor=\"#E3E3F3\"&gt; &lt;th&gt;ADDRESSTYPE&lt;/th&gt; &lt;td&gt;&lt;/td&gt; &lt;/tr&gt;&lt;tr bgcolor=\"\"&gt; &lt;th&gt;DESCRIPTION&lt;/th&gt; &lt;td&gt;Child Care Services&lt;/td&gt; &lt;/tr&gt;&lt;tr bgcolor=\"#E3E3F3\"&gt; &lt;th&gt;HYPERLINK&lt;/th&gt; &lt;td&gt;&lt;/td&gt; &lt;/tr&gt;&lt;tr bgcolor=\"\"&gt; &lt;th&gt;LANDXADDRESSPOINT&lt;/th&gt; &lt;td&gt;&lt;/td&gt; &lt;/tr&gt;&lt;tr bgcolor=\"#E3E3F3\"&gt; &lt;th&gt;LANDYADDRESSPOINT&lt;/th&gt; &lt;td&gt;&lt;/td&gt; &lt;/tr&gt;&lt;tr bgcolor=\"\"&gt; &lt;th&gt;NAME&lt;/th&gt; &lt;td&gt;ISLANDER PRE-SCHOOL PTE LTD&lt;/td&gt; &lt;/tr&gt;&lt;tr bgcolor=\"#E3E3F3\"&gt; &lt;th&gt;PHOTOURL&lt;/th&gt; &lt;td&gt;&lt;/td&gt; &lt;/tr&gt;&lt;tr bgcolor=\"\"&gt; &lt;th&gt;ADDRESSFLOORNUMBER&lt;/th&gt; &lt;td&gt;&lt;/td&gt; &lt;/tr&gt;&lt;tr bgcolor=\"#E3E3F3\"&gt; &lt;th&gt;INC_CRC&lt;/th&gt; &lt;td&gt;4F63ACF93EFABE7F&lt;/td&gt; &lt;/tr&gt;&lt;tr bgcolor=\"\"&gt; &lt;th&gt;FMEL_UPD_D&lt;/th&gt; &lt;td&gt;20211201093837&lt;/td&gt; &lt;/tr&gt;&lt;tr bgcolor=\"#E3E3F3\"&gt; &lt;th&gt;ADDRESSUNITNUMBER&lt;/th&gt; &lt;td&gt;&lt;/td&gt; &lt;/tr&gt;&lt;/table&gt;&lt;/center&gt; \n\nmpsz\n\nclass       : SpatialPolygonsDataFrame \nfeatures    : 323 \nextent      : 2667.538, 56396.44, 15748.72, 50256.33  (xmin, xmax, ymin, ymax)\ncrs         : +proj=tmerc +lat_0=1.36666666666667 +lon_0=103.833333333333 +k=1 +x_0=28001.642 +y_0=38744.572 +ellps=WGS84 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs \nvariables   : 15\nnames       : OBJECTID, SUBZONE_NO, SUBZONE_N, SUBZONE_C, CA_IND, PLN_AREA_N, PLN_AREA_C,       REGION_N, REGION_C,          INC_CRC, FMEL_UPD_D,     X_ADDR,     Y_ADDR,    SHAPE_Leng,    SHAPE_Area \nmin values  :        1,          1, ADMIRALTY,    AMSZ01,      N, ANG MO KIO,         AM, CENTRAL REGION,       CR, 00F5E30B5C9B7AD8,      16409,  5092.8949,  19579.069, 871.554887798, 39437.9352703 \nmax values  :      323,         17,    YUNNAN,    YSSZ09,      Y,     YISHUN,         YS,    WEST REGION,       WR, FFCCF172717C2EAF,      16409, 50424.7923, 49552.7904, 68083.9364708,  69748298.792 \n\nsg\n\nclass       : SpatialPolygons \nfeatures    : 1 \nextent      : 2667.538, 56396.44, 15748.72, 50256.33  (xmin, xmax, ymin, ymax)\ncrs         : +proj=tmerc +lat_0=1.36666666666667 +lon_0=103.833333333333 +k=1 +x_0=28001.642 +y_0=38744.572 +ellps=WGS84 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex03/Hands-on_Ex03-part2.html#converting-the-spatial-class-into-generic-sp-format",
    "href": "Hands-on_Ex/Hands-on_Ex03/Hands-on_Ex03-part2.html#converting-the-spatial-class-into-generic-sp-format",
    "title": "In class Exercise 03",
    "section": "Converting the Spatial* class into generic sp format",
    "text": "Converting the Spatial* class into generic sp format\n\nchildcare_sp &lt;- as(childcare, \"SpatialPoints\")\nsg_sp &lt;- as(sg, \"SpatialPolygons\")\n\n\nchildcare_sp\n\nclass       : SpatialPoints \nfeatures    : 1925 \nextent      : 11810.03, 45404.24, 25596.33, 49300.88  (xmin, xmax, ymin, ymax)\ncrs         : +proj=tmerc +lat_0=1.36666666666667 +lon_0=103.833333333333 +k=1 +x_0=28001.642 +y_0=38744.572 +ellps=WGS84 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs \n\nsg_sp\n\nclass       : SpatialPolygons \nfeatures    : 1 \nextent      : 2667.538, 56396.44, 15748.72, 50256.33  (xmin, xmax, ymin, ymax)\ncrs         : +proj=tmerc +lat_0=1.36666666666667 +lon_0=103.833333333333 +k=1 +x_0=28001.642 +y_0=38744.572 +ellps=WGS84 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex03/Hands-on_Ex03-part2.html#converting-the-generic-sp-format-into-spatstats-ppp-format",
    "href": "Hands-on_Ex/Hands-on_Ex03/Hands-on_Ex03-part2.html#converting-the-generic-sp-format-into-spatstats-ppp-format",
    "title": "In class Exercise 03",
    "section": "Converting the generic sp format into spatstat’s ppp format",
    "text": "Converting the generic sp format into spatstat’s ppp format\n\nchildcare_ppp &lt;- as(childcare_sp, \"ppp\")\nchildcare_ppp\n\nPlanar point pattern: 1925 points\nwindow: rectangle = [11810.03, 45404.24] x [25596.33, 49300.88] units\n\n\n\nplot(childcare_ppp)\n\n\n\n\n\nremove duplicate\nsince we already know that in part 1, there are duplicates, we’ll skippdy skip\n\nchildcare_ppp_jit &lt;- rjitter(childcare_ppp, \n                             retry=TRUE, \n                             nsim=1, \n                             drop=TRUE)\n\n\nany(duplicated(childcare_ppp_jit))\n\n[1] FALSE"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex03/Hands-on_Ex03-part2.html#creating-owin",
    "href": "Hands-on_Ex/Hands-on_Ex03/Hands-on_Ex03-part2.html#creating-owin",
    "title": "In class Exercise 03",
    "section": "creating owin",
    "text": "creating owin\n\nsg_owin &lt;- as(sg_sp, \"owin\")\n\n\nplot(sg_owin)\n\n\n\n\n\nsummary(sg_owin)\n\nWindow: polygonal boundary\n80 separate polygons (35 holes)\n                  vertices         area relative.area\npolygon 1                4  9.47108e+01      1.21e-07\npolygon 2               37  1.29481e+04      1.66e-05\npolygon 3               30  4.28933e+03      5.49e-06\npolygon 4              145  9.61782e+05      1.23e-03\npolygon 5              227  1.10308e+06      1.41e-03\npolygon 6               19  3.09221e+04      3.95e-05\npolygon 7               10  6.60195e+03      8.44e-06\npolygon 8              234  2.08755e+06      2.67e-03\npolygon 9               22  6.74651e+03      8.63e-06\npolygon 10              71  5.63061e+03      7.20e-06\npolygon 11              10  1.99717e+02      2.55e-07\npolygon 12           14663  6.97996e+08      8.93e-01\npolygon 13 (hole)        3 -2.05920e-03     -2.63e-12\npolygon 14 (hole)        3 -2.89050e-05     -3.70e-14\npolygon 15 (hole)        3 -2.83151e-01     -3.62e-10\npolygon 16 (hole)        3 -3.99521e-02     -5.11e-11\npolygon 17 (hole)        3 -4.95057e-02     -6.33e-11\npolygon 18 (hole)        3 -3.65501e-03     -4.67e-12\npolygon 19 (hole)        4 -2.05611e-02     -2.63e-11\npolygon 20 (hole)        3 -1.68316e-04     -2.15e-13\npolygon 21 (hole)       26 -1.25665e+03     -1.61e-06\npolygon 22 (hole)        3 -2.18000e-06     -2.79e-15\npolygon 23 (hole)        3 -6.62377e-01     -8.47e-10\npolygon 24 (hole)        3 -2.09065e-03     -2.67e-12\npolygon 25 (hole)       36 -7.79904e+03     -9.97e-06\npolygon 26 (hole)        3 -8.83647e-03     -1.13e-11\npolygon 27 (hole)        3 -2.21090e+00     -2.83e-09\npolygon 28 (hole)       40 -6.00381e+03     -7.68e-06\npolygon 29 (hole)        7 -1.40545e-01     -1.80e-10\npolygon 30 (hole)       20 -4.39069e+00     -5.62e-09\npolygon 31 (hole)       28 -1.99862e+01     -2.56e-08\npolygon 32 (hole)       48 -1.38338e+02     -1.77e-07\npolygon 33 (hole)      351 -1.21433e+03     -1.55e-06\npolygon 34 (hole)       12 -8.36709e+01     -1.07e-07\npolygon 35 (hole)      317 -5.11280e+04     -6.54e-05\npolygon 36 (hole)       36 -4.01660e+04     -5.14e-05\npolygon 37              30  2.80002e+04      3.58e-05\npolygon 38              27  1.50315e+04      1.92e-05\npolygon 39              15  4.03300e+04      5.16e-05\npolygon 40            1045  4.44510e+06      5.68e-03\npolygon 41 (hole)       13 -3.91907e+02     -5.01e-07\npolygon 42              47  3.82087e+04      4.89e-05\npolygon 43              65  8.42861e+04      1.08e-04\npolygon 44             478  2.06120e+06      2.64e-03\npolygon 45             266  1.50631e+06      1.93e-03\npolygon 46             234  4.72886e+05      6.05e-04\npolygon 47              14  5.86546e+03      7.50e-06\npolygon 48              83  5.28920e+03      6.76e-06\npolygon 49              75  1.73526e+04      2.22e-05\npolygon 50             148  3.10395e+03      3.97e-06\npolygon 51             142  3.22293e+03      4.12e-06\npolygon 52              45  2.51218e+03      3.21e-06\npolygon 53              40  1.38607e+04      1.77e-05\npolygon 54              10  4.90942e+02      6.28e-07\npolygon 55              95  5.96187e+04      7.62e-05\npolygon 56 (hole)        4 -1.86410e-02     -2.38e-11\npolygon 57              64  3.43149e+04      4.39e-05\npolygon 58 (hole)        3 -1.98390e-03     -2.54e-12\npolygon 59 (hole)        3 -5.55856e-03     -7.11e-12\npolygon 60 (hole)        3 -5.12482e-03     -6.55e-12\npolygon 61 (hole)        3 -1.96410e-03     -2.51e-12\npolygon 62 (hole)        4 -1.13774e-02     -1.46e-11\npolygon 63             155  2.67502e+05      3.42e-04\npolygon 64             106  3.04104e+03      3.89e-06\npolygon 65            1027  1.27782e+06      1.63e-03\npolygon 66 (hole)        3 -3.23310e-04     -4.13e-13\npolygon 67 (hole)        3 -1.16959e-03     -1.50e-12\npolygon 68 (hole)        3 -1.46474e-03     -1.87e-12\npolygon 69             211  4.70521e+05      6.02e-04\npolygon 70               4  2.69313e+02      3.44e-07\npolygon 71             132  9.53357e+04      1.22e-04\npolygon 72               6  4.50259e+02      5.76e-07\npolygon 73             285  1.61128e+06      2.06e-03\npolygon 74              91  1.49663e+04      1.91e-05\npolygon 75              71  8.18750e+03      1.05e-05\npolygon 76             668  5.40368e+07      6.91e-02\npolygon 77              77  3.29939e+05      4.22e-04\npolygon 78             711  1.28815e+07      1.65e-02\npolygon 79 (hole)        3 -3.41405e-01     -4.37e-10\npolygon 80              44  2.26577e+03      2.90e-06\nenclosing rectangle: [2667.54, 56396.44] x [15748.72, 50256.33] units\n                     (53730 x 34510 units)\nWindow area = 781945000 square units\nFraction of frame area: 0.422"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex03/Hands-on_Ex03-part2.html#combining-point-events-object-and-owin-object",
    "href": "Hands-on_Ex/Hands-on_Ex03/Hands-on_Ex03-part2.html#combining-point-events-object-and-owin-object",
    "title": "In class Exercise 03",
    "section": "Combining point events object and owin object",
    "text": "Combining point events object and owin object\n\nchildcareSG_ppp = childcare_ppp[sg_owin]\n\n\nsummary(childcareSG_ppp)\n\nPlanar point pattern:  1925 points\nAverage intensity 2.461811e-06 points per square unit\n\n*Pattern contains duplicated points*\n\nCoordinates are given to 3 decimal places\ni.e. rounded to the nearest multiple of 0.001 units\n\nWindow: polygonal boundary\n80 separate polygons (35 holes)\n                  vertices         area relative.area\npolygon 1                4  9.47108e+01      1.21e-07\npolygon 2               37  1.29481e+04      1.66e-05\npolygon 3               30  4.28933e+03      5.49e-06\npolygon 4              145  9.61782e+05      1.23e-03\npolygon 5              227  1.10308e+06      1.41e-03\npolygon 6               19  3.09221e+04      3.95e-05\npolygon 7               10  6.60195e+03      8.44e-06\npolygon 8              234  2.08755e+06      2.67e-03\npolygon 9               22  6.74651e+03      8.63e-06\npolygon 10              71  5.63061e+03      7.20e-06\npolygon 11              10  1.99717e+02      2.55e-07\npolygon 12           14663  6.97996e+08      8.93e-01\npolygon 13 (hole)        3 -2.05920e-03     -2.63e-12\npolygon 14 (hole)        3 -2.89050e-05     -3.70e-14\npolygon 15 (hole)        3 -2.83151e-01     -3.62e-10\npolygon 16 (hole)        3 -3.99521e-02     -5.11e-11\npolygon 17 (hole)        3 -4.95057e-02     -6.33e-11\npolygon 18 (hole)        3 -3.65501e-03     -4.67e-12\npolygon 19 (hole)        4 -2.05611e-02     -2.63e-11\npolygon 20 (hole)        3 -1.68316e-04     -2.15e-13\npolygon 21 (hole)       26 -1.25665e+03     -1.61e-06\npolygon 22 (hole)        3 -2.18000e-06     -2.79e-15\npolygon 23 (hole)        3 -6.62377e-01     -8.47e-10\npolygon 24 (hole)        3 -2.09065e-03     -2.67e-12\npolygon 25 (hole)       36 -7.79904e+03     -9.97e-06\npolygon 26 (hole)        3 -8.83647e-03     -1.13e-11\npolygon 27 (hole)        3 -2.21090e+00     -2.83e-09\npolygon 28 (hole)       40 -6.00381e+03     -7.68e-06\npolygon 29 (hole)        7 -1.40545e-01     -1.80e-10\npolygon 30 (hole)       20 -4.39069e+00     -5.62e-09\npolygon 31 (hole)       28 -1.99862e+01     -2.56e-08\npolygon 32 (hole)       48 -1.38338e+02     -1.77e-07\npolygon 33 (hole)      351 -1.21433e+03     -1.55e-06\npolygon 34 (hole)       12 -8.36709e+01     -1.07e-07\npolygon 35 (hole)      317 -5.11280e+04     -6.54e-05\npolygon 36 (hole)       36 -4.01660e+04     -5.14e-05\npolygon 37              30  2.80002e+04      3.58e-05\npolygon 38              27  1.50315e+04      1.92e-05\npolygon 39              15  4.03300e+04      5.16e-05\npolygon 40            1045  4.44510e+06      5.68e-03\npolygon 41 (hole)       13 -3.91907e+02     -5.01e-07\npolygon 42              47  3.82087e+04      4.89e-05\npolygon 43              65  8.42861e+04      1.08e-04\npolygon 44             478  2.06120e+06      2.64e-03\npolygon 45             266  1.50631e+06      1.93e-03\npolygon 46             234  4.72886e+05      6.05e-04\npolygon 47              14  5.86546e+03      7.50e-06\npolygon 48              83  5.28920e+03      6.76e-06\npolygon 49              75  1.73526e+04      2.22e-05\npolygon 50             148  3.10395e+03      3.97e-06\npolygon 51             142  3.22293e+03      4.12e-06\npolygon 52              45  2.51218e+03      3.21e-06\npolygon 53              40  1.38607e+04      1.77e-05\npolygon 54              10  4.90942e+02      6.28e-07\npolygon 55              95  5.96187e+04      7.62e-05\npolygon 56 (hole)        4 -1.86410e-02     -2.38e-11\npolygon 57              64  3.43149e+04      4.39e-05\npolygon 58 (hole)        3 -1.98390e-03     -2.54e-12\npolygon 59 (hole)        3 -5.55856e-03     -7.11e-12\npolygon 60 (hole)        3 -5.12482e-03     -6.55e-12\npolygon 61 (hole)        3 -1.96410e-03     -2.51e-12\npolygon 62 (hole)        4 -1.13774e-02     -1.46e-11\npolygon 63             155  2.67502e+05      3.42e-04\npolygon 64             106  3.04104e+03      3.89e-06\npolygon 65            1027  1.27782e+06      1.63e-03\npolygon 66 (hole)        3 -3.23310e-04     -4.13e-13\npolygon 67 (hole)        3 -1.16959e-03     -1.50e-12\npolygon 68 (hole)        3 -1.46474e-03     -1.87e-12\npolygon 69             211  4.70521e+05      6.02e-04\npolygon 70               4  2.69313e+02      3.44e-07\npolygon 71             132  9.53357e+04      1.22e-04\npolygon 72               6  4.50259e+02      5.76e-07\npolygon 73             285  1.61128e+06      2.06e-03\npolygon 74              91  1.49663e+04      1.91e-05\npolygon 75              71  8.18750e+03      1.05e-05\npolygon 76             668  5.40368e+07      6.91e-02\npolygon 77              77  3.29939e+05      4.22e-04\npolygon 78             711  1.28815e+07      1.65e-02\npolygon 79 (hole)        3 -3.41405e-01     -4.37e-10\npolygon 80              44  2.26577e+03      2.90e-06\nenclosing rectangle: [2667.54, 56396.44] x [15748.72, 50256.33] units\n                     (53730 x 34510 units)\nWindow area = 781945000 square units\nFraction of frame area: 0.422\n\n\n\nplot(childcareSG_ppp)"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex03/Hands-on_Ex03-part2.html#extracting-study-area",
    "href": "Hands-on_Ex/Hands-on_Ex03/Hands-on_Ex03-part2.html#extracting-study-area",
    "title": "In class Exercise 03",
    "section": "extracting study area",
    "text": "extracting study area\n\npg = mpsz[mpsz@data$PLN_AREA_N == \"PUNGGOL\",]\ntm = mpsz[mpsz@data$PLN_AREA_N == \"TAMPINES\",]\nck = mpsz[mpsz@data$PLN_AREA_N == \"CHOA CHU KANG\",]\njw = mpsz[mpsz@data$PLN_AREA_N == \"JURONG WEST\",]"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex03/Hands-on_Ex03-part2.html#plotting-target-planning-areas",
    "href": "Hands-on_Ex/Hands-on_Ex03/Hands-on_Ex03-part2.html#plotting-target-planning-areas",
    "title": "In class Exercise 03",
    "section": "plotting target planning areas",
    "text": "plotting target planning areas\n\npar(mfrow=c(2,2))\nplot(pg, main = \"Ponggol\")\nplot(tm, main = \"Tampines\")\nplot(ck, main = \"Choa Chu Kang\")\nplot(jw, main = \"Jurong West\")"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex03/Hands-on_Ex03-part2.html#converting-the-spatial-point-data-frame-into-generic-sp-format",
    "href": "Hands-on_Ex/Hands-on_Ex03/Hands-on_Ex03-part2.html#converting-the-spatial-point-data-frame-into-generic-sp-format",
    "title": "In class Exercise 03",
    "section": "Converting the spatial point data frame into generic sp format",
    "text": "Converting the spatial point data frame into generic sp format\n\npg_sp = as(pg, \"SpatialPolygons\")\ntm_sp = as(tm, \"SpatialPolygons\")\nck_sp = as(ck, \"SpatialPolygons\")\njw_sp = as(jw, \"SpatialPolygons\")"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex03/Hands-on_Ex03-part2.html#creating-owin-1",
    "href": "Hands-on_Ex/Hands-on_Ex03/Hands-on_Ex03-part2.html#creating-owin-1",
    "title": "In class Exercise 03",
    "section": "creating owin",
    "text": "creating owin\n\npg_owin = as(pg_sp, \"owin\")\ntm_owin = as(tm_sp, \"owin\")\nck_owin = as(ck_sp, \"owin\")\njw_owin = as(jw_sp, \"owin\")"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex03/Hands-on_Ex03-part2.html#combining-childcare-points-and-the-study-area",
    "href": "Hands-on_Ex/Hands-on_Ex03/Hands-on_Ex03-part2.html#combining-childcare-points-and-the-study-area",
    "title": "In class Exercise 03",
    "section": "Combining childcare points and the study area",
    "text": "Combining childcare points and the study area\n\nchildcare_pg_ppp = childcare_ppp_jit[pg_owin]\nchildcare_tm_ppp = childcare_ppp_jit[tm_owin]\nchildcare_ck_ppp = childcare_ppp_jit[ck_owin]\nchildcare_jw_ppp = childcare_ppp_jit[jw_owin]\n\nNext, rescale() function is used to trasnform the unit of measurement from metre to kilometre.\n\nchildcare_pg_ppp.km = rescale(childcare_pg_ppp, 1000, \"km\")\nchildcare_tm_ppp.km = rescale(childcare_tm_ppp, 1000, \"km\")\nchildcare_ck_ppp.km = rescale(childcare_ck_ppp, 1000, \"km\")\nchildcare_jw_ppp.km = rescale(childcare_jw_ppp, 1000, \"km\")\n\nThe code chunk below is used to plot these four study areas and the locations of the childcare centres.\n\npar(mfrow=c(2,2))\nplot(childcare_pg_ppp.km, main=\"Punggol\")\nplot(childcare_tm_ppp.km, main=\"Tampines\")\nplot(childcare_ck_ppp.km, main=\"Choa Chu Kang\")\nplot(childcare_jw_ppp.km, main=\"Jurong West\")"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex03/Hands-on_Ex03-part2.html#analysing-spatial-point-process-using-g-function",
    "href": "Hands-on_Ex/Hands-on_Ex03/Hands-on_Ex03-part2.html#analysing-spatial-point-process-using-g-function",
    "title": "In class Exercise 03",
    "section": "Analysing Spatial Point Process Using G-Function",
    "text": "Analysing Spatial Point Process Using G-Function\ncck\n\nG_CK = Gest(childcare_ck_ppp, correction = \"border\")\nplot(G_CK, xlim=c(0,500))\n\n\n\n\nPerforming Complete Spatial Randomness Test\n\nG_CK.csr &lt;- envelope(childcare_ck_ppp, Gest, nsim = 49)\n\nGenerating 49 simulations of CSR  ...\n1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20,\n21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40,\n41, 42, 43, 44, 45, 46, 47, 48, \n49.\n\nDone.\n\n\n\nplot(G_CK.csr)\n\n\n\n\ntampines\n\nG_tm = Gest(childcare_tm_ppp, correction = \"best\")\nplot(G_tm)\n\n\n\n\n\nG_tm.csr &lt;- envelope(childcare_tm_ppp, Gest, correction = \"all\", nsim = 49)\n\nGenerating 49 simulations of CSR  ...\n1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20,\n21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40,\n41, 42, 43, 44, 45, 46, 47, 48, \n49.\n\nDone.\n\n\n\nplot(G_tm.csr)"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex03/Hands-on_Ex03-part2.html#performing-complete-spatial-randomness-test",
    "href": "Hands-on_Ex/Hands-on_Ex03/Hands-on_Ex03-part2.html#performing-complete-spatial-randomness-test",
    "title": "In class Exercise 03",
    "section": "Performing Complete Spatial Randomness Test",
    "text": "Performing Complete Spatial Randomness Test\n\nF_CK.csr &lt;- envelope(childcare_ck_ppp, Fest, nsim = 49)\n\nGenerating 49 simulations of CSR  ...\n1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20,\n21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40,\n41, 42, 43, 44, 45, 46, 47, 48, \n49.\n\nDone.\n\n\n\nplot(F_CK.csr)\n\n\n\n\ntampines\n\nF_tm = Fest(childcare_tm_ppp, correction = \"best\")\nplot(F_tm)"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex03/Hands-on_Ex03-part2.html#randomness-test",
    "href": "Hands-on_Ex/Hands-on_Ex03/Hands-on_Ex03-part2.html#randomness-test",
    "title": "In class Exercise 03",
    "section": "randomness test",
    "text": "randomness test\n\nF_tm.csr &lt;- envelope(childcare_tm_ppp, Fest, correction = \"all\", nsim = 49)\n\nGenerating 49 simulations of CSR  ...\n1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20,\n21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40,\n41, 42, 43, 44, 45, 46, 47, 48, \n49.\n\nDone.\n\n\n\nplot(F_tm.csr)"
  },
  {
    "objectID": "In-class_Ex/In-class_Ex03/In-class_Ex03.html",
    "href": "In-class_Ex/In-class_Ex03/In-class_Ex03.html",
    "title": "In class Exercise 03",
    "section": "",
    "text": "In class Exercise 3!"
  },
  {
    "objectID": "In-class_Ex/In-class_Ex03/In-class_Ex03.html#installing-and-loading",
    "href": "In-class_Ex/In-class_Ex03/In-class_Ex03.html#installing-and-loading",
    "title": "In class Exercise 03",
    "section": "installing and loading",
    "text": "installing and loading\n\npacman::p_load(maptools, sf, raster, spatstat, tmap, tidyverse)"
  },
  {
    "objectID": "In-class_Ex/In-class_Ex03/In-class_Ex03.html#import-data",
    "href": "In-class_Ex/In-class_Ex03/In-class_Ex03.html#import-data",
    "title": "In class Exercise 03",
    "section": "import data",
    "text": "import data\n\nchildcare_sf &lt;- st_read(\"data/geospatial/ChildCareServices.geojson\") %&gt;% \n  st_transform(crs = 3414)\n\nReading layer `ChildCareServices' from data source \n  `C:\\EbenezerHo\\IS415-GAA\\In-class_Ex\\In-class_Ex03\\data\\geospatial\\ChildCareServices.geojson' \n  using driver `GeoJSON'\nSimple feature collection with 1925 features and 2 fields\nGeometry type: POINT\nDimension:     XYZ\nBounding box:  xmin: 103.6878 ymin: 1.247759 xmax: 103.9897 ymax: 1.462134\nz_range:       zmin: 0 zmax: 0\nGeodetic CRS:  WGS 84\n\nmpsz_sf &lt;- st_read(dsn = \"data/geospatial\", \n                layer = \"MP14_SUBZONE_WEB_PL\")\n\nReading layer `MP14_SUBZONE_WEB_PL' from data source \n  `C:\\EbenezerHo\\IS415-GAA\\In-class_Ex\\In-class_Ex03\\data\\geospatial' \n  using driver `ESRI Shapefile'\nSimple feature collection with 323 features and 15 fields\nGeometry type: MULTIPOLYGON\nDimension:     XY\nBounding box:  xmin: 2667.538 ymin: 15748.72 xmax: 56396.44 ymax: 50256.33\nProjected CRS: SVY21"
  },
  {
    "objectID": "In-class_Ex/In-class_Ex03/In-class_Ex03.html#creasting-coastal-outline",
    "href": "In-class_Ex/In-class_Ex03/In-class_Ex03.html#creasting-coastal-outline",
    "title": "In class Exercise 03",
    "section": "creasting coastal outline",
    "text": "creasting coastal outline\n\nsg_sf &lt;- mpsz_sf %&gt;%\n  st_union()\n\n\nplot(sg_sf)\n\n\n\n\nhands on ex: spatial &gt; sp data &gt; ppp &gt;\nnow! use sf. take directly from sf object to transform to ppp.\n\nchildcare_ppp &lt;- as.ppp(childcare_sf)\n\n\nsummary(childcare_ppp)\n\nMarked planar point pattern:  1925 points\nAverage intensity 2.417323e-06 points per square unit\n\nCoordinates are given to 3 decimal places\ni.e. rounded to the nearest multiple of 0.001 units\n\nmarks are of type 'character'\nSummary:\n   Length     Class      Mode \n     1925 character character \n\nWindow: rectangle = [11810.03, 45404.24] x [25596.33, 49300.88] units\n                    (33590 x 23700 units)\nWindow area = 796335000 square units"
  },
  {
    "objectID": "In-class_Ex/In-class_Ex03/In-class_Ex03.html#remove-duplicates",
    "href": "In-class_Ex/In-class_Ex03/In-class_Ex03.html#remove-duplicates",
    "title": "In class Exercise 03",
    "section": "remove duplicates",
    "text": "remove duplicates\n! especially important if using postal code\n\nany(duplicated(childcare_ppp))\n\n[1] FALSE\n\n\n\nsg_owin &lt;- as.owin(sg_sf)\n\n\nsummary(sg_owin)\n\nWindow: polygonal boundary\n80 separate polygons (35 holes)\n                  vertices         area relative.area\npolygon 1            14650  6.97996e+08      8.93e-01\npolygon 2 (hole)         3 -2.21090e+00     -2.83e-09\npolygon 3              285  1.61128e+06      2.06e-03\npolygon 4 (hole)         3 -2.05920e-03     -2.63e-12\npolygon 5 (hole)         3 -8.83647e-03     -1.13e-11\npolygon 6              668  5.40368e+07      6.91e-02\npolygon 7               44  2.26577e+03      2.90e-06\npolygon 8               27  1.50315e+04      1.92e-05\npolygon 9              711  1.28815e+07      1.65e-02\npolygon 10 (hole)       36 -4.01660e+04     -5.14e-05\npolygon 11 (hole)      317 -5.11280e+04     -6.54e-05\npolygon 12 (hole)        3 -3.41405e-01     -4.37e-10\npolygon 13 (hole)        3 -2.89050e-05     -3.70e-14\npolygon 14              77  3.29939e+05      4.22e-04\npolygon 15              30  2.80002e+04      3.58e-05\npolygon 16 (hole)        3 -2.83151e-01     -3.62e-10\npolygon 17              71  8.18750e+03      1.05e-05\npolygon 18 (hole)        3 -1.68316e-04     -2.15e-13\npolygon 19 (hole)       36 -7.79904e+03     -9.97e-06\npolygon 20 (hole)        4 -2.05611e-02     -2.63e-11\npolygon 21 (hole)        3 -2.18000e-06     -2.79e-15\npolygon 22 (hole)        3 -3.65501e-03     -4.67e-12\npolygon 23 (hole)        3 -4.95057e-02     -6.33e-11\npolygon 24 (hole)        3 -3.99521e-02     -5.11e-11\npolygon 25 (hole)        3 -6.62377e-01     -8.47e-10\npolygon 26 (hole)        3 -2.09065e-03     -2.67e-12\npolygon 27              91  1.49663e+04      1.91e-05\npolygon 28 (hole)       26 -1.25665e+03     -1.61e-06\npolygon 29 (hole)      349 -1.21433e+03     -1.55e-06\npolygon 30 (hole)       20 -4.39069e+00     -5.62e-09\npolygon 31 (hole)       48 -1.38338e+02     -1.77e-07\npolygon 32 (hole)       28 -1.99862e+01     -2.56e-08\npolygon 33              40  1.38607e+04      1.77e-05\npolygon 34 (hole)       40 -6.00381e+03     -7.68e-06\npolygon 35 (hole)        7 -1.40545e-01     -1.80e-10\npolygon 36 (hole)       12 -8.36709e+01     -1.07e-07\npolygon 37              45  2.51218e+03      3.21e-06\npolygon 38             142  3.22293e+03      4.12e-06\npolygon 39             148  3.10395e+03      3.97e-06\npolygon 40              75  1.73526e+04      2.22e-05\npolygon 41              83  5.28920e+03      6.76e-06\npolygon 42             211  4.70521e+05      6.02e-04\npolygon 43             106  3.04104e+03      3.89e-06\npolygon 44             266  1.50631e+06      1.93e-03\npolygon 45              71  5.63061e+03      7.20e-06\npolygon 46              10  1.99717e+02      2.55e-07\npolygon 47             478  2.06120e+06      2.64e-03\npolygon 48             155  2.67502e+05      3.42e-04\npolygon 49            1027  1.27782e+06      1.63e-03\npolygon 50 (hole)        3 -1.16959e-03     -1.50e-12\npolygon 51              65  8.42861e+04      1.08e-04\npolygon 52              47  3.82087e+04      4.89e-05\npolygon 53               6  4.50259e+02      5.76e-07\npolygon 54             132  9.53357e+04      1.22e-04\npolygon 55 (hole)        3 -3.23310e-04     -4.13e-13\npolygon 56               4  2.69313e+02      3.44e-07\npolygon 57 (hole)        3 -1.46474e-03     -1.87e-12\npolygon 58            1045  4.44510e+06      5.68e-03\npolygon 59              22  6.74651e+03      8.63e-06\npolygon 60              64  3.43149e+04      4.39e-05\npolygon 61 (hole)        3 -1.98390e-03     -2.54e-12\npolygon 62 (hole)        4 -1.13774e-02     -1.46e-11\npolygon 63              14  5.86546e+03      7.50e-06\npolygon 64              95  5.96187e+04      7.62e-05\npolygon 65 (hole)        4 -1.86410e-02     -2.38e-11\npolygon 66 (hole)        3 -5.12482e-03     -6.55e-12\npolygon 67 (hole)        3 -1.96410e-03     -2.51e-12\npolygon 68 (hole)        3 -5.55856e-03     -7.11e-12\npolygon 69             234  2.08755e+06      2.67e-03\npolygon 70              10  4.90942e+02      6.28e-07\npolygon 71             234  4.72886e+05      6.05e-04\npolygon 72 (hole)       13 -3.91907e+02     -5.01e-07\npolygon 73              15  4.03300e+04      5.16e-05\npolygon 74             227  1.10308e+06      1.41e-03\npolygon 75              10  6.60195e+03      8.44e-06\npolygon 76              19  3.09221e+04      3.95e-05\npolygon 77             145  9.61782e+05      1.23e-03\npolygon 78              30  4.28933e+03      5.49e-06\npolygon 79              37  1.29481e+04      1.66e-05\npolygon 80               4  9.47108e+01      1.21e-07\nenclosing rectangle: [2667.54, 56396.44] x [15748.72, 50256.33] units\n                     (53730 x 34510 units)\nWindow area = 781945000 square units\nFraction of frame area: 0.422\n\n\n\nplot(sg_owin)\n\n\n\n\n\npg = mpsz_sf %&gt;% filter(PLN_AREA_N == \"PUNGGOL\")\ntm = mpsz_sf %&gt;% filter(PLN_AREA_N == \"TAMPINES\")\nck = mpsz_sf %&gt;% filter(PLN_AREA_N == \"CHOA CHU KANG\")\njw = mpsz_sf %&gt;% filter(PLN_AREA_N == \"JURONG WEST\")\n\n\npar(mfrow=c(2,2))\nplot(pg, main = \"Ponggol\")\n\n\n\nplot(tm, main = \"Tampines\")\n\n\n\nplot(ck, main = \"Choa Chu Kang\")\n\n\n\nplot(jw, main = \"Jurong West\")"
  },
  {
    "objectID": "In-class_Ex/In-class_Ex03/In-class_Ex03-part2.html",
    "href": "In-class_Ex/In-class_Ex03/In-class_Ex03-part2.html",
    "title": "In class Exercise 03 part 2",
    "section": "",
    "text": "Hands on Exercise 03 part 2 :D"
  },
  {
    "objectID": "In-class_Ex/In-class_Ex03/In-class_Ex03-part2.html#installing-and-loading",
    "href": "In-class_Ex/In-class_Ex03/In-class_Ex03-part2.html#installing-and-loading",
    "title": "In class Exercise 03 part 2",
    "section": "installing and loading",
    "text": "installing and loading\n\npacman::p_load(maptools, sf, raster, spatstat, \n               tmap, tidyverse, spNetwork, classInt, virdis)"
  },
  {
    "objectID": "In-class_Ex/In-class_Ex03/In-class_Ex03-part2.html#import-data",
    "href": "In-class_Ex/In-class_Ex03/In-class_Ex03-part2.html#import-data",
    "title": "In class Exercise 03 part 2",
    "section": "import data",
    "text": "import data\n\nnetwork &lt;- st_read(dsn=\"data/geospatial\", layer=\"Punggol_St\")\n\nReading layer `Punggol_St' from data source \n  `C:\\EbenezerHo\\IS415-GAA\\In-class_Ex\\In-class_Ex03\\data\\geospatial' \n  using driver `ESRI Shapefile'\nSimple feature collection with 2642 features and 2 fields\nGeometry type: LINESTRING\nDimension:     XY\nBounding box:  xmin: 34038.56 ymin: 40941.11 xmax: 38882.85 ymax: 44801.27\nProjected CRS: SVY21 / Singapore TM\n\nchildcare &lt;- st_read(dsn=\"data/geospatial\", layer=\"Punggol_CC\")\n\nReading layer `Punggol_CC' from data source \n  `C:\\EbenezerHo\\IS415-GAA\\In-class_Ex\\In-class_Ex03\\data\\geospatial' \n  using driver `ESRI Shapefile'\nSimple feature collection with 61 features and 1 field\nGeometry type: POINT\nDimension:     XYZ\nBounding box:  xmin: 34423.98 ymin: 41503.6 xmax: 37619.47 ymax: 44685.77\nz_range:       zmin: 0 zmax: 0\nProjected CRS: SVY21 / Singapore TM\n\n\ntmap mode to plot\n\ntmap_mode(\"view\")\ntm_shape(childcare) + tm_dots()+\n  tm_shape(network) + tm_lines()\n\n\n\n\n\ntmap_mode(\"plot\")"
  },
  {
    "objectID": "In-class_Ex/In-class_Ex03/In-class_Ex03-part2.html#create-line-segments",
    "href": "In-class_Ex/In-class_Ex03/In-class_Ex03-part2.html#create-line-segments",
    "title": "In class Exercise 03 part 2",
    "section": "create line segments",
    "text": "create line segments\n– mindist is half of the distance of 750. therefore 375\n\nlixels &lt;- lixelize_lines(network,750 ,mindist = 375)"
  },
  {
    "objectID": "In-class_Ex/In-class_Ex03/In-class_Ex03-part2.html#section",
    "href": "In-class_Ex/In-class_Ex03/In-class_Ex03-part2.html#section",
    "title": "In class Exercise 03 part 2",
    "section": "??",
    "text": "??\n\nsamples &lt;- lines_center(lixels)"
  },
  {
    "objectID": "In-class_Ex/In-class_Ex03/In-class_Ex03-part2.html#genrating-line_centerlixels",
    "href": "In-class_Ex/In-class_Ex03/In-class_Ex03-part2.html#genrating-line_centerlixels",
    "title": "In class Exercise 03 part 2",
    "section": "genrating line_center(lixels)",
    "text": "genrating line_center(lixels)\n\ndensities &lt;- nkde(network, events = childcare, w = rep(1, nrow(childcare)), samples = samples, kernel_name =\"quartic\", bw = 300, div= \"bw\", method = \"simple\", digits = 1, tol = 1, grid_shape = c(1,1), max_depth = 8, agg = 5, sparse = TRUE, verbose = FALSE\n                  )"
  },
  {
    "objectID": "In-class_Ex/In-class_Ex03/In-class_Ex03-part2.html#plot",
    "href": "In-class_Ex/In-class_Ex03/In-class_Ex03-part2.html#plot",
    "title": "In class Exercise 03 part 2",
    "section": "plot",
    "text": "plot\n\nsamples$density &lt;- densities\nlixels$density &lt;- densities\n\n\n# rescaling to help the mapping\nsamples$density &lt;- samples$density*1000\nlixels$density &lt;- lixels$density*1000\n\n\ntmap_mode('view')\ntm_shape(lixels)+\n  tm_lines(col=\"density\")+\ntm_shape(childcare)+\n  tm_dots()"
  },
  {
    "objectID": "In-class_Ex/In-class_Ex03/In-class_Ex03-part2.html#g-function",
    "href": "In-class_Ex/In-class_Ex03/In-class_Ex03-part2.html#g-function",
    "title": "In class Exercise 03 part 2",
    "section": "G-Function",
    "text": "G-Function"
  },
  {
    "objectID": "Take-home_Ex/Take-home_Ex01/Take-home_Ex01.html",
    "href": "Take-home_Ex/Take-home_Ex01/Take-home_Ex01.html",
    "title": "Take home Exercise 01",
    "section": "",
    "text": "Human mobility, the movement of human beings in space and time, reflects the spatial-temporal characteristics of human behavior. With the advancement Information and Communication Technologies (ICT) especially smart phone, a large volume of data related to human mobility have been collected. By using appropriate GIS analysis methods, these data are potentially useful in supporting smart city planning and management.\nIn Singapore, one of the important source of data related to human mobility is from Land Transport Authority (LTA) DataMall. Two data sets related to human mobility are provided by the portal, they are: Passenger Volume by Origin Destination Train Stations and Passenger Volume by Origin Destination Bus Stops. One of the limitation of these data sets is that their location are biased to either bus stops or MRT/LRT stations. In 2020, another very interesting human mobility data set called Grab Posisi was released by GRAB, one of the largest shared taxi operator in South-east Asia. There are two data sets been released and one of them is for Singapore.\nThe Task\n\nUsing appropriate function of sf and tidyverse, preparing the following geospatial data layer in sf tibble data.frames:\n\nGrab taxi location points either by origins or destinations.\nRoad layer within Singapore excluding outer islands. \nSingapore boundary layer excluding outer islands \n\nUsing the extracted data, derive traditional Kernel Density Estimation layers. \nUsing the extracted data, derive either Network Kernel Density Estimation (NKDE) or Temporal Network Kernel Density Estimation (TNKDE) \nUsing appropriate tmap functions, display the kernel density layers on openstreetmap of Singapore.\nDescribe the spatial patterns revealed by the kernel density maps.\n\n\n\n\n\npacman:: p_load (arrow, lubridate, tidyverse, tmap, sf, raster, spatstat, tmap, maptools, sp, spNetwork)\n\n\n\n\n\n\n\ndf &lt;- read_parquet(\"data/GrabPosisi/part-00000-8bbff892-97d2-4011-9961-703e38972569.c000.snappy.parquet\")\n\n\n\n\nSince the values seems to derive from a timestamp, we will convert the data type of pingtimestamp from character to date. This will allow us to process the data in a more efficient manner with the correct data type. We will use the as_datetime function from the lubridate package to do this.\n\ndf$pingtimestamp &lt;- as_datetime(df$pingtimestamp)\n\n\n\n\nSince GrabPosisi data is a time series data, we need to extract the first and last row of each trip id to get the origin and destination of each. We will use the dplyr package to do this.\n\norigin_df &lt;- df %&gt;%  \n  group_by(trj_id) %&gt;% # group by trip id\n  arrange(pingtimestamp) %&gt;% # arrange by pingtimestamp to sort the data\n  filter(row_number() == 1) %&gt;% # get the first row of all the trip id\n  mutate(weekday = wday(pingtimestamp, label = TRUE, abbr = TRUE), # get the day of the week\n         start_hr = factor(hour(pingtimestamp)),# use factor to get ordinal data\n         day= factor(day(pingtimestamp)))\n\n\n\n\nIn order to integrate GrabPosisi’s dataset, we need to convert the origin_df and destination_df to geospatial data. We will use the st_as_sf function from the sf package to do this. We will also transform the coordinate reference system (CRS) of the data to 3414, which is the projected coordinate system for Singapore.\n\norigin_sf &lt;- st_as_sf(origin_df,\n                      coords = c(\"rawlng\", \"rawlat\"),\n                      crs = 4326) %&gt;%\n  st_transform(crs = 3414)\n\n\n\n\n\nmpsz_sf &lt;- st_read(dsn = \"data\", \n                layer = \"MPSZ-2019\")\n\n\n\n\n\nst_crs(mpsz_sf)\n\n\nmpsz_sf &lt;- st_transform(mpsz_sf,3414)\n\n\nst_crs(mpsz_sf)\n\n\n\n\nLet’s first take a look at the unique values of mpsz to see if there are any outer islands in the data. We’ll be using the unique function to do this.\n\nunique(mpsz_sf$PLN_AREA_N)\n\nAs noted in the task, we are to exclude the outer islands from the Singapore boundary layer. We will use the st_difference function from the sf package to do this. With the above list, we can see that the outer islands are “SOUTHERN ISLANDS”, “NORTH-EASTERN ISLANDS” and “WESTERN ISLANDS”. We will use the st_union function to combine the outer islands and then use the st_difference function to remove the outer islands from the Singapore boundary layer.\n\nouter_island &lt;- mpsz_sf[mpsz_sf$PLN_AREA_N == \"SOUTHERN ISLANDS\" | mpsz_sf$PLN_AREA_N == \"NORTH-EASTERN ISLANDS\" | mpsz_sf$PLN_AREA_N == \"WESTERN ISLANDS\",]\n\n\nmpsz_boundary &lt;- st_difference(st_union(mpsz_sf),st_union(outer_island))\n\n\nmpsz_sf_no_outer &lt;- st_difference(mpsz_sf,st_union(outer_island))\n\n\nplot(mpsz_sf_no_outer['PLN_AREA_N'])\n\n\n\n\n\nroads_sf &lt;- st_read(dsn = \"data\", \n                layer = \"gis_osm_roads_free_1\")\n\n\n\n\n\nst_crs(roads_sf)\n\n\nroads_sf_3414 &lt;- st_transform(roads_sf,3414)\n\n\nst_crs(roads_sf_3414)\n\n\n\n\nWe’ll first begin by eliminating the roads with no speed limit. We will use the filter function from the dplyr package to do this. Since all roads in Singapore that are not pedestrian walkways should have a speed limit, we will filter the roads with a speed limit of greater than 0.\n\nroad = roads_sf_3414 %&gt;%\n  filter(maxspeed &gt; 0)\n\nNext, we will take a look at the unique values of fclass in roads_sf_3414 to see if there are any fclass that we need to remove. We’ll be using the unique function to do this.\n\nunique(road$fclass)\n\nWe can notice that there are still several fclass that we need to remove. We will remove all rows of roads that are fclass in [“primary_link” “service” “unclassified” “living_street” “footway” “secondary_link” “tertiary_link” “cycleway” “pedestrian”].\n\nroad = road[!road$fclass %in% c(\"primary_link\", \"service\", \"unclassified\", \"living_street\", \"footway\", \"secondary_link\", \"tertiary_link\", \"cycleway\", \"pedestrian\"),]\n\nSince the data from OpenStreetMap consist of Malaysia, Brunei & Singapore, let’s filter out the roads that are not in Singapore. We will use the st_intersection function from the sf package to do this.\n\n\n\nroad = st_intersection(road, mpsz_sf_no_outer)\n\nUpon inspection, we still notice that there are some roads which do not have names. Since this does not provide us with more information, let’s reduce it further.\n\nroad = road[!is.na(road$name),]\n\n\nunique(road$layer)\n\n\nroad = road[road$layer == 0,]\n\nWARNING: Visualising all the roads in Singapore takes a long time. To reduce render time, an image of the results will be provided below.\n\nplot(road['name'])\n\n\n\n\n\n\n\nAs a precaution, let’s check all the main datasets for invalid data. We will use the st_is_valid function from the sf package to do this. We will then use the which function to get the indices of the invalid data and then use the length function to get the number of invalid data.\n\n# the st_is_valid function checks whether a geometry is valid\n# which returns the indices of certain values based on logical conditions\n# length returns the length of data objects\nlength(which(st_is_valid(mpsz_sf) == FALSE))\n\n\nlength(which(st_is_valid(mpsz_sf_no_outer) == FALSE))\n\n\nlength(which(st_is_valid(mpsz_boundary) == FALSE))\n\n\nlength(which(st_is_valid(road) == FALSE))\n\n\nlength(which(st_is_valid(origin_sf) == FALSE))\n\noh no! original mpsz has 6 invalid data! lets remove it.\n\nmpsz_sf &lt;- st_make_valid(mpsz_sf)\n\nthen we’ll check again\n\nlength(which(st_is_valid(mpsz_sf) == FALSE))\n\nwe’re good to go!\n\n\nUsing the write_rds function from the arrow package, we will store the data in rds format for future. This allows us to reduce the number of code chunks to run and also reduce the computational time.\n\nwrite_rds(mpsz_sf_no_outer, \"data/rds/mpsz.rds\")\nwrite_rds(mpsz_boundary, \"data/rds/sg_sf.rds\")\nwrite_rds(road, \"data/rds/roads_sf.rds\")\nwrite_rds(origin_sf, \"data/rds/origin_sf.rds\")\n\n\n\n\n\norigin_sf &lt;- read_rds(\"data/rds/origin_sf.rds\")\nsg_sf &lt;- read_rds(\"data/rds/sg_sf.rds\")\nmpsz &lt;- read_rds(\"data/rds/mpsz.rds\")\nroads &lt;- read_rds(\"data/rds/roads_sf.rds\")\n\n\n\n\n\n\n\nLets do a quick plot of a chloropleth map of the master plan of singapore to view the different towns available.\n\ntmap_mode(\"plot\")\ntmap_options(max.categories = 55)\ntm_shape(mpsz)+\n  tm_fill(col = \"PLN_AREA_N\")+\n  tm_layout(legend.position = c(\"right\", \"bottom\"),\n            frame = FALSE,\n            title = \"Master Plan of Singapore 2019\",\n            legend.text.size = 0.5\n            )\n\n\n\n\n\n\n\n\nTo zoom in the different regions, we’ll be plotting a chloropleth map of origin of grab trips to singapore map to determine the distribution of grab trips in singapore\n\ntmap_mode(\"view\")\ntm_shape(mpsz)+\n  tm_polygons()+\n  tm_text(\"PLN_AREA_N\", size=0.5)+\n  tm_shape(origin_sf)+\n  tm_dots(alpha=0.4, size = 0.05, col = \"blue\")\n\n\n\n\n\n\nTaking a look at the distribution of grab trips in singapore, we can see that the distribution is quite uniform. However, we can see that there are more grab trips in the central region of Singapore. This is expected as the central region of Singapore is the most densely populated area in Singapore.\nHowever, I want to take a look at the different regions of Singapore to see the different distributions. I will be selecting 4 towns from different regions.\nThe towns selected will be Jurong East(West), Woodlands(North), Tampines(East) and Rochor(Central).\nLets zoom in to the different regions of Singapore to see the different distributions.\n\n\n\n\ntmp &lt;- mpsz %&gt;%\n  filter(PLN_AREA_N == \"TAMPINES\")\njre &lt;- mpsz %&gt;%\n  filter(PLN_AREA_N == \"JURONG EAST\")\nrch &lt;- mpsz %&gt;%\n  filter(PLN_AREA_N == \"ROCHOR\")\nwld &lt;- mpsz %&gt;%\n  filter(PLN_AREA_N == \"WOODLANDS\")\n\n\nroad_tmp = st_intersection(roads, tmp)\nroad_jre= st_intersection(roads, jre)\nroad_rch = st_intersection(roads, rch)\nroad_wld = st_intersection(roads, wld)\n\n\norigin_tmp = st_intersection(origin_sf, tmp)\norigin_jre = st_intersection(origin_sf, jre)\norigin_rch = st_intersection(origin_sf, rch)\norigin_wld  = st_intersection(origin_sf, wld)\n\n\nbound_tmp = st_union(tmp)\nbound_jre = st_union(jre)\nbound_rch = st_union(rch)\nbound_wld = st_union(wld)\n\nLet’s take a look at our study area!\n\ntm_shape(tmp)+\n  tm_polygons()+\n  tm_text(\"SUBZONE_N\", size=0.5)+\n  tm_shape(origin_tmp)+\n  tm_dots(alpha=0.4, size = 0.05, col = \"blue\")\n\n\n\n\n\n\n\ntm_shape(jre)+\n  tm_polygons()+\n  tm_text(\"SUBZONE_N\", size=0.5)+\n  tm_shape(origin_jre)+\n  tm_dots(alpha=0.4, size = 0.05, col = \"blue\")\n\n\n\n\n\n\n\ntm_shape(rch)+\n  tm_polygons()+\n  tm_text(\"SUBZONE_N\", size=0.5)+\n  tm_shape(origin_rch)+\n  tm_dots(alpha=0.4, size = 0.05, col = \"blue\")\n\n\n\n\n\n\n\ntm_shape(wld)+\n  tm_polygons()+\n  tm_text(\"SUBZONE_N\", size=0.5)+\n  tm_shape(origin_wld)+\n  tm_dots(alpha=0.4, size = 0.05, col = \"blue\")\n\n\n\n\n\n\nFrom this, we can predict how the distribution of grab trips will look like in the different regions of Singapore.\n\n\n\nBefore we proceed to the next step, we shall store the data of each region into rds for future use.\n\nwrite_rds(tmp, \"data/rds/tmp.rds\")\nwrite_rds(jre, \"data/rds/jre.rds\")\nwrite_rds(rch, \"data/rds/rch.rds\")\nwrite_rds(wld, \"data/rds/wld.rds\")\n\nwrite_rds(road_tmp, \"data/rds/road_tmp.rds\")\nwrite_rds(road_jre, \"data/rds/road_jre.rds\")\nwrite_rds(road_rch, \"data/rds/road_rch.rds\")\nwrite_rds(road_wld, \"data/rds/road_wld.rds\")\n\nwrite_rds(origin_tmp, \"data/rds/origin_tmp.rds\")\nwrite_rds(origin_jre, \"data/rds/origin_jre.rds\")\nwrite_rds(origin_rch, \"data/rds/origin_rch.rds\")\nwrite_rds(origin_wld, \"data/rds/origin_wld.rds\")\n\nwrite_rds(bound_tmp, \"data/rds/bound_tmp.rds\")\nwrite_rds(bound_jre, \"data/rds/bound_jre.rds\")\nwrite_rds(bound_rch, \"data/rds/bound_rch.rds\")\nwrite_rds(bound_wld, \"data/rds/bound_wld.rds\")\n\nLoad the data from rds for each region\n\ntmp &lt;- read_rds(\"data/rds/tmp.rds\")\njre &lt;- read_rds(\"data/rds/jre.rds\")\nrch &lt;- read_rds(\"data/rds/rch.rds\")\nwld &lt;- read_rds(\"data/rds/wld.rds\")\n\nroad_tmp &lt;- read_rds(\"data/rds/road_tmp.rds\")\nroad_jre &lt;- read_rds(\"data/rds/road_jre.rds\")\nroad_rch &lt;- read_rds(\"data/rds/road_rch.rds\")\nroad_wld &lt;- read_rds(\"data/rds/road_wld.rds\")\n\norigin_tmp &lt;- read_rds(\"data/rds/origin_tmp.rds\")\norigin_jre &lt;- read_rds(\"data/rds/origin_jre.rds\")\norigin_rch &lt;- read_rds(\"data/rds/origin_rch.rds\")\norigin_wld &lt;- read_rds(\"data/rds/origin_wld.rds\")\n\nbound_tmp &lt;- read_rds(\"data/rds/bound_tmp.rds\")\nbound_jre &lt;- read_rds(\"data/rds/bound_jre.rds\")\nbound_rch &lt;- read_rds(\"data/rds/bound_rch.rds\")\nbound_wld &lt;- read_rds(\"data/rds/bound_wld.rds\")\n\n\n\n\n\n\nWe will be getting the KDE for the 4 towns selected\n\n\n\n\nbound_tmp_spc &lt;- as(bound_tmp, \"Spatial\")\nbound_jre_spc &lt;- as(bound_jre, \"Spatial\")\nbound_rch_spc &lt;- as(bound_rch, \"Spatial\")\nbound_wld_spc &lt;- as(bound_wld, \"Spatial\")\n\ntmp_spc &lt;- as(tmp, \"Spatial\")\njre_spc &lt;- as(jre, \"Spatial\")\nrch_spc &lt;- as(rch, \"Spatial\")\nwld_spc &lt;- as(wld, \"Spatial\")\n\norigin_tmp_spc &lt;- as(origin_tmp, \"Spatial\")\norigin_jre_spc &lt;- as(origin_jre, \"Spatial\")\norigin_rch_spc &lt;- as(origin_rch, \"Spatial\")\norigin_wld_spc &lt;- as(origin_wld, \"Spatial\")\n\norigin_spc = as_Spatial(origin_sf)\nsg = as_Spatial(sg_sf)\n\nConverting spatial class into generic spatial objects\n\nbound_tmp_sp &lt;- as(bound_tmp_spc, \"SpatialPolygons\")\nbound_jre_sp &lt;- as(bound_jre_spc, \"SpatialPolygons\")\nbound_rch_sp &lt;- as(bound_rch_spc, \"SpatialPolygons\")\nbound_wld_sp &lt;- as(bound_wld_spc, \"SpatialPolygons\")\n\nsg_sp &lt;- as(sg, \"SpatialPolygons\")\n\nconverting generic sp format into spatstat ppp format\n\norigin_tmp_ppp &lt;- as(origin_tmp_spc[\"pingtimestamp\"], \"ppp\")\norigin_jre_ppp &lt;- as(origin_jre_spc[\"pingtimestamp\"], \"ppp\")\norigin_rch_ppp &lt;- as(origin_rch_spc[\"pingtimestamp\"], \"ppp\")\norigin_wld_ppp &lt;- as(origin_wld_spc[\"pingtimestamp\"], \"ppp\")\n\n\norigin_ppp &lt;- as(origin_spc[\"pingtimestamp\"], \"ppp\")\norigin_ppp\n\nMarked planar point pattern: 28000 points\nmarks are dates, of class 'POSIXt'\nwindow: rectangle = [3661.47, 49845.23] x [25201.14, 49685.08] units\n\n\n\n\n\nTo ensure that there are no duplicated points in the origin_ppp, we will use the duplicated function from the base package to do this.\n\nany(duplicated(origin_ppp))\n\n[1] FALSE\n\nany(duplicated(origin_tmp_ppp))\n\n[1] FALSE\n\nany(duplicated(origin_jre_ppp))\n\n[1] FALSE\n\nany(duplicated(origin_rch_ppp))\n\n[1] FALSE\n\nany(duplicated(origin_wld_ppp))\n\n[1] FALSE\n\n\nEverything looks good!\n\npar(mfrow=c(2,2))\nplot(origin_tmp_ppp, legend = FALSE)\nplot(origin_jre_ppp, legend = FALSE)\nplot(origin_rch_ppp, legend = FALSE)\nplot(origin_wld_ppp, legend = FALSE)\n\n\n\n\n\nsg_owin &lt;- as(sg_sp, \"owin\")\nbound_tmp_owin &lt;- as(bound_tmp_sp, \"owin\")\nbound_jre_owin &lt;- as(bound_jre_sp, \"owin\")\nbound_rch_owin &lt;- as(bound_rch_sp, \"owin\")\nbound_wld_owin &lt;- as(bound_wld_sp, \"owin\")\n\n\nplot(sg_owin)\n\n\n\n\n\noriginSG_ppp = origin_ppp[sg_owin]\noriginTMP_ppp = origin_tmp_ppp[bound_tmp_owin]\noriginJRE_ppp = origin_jre_ppp[bound_jre_owin]\noriginRCH_ppp = origin_rch_ppp[bound_rch_owin]\noriginWLD_ppp = origin_wld_ppp[bound_wld_owin]\n\n\npar(mfrow=c(2,2))\nplot(originTMP_ppp, legend = FALSE)\nplot(originJRE_ppp, legend = FALSE)\nplot(originRCH_ppp, legend = FALSE)\nplot(originWLD_ppp, legend = FALSE)\n\n\n\n\n\n# plot origin without legend \nplot(originSG_ppp, legend = FALSE)\n\n\n\n\nTime to calculate the density of the origin points\n\nkde_originSG_bw &lt;- density(originSG_ppp,\n                              sigma=bw.diggle,\n                              edge=TRUE,\n                            kernel=\"gaussian\") \nkde_originTMP_bw &lt;- density(originTMP_ppp,\n                              sigma=bw.diggle,\n                              edge=TRUE,\n                            kernel=\"gaussian\")\nkde_originJRE_bw &lt;- density(originJRE_ppp,\n                              sigma=bw.diggle,\n                              edge=TRUE,\n                            kernel=\"gaussian\")\nkde_originRCH_bw &lt;- density(originRCH_ppp,\n                              sigma=bw.diggle,\n                              edge=TRUE,\n                            kernel=\"gaussian\")\nkde_originWLD_bw &lt;- density(originWLD_ppp,\n                              sigma=bw.diggle,\n                              edge=TRUE,\n                            kernel=\"gaussian\")\n\n\n\n\n\nplot(kde_originSG_bw)\n\n\n\n\n\nplot(kde_originTMP_bw)\n\n\n\n\n\nplot(kde_originJRE_bw)\n\n\n\n\n\nplot(kde_originRCH_bw)\n\n\n\n\n\nplot(kde_originWLD_bw)\n\n\n\n\n\n\n\nWe’ll need to rescale into km to aid visualisation\n\noriginSG_ppp_rescale &lt;- rescale(originSG_ppp, 1000, \"km\")\n\noriginTMP_ppp_rescale &lt;- rescale(originTMP_ppp, 1000, \"km\")\noriginJRE_ppp_rescale &lt;- rescale(originJRE_ppp, 1000, \"km\")\noriginRCH_ppp_rescale &lt;- rescale(originRCH_ppp, 1000, \"km\")\noriginWLD_ppp_rescale &lt;- rescale(originWLD_ppp, 1000, \"km\")\n\n\nbw_sg &lt;- bw.diggle(originSG_ppp)\nbw_sg\n\n   sigma \n10.78216 \n\nbw_tmp &lt;- bw.diggle(originTMP_ppp)\nbw_tmp\n\n   sigma \n8.145744 \n\nbw_jre &lt;- bw.diggle(originJRE_ppp)\nbw_jre\n\n   sigma \n10.34664 \n\nbw_rch &lt;- bw.diggle(originRCH_ppp)\nbw_rch\n\n   sigma \n9.203935 \n\nbw_wld &lt;- bw.diggle(originWLD_ppp)\nbw_wld\n\n   sigma \n6.578762 \n\n\n\n\n\n\n\n\nkde_originSG_bw &lt;- density(originSG_ppp_rescale,\n                            sigma=bw_sg,\n                            edge=TRUE,\n                            kernel=\"gaussian\") \nplot(kde_originSG_bw)\n\n\n\n\n\nkde_originTMP_bw &lt;- density(originTMP_ppp_rescale,\n                            sigma=bw_tmp,\n                            edge=TRUE,\n                            kernel=\"gaussian\")\nplot(kde_originTMP_bw)\n\n\n\n\n\nkde_originJRE_bw &lt;- density(originJRE_ppp_rescale,\n                            sigma=bw_jre,\n                            edge=TRUE,\n                            kernel=\"gaussian\")\nplot(kde_originJRE_bw)\n\n\n\n\n\nkde_originRCH_bw &lt;- density(originRCH_ppp_rescale,\n                            sigma=bw_rch,\n                            edge=TRUE,\n                            kernel=\"gaussian\")\nplot(kde_originRCH_bw)\n\n\n\n\n\nkde_originWLD_bw &lt;- density(originWLD_ppp_rescale,\n                            sigma=bw_wld,\n                            edge=TRUE,\n                            kernel=\"gaussian\")\nplot(kde_originWLD_bw)\n\n\n\n\n\n\n\n\n\nkde_originTMP_bw &lt;- density(originTMP_ppp_rescale,\n                            sigma=0.3,\n                            edge=TRUE,\n                            kernel=\"gaussian\")\nplot(kde_originTMP_bw)\n\n\n\n\n\nkde_originJRE_bw &lt;- density(originJRE_ppp_rescale,\n                            sigma=0.3,\n                            edge=TRUE,\n                            kernel=\"gaussian\")\nplot(kde_originJRE_bw)\n\n\n\n\n\nkde_originRCH_bw &lt;- density(originRCH_ppp_rescale,\n                            sigma=0.3,\n                            edge=TRUE,\n                            kernel=\"gaussian\")\nplot(kde_originRCH_bw)\n\n\n\n\n\nkde_originWLD_bw &lt;- density(originWLD_ppp_rescale,\n                            sigma=0.3,\n                            edge=TRUE,\n                            kernel=\"gaussian\")\nplot(kde_originWLD_bw)\n\n\n\n\n\n\n\nThe kernel density estimation (KDE) is a non-parametric way to estimate the probability density function of a random variable. It is a fundamental data smoothing problem where inferences about the population are made, based on a finite data sample. In this case, we are using KDE to estimate the density of the origin points of the grab trips in the different regions of Singapore.\nIn the initial KDE graph, we can see that the density of the origin points in the different regions of Singapore are quite uniform. However, we can see that the density of the origin points in the central region of Singapore is higher than the other regions. This is expected as the central region of Singapore is the most densely populated area in Singapore.\nHowever, after recalculating the KDE graph using the fixed bandwidth method, we can see that the density of the origin points in the different regions of Singapore are quite uniform. This is expected as the different regions of Singapore are quite uniform in terms of population density.\n\n\n\n\ngridded_kde_originSG_bw &lt;- as.SpatialGridDataFrame.im(kde_originSG_bw)\nspplot(gridded_kde_originSG_bw)\n\n\n\n\nConverting gridded output into raster\n\nraster_kde_originSG_bw &lt;- raster(gridded_kde_originSG_bw)\n\n\nraster_kde_originSG_bw\n\nclass      : RasterLayer \ndimensions : 128, 128, 16384  (nrow, ncol, ncell)\nresolution : 0.4162063, 0.2250614  (x, y)\nextent     : 2.667538, 55.94194, 21.44847, 50.25633  (xmin, xmax, ymin, ymax)\ncrs        : NA \nsource     : memory\nnames      : v \nvalues     : 19.62512, 55.4141  (min, max)\n\n\nAssigning projection systems\n\nprojection(raster_kde_originSG_bw) &lt;- CRS(\"+init=EPSG:3414\")\nraster_kde_originSG_bw\n\nclass      : RasterLayer \ndimensions : 128, 128, 16384  (nrow, ncol, ncell)\nresolution : 0.4162063, 0.2250614  (x, y)\nextent     : 2.667538, 55.94194, 21.44847, 50.25633  (xmin, xmax, ymin, ymax)\ncrs        : +proj=tmerc +lat_0=1.36666666666667 +lon_0=103.833333333333 +k=1 +x_0=28001.642 +y_0=38744.572 +ellps=WGS84 +units=m +no_defs \nsource     : memory\nnames      : v \nvalues     : 19.62512, 55.4141  (min, max)\n\n\nvisualising the output\n\ntm_shape(raster_kde_originSG_bw) + \n  tm_raster(\"v\") +\n  tm_layout(legend.position = c(\"right\", \"bottom\"), frame = FALSE)\n\n\n\n\n\nset tmap mode to plot mode\n\ntmap_mode(\"plot\")\n\n\ntm_shape(raster_kde_originSG_bw) + \n  tm_raster(\"v\") +\n  tm_layout(legend.position = c(\"right\", \"bottom\"), frame = FALSE)\n\n\n\n\n\n\n\n\n\nstr(roads)\n\nClasses 'sf' and 'data.frame':  76993 obs. of  11 variables:\n $ osm_id  : chr  \"4386520\" \"4887867\" \"8096835\" \"9584642\" ...\n $ code    : int  5113 5122 5113 5115 5113 5122 5113 5113 5113 5113 ...\n $ fclass  : chr  \"primary\" \"residential\" \"primary\" \"tertiary\" ...\n $ name    : chr  \"Orchard Road\" \"Hougang Avenue 1\" \"Scotts Road\" \"Keng Lee Road\" ...\n $ ref     : chr  NA NA NA NA ...\n $ oneway  : chr  \"F\" \"B\" \"F\" \"F\" ...\n $ maxspeed: int  50 50 60 50 60 50 50 50 50 50 ...\n $ layer   : num  0 0 0 0 0 0 0 0 0 0 ...\n $ bridge  : chr  \"F\" \"F\" \"F\" \"F\" ...\n $ tunnel  : chr  \"F\" \"F\" \"F\" \"F\" ...\n $ geometry:sfc_GEOMETRY of length 76993; first list element:  'XY' num [1:2, 1:2] 27638 27643 32038 32035\n - attr(*, \"sf_column\")= chr \"geometry\"\n - attr(*, \"agr\")= Factor w/ 3 levels \"constant\",\"aggregate\",..: NA NA NA NA NA NA NA NA NA NA\n  ..- attr(*, \"names\")= chr [1:10] \"osm_id\" \"code\" \"fclass\" \"name\" ...\n\n\n\nst_crs(origin_sf)\n\nCoordinate Reference System:\n  User input: EPSG:3414 \n  wkt:\nPROJCRS[\"SVY21 / Singapore TM\",\n    BASEGEOGCRS[\"SVY21\",\n        DATUM[\"SVY21\",\n            ELLIPSOID[\"WGS 84\",6378137,298.257223563,\n                LENGTHUNIT[\"metre\",1]]],\n        PRIMEM[\"Greenwich\",0,\n            ANGLEUNIT[\"degree\",0.0174532925199433]],\n        ID[\"EPSG\",4757]],\n    CONVERSION[\"Singapore Transverse Mercator\",\n        METHOD[\"Transverse Mercator\",\n            ID[\"EPSG\",9807]],\n        PARAMETER[\"Latitude of natural origin\",1.36666666666667,\n            ANGLEUNIT[\"degree\",0.0174532925199433],\n            ID[\"EPSG\",8801]],\n        PARAMETER[\"Longitude of natural origin\",103.833333333333,\n            ANGLEUNIT[\"degree\",0.0174532925199433],\n            ID[\"EPSG\",8802]],\n        PARAMETER[\"Scale factor at natural origin\",1,\n            SCALEUNIT[\"unity\",1],\n            ID[\"EPSG\",8805]],\n        PARAMETER[\"False easting\",28001.642,\n            LENGTHUNIT[\"metre\",1],\n            ID[\"EPSG\",8806]],\n        PARAMETER[\"False northing\",38744.572,\n            LENGTHUNIT[\"metre\",1],\n            ID[\"EPSG\",8807]]],\n    CS[Cartesian,2],\n        AXIS[\"northing (N)\",north,\n            ORDER[1],\n            LENGTHUNIT[\"metre\",1]],\n        AXIS[\"easting (E)\",east,\n            ORDER[2],\n            LENGTHUNIT[\"metre\",1]],\n    USAGE[\n        SCOPE[\"Cadastre, engineering survey, topographic mapping.\"],\n        AREA[\"Singapore - onshore and offshore.\"],\n        BBOX[1.13,103.59,1.47,104.07]],\n    ID[\"EPSG\",3414]]\n\n\n\n\n\nroad_tmp_ls = st_cast(road_tmp, \"LINESTRING\")\nroad_jre_ls = st_cast(road_jre, \"LINESTRING\")\nroad_rch_ls = st_cast(road_rch, \"LINESTRING\")\nroad_wld_ls = st_cast(road_wld, \"LINESTRING\")\n\nThe line distances is set to 200m and the minimum distance is set to 50m. This relates to the real life scenario where a person wanting to board a Grab will try to book the ride within the area.\n\nlixels_tmp &lt;- lixelize_lines(road_tmp_ls, 200, mindist = 50)\nlixels_jre &lt;- lixelize_lines(road_jre_ls, 200, mindist = 50)\nlixels_rch &lt;- lixelize_lines(road_rch_ls, 200, mindist = 50)\nlixels_wld &lt;- lixelize_lines(road_wld_ls, 200, mindist = 50)\n\n\nsamples_tmp &lt;- lines_center(lixels_tmp)\nsamples_jre &lt;- lines_center(lixels_jre)\nsamples_rch &lt;- lines_center(lixels_rch)\nsamples_wld &lt;- lines_center(lixels_wld)\n\n\n\n\nWe will be using the nkde function from the spatstat package to get the density of the origin points in the different regions of Singapore.\n\ndensities_tmp &lt;- nkde(road_tmp_ls['name'], \n                  events = origin_tmp,\n                  w = rep(1,nrow(origin_tmp)),\n                  samples = samples_tmp,\n                  kernel_name = \"quartic\",\n                  bw = 200, \n                  div= \"bw\", \n                  method = \"simple\", \n                  digits = 1, \n                  tol = 1,\n                  grid_shape = c(1,1), \n                  max_depth = 8,\n                  agg = 5, #we aggregate events within a 5m radius (faster calculation)\n                  sparse = TRUE,\n                  verbose = FALSE)\n\n\ndensities_jre &lt;- nkde(road_jre_ls['name'], \n                  events = origin_jre,\n                  w = rep(1,nrow(origin_jre)),\n                  samples = samples_jre,\n                  kernel_name = \"quartic\",\n                  bw = 200, \n                  div= \"bw\", \n                  method = \"simple\", \n                  digits = 1, \n                  tol = 1,\n                  grid_shape = c(1,1), \n                  max_depth = 8,\n                  agg = 5, #we aggregate events within a 5m radius (faster calculation)\n                  sparse = TRUE,\n                  verbose = FALSE)\n\n\ndensities_rch &lt;- nkde(road_rch_ls['name'], \n                  events = origin_rch,\n                  w = rep(1,nrow(origin_rch)),\n                  samples = samples_rch,\n                  kernel_name = \"quartic\",\n                  bw = 200, \n                  div= \"bw\", \n                  method = \"simple\", \n                  digits = 1, \n                  tol = 1,\n                  grid_shape = c(1,1), \n                  max_depth = 8,\n                  agg = 5, #we aggregate events within a 5m radius (faster calculation)\n                  sparse = TRUE,\n                  verbose = FALSE)\n\n\ndensities_wld &lt;- nkde(road_wld_ls['name'], \n                  events = origin_wld,\n                  w = rep(1,nrow(origin_wld)),\n                  samples = samples_wld,\n                  kernel_name = \"quartic\",\n                  bw = 200, \n                  div= \"bw\", \n                  method = \"simple\", \n                  digits = 1, \n                  tol = 1,\n                  grid_shape = c(1,1), \n                  max_depth = 8,\n                  agg = 5, #we aggregate events within a 5m radius (faster calculation)\n                  sparse = TRUE,\n                  verbose = FALSE)\n\n\nsamples_tmp$density &lt;- densities_tmp\nlixels_tmp$density &lt;- densities_tmp\nsamples_jre$density &lt;- densities_jre\nlixels_jre$density &lt;- densities_jre\nsamples_rch$density &lt;- densities_rch\nlixels_rch$density &lt;- densities_rch\nsamples_wld$density &lt;- densities_wld\nlixels_wld$density &lt;- densities_wld\n\nSimilar to KDE, we’ll need to rescale the density to aid visualisation\n\n# rescaling to help the mapping\n# !!! do not run more than once. \n\nsamples_tmp$density &lt;- samples_tmp$density*1000\nlixels_tmp$density &lt;- lixels_tmp$density*1000\nsamples_jre$density &lt;- samples_jre$density*1000\nlixels_jre$density &lt;- lixels_jre$density*1000\nsamples_rch$density &lt;- samples_rch$density*1000\nlixels_rch$density &lt;- lixels_rch$density*1000\nsamples_wld$density &lt;- samples_wld$density*1000\nlixels_wld$density &lt;- lixels_wld$density*1000\n\n\n\n\n\ntm_shape(lixels_tmp)+\n  tm_lines(col=\"density\",lwd=5)+\ntm_shape(origin_tmp)+\n  tm_dots(alpha = 0.3)\n\n\n\n\n\ntm_shape(lixels_jre)+\n  tm_lines(col=\"density\",lwd=5)+\ntm_shape(origin_jre)+\n  tm_dots(alpha = 0.3)\n\n\n\n\n\ntm_shape(lixels_rch)+\n  tm_lines(col=\"density\",lwd=5)+\ntm_shape(origin_rch)+\n  tm_dots(alpha = 0.3)\n\n\n\n\n\ntm_shape(lixels_wld)+\n  tm_lines(col=\"density\",lwd=5)+\ntm_shape(origin_wld)+\n  tm_dots(alpha = 0.3)\n\n\n\n\n\n\n\nSimilar to KDE, it can be seen that the density of the origin points in the different regions of Singapore are quite uniform. This is expected as the different regions of Singapore are quite uniform in terms of population density.\nHowever, the central regions of Singapore have a higher density of origin points. This is expected as the central region of Singapore is the most densely populated area in Singapore.\nFor woodlands, the density is saturated in 3 major streets. Tihs can be due to the fact that woodlands is a residential area and the streets are the main roads to the residential areas. Moreover, since it’s in the south of woodlands, it can mean that the area is closer to the central of Singapore. Thus, it is expected to have a higher densitiy.\nFor Tampines, the density is pretty sparsed. The highest density street is towards the east of Tampines. This could be an indicative sign where most of the Grab trips are going towards the Airport or ECP or TPE.\nFor Jurong East, the density is pretty sparsed. The highest density street is towards the south of Jurong East. This could be an indicative sign where most of the Grab trips are going towards the north-west of Singapore. Contrary to Woodlands, it seems as if more trips are heading outwards of the central region of Singapore.\nFor Rochor, the density becomes very saturated along the 3 intersections. This could be due to the fact that Rochor is a commercial area and the streets are the main roads to the commercial areas. Moreover, since it’s in the central of Singapore, it is expected to have a higher density. However, if the majority of the density lies along the same vacinity, it might cause jams and traffic congestion. Therefore, it should be taken into consideration for future urban planning."
  },
  {
    "objectID": "Take-home_Ex/Take-home_Ex01/Take-home_Ex01.html#introduction",
    "href": "Take-home_Ex/Take-home_Ex01/Take-home_Ex01.html#introduction",
    "title": "Take home Exercise 01",
    "section": "",
    "text": "Human mobility, the movement of human beings in space and time, reflects the spatial-temporal characteristics of human behavior. With the advancement Information and Communication Technologies (ICT) especially smart phone, a large volume of data related to human mobility have been collected. By using appropriate GIS analysis methods, these data are potentially useful in supporting smart city planning and management.\nIn Singapore, one of the important source of data related to human mobility is from Land Transport Authority (LTA) DataMall. Two data sets related to human mobility are provided by the portal, they are: Passenger Volume by Origin Destination Train Stations and Passenger Volume by Origin Destination Bus Stops. One of the limitation of these data sets is that their location are biased to either bus stops or MRT/LRT stations. In 2020, another very interesting human mobility data set called Grab Posisi was released by GRAB, one of the largest shared taxi operator in South-east Asia. There are two data sets been released and one of them is for Singapore.\nThe Task\n\nUsing appropriate function of sf and tidyverse, preparing the following geospatial data layer in sf tibble data.frames:\n\nGrab taxi location points either by origins or destinations.\nRoad layer within Singapore excluding outer islands. \nSingapore boundary layer excluding outer islands \n\nUsing the extracted data, derive traditional Kernel Density Estimation layers. \nUsing the extracted data, derive either Network Kernel Density Estimation (NKDE) or Temporal Network Kernel Density Estimation (TNKDE) \nUsing appropriate tmap functions, display the kernel density layers on openstreetmap of Singapore.\nDescribe the spatial patterns revealed by the kernel density maps."
  },
  {
    "objectID": "Take-home_Ex/Take-home_Ex01/Take-home_Ex01.html#install-and-load-packages",
    "href": "Take-home_Ex/Take-home_Ex01/Take-home_Ex01.html#install-and-load-packages",
    "title": "Take home Exercise 01",
    "section": "",
    "text": "pacman:: p_load (arrow, lubridate, tidyverse, tmap, sf, raster, spatstat, tmap,maptools)"
  },
  {
    "objectID": "Take-home_Ex/Take-home_Ex01/Take-home_Ex01.html#import-grab-posisi-data",
    "href": "Take-home_Ex/Take-home_Ex01/Take-home_Ex01.html#import-grab-posisi-data",
    "title": "Take home Exercise 01",
    "section": "",
    "text": "df &lt;- read_parquet(\"data/GrabPosisi/part-00000-8bbff892-97d2-4011-9961-703e38972569.c000.snappy.parquet\")"
  },
  {
    "objectID": "Take-home_Ex/Take-home_Ex01/Take-home_Ex01.html#import-singapore-master-plan-2019-subzone-boundary-no-sea-data",
    "href": "Take-home_Ex/Take-home_Ex01/Take-home_Ex01.html#import-singapore-master-plan-2019-subzone-boundary-no-sea-data",
    "title": "Take home Exercise 01",
    "section": "",
    "text": "mpsz_sf &lt;- st_read(\"data/mpsz.kml\")"
  },
  {
    "objectID": "Take-home_Ex/Take-home_Ex01/Take-home_Ex01.html#import-road-data-set-from-openstreetmap",
    "href": "Take-home_Ex/Take-home_Ex01/Take-home_Ex01.html#import-road-data-set-from-openstreetmap",
    "title": "Take home Exercise 01",
    "section": "",
    "text": "roads_sf &lt;- st_read(dsn = \"data\", \n                layer = \"gis_osm_roads_free_1\")"
  },
  {
    "objectID": "Take-home_Ex/Take-home_Ex01/Take-home_Ex01.html#handle-invalid-data",
    "href": "Take-home_Ex/Take-home_Ex01/Take-home_Ex01.html#handle-invalid-data",
    "title": "Take home Exercise 01",
    "section": "",
    "text": "As a precaution, let’s check all the main datasets for invalid data. We will use the st_is_valid function from the sf package to do this. We will then use the which function to get the indices of the invalid data and then use the length function to get the number of invalid data.\n\n# the st_is_valid function checks whether a geometry is valid\n# which returns the indices of certain values based on logical conditions\n# length returns the length of data objects\nlength(which(st_is_valid(mpsz_sf) == FALSE))\n\n\nlength(which(st_is_valid(mpsz_sf_no_outer) == FALSE))\n\n\nlength(which(st_is_valid(mpsz_boundary) == FALSE))\n\n\nlength(which(st_is_valid(road) == FALSE))\n\n\nlength(which(st_is_valid(origin_sf) == FALSE))\n\noh no! original mpsz has 6 invalid data! lets remove it.\n\nmpsz_sf &lt;- st_make_valid(mpsz_sf)\n\nthen we’ll check again\n\nlength(which(st_is_valid(mpsz_sf) == FALSE))\n\nwe’re good to go!\n\n\nUsing the write_rds function from the arrow package, we will store the data in rds format for future. This allows us to reduce the number of code chunks to run and also reduce the computational time.\n\nwrite_rds(mpsz_sf_no_outer, \"data/rds/mpsz.rds\")\nwrite_rds(mpsz_boundary, \"data/rds/sg_sf.rds\")\nwrite_rds(road, \"data/rds/roads_sf.rds\")\nwrite_rds(origin_sf, \"data/rds/origin_sf.rds\")\n\n\n\n\n\norigin_sf &lt;- read_rds(\"data/rds/origin_sf.rds\")\nsg_sf &lt;- read_rds(\"data/rds/sg_sf.rds\")\nmpsz &lt;- read_rds(\"data/rds/mpsz.rds\")\nroads &lt;- read_rds(\"data/rds/roads_sf.rds\")"
  },
  {
    "objectID": "Take-home_Ex/Take-home_Ex01/Take-home_Ex01.html#convert-mpsz_sf-into-3414",
    "href": "Take-home_Ex/Take-home_Ex01/Take-home_Ex01.html#convert-mpsz_sf-into-3414",
    "title": "Take home Exercise 01",
    "section": "",
    "text": "st_crs(mpsz_sf)\n\n\nmpsz_sf &lt;- st_transform(mpsz_sf,3414)\n\n\nst_crs(mpsz_sf)"
  },
  {
    "objectID": "Take-home_Ex/Take-home_Ex01/Take-home_Ex01.html#convert-roads_sf-into-3414",
    "href": "Take-home_Ex/Take-home_Ex01/Take-home_Ex01.html#convert-roads_sf-into-3414",
    "title": "Take home Exercise 01",
    "section": "",
    "text": "st_crs(roads_sf)\n\n\nroads_sf_3414 &lt;- st_transform(roads_sf,3414)\n\n\nroads_sf_3414 &lt;- transform(roads_sf, crs = 3414)\n\n\nst_crs(roads_sf_3414)"
  },
  {
    "objectID": "Take-home_Ex/Take-home_Ex01/Take-home_Ex01.html#storing-data-in-rds-for-future-use",
    "href": "Take-home_Ex/Take-home_Ex01/Take-home_Ex01.html#storing-data-in-rds-for-future-use",
    "title": "Take home Exercise 01",
    "section": "",
    "text": "Also because my laptop is terrible\n\nwrite_rds(mpsz_sf, \"data/rds/mpsz.rds\")\nwrite_rds(roads_sf_3414, \"data/rds/roads_sf.rds\")"
  },
  {
    "objectID": "Take-home_Ex/Take-home_Ex01/Take-home_Ex01.html#data-preparation-for-grabposisi-data",
    "href": "Take-home_Ex/Take-home_Ex01/Take-home_Ex01.html#data-preparation-for-grabposisi-data",
    "title": "Take home Exercise 01",
    "section": "",
    "text": "df$pingtimestamp &lt;- as_datetime(df$pingtimestamp)\n\n\n\n\n\norigin_df &lt;- df %&gt;%  \n  group_by(trj_id) %&gt;% # group by trip id\n  arrange(pingtimestamp) %&gt;% # arrange by pingtimestamp to sort the data\n  filter(row_number() == 1) %&gt;% # get the first row of all the trip id\n  mutate(weekday = wday(pingtimestamp, label = TRUE, abbr = TRUE), # get the day of the week\n         start_hr = factor(hour(pingtimestamp)),# use factor to get ordinal data\n         day= factor(day(pingtimestamp)))\n\n\n\n\n\ndestination_df &lt;- df %&gt;%  \n  group_by(trj_id) %&gt;% # group by trip id\n  arrange(desc(pingtimestamp)) %&gt;%  # arrange descending by pingtimestamp to sort the data\n  filter(row_number() == 1) %&gt;% # get the last row of all the trip id\n  mutate(weekday = wday(pingtimestamp, label = TRUE, abbr = TRUE), # get the day of the week\n         end_hr = factor(hour(pingtimestamp)),# use factor to get ordinal data\n         day= factor(day(pingtimestamp)))\n\n\n\n\n\nwrite_rds(origin_df, \"data/rds/origin_df.rds\")\nwrite_rds(destination_df, \"data/rds/destination_df.rds\")"
  },
  {
    "objectID": "Take-home_Ex/Take-home_Ex01/Take-home_Ex01.html#load-data-from-rds",
    "href": "Take-home_Ex/Take-home_Ex01/Take-home_Ex01.html#load-data-from-rds",
    "title": "Take home Exercise 01",
    "section": "",
    "text": "origin_df &lt;- read_rds(\"data/rds/origin_df.rds\")\ndestination_df &lt;- read_rds(\"data/rds/destination_df.rds\")\nmpsz &lt;- read_rds(\"data/rds/mpsz.rds\")\nroads &lt;- read_rds(\"data/rds/roads_sf.rds\")\n\n\nBS &lt;- st_read(dsn = \"data/BusStopLocation\", \n                layer = \"BusStop\")\n\nReading layer `BusStop' from data source \n  `C:\\EbenezerHo\\IS415-GAA\\Take-home_Ex\\Take-home_Ex01\\data\\BusStopLocation' \n  using driver `ESRI Shapefile'\nSimple feature collection with 5161 features and 3 fields\nGeometry type: POINT\nDimension:     XY\nBounding box:  xmin: 3970.122 ymin: 26482.1 xmax: 48284.56 ymax: 52983.82\nProjected CRS: SVY21\n\n\n\nbus_stop &lt;- BS['BUS_ROOF_N']\n\n\nbus_stop &lt;- st_transform(bus_stop,3414)\n\n\nst_crs(bus_stop)\n\nCoordinate Reference System:\n  User input: EPSG:3414 \n  wkt:\nPROJCRS[\"SVY21 / Singapore TM\",\n    BASEGEOGCRS[\"SVY21\",\n        DATUM[\"SVY21\",\n            ELLIPSOID[\"WGS 84\",6378137,298.257223563,\n                LENGTHUNIT[\"metre\",1]]],\n        PRIMEM[\"Greenwich\",0,\n            ANGLEUNIT[\"degree\",0.0174532925199433]],\n        ID[\"EPSG\",4757]],\n    CONVERSION[\"Singapore Transverse Mercator\",\n        METHOD[\"Transverse Mercator\",\n            ID[\"EPSG\",9807]],\n        PARAMETER[\"Latitude of natural origin\",1.36666666666667,\n            ANGLEUNIT[\"degree\",0.0174532925199433],\n            ID[\"EPSG\",8801]],\n        PARAMETER[\"Longitude of natural origin\",103.833333333333,\n            ANGLEUNIT[\"degree\",0.0174532925199433],\n            ID[\"EPSG\",8802]],\n        PARAMETER[\"Scale factor at natural origin\",1,\n            SCALEUNIT[\"unity\",1],\n            ID[\"EPSG\",8805]],\n        PARAMETER[\"False easting\",28001.642,\n            LENGTHUNIT[\"metre\",1],\n            ID[\"EPSG\",8806]],\n        PARAMETER[\"False northing\",38744.572,\n            LENGTHUNIT[\"metre\",1],\n            ID[\"EPSG\",8807]]],\n    CS[Cartesian,2],\n        AXIS[\"northing (N)\",north,\n            ORDER[1],\n            LENGTHUNIT[\"metre\",1]],\n        AXIS[\"easting (E)\",east,\n            ORDER[2],\n            LENGTHUNIT[\"metre\",1]],\n    USAGE[\n        SCOPE[\"Cadastre, engineering survey, topographic mapping.\"],\n        AREA[\"Singapore - onshore and offshore.\"],\n        BBOX[1.13,103.59,1.47,104.07]],\n    ID[\"EPSG\",3414]]\n\n\n\ntm_shape(mpsz)+\n  tm_polygons()+\n  tm_shape(bus_stop)+\n  tm_dots(alpha=0.4, size = 0.05, col = \"red\")"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex04/Hands-on_Ex04.html",
    "href": "Hands-on_Ex/Hands-on_Ex04/Hands-on_Ex04.html",
    "title": "Hands on Exercise 04",
    "section": "",
    "text": "pacman::p_load(sf, spdep, tmap, tidyverse, knitr)\n\n\n\n\n\nhunan &lt;- st_read(dsn = \"data/geospatial\", \n                 layer = \"Hunan\")\n\nReading layer `Hunan' from data source \n  `C:\\EbenezerHo\\IS415-GAA\\Hands-on_Ex\\Hands-on_Ex04\\data\\geospatial' \n  using driver `ESRI Shapefile'\nSimple feature collection with 88 features and 7 fields\nGeometry type: POLYGON\nDimension:     XY\nBounding box:  xmin: 108.7831 ymin: 24.6342 xmax: 114.2544 ymax: 30.12812\nGeodetic CRS:  WGS 84\n\n\n\nhunan2012 &lt;- read_csv(\"data/aspatial/Hunan_2012.csv\")\n\n\n\n\n\nhunan &lt;- left_join(hunan,hunan2012)%&gt;% select(1:4, 7, 15)\n# no unique identifier cos 2 files got same name. \n# use by = to specify the column to join on\n# select indicates that i want col 1,2,3,4,7,15"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex04/Hands-on_Ex04.html#installing-and-loading-packages",
    "href": "Hands-on_Ex/Hands-on_Ex04/Hands-on_Ex04.html#installing-and-loading-packages",
    "title": "Hands on Exercise 04",
    "section": "",
    "text": "pacman::p_load(sf, spdep, tmap, tidyverse, knitr)"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex04/Hands-on_Ex04.html#importing-data",
    "href": "Hands-on_Ex/Hands-on_Ex04/Hands-on_Ex04.html#importing-data",
    "title": "Hands on Exercise 04",
    "section": "",
    "text": "hunan &lt;- st_read(dsn = \"data/geospatial\", \n                 layer = \"Hunan\")\n\nReading layer `Hunan' from data source \n  `C:\\EbenezerHo\\IS415-GAA\\Hands-on_Ex\\Hands-on_Ex04\\data\\geospatial' \n  using driver `ESRI Shapefile'\nSimple feature collection with 88 features and 7 fields\nGeometry type: POLYGON\nDimension:     XY\nBounding box:  xmin: 108.7831 ymin: 24.6342 xmax: 114.2544 ymax: 30.12812\nGeodetic CRS:  WGS 84\n\n\n\nhunan2012 &lt;- read_csv(\"data/aspatial/Hunan_2012.csv\")"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex04/Hands-on_Ex04.html#performing-relational-join",
    "href": "Hands-on_Ex/Hands-on_Ex04/Hands-on_Ex04.html#performing-relational-join",
    "title": "Hands on Exercise 04",
    "section": "",
    "text": "hunan &lt;- left_join(hunan,hunan2012)%&gt;% select(1:4, 7, 15)\n# no unique identifier cos 2 files got same name. \n# use by = to specify the column to join on\n# select indicates that i want col 1,2,3,4,7,15"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex04/Hands-on_Ex04.html#computing-queen-contiguity-based-neighbours",
    "href": "Hands-on_Ex/Hands-on_Ex04/Hands-on_Ex04.html#computing-queen-contiguity-based-neighbours",
    "title": "Hands on Exercise 04",
    "section": "Computing (QUEEN) contiguity based neighbours",
    "text": "Computing (QUEEN) contiguity based neighbours\n\nwm_q &lt;- poly2nb(hunan, queen=TRUE)\nsummary(wm_q)\n\nNeighbour list object:\nNumber of regions: 88 \nNumber of nonzero links: 448 \nPercentage nonzero weights: 5.785124 \nAverage number of links: 5.090909 \nLink number distribution:\n\n 1  2  3  4  5  6  7  8  9 11 \n 2  2 12 16 24 14 11  4  2  1 \n2 least connected regions:\n30 65 with 1 link\n1 most connected region:\n85 with 11 links\n\n# show summary of the list \n# from the summary, we can see that it looks like a normal distribution skewed abit to the lower tiers (right side).\n# 85 with 11 links means polygon 85 has 11 links\n\nThe summary report above shows that there are 88 area units in Hunan. The most connected area unit has 11 neighbours. There are two area units with only one heighbours.\nFor each polygon in our polygon object, wm_q lists all neighboring polygons. For example, to see the neighbors for the first polygon in the object, type:\n\nwm_q[[1]]\n\n[1]  2  3  4 57 85\n\n\nPolygon 1 has 5 neighbors. The numbers represent the polygon IDs as stored in hunan SpatialPolygonsDataFrame class.\nWe can retrive the county name of Polygon ID=1 by using the code chunk below:\n\nhunan$County[1]\n\n[1] \"Anxiang\"\n\n# inorder to find the name, use the original data frame instead of the weighted matrix \n\nThe output reveals that Polygon ID=1 is Anxiang county.\nTo reveal the county names of the five neighboring polygons, the code chunk will be used:\n\nhunan$NAME_3[c(2,3,4,57,85)]\n\n[1] \"Hanshou\" \"Jinshi\"  \"Li\"      \"Nan\"     \"Taoyuan\"\n\n\nWe can retrieve the GDPPC of these five countries by using the code chunk below.\n\nnb1 &lt;- wm_q[[1]]\nnb1 &lt;- hunan$GDPPC[nb1]\nnb1\n\n[1] 20981 34592 24473 21311 22879\n\n\nThe printed output above shows that the GDPPC of the five nearest neighbours based on Queen’s method are 20981, 34592, 24473, 21311 and 22879 respectively.\nYou can display the complete weight matrix by using str().\n\nstr(wm_q)\n\nList of 88\n $ : int [1:5] 2 3 4 57 85\n $ : int [1:5] 1 57 58 78 85\n $ : int [1:4] 1 4 5 85\n $ : int [1:4] 1 3 5 6\n $ : int [1:4] 3 4 6 85\n $ : int [1:5] 4 5 69 75 85\n $ : int [1:4] 67 71 74 84\n $ : int [1:7] 9 46 47 56 78 80 86\n $ : int [1:6] 8 66 68 78 84 86\n $ : int [1:8] 16 17 19 20 22 70 72 73\n $ : int [1:3] 14 17 72\n $ : int [1:5] 13 60 61 63 83\n $ : int [1:4] 12 15 60 83\n $ : int [1:3] 11 15 17\n $ : int [1:4] 13 14 17 83\n $ : int [1:5] 10 17 22 72 83\n $ : int [1:7] 10 11 14 15 16 72 83\n $ : int [1:5] 20 22 23 77 83\n $ : int [1:6] 10 20 21 73 74 86\n $ : int [1:7] 10 18 19 21 22 23 82\n $ : int [1:5] 19 20 35 82 86\n $ : int [1:5] 10 16 18 20 83\n $ : int [1:7] 18 20 38 41 77 79 82\n $ : int [1:5] 25 28 31 32 54\n $ : int [1:5] 24 28 31 33 81\n $ : int [1:4] 27 33 42 81\n $ : int [1:3] 26 29 42\n $ : int [1:5] 24 25 33 49 54\n $ : int [1:3] 27 37 42\n $ : int 33\n $ : int [1:8] 24 25 32 36 39 40 56 81\n $ : int [1:8] 24 31 50 54 55 56 75 85\n $ : int [1:5] 25 26 28 30 81\n $ : int [1:3] 36 45 80\n $ : int [1:6] 21 41 47 80 82 86\n $ : int [1:6] 31 34 40 45 56 80\n $ : int [1:4] 29 42 43 44\n $ : int [1:4] 23 44 77 79\n $ : int [1:5] 31 40 42 43 81\n $ : int [1:6] 31 36 39 43 45 79\n $ : int [1:6] 23 35 45 79 80 82\n $ : int [1:7] 26 27 29 37 39 43 81\n $ : int [1:6] 37 39 40 42 44 79\n $ : int [1:4] 37 38 43 79\n $ : int [1:6] 34 36 40 41 79 80\n $ : int [1:3] 8 47 86\n $ : int [1:5] 8 35 46 80 86\n $ : int [1:5] 50 51 52 53 55\n $ : int [1:4] 28 51 52 54\n $ : int [1:5] 32 48 52 54 55\n $ : int [1:3] 48 49 52\n $ : int [1:5] 48 49 50 51 54\n $ : int [1:3] 48 55 75\n $ : int [1:6] 24 28 32 49 50 52\n $ : int [1:5] 32 48 50 53 75\n $ : int [1:7] 8 31 32 36 78 80 85\n $ : int [1:6] 1 2 58 64 76 85\n $ : int [1:5] 2 57 68 76 78\n $ : int [1:4] 60 61 87 88\n $ : int [1:4] 12 13 59 61\n $ : int [1:7] 12 59 60 62 63 77 87\n $ : int [1:3] 61 77 87\n $ : int [1:4] 12 61 77 83\n $ : int [1:2] 57 76\n $ : int 76\n $ : int [1:5] 9 67 68 76 84\n $ : int [1:4] 7 66 76 84\n $ : int [1:5] 9 58 66 76 78\n $ : int [1:3] 6 75 85\n $ : int [1:3] 10 72 73\n $ : int [1:3] 7 73 74\n $ : int [1:5] 10 11 16 17 70\n $ : int [1:5] 10 19 70 71 74\n $ : int [1:6] 7 19 71 73 84 86\n $ : int [1:6] 6 32 53 55 69 85\n $ : int [1:7] 57 58 64 65 66 67 68\n $ : int [1:7] 18 23 38 61 62 63 83\n $ : int [1:7] 2 8 9 56 58 68 85\n $ : int [1:7] 23 38 40 41 43 44 45\n $ : int [1:8] 8 34 35 36 41 45 47 56\n $ : int [1:6] 25 26 31 33 39 42\n $ : int [1:5] 20 21 23 35 41\n $ : int [1:9] 12 13 15 16 17 18 22 63 77\n $ : int [1:6] 7 9 66 67 74 86\n $ : int [1:11] 1 2 3 5 6 32 56 57 69 75 ...\n $ : int [1:9] 8 9 19 21 35 46 47 74 84\n $ : int [1:4] 59 61 62 88\n $ : int [1:2] 59 87\n - attr(*, \"class\")= chr \"nb\"\n - attr(*, \"region.id\")= chr [1:88] \"1\" \"2\" \"3\" \"4\" ...\n - attr(*, \"call\")= language poly2nb(pl = hunan, queen = TRUE)\n - attr(*, \"type\")= chr \"queen\"\n - attr(*, \"sym\")= logi TRUE"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex04/Hands-on_Ex04.html#creating-rook-contiguity-based-neighbours",
    "href": "Hands-on_Ex/Hands-on_Ex04/Hands-on_Ex04.html#creating-rook-contiguity-based-neighbours",
    "title": "Hands on Exercise 04",
    "section": "Creating (ROOK) contiguity based neighbours",
    "text": "Creating (ROOK) contiguity based neighbours\n\nwm_r &lt;- poly2nb(hunan, queen=FALSE)\nsummary(wm_r)\n\nNeighbour list object:\nNumber of regions: 88 \nNumber of nonzero links: 440 \nPercentage nonzero weights: 5.681818 \nAverage number of links: 5 \nLink number distribution:\n\n 1  2  3  4  5  6  7  8  9 10 \n 2  2 12 20 21 14 11  3  2  1 \n2 least connected regions:\n30 65 with 1 link\n1 most connected region:\n85 with 10 links\n\n\nThe summary report above shows that there are 88 area units in Hunan. The most connect area unit has 10 neighbours. There are two area units with only one heighbours."
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex04/Hands-on_Ex04.html#visualising-contiguity-weights",
    "href": "Hands-on_Ex/Hands-on_Ex04/Hands-on_Ex04.html#visualising-contiguity-weights",
    "title": "Hands on Exercise 04",
    "section": "Visualising contiguity weights",
    "text": "Visualising contiguity weights\nA connectivity graph takes a point and displays a line to each neighboring point. We are working with polygons at the moment, so we will need to get points in order to make our connectivity graphs. The most typically method for this will be polygon centroids. We will calculate these in the sf package before moving onto the graphs. Getting Latitude and Longitude of Polygon Centroids\nWe will need points to associate with each polygon before we can make our connectivity graph. It will be a little more complicated than just running st_centroid on the sf object: us.bound. We need the coordinates in a separate data frame for this to work. To do this we will use a mapping function. The mapping function applies a given function to each element of a vector and returns a vector of the same length. Our input vector will be the geometry column of us.bound. Our function will be st_centroid. We will be using map_dbl variation of map from the purrr package. For more documentation, check out map documentation\nTo get our longitude values we map the st_centroid function over the geometry column of us.bound and access the longitude value through double bracket notation [[]] and 1. This allows us to get only the longitude, which is the first value in each centroid.\n\nlongitude &lt;- map_dbl(hunan$geometry, ~st_centroid(.x)[[1]])\n# since data set polygon is alw long-lat, we do long first then lat\n# st_centroid gets the centroid of hunan geometry \n\nWe do the same for latitude with one key difference. We access the second value per each centroid with [[2]].\n\nlatitude &lt;- map_dbl(hunan$geometry, ~st_centroid(.x)[[2]])\n\nNow that we have latitude and longitude, we use cbind to put longitude and latitude into the same object.\n\ncoords &lt;- cbind(longitude, latitude)\n\n\nhead(coords)\n\n     longitude latitude\n[1,]  112.1531 29.44362\n[2,]  112.0372 28.86489\n[3,]  111.8917 29.47107\n[4,]  111.7031 29.74499\n[5,]  111.6138 29.49258\n[6,]  111.0341 29.79863\n\n\n\nPlotting Queen contiguity based neighbours map\n\nplot(hunan$geometry, border=\"lightgrey\")\nplot(wm_q, coords, pch = 19, cex = 0.6, add = TRUE, col= \"red\")\n\n\n\n\n\n\nPlotting Rook contiguity based neighbours map\n\nplot(hunan$geometry, border=\"lightgrey\")\nplot(wm_r, coords, pch = 19, cex = 0.6, add = TRUE, col = \"red\")\n\n\n\n\n\n\nPlotting both Queen and Rook contiguity based neighbours maps\n\npar(mfrow=c(1,2))\nplot(hunan$geometry, border=\"lightgrey\", main=\"Queen Contiguity\")\nplot(wm_q, coords, pch = 19, cex = 0.6, add = TRUE, col= \"red\")\nplot(hunan$geometry, border=\"lightgrey\", main=\"Rook Contiguity\")\nplot(wm_r, coords, pch = 19, cex = 0.6, add = TRUE, col = \"red\")"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex04/Hands-on_Ex04.html#determine-the-cut-off-distance",
    "href": "Hands-on_Ex/Hands-on_Ex04/Hands-on_Ex04.html#determine-the-cut-off-distance",
    "title": "Hands on Exercise 04",
    "section": "Determine the cut-off distance",
    "text": "Determine the cut-off distance\n\n#coords &lt;- coordinates(hunan)\nk1 &lt;- knn2nb(knearneigh(coords))\nk1dists &lt;- unlist(nbdists(k1, coords, longlat = TRUE))\nsummary(k1dists)\n\n   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. \n  24.79   32.57   38.01   39.07   44.52   61.79 \n\n# longlat = true converts the unit distance to latlong \n\nThe summary report shows that the largest first nearest neighbour distance is 61.79 km, so using this as the upper threshold gives certainty that all units will have at least one neighbour."
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex04/Hands-on_Ex04.html#computing-fixed-distance-weight-matrix",
    "href": "Hands-on_Ex/Hands-on_Ex04/Hands-on_Ex04.html#computing-fixed-distance-weight-matrix",
    "title": "Hands on Exercise 04",
    "section": "Computing fixed distance weight matrix",
    "text": "Computing fixed distance weight matrix\n\nwm_d62 &lt;- dnearneigh(coords, 0, 62, longlat = TRUE)\nwm_d62\n\nNeighbour list object:\nNumber of regions: 88 \nNumber of nonzero links: 324 \nPercentage nonzero weights: 4.183884 \nAverage number of links: 3.681818 \n\n\nQuiz: What is the meaning of “Average number of links: 3.681818” shown above?\nit means that on average each polygon has 3.68 neighbours within the distance of 62 km.\n\nstr(wm_d62)\n\nList of 88\n $ : int [1:5] 3 4 5 57 64\n $ : int [1:4] 57 58 78 85\n $ : int [1:4] 1 4 5 57\n $ : int [1:3] 1 3 5\n $ : int [1:4] 1 3 4 85\n $ : int 69\n $ : int [1:2] 67 84\n $ : int [1:4] 9 46 47 78\n $ : int [1:4] 8 46 68 84\n $ : int [1:4] 16 22 70 72\n $ : int [1:3] 14 17 72\n $ : int [1:5] 13 60 61 63 83\n $ : int [1:4] 12 15 60 83\n $ : int [1:2] 11 17\n $ : int 13\n $ : int [1:4] 10 17 22 83\n $ : int [1:3] 11 14 16\n $ : int [1:3] 20 22 63\n $ : int [1:5] 20 21 73 74 82\n $ : int [1:5] 18 19 21 22 82\n $ : int [1:6] 19 20 35 74 82 86\n $ : int [1:4] 10 16 18 20\n $ : int [1:3] 41 77 82\n $ : int [1:4] 25 28 31 54\n $ : int [1:4] 24 28 33 81\n $ : int [1:4] 27 33 42 81\n $ : int [1:2] 26 29\n $ : int [1:6] 24 25 33 49 52 54\n $ : int [1:2] 27 37\n $ : int 33\n $ : int [1:2] 24 36\n $ : int 50\n $ : int [1:5] 25 26 28 30 81\n $ : int [1:3] 36 45 80\n $ : int [1:6] 21 41 46 47 80 82\n $ : int [1:5] 31 34 45 56 80\n $ : int [1:2] 29 42\n $ : int [1:3] 44 77 79\n $ : int [1:4] 40 42 43 81\n $ : int [1:3] 39 45 79\n $ : int [1:5] 23 35 45 79 82\n $ : int [1:5] 26 37 39 43 81\n $ : int [1:3] 39 42 44\n $ : int [1:2] 38 43\n $ : int [1:6] 34 36 40 41 79 80\n $ : int [1:5] 8 9 35 47 86\n $ : int [1:5] 8 35 46 80 86\n $ : int [1:5] 50 51 52 53 55\n $ : int [1:4] 28 51 52 54\n $ : int [1:6] 32 48 51 52 54 55\n $ : int [1:4] 48 49 50 52\n $ : int [1:6] 28 48 49 50 51 54\n $ : int [1:2] 48 55\n $ : int [1:5] 24 28 49 50 52\n $ : int [1:4] 48 50 53 75\n $ : int 36\n $ : int [1:5] 1 2 3 58 64\n $ : int [1:5] 2 57 64 66 68\n $ : int [1:3] 60 87 88\n $ : int [1:4] 12 13 59 61\n $ : int [1:5] 12 60 62 63 87\n $ : int [1:4] 61 63 77 87\n $ : int [1:5] 12 18 61 62 83\n $ : int [1:4] 1 57 58 76\n $ : int 76\n $ : int [1:5] 58 67 68 76 84\n $ : int [1:2] 7 66\n $ : int [1:4] 9 58 66 84\n $ : int [1:2] 6 75\n $ : int [1:3] 10 72 73\n $ : int [1:2] 73 74\n $ : int [1:3] 10 11 70\n $ : int [1:4] 19 70 71 74\n $ : int [1:5] 19 21 71 73 86\n $ : int [1:2] 55 69\n $ : int [1:3] 64 65 66\n $ : int [1:3] 23 38 62\n $ : int [1:2] 2 8\n $ : int [1:4] 38 40 41 45\n $ : int [1:5] 34 35 36 45 47\n $ : int [1:5] 25 26 33 39 42\n $ : int [1:6] 19 20 21 23 35 41\n $ : int [1:4] 12 13 16 63\n $ : int [1:4] 7 9 66 68\n $ : int [1:2] 2 5\n $ : int [1:4] 21 46 47 74\n $ : int [1:4] 59 61 62 88\n $ : int [1:2] 59 87\n - attr(*, \"class\")= chr \"nb\"\n - attr(*, \"region.id\")= chr [1:88] \"1\" \"2\" \"3\" \"4\" ...\n - attr(*, \"call\")= language dnearneigh(x = coords, d1 = 0, d2 = 62, longlat = TRUE)\n - attr(*, \"dnn\")= num [1:2] 0 62\n - attr(*, \"bounds\")= chr [1:2] \"GE\" \"LE\"\n - attr(*, \"nbtype\")= chr \"distance\"\n - attr(*, \"sym\")= logi TRUE\n\n\nAnother way to display the structure of the weight matrix is to combine table() and card() of spdep.\n\ntable(hunan$County, card(wm_d62))\n\n               \n                1 2 3 4 5 6\n  Anhua         1 0 0 0 0 0\n  Anren         0 0 0 1 0 0\n  Anxiang       0 0 0 0 1 0\n  Baojing       0 0 0 0 1 0\n  Chaling       0 0 1 0 0 0\n  Changning     0 0 1 0 0 0\n  Changsha      0 0 0 1 0 0\n  Chengbu       0 1 0 0 0 0\n  Chenxi        0 0 0 1 0 0\n  Cili          0 1 0 0 0 0\n  Dao           0 0 0 1 0 0\n  Dongan        0 0 1 0 0 0\n  Dongkou       0 0 0 1 0 0\n  Fenghuang     0 0 0 1 0 0\n  Guidong       0 0 1 0 0 0\n  Guiyang       0 0 0 1 0 0\n  Guzhang       0 0 0 0 0 1\n  Hanshou       0 0 0 1 0 0\n  Hengdong      0 0 0 0 1 0\n  Hengnan       0 0 0 0 1 0\n  Hengshan      0 0 0 0 0 1\n  Hengyang      0 0 0 0 0 1\n  Hongjiang     0 0 0 0 1 0\n  Huarong       0 0 0 1 0 0\n  Huayuan       0 0 0 1 0 0\n  Huitong       0 0 0 1 0 0\n  Jiahe         0 0 0 0 1 0\n  Jianghua      0 0 1 0 0 0\n  Jiangyong     0 1 0 0 0 0\n  Jingzhou      0 1 0 0 0 0\n  Jinshi        0 0 0 1 0 0\n  Jishou        0 0 0 0 0 1\n  Lanshan       0 0 0 1 0 0\n  Leiyang       0 0 0 1 0 0\n  Lengshuijiang 0 0 1 0 0 0\n  Li            0 0 1 0 0 0\n  Lianyuan      0 0 0 0 1 0\n  Liling        0 1 0 0 0 0\n  Linli         0 0 0 1 0 0\n  Linwu         0 0 0 1 0 0\n  Linxiang      1 0 0 0 0 0\n  Liuyang       0 1 0 0 0 0\n  Longhui       0 0 1 0 0 0\n  Longshan      0 1 0 0 0 0\n  Luxi          0 0 0 0 1 0\n  Mayang        0 0 0 0 0 1\n  Miluo         0 0 0 0 1 0\n  Nan           0 0 0 0 1 0\n  Ningxiang     0 0 0 1 0 0\n  Ningyuan      0 0 0 0 1 0\n  Pingjiang     0 1 0 0 0 0\n  Qidong        0 0 1 0 0 0\n  Qiyang        0 0 1 0 0 0\n  Rucheng       0 1 0 0 0 0\n  Sangzhi       0 1 0 0 0 0\n  Shaodong      0 0 0 0 1 0\n  Shaoshan      0 0 0 0 1 0\n  Shaoyang      0 0 0 1 0 0\n  Shimen        1 0 0 0 0 0\n  Shuangfeng    0 0 0 0 0 1\n  Shuangpai     0 0 0 1 0 0\n  Suining       0 0 0 0 1 0\n  Taojiang      0 1 0 0 0 0\n  Taoyuan       0 1 0 0 0 0\n  Tongdao       0 1 0 0 0 0\n  Wangcheng     0 0 0 1 0 0\n  Wugang        0 0 1 0 0 0\n  Xiangtan      0 0 0 1 0 0\n  Xiangxiang    0 0 0 0 1 0\n  Xiangyin      0 0 0 1 0 0\n  Xinhua        0 0 0 0 1 0\n  Xinhuang      1 0 0 0 0 0\n  Xinning       0 1 0 0 0 0\n  Xinshao       0 0 0 0 0 1\n  Xintian       0 0 0 0 1 0\n  Xupu          0 1 0 0 0 0\n  Yanling       0 0 1 0 0 0\n  Yizhang       1 0 0 0 0 0\n  Yongshun      0 0 0 1 0 0\n  Yongxing      0 0 0 1 0 0\n  You           0 0 0 1 0 0\n  Yuanjiang     0 0 0 0 1 0\n  Yuanling      1 0 0 0 0 0\n  Yueyang       0 0 1 0 0 0\n  Zhijiang      0 0 0 0 1 0\n  Zhongfang     0 0 0 1 0 0\n  Zhuzhou       0 0 0 0 1 0\n  Zixing        0 0 1 0 0 0\n\n\n\nn_comp &lt;- n.comp.nb(wm_d62)\nn_comp$nc\n\n[1] 1\n\n\n\ntable(n_comp$comp.id)\n\n\n 1 \n88 \n\n\n\nPlotting fixed distance weight matrix\n\nplot(hunan$geometry, border=\"lightgrey\")\nplot(wm_d62, coords, add=TRUE)\nplot(k1, coords, add=TRUE, col=\"red\", length=0.08)\n\n\n\n\nThe red lines show the links of 1st nearest neighbours and the black lines show the links of neighbours within the cut-off distance of 62km.\nAlternatively, we can plot both of them next to each other by using the code chunk below.\n\npar(mfrow=c(1,2))\nplot(hunan$geometry, border=\"lightgrey\", main=\"1st nearest neighbours\")\nplot(k1, coords, add=TRUE, col=\"red\", length=0.08)\nplot(hunan$geometry, border=\"lightgrey\", main=\"Distance link\")\nplot(wm_d62, coords, add=TRUE, pch = 19, cex = 0.6)\n\n\n\n\n\n\nComputing adaptive distance weight matrix\n\nknn6 &lt;- knn2nb(knearneigh(coords, k=6))\nknn6\n\nNeighbour list object:\nNumber of regions: 88 \nNumber of nonzero links: 528 \nPercentage nonzero weights: 6.818182 \nAverage number of links: 6 \nNon-symmetric neighbours list\n\n\n\nstr(knn6)\n\nList of 88\n $ : int [1:6] 2 3 4 5 57 64\n $ : int [1:6] 1 3 57 58 78 85\n $ : int [1:6] 1 2 4 5 57 85\n $ : int [1:6] 1 3 5 6 69 85\n $ : int [1:6] 1 3 4 6 69 85\n $ : int [1:6] 3 4 5 69 75 85\n $ : int [1:6] 9 66 67 71 74 84\n $ : int [1:6] 9 46 47 78 80 86\n $ : int [1:6] 8 46 66 68 84 86\n $ : int [1:6] 16 19 22 70 72 73\n $ : int [1:6] 10 14 16 17 70 72\n $ : int [1:6] 13 15 60 61 63 83\n $ : int [1:6] 12 15 60 61 63 83\n $ : int [1:6] 11 15 16 17 72 83\n $ : int [1:6] 12 13 14 17 60 83\n $ : int [1:6] 10 11 17 22 72 83\n $ : int [1:6] 10 11 14 16 72 83\n $ : int [1:6] 20 22 23 63 77 83\n $ : int [1:6] 10 20 21 73 74 82\n $ : int [1:6] 18 19 21 22 23 82\n $ : int [1:6] 19 20 35 74 82 86\n $ : int [1:6] 10 16 18 19 20 83\n $ : int [1:6] 18 20 41 77 79 82\n $ : int [1:6] 25 28 31 52 54 81\n $ : int [1:6] 24 28 31 33 54 81\n $ : int [1:6] 25 27 29 33 42 81\n $ : int [1:6] 26 29 30 37 42 81\n $ : int [1:6] 24 25 33 49 52 54\n $ : int [1:6] 26 27 37 42 43 81\n $ : int [1:6] 26 27 28 33 49 81\n $ : int [1:6] 24 25 36 39 40 54\n $ : int [1:6] 24 31 50 54 55 56\n $ : int [1:6] 25 26 28 30 49 81\n $ : int [1:6] 36 40 41 45 56 80\n $ : int [1:6] 21 41 46 47 80 82\n $ : int [1:6] 31 34 40 45 56 80\n $ : int [1:6] 26 27 29 42 43 44\n $ : int [1:6] 23 43 44 62 77 79\n $ : int [1:6] 25 40 42 43 44 81\n $ : int [1:6] 31 36 39 43 45 79\n $ : int [1:6] 23 35 45 79 80 82\n $ : int [1:6] 26 27 37 39 43 81\n $ : int [1:6] 37 39 40 42 44 79\n $ : int [1:6] 37 38 39 42 43 79\n $ : int [1:6] 34 36 40 41 79 80\n $ : int [1:6] 8 9 35 47 78 86\n $ : int [1:6] 8 21 35 46 80 86\n $ : int [1:6] 49 50 51 52 53 55\n $ : int [1:6] 28 33 48 51 52 54\n $ : int [1:6] 32 48 51 52 54 55\n $ : int [1:6] 28 48 49 50 52 54\n $ : int [1:6] 28 48 49 50 51 54\n $ : int [1:6] 48 50 51 52 55 75\n $ : int [1:6] 24 28 49 50 51 52\n $ : int [1:6] 32 48 50 52 53 75\n $ : int [1:6] 32 34 36 78 80 85\n $ : int [1:6] 1 2 3 58 64 68\n $ : int [1:6] 2 57 64 66 68 78\n $ : int [1:6] 12 13 60 61 87 88\n $ : int [1:6] 12 13 59 61 63 87\n $ : int [1:6] 12 13 60 62 63 87\n $ : int [1:6] 12 38 61 63 77 87\n $ : int [1:6] 12 18 60 61 62 83\n $ : int [1:6] 1 3 57 58 68 76\n $ : int [1:6] 58 64 66 67 68 76\n $ : int [1:6] 9 58 67 68 76 84\n $ : int [1:6] 7 65 66 68 76 84\n $ : int [1:6] 9 57 58 66 78 84\n $ : int [1:6] 4 5 6 32 75 85\n $ : int [1:6] 10 16 19 22 72 73\n $ : int [1:6] 7 19 73 74 84 86\n $ : int [1:6] 10 11 14 16 17 70\n $ : int [1:6] 10 19 21 70 71 74\n $ : int [1:6] 19 21 71 73 84 86\n $ : int [1:6] 6 32 50 53 55 69\n $ : int [1:6] 58 64 65 66 67 68\n $ : int [1:6] 18 23 38 61 62 63\n $ : int [1:6] 2 8 9 46 58 68\n $ : int [1:6] 38 40 41 43 44 45\n $ : int [1:6] 34 35 36 41 45 47\n $ : int [1:6] 25 26 28 33 39 42\n $ : int [1:6] 19 20 21 23 35 41\n $ : int [1:6] 12 13 15 16 22 63\n $ : int [1:6] 7 9 66 68 71 74\n $ : int [1:6] 2 3 4 5 56 69\n $ : int [1:6] 8 9 21 46 47 74\n $ : int [1:6] 59 60 61 62 63 88\n $ : int [1:6] 59 60 61 62 63 87\n - attr(*, \"region.id\")= chr [1:88] \"1\" \"2\" \"3\" \"4\" ...\n - attr(*, \"call\")= language knearneigh(x = coords, k = 6)\n - attr(*, \"sym\")= logi FALSE\n - attr(*, \"type\")= chr \"knn\"\n - attr(*, \"knn-k\")= num 6\n - attr(*, \"class\")= chr \"nb\"\n\n\nNotice that each county has six neighbours, no less no more!\n\n\nPlotting distance based neighbours\n\nplot(hunan$geometry, border=\"lightgrey\")\nplot(knn6, coords, pch = 19, cex = 0.6, add = TRUE, col = \"red\")"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex04/Hands-on_Ex04.html#spatial-lag-with-row-standardized-weights",
    "href": "Hands-on_Ex/Hands-on_Ex04/Hands-on_Ex04.html#spatial-lag-with-row-standardized-weights",
    "title": "Hands on Exercise 04",
    "section": "Spatial lag with row-standardized weights",
    "text": "Spatial lag with row-standardized weights\n\nGDPPC.lag &lt;- lag.listw(rswm_q, hunan$GDPPC)\nGDPPC.lag\n\n [1] 24847.20 22724.80 24143.25 27737.50 27270.25 21248.80 43747.00 33582.71\n [9] 45651.17 32027.62 32671.00 20810.00 25711.50 30672.33 33457.75 31689.20\n[17] 20269.00 23901.60 25126.17 21903.43 22718.60 25918.80 20307.00 20023.80\n[25] 16576.80 18667.00 14394.67 19848.80 15516.33 20518.00 17572.00 15200.12\n[33] 18413.80 14419.33 24094.50 22019.83 12923.50 14756.00 13869.80 12296.67\n[41] 15775.17 14382.86 11566.33 13199.50 23412.00 39541.00 36186.60 16559.60\n[49] 20772.50 19471.20 19827.33 15466.80 12925.67 18577.17 14943.00 24913.00\n[57] 25093.00 24428.80 17003.00 21143.75 20435.00 17131.33 24569.75 23835.50\n[65] 26360.00 47383.40 55157.75 37058.00 21546.67 23348.67 42323.67 28938.60\n[73] 25880.80 47345.67 18711.33 29087.29 20748.29 35933.71 15439.71 29787.50\n[81] 18145.00 21617.00 29203.89 41363.67 22259.09 44939.56 16902.00 16930.00\n\n\nRecalled in the previous section, we retrieved the GDPPC of these five countries by using the code chunk below.\n\nnb1 &lt;- wm_q[[1]]\nnb1 &lt;- hunan$GDPPC[nb1]\nnb1\n\n[1] 20981 34592 24473 21311 22879\n\n\nQuestion: Can you see the meaning of Spatial lag with row-standardized weights now?\nspatial lag is the average of the neighbouring GDPPC of each county.\nWe can append the spatially lag GDPPC values onto hunan sf data frame by using the code chunk below.\n\nlag.list &lt;- list(hunan$NAME_3, lag.listw(rswm_q, hunan$GDPPC))\nlag.res &lt;- as.data.frame(lag.list)\ncolnames(lag.res) &lt;- c(\"NAME_3\", \"lag GDPPC\")\nhunan &lt;- left_join(hunan,lag.res)\n\n\nhead(hunan)\n\nSimple feature collection with 6 features and 7 fields\nGeometry type: POLYGON\nDimension:     XY\nBounding box:  xmin: 110.4922 ymin: 28.61762 xmax: 112.3013 ymax: 30.12812\nGeodetic CRS:  WGS 84\n   NAME_2  ID_3  NAME_3   ENGTYPE_3  County GDPPC lag GDPPC\n1 Changde 21098 Anxiang      County Anxiang 23667  24847.20\n2 Changde 21100 Hanshou      County Hanshou 20981  22724.80\n3 Changde 21101  Jinshi County City  Jinshi 34592  24143.25\n4 Changde 21102      Li      County      Li 24473  27737.50\n5 Changde 21103   Linli      County   Linli 25554  27270.25\n6 Changde 21104  Shimen      County  Shimen 27137  21248.80\n                        geometry\n1 POLYGON ((112.0625 29.75523...\n2 POLYGON ((112.2288 29.11684...\n3 POLYGON ((111.8927 29.6013,...\n4 POLYGON ((111.3731 29.94649...\n5 POLYGON ((111.6324 29.76288...\n6 POLYGON ((110.8825 30.11675...\n\n\nNext, we will plot both the GDPPC and spatial lag GDPPC for comparison using the code chunk below.\n\ngdppc &lt;- qtm(hunan, \"GDPPC\")\nlag_gdppc &lt;- qtm(hunan, \"lag GDPPC\")\ntmap_arrange(gdppc, lag_gdppc, asp=1, ncol=2)\n\n\n\n\n\nSpatial lag as a sum of neighboring values\n\nb_weights &lt;- lapply(wm_q, function(x) 0*x + 1)\nb_weights2 &lt;- nb2listw(wm_q, \n                       glist = b_weights, \n                       style = \"B\")\nb_weights2\n\nCharacteristics of weights list object:\nNeighbour list object:\nNumber of regions: 88 \nNumber of nonzero links: 448 \nPercentage nonzero weights: 5.785124 \nAverage number of links: 5.090909 \n\nWeights style: B \nWeights constants summary:\n   n   nn  S0  S1    S2\nB 88 7744 448 896 10224\n\n\nWith the proper weights assigned, we can use lag.listw to compute a lag variable from our weight and GDPPC.\n\nlag_sum &lt;- list(hunan$NAME_3, lag.listw(b_weights2, hunan$GDPPC))\nlag.res &lt;- as.data.frame(lag_sum)\ncolnames(lag.res) &lt;- c(\"NAME_3\", \"lag_sum GDPPC\")\n\n\nlag_sum\n\n[[1]]\n [1] \"Anxiang\"       \"Hanshou\"       \"Jinshi\"        \"Li\"           \n [5] \"Linli\"         \"Shimen\"        \"Liuyang\"       \"Ningxiang\"    \n [9] \"Wangcheng\"     \"Anren\"         \"Guidong\"       \"Jiahe\"        \n[13] \"Linwu\"         \"Rucheng\"       \"Yizhang\"       \"Yongxing\"     \n[17] \"Zixing\"        \"Changning\"     \"Hengdong\"      \"Hengnan\"      \n[21] \"Hengshan\"      \"Leiyang\"       \"Qidong\"        \"Chenxi\"       \n[25] \"Zhongfang\"     \"Huitong\"       \"Jingzhou\"      \"Mayang\"       \n[29] \"Tongdao\"       \"Xinhuang\"      \"Xupu\"          \"Yuanling\"     \n[33] \"Zhijiang\"      \"Lengshuijiang\" \"Shuangfeng\"    \"Xinhua\"       \n[37] \"Chengbu\"       \"Dongan\"        \"Dongkou\"       \"Longhui\"      \n[41] \"Shaodong\"      \"Suining\"       \"Wugang\"        \"Xinning\"      \n[45] \"Xinshao\"       \"Shaoshan\"      \"Xiangxiang\"    \"Baojing\"      \n[49] \"Fenghuang\"     \"Guzhang\"       \"Huayuan\"       \"Jishou\"       \n[53] \"Longshan\"      \"Luxi\"          \"Yongshun\"      \"Anhua\"        \n[57] \"Nan\"           \"Yuanjiang\"     \"Jianghua\"      \"Lanshan\"      \n[61] \"Ningyuan\"      \"Shuangpai\"     \"Xintian\"       \"Huarong\"      \n[65] \"Linxiang\"      \"Miluo\"         \"Pingjiang\"     \"Xiangyin\"     \n[69] \"Cili\"          \"Chaling\"       \"Liling\"        \"Yanling\"      \n[73] \"You\"           \"Zhuzhou\"       \"Sangzhi\"       \"Yueyang\"      \n[77] \"Qiyang\"        \"Taojiang\"      \"Shaoyang\"      \"Lianyuan\"     \n[81] \"Hongjiang\"     \"Hengyang\"      \"Guiyang\"       \"Changsha\"     \n[85] \"Taoyuan\"       \"Xiangtan\"      \"Dao\"           \"Jiangyong\"    \n\n[[2]]\n [1] 124236 113624  96573 110950 109081 106244 174988 235079 273907 256221\n[11]  98013 104050 102846  92017 133831 158446 141883 119508 150757 153324\n[21] 113593 129594 142149 100119  82884  74668  43184  99244  46549  20518\n[31] 140576 121601  92069  43258 144567 132119  51694  59024  69349  73780\n[41]  94651 100680  69398  52798 140472 118623 180933  82798  83090  97356\n[51]  59482  77334  38777 111463  74715 174391 150558 122144  68012  84575\n[61] 143045  51394  98279  47671  26360 236917 220631 185290  64640  70046\n[71] 126971 144693 129404 284074 112268 203611 145238 251536 108078 238300\n[81] 108870 108085 262835 248182 244850 404456  67608  33860\n\n\nQuestion: Can you understand the meaning of Spatial lag as a sum of neighboring values now?\nNext, we will append the lag_sum GDPPC field into hunan sf data frame by using the code chunk below.\n\nhunan &lt;- left_join(hunan, lag.res)\n\nNow, We can plot both the GDPPC and Spatial Lag Sum GDPPC for comparison using the code chunk below.\n\ngdppc &lt;- qtm(hunan, \"GDPPC\")\nlag_sum_gdppc &lt;- qtm(hunan, \"lag_sum GDPPC\")\ntmap_arrange(gdppc, lag_sum_gdppc, asp=1, ncol=2)\n\n\n\n# this way to plot uses the neighbour and their weights. does not take into account their own weight\n\n\n\nSpatial window average\n\nwm_qs &lt;- include.self(wm_q)\n\nNotice that the Number of nonzero links, Percentage nonzero weights and Average number of links are 536, 6.921488 and 6.090909 respectively as compared to wm_q of 448, 5.785124 and 5.090909\nLet us take a good look at the neighbour list of area [1] by using the code chunk below.\n\nwm_qs[[1]]\n\n[1]  1  2  3  4 57 85\n\n\nNotice that now [1] has six neighbours instead of five.\nNow we obtain weights with nb2listw()\n\nwm_qs &lt;- nb2listw(wm_qs)\nwm_qs\n\nCharacteristics of weights list object:\nNeighbour list object:\nNumber of regions: 88 \nNumber of nonzero links: 536 \nPercentage nonzero weights: 6.921488 \nAverage number of links: 6.090909 \n\nWeights style: W \nWeights constants summary:\n   n   nn S0       S1       S2\nW 88 7744 88 30.90265 357.5308\n\n\nAgain, we use nb2listw() and glist() to explicitly assign weight values.\nLastly, we just need to create the lag variable from our weight structure and GDPPC variable.\n\nlag_w_avg_gpdpc &lt;- lag.listw(wm_qs, \n                             hunan$GDPPC)\nlag_w_avg_gpdpc\n\n [1] 24650.50 22434.17 26233.00 27084.60 26927.00 22230.17 47621.20 37160.12\n [9] 49224.71 29886.89 26627.50 22690.17 25366.40 25825.75 30329.00 32682.83\n[17] 25948.62 23987.67 25463.14 21904.38 23127.50 25949.83 20018.75 19524.17\n[25] 18955.00 17800.40 15883.00 18831.33 14832.50 17965.00 17159.89 16199.44\n[33] 18764.50 26878.75 23188.86 20788.14 12365.20 15985.00 13764.83 11907.43\n[41] 17128.14 14593.62 11644.29 12706.00 21712.29 43548.25 35049.00 16226.83\n[49] 19294.40 18156.00 19954.75 18145.17 12132.75 18419.29 14050.83 23619.75\n[57] 24552.71 24733.67 16762.60 20932.60 19467.75 18334.00 22541.00 26028.00\n[65] 29128.50 46569.00 47576.60 36545.50 20838.50 22531.00 42115.50 27619.00\n[73] 27611.33 44523.29 18127.43 28746.38 20734.50 33880.62 14716.38 28516.22\n[81] 18086.14 21244.50 29568.80 48119.71 22310.75 43151.60 17133.40 17009.33\n\n\nNext, we will convert the lag variable listw object into a data.frame by using as.data.frame().\n\nlag.list.wm_qs &lt;- list(hunan$NAME_3, lag.listw(wm_qs, hunan$GDPPC))\nlag_wm_qs.res &lt;- as.data.frame(lag.list.wm_qs)\ncolnames(lag_wm_qs.res) &lt;- c(\"NAME_3\", \"lag_window_avg GDPPC\")\n\nNext, the code chunk below will be used to append lag_window_avg GDPPC values onto hunan sf data.frame by using left_join() of dplyr package.\n\nhunan &lt;- left_join(hunan, lag_wm_qs.res)\n\nTo compare the values of lag GDPPC and Spatial window average, kable() of Knitr package is used to prepare a table using the code chunk below.\n\nhunan %&gt;%\n  select(\"County\", \n         \"lag GDPPC\", \n         \"lag_window_avg GDPPC\") %&gt;%\n  kable()\n\n\n\n\n\n\n\n\n\n\nCounty\nlag GDPPC\nlag_window_avg GDPPC\ngeometry\n\n\n\n\nAnxiang\n24847.20\n24650.50\nPOLYGON ((112.0625 29.75523…\n\n\nHanshou\n22724.80\n22434.17\nPOLYGON ((112.2288 29.11684…\n\n\nJinshi\n24143.25\n26233.00\nPOLYGON ((111.8927 29.6013,…\n\n\nLi\n27737.50\n27084.60\nPOLYGON ((111.3731 29.94649…\n\n\nLinli\n27270.25\n26927.00\nPOLYGON ((111.6324 29.76288…\n\n\nShimen\n21248.80\n22230.17\nPOLYGON ((110.8825 30.11675…\n\n\nLiuyang\n43747.00\n47621.20\nPOLYGON ((113.9905 28.5682,…\n\n\nNingxiang\n33582.71\n37160.12\nPOLYGON ((112.7181 28.38299…\n\n\nWangcheng\n45651.17\n49224.71\nPOLYGON ((112.7914 28.52688…\n\n\nAnren\n32027.62\n29886.89\nPOLYGON ((113.1757 26.82734…\n\n\nGuidong\n32671.00\n26627.50\nPOLYGON ((114.1799 26.20117…\n\n\nJiahe\n20810.00\n22690.17\nPOLYGON ((112.4425 25.74358…\n\n\nLinwu\n25711.50\n25366.40\nPOLYGON ((112.5914 25.55143…\n\n\nRucheng\n30672.33\n25825.75\nPOLYGON ((113.6759 25.87578…\n\n\nYizhang\n33457.75\n30329.00\nPOLYGON ((113.2621 25.68394…\n\n\nYongxing\n31689.20\n32682.83\nPOLYGON ((113.3169 26.41843…\n\n\nZixing\n20269.00\n25948.62\nPOLYGON ((113.7311 26.16259…\n\n\nChangning\n23901.60\n23987.67\nPOLYGON ((112.6144 26.60198…\n\n\nHengdong\n25126.17\n25463.14\nPOLYGON ((113.1056 27.21007…\n\n\nHengnan\n21903.43\n21904.38\nPOLYGON ((112.7599 26.98149…\n\n\nHengshan\n22718.60\n23127.50\nPOLYGON ((112.607 27.4689, …\n\n\nLeiyang\n25918.80\n25949.83\nPOLYGON ((112.9996 26.69276…\n\n\nQidong\n20307.00\n20018.75\nPOLYGON ((111.7818 27.0383,…\n\n\nChenxi\n20023.80\n19524.17\nPOLYGON ((110.2624 28.21778…\n\n\nZhongfang\n16576.80\n18955.00\nPOLYGON ((109.9431 27.72858…\n\n\nHuitong\n18667.00\n17800.40\nPOLYGON ((109.9419 27.10512…\n\n\nJingzhou\n14394.67\n15883.00\nPOLYGON ((109.8186 26.75842…\n\n\nMayang\n19848.80\n18831.33\nPOLYGON ((109.795 27.98008,…\n\n\nTongdao\n15516.33\n14832.50\nPOLYGON ((109.9294 26.46561…\n\n\nXinhuang\n20518.00\n17965.00\nPOLYGON ((109.227 27.43733,…\n\n\nXupu\n17572.00\n17159.89\nPOLYGON ((110.7189 28.30485…\n\n\nYuanling\n15200.12\n16199.44\nPOLYGON ((110.9652 28.99895…\n\n\nZhijiang\n18413.80\n18764.50\nPOLYGON ((109.8818 27.60661…\n\n\nLengshuijiang\n14419.33\n26878.75\nPOLYGON ((111.5307 27.81472…\n\n\nShuangfeng\n24094.50\n23188.86\nPOLYGON ((112.263 27.70421,…\n\n\nXinhua\n22019.83\n20788.14\nPOLYGON ((111.3345 28.19642…\n\n\nChengbu\n12923.50\n12365.20\nPOLYGON ((110.4455 26.69317…\n\n\nDongan\n14756.00\n15985.00\nPOLYGON ((111.4531 26.86812…\n\n\nDongkou\n13869.80\n13764.83\nPOLYGON ((110.6622 27.37305…\n\n\nLonghui\n12296.67\n11907.43\nPOLYGON ((110.985 27.65983,…\n\n\nShaodong\n15775.17\n17128.14\nPOLYGON ((111.9054 27.40254…\n\n\nSuining\n14382.86\n14593.62\nPOLYGON ((110.389 27.10006,…\n\n\nWugang\n11566.33\n11644.29\nPOLYGON ((110.9878 27.03345…\n\n\nXinning\n13199.50\n12706.00\nPOLYGON ((111.0736 26.84627…\n\n\nXinshao\n23412.00\n21712.29\nPOLYGON ((111.6013 27.58275…\n\n\nShaoshan\n39541.00\n43548.25\nPOLYGON ((112.5391 27.97742…\n\n\nXiangxiang\n36186.60\n35049.00\nPOLYGON ((112.4549 28.05783…\n\n\nBaojing\n16559.60\n16226.83\nPOLYGON ((109.7015 28.82844…\n\n\nFenghuang\n20772.50\n19294.40\nPOLYGON ((109.5239 28.19206…\n\n\nGuzhang\n19471.20\n18156.00\nPOLYGON ((109.8968 28.74034…\n\n\nHuayuan\n19827.33\n19954.75\nPOLYGON ((109.5647 28.61712…\n\n\nJishou\n15466.80\n18145.17\nPOLYGON ((109.8375 28.4696,…\n\n\nLongshan\n12925.67\n12132.75\nPOLYGON ((109.6337 29.62521…\n\n\nLuxi\n18577.17\n18419.29\nPOLYGON ((110.1067 28.41835…\n\n\nYongshun\n14943.00\n14050.83\nPOLYGON ((110.0003 29.29499…\n\n\nAnhua\n24913.00\n23619.75\nPOLYGON ((111.6034 28.63716…\n\n\nNan\n25093.00\n24552.71\nPOLYGON ((112.3232 29.46074…\n\n\nYuanjiang\n24428.80\n24733.67\nPOLYGON ((112.4391 29.1791,…\n\n\nJianghua\n17003.00\n16762.60\nPOLYGON ((111.6461 25.29661…\n\n\nLanshan\n21143.75\n20932.60\nPOLYGON ((112.2286 25.61123…\n\n\nNingyuan\n20435.00\n19467.75\nPOLYGON ((112.0715 26.09892…\n\n\nShuangpai\n17131.33\n18334.00\nPOLYGON ((111.8864 26.11957…\n\n\nXintian\n24569.75\n22541.00\nPOLYGON ((112.2578 26.0796,…\n\n\nHuarong\n23835.50\n26028.00\nPOLYGON ((112.9242 29.69134…\n\n\nLinxiang\n26360.00\n29128.50\nPOLYGON ((113.5502 29.67418…\n\n\nMiluo\n47383.40\n46569.00\nPOLYGON ((112.9902 29.02139…\n\n\nPingjiang\n55157.75\n47576.60\nPOLYGON ((113.8436 29.06152…\n\n\nXiangyin\n37058.00\n36545.50\nPOLYGON ((112.9173 28.98264…\n\n\nCili\n21546.67\n20838.50\nPOLYGON ((110.8822 29.69017…\n\n\nChaling\n23348.67\n22531.00\nPOLYGON ((113.7666 27.10573…\n\n\nLiling\n42323.67\n42115.50\nPOLYGON ((113.5673 27.94346…\n\n\nYanling\n28938.60\n27619.00\nPOLYGON ((113.9292 26.6154,…\n\n\nYou\n25880.80\n27611.33\nPOLYGON ((113.5879 27.41324…\n\n\nZhuzhou\n47345.67\n44523.29\nPOLYGON ((113.2493 28.02411…\n\n\nSangzhi\n18711.33\n18127.43\nPOLYGON ((110.556 29.40543,…\n\n\nYueyang\n29087.29\n28746.38\nPOLYGON ((113.343 29.61064,…\n\n\nQiyang\n20748.29\n20734.50\nPOLYGON ((111.5563 26.81318…\n\n\nTaojiang\n35933.71\n33880.62\nPOLYGON ((112.0508 28.67265…\n\n\nShaoyang\n15439.71\n14716.38\nPOLYGON ((111.5013 27.30207…\n\n\nLianyuan\n29787.50\n28516.22\nPOLYGON ((111.6789 28.02946…\n\n\nHongjiang\n18145.00\n18086.14\nPOLYGON ((110.1441 27.47513…\n\n\nHengyang\n21617.00\n21244.50\nPOLYGON ((112.7144 26.98613…\n\n\nGuiyang\n29203.89\n29568.80\nPOLYGON ((113.0811 26.04963…\n\n\nChangsha\n41363.67\n48119.71\nPOLYGON ((112.9421 28.03722…\n\n\nTaoyuan\n22259.09\n22310.75\nPOLYGON ((112.0612 29.32855…\n\n\nXiangtan\n44939.56\n43151.60\nPOLYGON ((113.0426 27.8942,…\n\n\nDao\n16902.00\n17133.40\nPOLYGON ((111.498 25.81679,…\n\n\nJiangyong\n16930.00\n17009.33\nPOLYGON ((111.3659 25.39472…\n\n\n\n\n\n\n\nSpatial window sum\n\nwm_qs &lt;- include.self(wm_q)\nwm_qs\n\nNeighbour list object:\nNumber of regions: 88 \nNumber of nonzero links: 536 \nPercentage nonzero weights: 6.921488 \nAverage number of links: 6.090909 \n\n\nNext, we will assign binary weights to the neighbour structure that includes the diagonal element.\n\nb_weights &lt;- lapply(wm_qs, function(x) 0*x + 1)\nb_weights[1]\n\n[[1]]\n[1] 1 1 1 1 1 1\n\n\nNotice that now [1] has six neighbours instead of five.\nAgain, we use nb2listw() and glist() to explicitly assign weight values.\n\nb_weights2 &lt;- nb2listw(wm_qs, \n                       glist = b_weights, \n                       style = \"B\")\nb_weights2\n\nCharacteristics of weights list object:\nNeighbour list object:\nNumber of regions: 88 \nNumber of nonzero links: 536 \nPercentage nonzero weights: 6.921488 \nAverage number of links: 6.090909 \n\nWeights style: B \nWeights constants summary:\n   n   nn  S0   S1    S2\nB 88 7744 536 1072 14160\n\n\nWith our new weight structure, we can compute the lag variable with lag.listw().\n\nw_sum_gdppc &lt;- list(hunan$NAME_3, lag.listw(b_weights2, hunan$GDPPC))\nw_sum_gdppc\n\n[[1]]\n [1] \"Anxiang\"       \"Hanshou\"       \"Jinshi\"        \"Li\"           \n [5] \"Linli\"         \"Shimen\"        \"Liuyang\"       \"Ningxiang\"    \n [9] \"Wangcheng\"     \"Anren\"         \"Guidong\"       \"Jiahe\"        \n[13] \"Linwu\"         \"Rucheng\"       \"Yizhang\"       \"Yongxing\"     \n[17] \"Zixing\"        \"Changning\"     \"Hengdong\"      \"Hengnan\"      \n[21] \"Hengshan\"      \"Leiyang\"       \"Qidong\"        \"Chenxi\"       \n[25] \"Zhongfang\"     \"Huitong\"       \"Jingzhou\"      \"Mayang\"       \n[29] \"Tongdao\"       \"Xinhuang\"      \"Xupu\"          \"Yuanling\"     \n[33] \"Zhijiang\"      \"Lengshuijiang\" \"Shuangfeng\"    \"Xinhua\"       \n[37] \"Chengbu\"       \"Dongan\"        \"Dongkou\"       \"Longhui\"      \n[41] \"Shaodong\"      \"Suining\"       \"Wugang\"        \"Xinning\"      \n[45] \"Xinshao\"       \"Shaoshan\"      \"Xiangxiang\"    \"Baojing\"      \n[49] \"Fenghuang\"     \"Guzhang\"       \"Huayuan\"       \"Jishou\"       \n[53] \"Longshan\"      \"Luxi\"          \"Yongshun\"      \"Anhua\"        \n[57] \"Nan\"           \"Yuanjiang\"     \"Jianghua\"      \"Lanshan\"      \n[61] \"Ningyuan\"      \"Shuangpai\"     \"Xintian\"       \"Huarong\"      \n[65] \"Linxiang\"      \"Miluo\"         \"Pingjiang\"     \"Xiangyin\"     \n[69] \"Cili\"          \"Chaling\"       \"Liling\"        \"Yanling\"      \n[73] \"You\"           \"Zhuzhou\"       \"Sangzhi\"       \"Yueyang\"      \n[77] \"Qiyang\"        \"Taojiang\"      \"Shaoyang\"      \"Lianyuan\"     \n[81] \"Hongjiang\"     \"Hengyang\"      \"Guiyang\"       \"Changsha\"     \n[85] \"Taoyuan\"       \"Xiangtan\"      \"Dao\"           \"Jiangyong\"    \n\n[[2]]\n [1] 147903 134605 131165 135423 134635 133381 238106 297281 344573 268982\n[11] 106510 136141 126832 103303 151645 196097 207589 143926 178242 175235\n[21] 138765 155699 160150 117145 113730  89002  63532 112988  59330  35930\n[31] 154439 145795 112587 107515 162322 145517  61826  79925  82589  83352\n[41] 119897 116749  81510  63530 151986 174193 210294  97361  96472 108936\n[51]  79819 108871  48531 128935  84305 188958 171869 148402  83813 104663\n[61] 155742  73336 112705  78084  58257 279414 237883 219273  83354  90124\n[71] 168462 165714 165668 311663 126892 229971 165876 271045 117731 256646\n[81] 126603 127467 295688 336838 267729 431516  85667  51028\n\n\nNext, we will convert the lag variable listw object into a data.frame by using as.data.frame().\n\nw_sum_gdppc.res &lt;- as.data.frame(w_sum_gdppc)\ncolnames(w_sum_gdppc.res) &lt;- c(\"NAME_3\", \"w_sum GDPPC\")\n\nNote: The second command line on the code chunk above renames the field names of w_sum_gdppc.res object into NAME_3 and w_sum GDPPC respectively.\nNext, the code chunk below will be used to append w_sum GDPPC values onto hunan sf data.frame by using left_join() of dplyr package.\n\nhunan &lt;- left_join(hunan, w_sum_gdppc.res)\n\nTo compare the values of lag GDPPC and Spatial window average, kable() of Knitr package is used to prepare a table using the code chunk below.\n\nhunan %&gt;%\n  select(\"County\", \"lag_sum GDPPC\", \"w_sum GDPPC\") %&gt;%\n  kable()\n\n\n\n\n\n\n\n\n\n\nCounty\nlag_sum GDPPC\nw_sum GDPPC\ngeometry\n\n\n\n\nAnxiang\n124236\n147903\nPOLYGON ((112.0625 29.75523…\n\n\nHanshou\n113624\n134605\nPOLYGON ((112.2288 29.11684…\n\n\nJinshi\n96573\n131165\nPOLYGON ((111.8927 29.6013,…\n\n\nLi\n110950\n135423\nPOLYGON ((111.3731 29.94649…\n\n\nLinli\n109081\n134635\nPOLYGON ((111.6324 29.76288…\n\n\nShimen\n106244\n133381\nPOLYGON ((110.8825 30.11675…\n\n\nLiuyang\n174988\n238106\nPOLYGON ((113.9905 28.5682,…\n\n\nNingxiang\n235079\n297281\nPOLYGON ((112.7181 28.38299…\n\n\nWangcheng\n273907\n344573\nPOLYGON ((112.7914 28.52688…\n\n\nAnren\n256221\n268982\nPOLYGON ((113.1757 26.82734…\n\n\nGuidong\n98013\n106510\nPOLYGON ((114.1799 26.20117…\n\n\nJiahe\n104050\n136141\nPOLYGON ((112.4425 25.74358…\n\n\nLinwu\n102846\n126832\nPOLYGON ((112.5914 25.55143…\n\n\nRucheng\n92017\n103303\nPOLYGON ((113.6759 25.87578…\n\n\nYizhang\n133831\n151645\nPOLYGON ((113.2621 25.68394…\n\n\nYongxing\n158446\n196097\nPOLYGON ((113.3169 26.41843…\n\n\nZixing\n141883\n207589\nPOLYGON ((113.7311 26.16259…\n\n\nChangning\n119508\n143926\nPOLYGON ((112.6144 26.60198…\n\n\nHengdong\n150757\n178242\nPOLYGON ((113.1056 27.21007…\n\n\nHengnan\n153324\n175235\nPOLYGON ((112.7599 26.98149…\n\n\nHengshan\n113593\n138765\nPOLYGON ((112.607 27.4689, …\n\n\nLeiyang\n129594\n155699\nPOLYGON ((112.9996 26.69276…\n\n\nQidong\n142149\n160150\nPOLYGON ((111.7818 27.0383,…\n\n\nChenxi\n100119\n117145\nPOLYGON ((110.2624 28.21778…\n\n\nZhongfang\n82884\n113730\nPOLYGON ((109.9431 27.72858…\n\n\nHuitong\n74668\n89002\nPOLYGON ((109.9419 27.10512…\n\n\nJingzhou\n43184\n63532\nPOLYGON ((109.8186 26.75842…\n\n\nMayang\n99244\n112988\nPOLYGON ((109.795 27.98008,…\n\n\nTongdao\n46549\n59330\nPOLYGON ((109.9294 26.46561…\n\n\nXinhuang\n20518\n35930\nPOLYGON ((109.227 27.43733,…\n\n\nXupu\n140576\n154439\nPOLYGON ((110.7189 28.30485…\n\n\nYuanling\n121601\n145795\nPOLYGON ((110.9652 28.99895…\n\n\nZhijiang\n92069\n112587\nPOLYGON ((109.8818 27.60661…\n\n\nLengshuijiang\n43258\n107515\nPOLYGON ((111.5307 27.81472…\n\n\nShuangfeng\n144567\n162322\nPOLYGON ((112.263 27.70421,…\n\n\nXinhua\n132119\n145517\nPOLYGON ((111.3345 28.19642…\n\n\nChengbu\n51694\n61826\nPOLYGON ((110.4455 26.69317…\n\n\nDongan\n59024\n79925\nPOLYGON ((111.4531 26.86812…\n\n\nDongkou\n69349\n82589\nPOLYGON ((110.6622 27.37305…\n\n\nLonghui\n73780\n83352\nPOLYGON ((110.985 27.65983,…\n\n\nShaodong\n94651\n119897\nPOLYGON ((111.9054 27.40254…\n\n\nSuining\n100680\n116749\nPOLYGON ((110.389 27.10006,…\n\n\nWugang\n69398\n81510\nPOLYGON ((110.9878 27.03345…\n\n\nXinning\n52798\n63530\nPOLYGON ((111.0736 26.84627…\n\n\nXinshao\n140472\n151986\nPOLYGON ((111.6013 27.58275…\n\n\nShaoshan\n118623\n174193\nPOLYGON ((112.5391 27.97742…\n\n\nXiangxiang\n180933\n210294\nPOLYGON ((112.4549 28.05783…\n\n\nBaojing\n82798\n97361\nPOLYGON ((109.7015 28.82844…\n\n\nFenghuang\n83090\n96472\nPOLYGON ((109.5239 28.19206…\n\n\nGuzhang\n97356\n108936\nPOLYGON ((109.8968 28.74034…\n\n\nHuayuan\n59482\n79819\nPOLYGON ((109.5647 28.61712…\n\n\nJishou\n77334\n108871\nPOLYGON ((109.8375 28.4696,…\n\n\nLongshan\n38777\n48531\nPOLYGON ((109.6337 29.62521…\n\n\nLuxi\n111463\n128935\nPOLYGON ((110.1067 28.41835…\n\n\nYongshun\n74715\n84305\nPOLYGON ((110.0003 29.29499…\n\n\nAnhua\n174391\n188958\nPOLYGON ((111.6034 28.63716…\n\n\nNan\n150558\n171869\nPOLYGON ((112.3232 29.46074…\n\n\nYuanjiang\n122144\n148402\nPOLYGON ((112.4391 29.1791,…\n\n\nJianghua\n68012\n83813\nPOLYGON ((111.6461 25.29661…\n\n\nLanshan\n84575\n104663\nPOLYGON ((112.2286 25.61123…\n\n\nNingyuan\n143045\n155742\nPOLYGON ((112.0715 26.09892…\n\n\nShuangpai\n51394\n73336\nPOLYGON ((111.8864 26.11957…\n\n\nXintian\n98279\n112705\nPOLYGON ((112.2578 26.0796,…\n\n\nHuarong\n47671\n78084\nPOLYGON ((112.9242 29.69134…\n\n\nLinxiang\n26360\n58257\nPOLYGON ((113.5502 29.67418…\n\n\nMiluo\n236917\n279414\nPOLYGON ((112.9902 29.02139…\n\n\nPingjiang\n220631\n237883\nPOLYGON ((113.8436 29.06152…\n\n\nXiangyin\n185290\n219273\nPOLYGON ((112.9173 28.98264…\n\n\nCili\n64640\n83354\nPOLYGON ((110.8822 29.69017…\n\n\nChaling\n70046\n90124\nPOLYGON ((113.7666 27.10573…\n\n\nLiling\n126971\n168462\nPOLYGON ((113.5673 27.94346…\n\n\nYanling\n144693\n165714\nPOLYGON ((113.9292 26.6154,…\n\n\nYou\n129404\n165668\nPOLYGON ((113.5879 27.41324…\n\n\nZhuzhou\n284074\n311663\nPOLYGON ((113.2493 28.02411…\n\n\nSangzhi\n112268\n126892\nPOLYGON ((110.556 29.40543,…\n\n\nYueyang\n203611\n229971\nPOLYGON ((113.343 29.61064,…\n\n\nQiyang\n145238\n165876\nPOLYGON ((111.5563 26.81318…\n\n\nTaojiang\n251536\n271045\nPOLYGON ((112.0508 28.67265…\n\n\nShaoyang\n108078\n117731\nPOLYGON ((111.5013 27.30207…\n\n\nLianyuan\n238300\n256646\nPOLYGON ((111.6789 28.02946…\n\n\nHongjiang\n108870\n126603\nPOLYGON ((110.1441 27.47513…\n\n\nHengyang\n108085\n127467\nPOLYGON ((112.7144 26.98613…\n\n\nGuiyang\n262835\n295688\nPOLYGON ((113.0811 26.04963…\n\n\nChangsha\n248182\n336838\nPOLYGON ((112.9421 28.03722…\n\n\nTaoyuan\n244850\n267729\nPOLYGON ((112.0612 29.32855…\n\n\nXiangtan\n404456\n431516\nPOLYGON ((113.0426 27.8942,…\n\n\nDao\n67608\n85667\nPOLYGON ((111.498 25.81679,…\n\n\nJiangyong\n33860\n51028\nPOLYGON ((111.3659 25.39472…\n\n\n\n\n\nLastly, qtm() of tmap package is used to plot the lag_sum GDPPC and w_sum_gdppc maps next to each other for quick comparison.\n\nw_sum_gdppc &lt;- qtm(hunan, \"w_sum GDPPC\")\ntmap_arrange(lag_sum_gdppc, w_sum_gdppc, asp=1, ncol=2)\n\n\n\n# this one takes into account itself \n\nNote: For more effective comparison, it is advicible to use the core tmap mapping functions."
  },
  {
    "objectID": "In-class_Ex/In-class_Ex04/In-class_Ex04.html",
    "href": "In-class_Ex/In-class_Ex04/In-class_Ex04.html",
    "title": "In class Exercise 04",
    "section": "",
    "text": "getting started\n\npacman::p_load(sf, spdep, tmap, tidyverse, knitr, GWmodel)\n\n\nhunan &lt;- st_read(dsn = \"data/geospatial\", \n                 layer = \"Hunan\")\n\nReading layer `Hunan' from data source \n  `C:\\EbenezerHo\\IS415-GAA\\In-class_Ex\\In-class_Ex04\\data\\geospatial' \n  using driver `ESRI Shapefile'\nSimple feature collection with 88 features and 7 fields\nGeometry type: POLYGON\nDimension:     XY\nBounding box:  xmin: 108.7831 ymin: 24.6342 xmax: 114.2544 ymax: 30.12812\nGeodetic CRS:  WGS 84\n\n\n\nhunan2012 &lt;- read_csv(\"data/aspatial/Hunan_2012.csv\")\n\n\nhunan &lt;- left_join(hunan,hunan2012)%&gt;% select(1:4, 7, 15)\n\n\n# GWmodel cannot accept sf. need to be in spatialdf or polygon df format. sp object class\nhunan_sp &lt;- hunan %&gt;% as_Spatial()\n\n\ngwstat &lt;- gwss(data = hunan_sp, \n               vars = \"GDPPC\",\n               bw = 6,\n               kernel = \"bisquare\",\n               adaptive = TRUE,\n               longlat = T)\n# adaptive means fixed numbers of neighbours.\n# since adaptive is true, need to declare bw = 6 (number of neighbours)\n# if adaptive is false, bw = 6 means 6km (di)"
  },
  {
    "objectID": "Take-home_Ex/Take-home_Ex01/data/MPSZ-2019.html",
    "href": "Take-home_Ex/Take-home_Ex01/data/MPSZ-2019.html",
    "title": "IS415-GAA",
    "section": "",
    "text": "&lt;!DOCTYPE qgis PUBLIC ‘http://mrcc.com/qgis.dtd’ ‘SYSTEM’&gt;     dataset\n\n\n        0 0     false"
  },
  {
    "objectID": "Take-home_Ex/Take-home_Ex01/Take-home_Ex01.html#setup-and-installation-of-packages",
    "href": "Take-home_Ex/Take-home_Ex01/Take-home_Ex01.html#setup-and-installation-of-packages",
    "title": "Take home Exercise 01",
    "section": "",
    "text": "pacman:: p_load (arrow, lubridate, tidyverse, tmap, sf, raster, spatstat, tmap, maptools, sp, spNetwork)"
  },
  {
    "objectID": "Take-home_Ex/Take-home_Ex01/Take-home_Ex01.html#data-preparation",
    "href": "Take-home_Ex/Take-home_Ex01/Take-home_Ex01.html#data-preparation",
    "title": "Take home Exercise 01",
    "section": "",
    "text": "df &lt;- read_parquet(\"data/GrabPosisi/part-00000-8bbff892-97d2-4011-9961-703e38972569.c000.snappy.parquet\")\n\n\n\n\nSince the values seems to derive from a timestamp, we will convert the data type of pingtimestamp from character to date. This will allow us to process the data in a more efficient manner with the correct data type. We will use the as_datetime function from the lubridate package to do this.\n\ndf$pingtimestamp &lt;- as_datetime(df$pingtimestamp)\n\n\n\n\nSince GrabPosisi data is a time series data, we need to extract the first and last row of each trip id to get the origin and destination of each. We will use the dplyr package to do this.\n\norigin_df &lt;- df %&gt;%  \n  group_by(trj_id) %&gt;% # group by trip id\n  arrange(pingtimestamp) %&gt;% # arrange by pingtimestamp to sort the data\n  filter(row_number() == 1) %&gt;% # get the first row of all the trip id\n  mutate(weekday = wday(pingtimestamp, label = TRUE, abbr = TRUE), # get the day of the week\n         start_hr = factor(hour(pingtimestamp)),# use factor to get ordinal data\n         day= factor(day(pingtimestamp)))\n\n\n\n\nIn order to integrate GrabPosisi’s dataset, we need to convert the origin_df and destination_df to geospatial data. We will use the st_as_sf function from the sf package to do this. We will also transform the coordinate reference system (CRS) of the data to 3414, which is the projected coordinate system for Singapore.\n\norigin_sf &lt;- st_as_sf(origin_df,\n                      coords = c(\"rawlng\", \"rawlat\"),\n                      crs = 4326) %&gt;%\n  st_transform(crs = 3414)\n\n\n\n\n\nmpsz_sf &lt;- st_read(dsn = \"data\", \n                layer = \"MPSZ-2019\")\n\n\n\n\n\nst_crs(mpsz_sf)\n\n\nmpsz_sf &lt;- st_transform(mpsz_sf,3414)\n\n\nst_crs(mpsz_sf)\n\n\n\n\nLet’s first take a look at the unique values of mpsz to see if there are any outer islands in the data. We’ll be using the unique function to do this.\n\nunique(mpsz_sf$PLN_AREA_N)\n\nAs noted in the task, we are to exclude the outer islands from the Singapore boundary layer. We will use the st_difference function from the sf package to do this. With the above list, we can see that the outer islands are “SOUTHERN ISLANDS”, “NORTH-EASTERN ISLANDS” and “WESTERN ISLANDS”. We will use the st_union function to combine the outer islands and then use the st_difference function to remove the outer islands from the Singapore boundary layer.\n\nouter_island &lt;- mpsz_sf[mpsz_sf$PLN_AREA_N == \"SOUTHERN ISLANDS\" | mpsz_sf$PLN_AREA_N == \"NORTH-EASTERN ISLANDS\" | mpsz_sf$PLN_AREA_N == \"WESTERN ISLANDS\",]\n\n\nmpsz_boundary &lt;- st_difference(st_union(mpsz_sf),st_union(outer_island))\n\n\nmpsz_sf_no_outer &lt;- st_difference(mpsz_sf,st_union(outer_island))\n\n\nplot(mpsz_sf_no_outer['PLN_AREA_N'])\n\n\n\n\n\nroads_sf &lt;- st_read(dsn = \"data\", \n                layer = \"gis_osm_roads_free_1\")\n\n\n\n\n\nst_crs(roads_sf)\n\n\nroads_sf_3414 &lt;- st_transform(roads_sf,3414)\n\n\nst_crs(roads_sf_3414)\n\n\n\n\nWe’ll first begin by eliminating the roads with no speed limit. We will use the filter function from the dplyr package to do this. Since all roads in Singapore that are not pedestrian walkways should have a speed limit, we will filter the roads with a speed limit of greater than 0.\n\nroad = roads_sf_3414 %&gt;%\n  filter(maxspeed &gt; 0)\n\nNext, we will take a look at the unique values of fclass in roads_sf_3414 to see if there are any fclass that we need to remove. We’ll be using the unique function to do this.\n\nunique(road$fclass)\n\nWe can notice that there are still several fclass that we need to remove. We will remove all rows of roads that are fclass in [“primary_link” “service” “unclassified” “living_street” “footway” “secondary_link” “tertiary_link” “cycleway” “pedestrian”].\n\nroad = road[!road$fclass %in% c(\"primary_link\", \"service\", \"unclassified\", \"living_street\", \"footway\", \"secondary_link\", \"tertiary_link\", \"cycleway\", \"pedestrian\"),]\n\nSince the data from OpenStreetMap consist of Malaysia, Brunei & Singapore, let’s filter out the roads that are not in Singapore. We will use the st_intersection function from the sf package to do this.\n\n\n\nroad = st_intersection(road, mpsz_sf_no_outer)\n\nUpon inspection, we still notice that there are some roads which do not have names. Since this does not provide us with more information, let’s reduce it further.\n\nroad = road[!is.na(road$name),]\n\n\nunique(road$layer)\n\n\nroad = road[road$layer == 0,]\n\nWARNING: Visualising all the roads in Singapore takes a long time. To reduce render time, an image of the results will be provided below.\n\nplot(road['name'])"
  },
  {
    "objectID": "Take-home_Ex/Take-home_Ex01/Take-home_Ex01.html#initialisation-of-spatial-point-patterns-analysis",
    "href": "Take-home_Ex/Take-home_Ex01/Take-home_Ex01.html#initialisation-of-spatial-point-patterns-analysis",
    "title": "Take home Exercise 01",
    "section": "",
    "text": "Lets do a quick plot of a chloropleth map of the master plan of singapore to view the different towns available.\n\ntmap_mode(\"plot\")\ntmap_options(max.categories = 55)\ntm_shape(mpsz)+\n  tm_fill(col = \"PLN_AREA_N\")+\n  tm_layout(legend.position = c(\"right\", \"bottom\"),\n            frame = FALSE,\n            title = \"Master Plan of Singapore 2019\",\n            legend.text.size = 0.5\n            )"
  },
  {
    "objectID": "Take-home_Ex/Take-home_Ex01/Take-home_Ex01.html#grab-trips-in-singapore",
    "href": "Take-home_Ex/Take-home_Ex01/Take-home_Ex01.html#grab-trips-in-singapore",
    "title": "Take home Exercise 01",
    "section": "",
    "text": "To zoom in the different regions, we’ll be plotting a chloropleth map of origin of grab trips to singapore map to determine the distribution of grab trips in singapore\n\ntmap_mode(\"view\")\ntm_shape(mpsz)+\n  tm_polygons()+\n  tm_text(\"PLN_AREA_N\", size=0.5)+\n  tm_shape(origin_sf)+\n  tm_dots(alpha=0.4, size = 0.05, col = \"blue\")\n\n\n\n\n\n\nTaking a look at the distribution of grab trips in singapore, we can see that the distribution is quite uniform. However, we can see that there are more grab trips in the central region of Singapore. This is expected as the central region of Singapore is the most densely populated area in Singapore.\nHowever, I want to take a look at the different regions of Singapore to see the different distributions. I will be selecting 4 towns from different regions.\nThe towns selected will be Jurong East(West), Woodlands(North), Tampines(East) and Rochor(Central).\nLets zoom in to the different regions of Singapore to see the different distributions."
  },
  {
    "objectID": "Take-home_Ex/Take-home_Ex01/Take-home_Ex01.html#zooming-into-specific-study-areas",
    "href": "Take-home_Ex/Take-home_Ex01/Take-home_Ex01.html#zooming-into-specific-study-areas",
    "title": "Take home Exercise 01",
    "section": "",
    "text": "tmp &lt;- mpsz %&gt;%\n  filter(PLN_AREA_N == \"TAMPINES\")\njre &lt;- mpsz %&gt;%\n  filter(PLN_AREA_N == \"JURONG EAST\")\nrch &lt;- mpsz %&gt;%\n  filter(PLN_AREA_N == \"ROCHOR\")\nwld &lt;- mpsz %&gt;%\n  filter(PLN_AREA_N == \"WOODLANDS\")\n\n\nroad_tmp = st_intersection(roads, tmp)\nroad_jre= st_intersection(roads, jre)\nroad_rch = st_intersection(roads, rch)\nroad_wld = st_intersection(roads, wld)\n\n\norigin_tmp = st_intersection(origin_sf, tmp)\norigin_jre = st_intersection(origin_sf, jre)\norigin_rch = st_intersection(origin_sf, rch)\norigin_wld  = st_intersection(origin_sf, wld)\n\n\nbound_tmp = st_union(tmp)\nbound_jre = st_union(jre)\nbound_rch = st_union(rch)\nbound_wld = st_union(wld)\n\nLet’s take a look at our study area!\n\ntm_shape(tmp)+\n  tm_polygons()+\n  tm_text(\"SUBZONE_N\", size=0.5)+\n  tm_shape(origin_tmp)+\n  tm_dots(alpha=0.4, size = 0.05, col = \"blue\")\n\n\n\n\n\n\n\ntm_shape(jre)+\n  tm_polygons()+\n  tm_text(\"SUBZONE_N\", size=0.5)+\n  tm_shape(origin_jre)+\n  tm_dots(alpha=0.4, size = 0.05, col = \"blue\")\n\n\n\n\n\n\n\ntm_shape(rch)+\n  tm_polygons()+\n  tm_text(\"SUBZONE_N\", size=0.5)+\n  tm_shape(origin_rch)+\n  tm_dots(alpha=0.4, size = 0.05, col = \"blue\")\n\n\n\n\n\n\n\ntm_shape(wld)+\n  tm_polygons()+\n  tm_text(\"SUBZONE_N\", size=0.5)+\n  tm_shape(origin_wld)+\n  tm_dots(alpha=0.4, size = 0.05, col = \"blue\")\n\n\n\n\n\n\nFrom this, we can predict how the distribution of grab trips will look like in the different regions of Singapore."
  },
  {
    "objectID": "Take-home_Ex/Take-home_Ex01/Take-home_Ex01.html#storing-data-in-rds-and-loading-it-from-rds",
    "href": "Take-home_Ex/Take-home_Ex01/Take-home_Ex01.html#storing-data-in-rds-and-loading-it-from-rds",
    "title": "Take home Exercise 01",
    "section": "",
    "text": "Before we proceed to the next step, we shall store the data of each region into rds for future use.\n\nwrite_rds(tmp, \"data/rds/tmp.rds\")\nwrite_rds(jre, \"data/rds/jre.rds\")\nwrite_rds(rch, \"data/rds/rch.rds\")\nwrite_rds(wld, \"data/rds/wld.rds\")\n\nwrite_rds(road_tmp, \"data/rds/road_tmp.rds\")\nwrite_rds(road_jre, \"data/rds/road_jre.rds\")\nwrite_rds(road_rch, \"data/rds/road_rch.rds\")\nwrite_rds(road_wld, \"data/rds/road_wld.rds\")\n\nwrite_rds(origin_tmp, \"data/rds/origin_tmp.rds\")\nwrite_rds(origin_jre, \"data/rds/origin_jre.rds\")\nwrite_rds(origin_rch, \"data/rds/origin_rch.rds\")\nwrite_rds(origin_wld, \"data/rds/origin_wld.rds\")\n\nwrite_rds(bound_tmp, \"data/rds/bound_tmp.rds\")\nwrite_rds(bound_jre, \"data/rds/bound_jre.rds\")\nwrite_rds(bound_rch, \"data/rds/bound_rch.rds\")\nwrite_rds(bound_wld, \"data/rds/bound_wld.rds\")\n\nLoad the data from rds for each region\n\ntmp &lt;- read_rds(\"data/rds/tmp.rds\")\njre &lt;- read_rds(\"data/rds/jre.rds\")\nrch &lt;- read_rds(\"data/rds/rch.rds\")\nwld &lt;- read_rds(\"data/rds/wld.rds\")\n\nroad_tmp &lt;- read_rds(\"data/rds/road_tmp.rds\")\nroad_jre &lt;- read_rds(\"data/rds/road_jre.rds\")\nroad_rch &lt;- read_rds(\"data/rds/road_rch.rds\")\nroad_wld &lt;- read_rds(\"data/rds/road_wld.rds\")\n\norigin_tmp &lt;- read_rds(\"data/rds/origin_tmp.rds\")\norigin_jre &lt;- read_rds(\"data/rds/origin_jre.rds\")\norigin_rch &lt;- read_rds(\"data/rds/origin_rch.rds\")\norigin_wld &lt;- read_rds(\"data/rds/origin_wld.rds\")\n\nbound_tmp &lt;- read_rds(\"data/rds/bound_tmp.rds\")\nbound_jre &lt;- read_rds(\"data/rds/bound_jre.rds\")\nbound_rch &lt;- read_rds(\"data/rds/bound_rch.rds\")\nbound_wld &lt;- read_rds(\"data/rds/bound_wld.rds\")"
  },
  {
    "objectID": "Take-home_Ex/Take-home_Ex01/Take-home_Ex01.html#first-order-spatial-point-patterns-analysis-kernel-density-estimation",
    "href": "Take-home_Ex/Take-home_Ex01/Take-home_Ex01.html#first-order-spatial-point-patterns-analysis-kernel-density-estimation",
    "title": "Take home Exercise 01",
    "section": "",
    "text": "We will be getting the KDE for the 4 towns selected\n\n\n\n\nbound_tmp_spc &lt;- as(bound_tmp, \"Spatial\")\nbound_jre_spc &lt;- as(bound_jre, \"Spatial\")\nbound_rch_spc &lt;- as(bound_rch, \"Spatial\")\nbound_wld_spc &lt;- as(bound_wld, \"Spatial\")\n\ntmp_spc &lt;- as(tmp, \"Spatial\")\njre_spc &lt;- as(jre, \"Spatial\")\nrch_spc &lt;- as(rch, \"Spatial\")\nwld_spc &lt;- as(wld, \"Spatial\")\n\norigin_tmp_spc &lt;- as(origin_tmp, \"Spatial\")\norigin_jre_spc &lt;- as(origin_jre, \"Spatial\")\norigin_rch_spc &lt;- as(origin_rch, \"Spatial\")\norigin_wld_spc &lt;- as(origin_wld, \"Spatial\")\n\norigin_spc = as_Spatial(origin_sf)\nsg = as_Spatial(sg_sf)\n\nConverting spatial class into generic spatial objects\n\nbound_tmp_sp &lt;- as(bound_tmp_spc, \"SpatialPolygons\")\nbound_jre_sp &lt;- as(bound_jre_spc, \"SpatialPolygons\")\nbound_rch_sp &lt;- as(bound_rch_spc, \"SpatialPolygons\")\nbound_wld_sp &lt;- as(bound_wld_spc, \"SpatialPolygons\")\n\nsg_sp &lt;- as(sg, \"SpatialPolygons\")\n\nconverting generic sp format into spatstat ppp format\n\norigin_tmp_ppp &lt;- as(origin_tmp_spc[\"pingtimestamp\"], \"ppp\")\norigin_jre_ppp &lt;- as(origin_jre_spc[\"pingtimestamp\"], \"ppp\")\norigin_rch_ppp &lt;- as(origin_rch_spc[\"pingtimestamp\"], \"ppp\")\norigin_wld_ppp &lt;- as(origin_wld_spc[\"pingtimestamp\"], \"ppp\")\n\n\norigin_ppp &lt;- as(origin_spc[\"pingtimestamp\"], \"ppp\")\norigin_ppp\n\nMarked planar point pattern: 28000 points\nmarks are dates, of class 'POSIXt'\nwindow: rectangle = [3661.47, 49845.23] x [25201.14, 49685.08] units\n\n\n\n\n\nTo ensure that there are no duplicated points in the origin_ppp, we will use the duplicated function from the base package to do this.\n\nany(duplicated(origin_ppp))\n\n[1] FALSE\n\nany(duplicated(origin_tmp_ppp))\n\n[1] FALSE\n\nany(duplicated(origin_jre_ppp))\n\n[1] FALSE\n\nany(duplicated(origin_rch_ppp))\n\n[1] FALSE\n\nany(duplicated(origin_wld_ppp))\n\n[1] FALSE\n\n\nEverything looks good!\n\npar(mfrow=c(2,2))\nplot(origin_tmp_ppp, legend = FALSE)\nplot(origin_jre_ppp, legend = FALSE)\nplot(origin_rch_ppp, legend = FALSE)\nplot(origin_wld_ppp, legend = FALSE)\n\n\n\n\n\nsg_owin &lt;- as(sg_sp, \"owin\")\nbound_tmp_owin &lt;- as(bound_tmp_sp, \"owin\")\nbound_jre_owin &lt;- as(bound_jre_sp, \"owin\")\nbound_rch_owin &lt;- as(bound_rch_sp, \"owin\")\nbound_wld_owin &lt;- as(bound_wld_sp, \"owin\")\n\n\nplot(sg_owin)\n\n\n\n\n\noriginSG_ppp = origin_ppp[sg_owin]\noriginTMP_ppp = origin_tmp_ppp[bound_tmp_owin]\noriginJRE_ppp = origin_jre_ppp[bound_jre_owin]\noriginRCH_ppp = origin_rch_ppp[bound_rch_owin]\noriginWLD_ppp = origin_wld_ppp[bound_wld_owin]\n\n\npar(mfrow=c(2,2))\nplot(originTMP_ppp, legend = FALSE)\nplot(originJRE_ppp, legend = FALSE)\nplot(originRCH_ppp, legend = FALSE)\nplot(originWLD_ppp, legend = FALSE)\n\n\n\n\n\n# plot origin without legend \nplot(originSG_ppp, legend = FALSE)\n\n\n\n\nTime to calculate the density of the origin points\n\nkde_originSG_bw &lt;- density(originSG_ppp,\n                              sigma=bw.diggle,\n                              edge=TRUE,\n                            kernel=\"gaussian\") \nkde_originTMP_bw &lt;- density(originTMP_ppp,\n                              sigma=bw.diggle,\n                              edge=TRUE,\n                            kernel=\"gaussian\")\nkde_originJRE_bw &lt;- density(originJRE_ppp,\n                              sigma=bw.diggle,\n                              edge=TRUE,\n                            kernel=\"gaussian\")\nkde_originRCH_bw &lt;- density(originRCH_ppp,\n                              sigma=bw.diggle,\n                              edge=TRUE,\n                            kernel=\"gaussian\")\nkde_originWLD_bw &lt;- density(originWLD_ppp,\n                              sigma=bw.diggle,\n                              edge=TRUE,\n                            kernel=\"gaussian\")\n\n\n\n\n\nplot(kde_originSG_bw)\n\n\n\n\n\nplot(kde_originTMP_bw)\n\n\n\n\n\nplot(kde_originJRE_bw)\n\n\n\n\n\nplot(kde_originRCH_bw)\n\n\n\n\n\nplot(kde_originWLD_bw)\n\n\n\n\n\n\n\nWe’ll need to rescale into km to aid visualisation\n\noriginSG_ppp_rescale &lt;- rescale(originSG_ppp, 1000, \"km\")\n\noriginTMP_ppp_rescale &lt;- rescale(originTMP_ppp, 1000, \"km\")\noriginJRE_ppp_rescale &lt;- rescale(originJRE_ppp, 1000, \"km\")\noriginRCH_ppp_rescale &lt;- rescale(originRCH_ppp, 1000, \"km\")\noriginWLD_ppp_rescale &lt;- rescale(originWLD_ppp, 1000, \"km\")\n\n\nbw_sg &lt;- bw.diggle(originSG_ppp)\nbw_sg\n\n   sigma \n10.78216 \n\nbw_tmp &lt;- bw.diggle(originTMP_ppp)\nbw_tmp\n\n   sigma \n8.145744 \n\nbw_jre &lt;- bw.diggle(originJRE_ppp)\nbw_jre\n\n   sigma \n10.34664 \n\nbw_rch &lt;- bw.diggle(originRCH_ppp)\nbw_rch\n\n   sigma \n9.203935 \n\nbw_wld &lt;- bw.diggle(originWLD_ppp)\nbw_wld\n\n   sigma \n6.578762 \n\n\n\n\n\n\n\n\nkde_originSG_bw &lt;- density(originSG_ppp_rescale,\n                            sigma=bw_sg,\n                            edge=TRUE,\n                            kernel=\"gaussian\") \nplot(kde_originSG_bw)\n\n\n\n\n\nkde_originTMP_bw &lt;- density(originTMP_ppp_rescale,\n                            sigma=bw_tmp,\n                            edge=TRUE,\n                            kernel=\"gaussian\")\nplot(kde_originTMP_bw)\n\n\n\n\n\nkde_originJRE_bw &lt;- density(originJRE_ppp_rescale,\n                            sigma=bw_jre,\n                            edge=TRUE,\n                            kernel=\"gaussian\")\nplot(kde_originJRE_bw)\n\n\n\n\n\nkde_originRCH_bw &lt;- density(originRCH_ppp_rescale,\n                            sigma=bw_rch,\n                            edge=TRUE,\n                            kernel=\"gaussian\")\nplot(kde_originRCH_bw)\n\n\n\n\n\nkde_originWLD_bw &lt;- density(originWLD_ppp_rescale,\n                            sigma=bw_wld,\n                            edge=TRUE,\n                            kernel=\"gaussian\")\nplot(kde_originWLD_bw)\n\n\n\n\n\n\n\n\n\nkde_originTMP_bw &lt;- density(originTMP_ppp_rescale,\n                            sigma=0.3,\n                            edge=TRUE,\n                            kernel=\"gaussian\")\nplot(kde_originTMP_bw)\n\n\n\n\n\nkde_originJRE_bw &lt;- density(originJRE_ppp_rescale,\n                            sigma=0.3,\n                            edge=TRUE,\n                            kernel=\"gaussian\")\nplot(kde_originJRE_bw)\n\n\n\n\n\nkde_originRCH_bw &lt;- density(originRCH_ppp_rescale,\n                            sigma=0.3,\n                            edge=TRUE,\n                            kernel=\"gaussian\")\nplot(kde_originRCH_bw)\n\n\n\n\n\nkde_originWLD_bw &lt;- density(originWLD_ppp_rescale,\n                            sigma=0.3,\n                            edge=TRUE,\n                            kernel=\"gaussian\")\nplot(kde_originWLD_bw)\n\n\n\n\n\n\n\nThe kernel density estimation (KDE) is a non-parametric way to estimate the probability density function of a random variable. It is a fundamental data smoothing problem where inferences about the population are made, based on a finite data sample. In this case, we are using KDE to estimate the density of the origin points of the grab trips in the different regions of Singapore.\nIn the initial KDE graph, we can see that the density of the origin points in the different regions of Singapore are quite uniform. However, we can see that the density of the origin points in the central region of Singapore is higher than the other regions. This is expected as the central region of Singapore is the most densely populated area in Singapore.\nHowever, after recalculating the KDE graph using the fixed bandwidth method, we can see that the density of the origin points in the different regions of Singapore are quite uniform. This is expected as the different regions of Singapore are quite uniform in terms of population density.\n\n\n\n\ngridded_kde_originSG_bw &lt;- as.SpatialGridDataFrame.im(kde_originSG_bw)\nspplot(gridded_kde_originSG_bw)\n\n\n\n\nConverting gridded output into raster\n\nraster_kde_originSG_bw &lt;- raster(gridded_kde_originSG_bw)\n\n\nraster_kde_originSG_bw\n\nclass      : RasterLayer \ndimensions : 128, 128, 16384  (nrow, ncol, ncell)\nresolution : 0.4162063, 0.2250614  (x, y)\nextent     : 2.667538, 55.94194, 21.44847, 50.25633  (xmin, xmax, ymin, ymax)\ncrs        : NA \nsource     : memory\nnames      : v \nvalues     : 19.62512, 55.4141  (min, max)\n\n\nAssigning projection systems\n\nprojection(raster_kde_originSG_bw) &lt;- CRS(\"+init=EPSG:3414\")\nraster_kde_originSG_bw\n\nclass      : RasterLayer \ndimensions : 128, 128, 16384  (nrow, ncol, ncell)\nresolution : 0.4162063, 0.2250614  (x, y)\nextent     : 2.667538, 55.94194, 21.44847, 50.25633  (xmin, xmax, ymin, ymax)\ncrs        : +proj=tmerc +lat_0=1.36666666666667 +lon_0=103.833333333333 +k=1 +x_0=28001.642 +y_0=38744.572 +ellps=WGS84 +units=m +no_defs \nsource     : memory\nnames      : v \nvalues     : 19.62512, 55.4141  (min, max)\n\n\nvisualising the output\n\ntm_shape(raster_kde_originSG_bw) + \n  tm_raster(\"v\") +\n  tm_layout(legend.position = c(\"right\", \"bottom\"), frame = FALSE)\n\n\n\n\n\nset tmap mode to plot mode\n\ntmap_mode(\"plot\")\n\n\ntm_shape(raster_kde_originSG_bw) + \n  tm_raster(\"v\") +\n  tm_layout(legend.position = c(\"right\", \"bottom\"), frame = FALSE)"
  },
  {
    "objectID": "Take-home_Ex/Take-home_Ex01/Take-home_Ex01.html#network-kernel-density-estimation-nkde-for-the-4-towns",
    "href": "Take-home_Ex/Take-home_Ex01/Take-home_Ex01.html#network-kernel-density-estimation-nkde-for-the-4-towns",
    "title": "Take home Exercise 01",
    "section": "",
    "text": "str(roads)\n\nClasses 'sf' and 'data.frame':  76993 obs. of  11 variables:\n $ osm_id  : chr  \"4386520\" \"4887867\" \"8096835\" \"9584642\" ...\n $ code    : int  5113 5122 5113 5115 5113 5122 5113 5113 5113 5113 ...\n $ fclass  : chr  \"primary\" \"residential\" \"primary\" \"tertiary\" ...\n $ name    : chr  \"Orchard Road\" \"Hougang Avenue 1\" \"Scotts Road\" \"Keng Lee Road\" ...\n $ ref     : chr  NA NA NA NA ...\n $ oneway  : chr  \"F\" \"B\" \"F\" \"F\" ...\n $ maxspeed: int  50 50 60 50 60 50 50 50 50 50 ...\n $ layer   : num  0 0 0 0 0 0 0 0 0 0 ...\n $ bridge  : chr  \"F\" \"F\" \"F\" \"F\" ...\n $ tunnel  : chr  \"F\" \"F\" \"F\" \"F\" ...\n $ geometry:sfc_GEOMETRY of length 76993; first list element:  'XY' num [1:2, 1:2] 27638 27643 32038 32035\n - attr(*, \"sf_column\")= chr \"geometry\"\n - attr(*, \"agr\")= Factor w/ 3 levels \"constant\",\"aggregate\",..: NA NA NA NA NA NA NA NA NA NA\n  ..- attr(*, \"names\")= chr [1:10] \"osm_id\" \"code\" \"fclass\" \"name\" ...\n\n\n\nst_crs(origin_sf)\n\nCoordinate Reference System:\n  User input: EPSG:3414 \n  wkt:\nPROJCRS[\"SVY21 / Singapore TM\",\n    BASEGEOGCRS[\"SVY21\",\n        DATUM[\"SVY21\",\n            ELLIPSOID[\"WGS 84\",6378137,298.257223563,\n                LENGTHUNIT[\"metre\",1]]],\n        PRIMEM[\"Greenwich\",0,\n            ANGLEUNIT[\"degree\",0.0174532925199433]],\n        ID[\"EPSG\",4757]],\n    CONVERSION[\"Singapore Transverse Mercator\",\n        METHOD[\"Transverse Mercator\",\n            ID[\"EPSG\",9807]],\n        PARAMETER[\"Latitude of natural origin\",1.36666666666667,\n            ANGLEUNIT[\"degree\",0.0174532925199433],\n            ID[\"EPSG\",8801]],\n        PARAMETER[\"Longitude of natural origin\",103.833333333333,\n            ANGLEUNIT[\"degree\",0.0174532925199433],\n            ID[\"EPSG\",8802]],\n        PARAMETER[\"Scale factor at natural origin\",1,\n            SCALEUNIT[\"unity\",1],\n            ID[\"EPSG\",8805]],\n        PARAMETER[\"False easting\",28001.642,\n            LENGTHUNIT[\"metre\",1],\n            ID[\"EPSG\",8806]],\n        PARAMETER[\"False northing\",38744.572,\n            LENGTHUNIT[\"metre\",1],\n            ID[\"EPSG\",8807]]],\n    CS[Cartesian,2],\n        AXIS[\"northing (N)\",north,\n            ORDER[1],\n            LENGTHUNIT[\"metre\",1]],\n        AXIS[\"easting (E)\",east,\n            ORDER[2],\n            LENGTHUNIT[\"metre\",1]],\n    USAGE[\n        SCOPE[\"Cadastre, engineering survey, topographic mapping.\"],\n        AREA[\"Singapore - onshore and offshore.\"],\n        BBOX[1.13,103.59,1.47,104.07]],\n    ID[\"EPSG\",3414]]\n\n\n\n\n\nroad_tmp_ls = st_cast(road_tmp, \"LINESTRING\")\nroad_jre_ls = st_cast(road_jre, \"LINESTRING\")\nroad_rch_ls = st_cast(road_rch, \"LINESTRING\")\nroad_wld_ls = st_cast(road_wld, \"LINESTRING\")\n\nThe line distances is set to 200m and the minimum distance is set to 50m. This relates to the real life scenario where a person wanting to board a Grab will try to book the ride within the area.\n\nlixels_tmp &lt;- lixelize_lines(road_tmp_ls, 200, mindist = 50)\nlixels_jre &lt;- lixelize_lines(road_jre_ls, 200, mindist = 50)\nlixels_rch &lt;- lixelize_lines(road_rch_ls, 200, mindist = 50)\nlixels_wld &lt;- lixelize_lines(road_wld_ls, 200, mindist = 50)\n\n\nsamples_tmp &lt;- lines_center(lixels_tmp)\nsamples_jre &lt;- lines_center(lixels_jre)\nsamples_rch &lt;- lines_center(lixels_rch)\nsamples_wld &lt;- lines_center(lixels_wld)\n\n\n\n\nWe will be using the nkde function from the spatstat package to get the density of the origin points in the different regions of Singapore.\n\ndensities_tmp &lt;- nkde(road_tmp_ls['name'], \n                  events = origin_tmp,\n                  w = rep(1,nrow(origin_tmp)),\n                  samples = samples_tmp,\n                  kernel_name = \"quartic\",\n                  bw = 200, \n                  div= \"bw\", \n                  method = \"simple\", \n                  digits = 1, \n                  tol = 1,\n                  grid_shape = c(1,1), \n                  max_depth = 8,\n                  agg = 5, #we aggregate events within a 5m radius (faster calculation)\n                  sparse = TRUE,\n                  verbose = FALSE)\n\n\ndensities_jre &lt;- nkde(road_jre_ls['name'], \n                  events = origin_jre,\n                  w = rep(1,nrow(origin_jre)),\n                  samples = samples_jre,\n                  kernel_name = \"quartic\",\n                  bw = 200, \n                  div= \"bw\", \n                  method = \"simple\", \n                  digits = 1, \n                  tol = 1,\n                  grid_shape = c(1,1), \n                  max_depth = 8,\n                  agg = 5, #we aggregate events within a 5m radius (faster calculation)\n                  sparse = TRUE,\n                  verbose = FALSE)\n\n\ndensities_rch &lt;- nkde(road_rch_ls['name'], \n                  events = origin_rch,\n                  w = rep(1,nrow(origin_rch)),\n                  samples = samples_rch,\n                  kernel_name = \"quartic\",\n                  bw = 200, \n                  div= \"bw\", \n                  method = \"simple\", \n                  digits = 1, \n                  tol = 1,\n                  grid_shape = c(1,1), \n                  max_depth = 8,\n                  agg = 5, #we aggregate events within a 5m radius (faster calculation)\n                  sparse = TRUE,\n                  verbose = FALSE)\n\n\ndensities_wld &lt;- nkde(road_wld_ls['name'], \n                  events = origin_wld,\n                  w = rep(1,nrow(origin_wld)),\n                  samples = samples_wld,\n                  kernel_name = \"quartic\",\n                  bw = 200, \n                  div= \"bw\", \n                  method = \"simple\", \n                  digits = 1, \n                  tol = 1,\n                  grid_shape = c(1,1), \n                  max_depth = 8,\n                  agg = 5, #we aggregate events within a 5m radius (faster calculation)\n                  sparse = TRUE,\n                  verbose = FALSE)\n\n\nsamples_tmp$density &lt;- densities_tmp\nlixels_tmp$density &lt;- densities_tmp\nsamples_jre$density &lt;- densities_jre\nlixels_jre$density &lt;- densities_jre\nsamples_rch$density &lt;- densities_rch\nlixels_rch$density &lt;- densities_rch\nsamples_wld$density &lt;- densities_wld\nlixels_wld$density &lt;- densities_wld\n\nSimilar to KDE, we’ll need to rescale the density to aid visualisation\n\n# rescaling to help the mapping\n# !!! do not run more than once. \n\nsamples_tmp$density &lt;- samples_tmp$density*1000\nlixels_tmp$density &lt;- lixels_tmp$density*1000\nsamples_jre$density &lt;- samples_jre$density*1000\nlixels_jre$density &lt;- lixels_jre$density*1000\nsamples_rch$density &lt;- samples_rch$density*1000\nlixels_rch$density &lt;- lixels_rch$density*1000\nsamples_wld$density &lt;- samples_wld$density*1000\nlixels_wld$density &lt;- lixels_wld$density*1000\n\n\n\n\n\ntm_shape(lixels_tmp)+\n  tm_lines(col=\"density\",lwd=5)+\ntm_shape(origin_tmp)+\n  tm_dots(alpha = 0.3)\n\n\n\n\n\ntm_shape(lixels_jre)+\n  tm_lines(col=\"density\",lwd=5)+\ntm_shape(origin_jre)+\n  tm_dots(alpha = 0.3)\n\n\n\n\n\ntm_shape(lixels_rch)+\n  tm_lines(col=\"density\",lwd=5)+\ntm_shape(origin_rch)+\n  tm_dots(alpha = 0.3)\n\n\n\n\n\ntm_shape(lixels_wld)+\n  tm_lines(col=\"density\",lwd=5)+\ntm_shape(origin_wld)+\n  tm_dots(alpha = 0.3)\n\n\n\n\n\n\n\nSimilar to KDE, it can be seen that the density of the origin points in the different regions of Singapore are quite uniform. This is expected as the different regions of Singapore are quite uniform in terms of population density.\nHowever, the central regions of Singapore have a higher density of origin points. This is expected as the central region of Singapore is the most densely populated area in Singapore.\nFor woodlands, the density is saturated in 3 major streets. Tihs can be due to the fact that woodlands is a residential area and the streets are the main roads to the residential areas. Moreover, since it’s in the south of woodlands, it can mean that the area is closer to the central of Singapore. Thus, it is expected to have a higher densitiy.\nFor Tampines, the density is pretty sparsed. The highest density street is towards the east of Tampines. This could be an indicative sign where most of the Grab trips are going towards the Airport or ECP or TPE.\nFor Jurong East, the density is pretty sparsed. The highest density street is towards the south of Jurong East. This could be an indicative sign where most of the Grab trips are going towards the north-west of Singapore. Contrary to Woodlands, it seems as if more trips are heading outwards of the central region of Singapore.\nFor Rochor, the density becomes very saturated along the 3 intersections. This could be due to the fact that Rochor is a commercial area and the streets are the main roads to the commercial areas. Moreover, since it’s in the central of Singapore, it is expected to have a higher density. However, if the majority of the density lies along the same vacinity, it might cause jams and traffic congestion. Therefore, it should be taken into consideration for future urban planning."
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex05/Hands-on_Ex06.html",
    "href": "Hands-on_Ex/Hands-on_Ex05/Hands-on_Ex06.html",
    "title": "Hands-on Exercise 6 - Global Measures of Spatial Autocorrelation & Local Measures of Spatial Autocorrelation",
    "section": "",
    "text": "1 Getting Started\n1.1 The analytical question\n1.1 The Study Area and Data\nTwo data sets will be used in this hands-on exercise, they are:\nHunan province administrative boundary layer at county level. This is a geospatial data set in ESRI shapefile format. Hunan_2012.csv: This csv file contains selected Hunan’s local development indicators in 2012.\n1.2 Install and Load R packages\n\n\nCode\npacman::p_load(sf, spdep, tmap, tidyverse, dplyr)\n\n\n2 Getting Data into R environment\n2.1 Importing shape file into r environment\nUses st_read() of sf package to import Hunan shapefile into R. The imported shapefile will be simple features Object of sf.\n\n\nCode\nhunan &lt;- st_read(dsn = \"data/geospatial\", \n                 layer = \"Hunan\")\n\n\nReading layer `Hunan' from data source \n  `C:\\EbenezerHo\\IS415-GAA\\Hands-on_Ex\\Hands-on_Ex05\\data\\geospatial' \n  using driver `ESRI Shapefile'\nSimple feature collection with 88 features and 7 fields\nGeometry type: POLYGON\nDimension:     XY\nBounding box:  xmin: 108.7831 ymin: 24.6342 xmax: 114.2544 ymax: 30.12812\nGeodetic CRS:  WGS 84\n\n\n2.2 Importing csv file into environment\nImport Hunan_2012.csv into R by using read_csv() of readr package. The output is R data frame class.\n\n\nCode\nhunan2012 &lt;- read_csv(\"data/aspatial/Hunan_2012.csv\")\n\n\n2.3 Performing relational join\nUpdate the attribute table of hunan’s SpatialPolygonsDataFrame with the attribute fields of hunan2012 dataframe. This is performed by using left_join() of dplyr package.\n\n\nCode\nhunan &lt;- left_join(hunan,hunan2012) %&gt;%\n  dplyr::select(1:4, 7, 15)\n\n\n2.4 Visualising Regional Development Indicator\nPrepare a basemap and a choropleth map showing the distribution of GDPPC 2012 by using qtm() of tmap package.\n\n\nCode\nequal &lt;- tm_shape(hunan) +\n  tm_fill(\"GDPPC\",\n          n = 5,\n          style = \"equal\") +\n  tm_borders(alpha = 0.5) +\n  tm_layout(main.title = \"Equal interval classification\")\n\nquantile &lt;- tm_shape(hunan) +\n  tm_fill(\"GDPPC\",\n          n = 5,\n          style = \"quantile\") +\n  tm_borders(alpha = 0.5) +\n  tm_layout(main.title = \"Equal quantile classification\")\n\ntmap_arrange(equal, \n             quantile, \n             asp=1, \n             ncol=2)\n\n\n\n\n\n3 Global Measures of Spatial Autocorrelation\nCompute global spatial autocorrelation statistics and to perform spatial complete randomness test for global spatial autocorrelation.\n3.1 Computing Contiguity Spatial Weights\nFirst, need to construct a spatial weights of the study area. The spatial weights is used to define the neighbourhood relationships between the geographical units (i.e. county) in the study area.\nspdep package is used to compute contiguity weight matrices for the study area. This function builds a neighbours list based on regions with contiguous boundaries. If you look at the documentation you will see that you can pass a “queen” argument that takes TRUE or FALSE as options. If you do not specify this argument the default is set to TRUE, that is, if you don’t specify queen = FALSE this function will return a list of first order neighbours using the Queen criteria.\nMore specifically, the code chunk below is used to compute Queen contiguity weight matrix.\n\n\nCode\nwm_q &lt;- poly2nb(hunan, \n                queen=TRUE)\nsummary(wm_q)\n\n\nNeighbour list object:\nNumber of regions: 88 \nNumber of nonzero links: 448 \nPercentage nonzero weights: 5.785124 \nAverage number of links: 5.090909 \nLink number distribution:\n\n 1  2  3  4  5  6  7  8  9 11 \n 2  2 12 16 24 14 11  4  2  1 \n2 least connected regions:\n30 65 with 1 link\n1 most connected region:\n85 with 11 links\n\n\nSummary report above shows that there are 88 area units in Hunan. The most connected area unit has 11 neighbours. There are two area units with only one neighbours.\n3.2 Row-standardized weights matrix\nNext,need to assign weights to each neighboring polygon. Each neighboring polygon will be assigned equal weight (style=“W”). This is accomplished by assigning the fraction 1/(#ofneighbors) to each neighboring county then summing the weighted income values.For this example, we’ll stick with the style=“W” option for simplicity’s sake but note that other more robust options are available, notably style=“B”.\n\n\nCode\nrswm_q &lt;- nb2listw(wm_q, \n                   style=\"W\", \n                   zero.policy = TRUE)\nrswm_q\n\n\nCharacteristics of weights list object:\nNeighbour list object:\nNumber of regions: 88 \nNumber of nonzero links: 448 \nPercentage nonzero weights: 5.785124 \nAverage number of links: 5.090909 \n\nWeights style: W \nWeights constants summary:\n   n   nn S0       S1       S2\nW 88 7744 88 37.86334 365.9147\n\n\n4 Global Measures of Spatial Autocorrelation: Moran’s I\n4.1 Maron’s I test\nPerform Moran’s I statistics testing by using moran.test() of spdep.\n\n\nCode\nmoran.test(hunan$GDPPC, \n           listw=rswm_q, \n           zero.policy = TRUE, \n           na.action=na.omit)\n\n\n\n    Moran I test under randomisation\n\ndata:  hunan$GDPPC  \nweights: rswm_q    \n\nMoran I statistic standard deviate = 4.7351, p-value = 1.095e-06\nalternative hypothesis: greater\nsample estimates:\nMoran I statistic       Expectation          Variance \n      0.300749970      -0.011494253       0.004348351 \n\n\n4.2 Computing Monte Carlo Moran’s I Performs permutation test for Moran’s I statistic by using moran.mc() of spdep. A total of 1000 simulation will be performed.\n\n\nCode\nset.seed(1234)\nbperm= moran.mc(hunan$GDPPC, \n                listw=rswm_q, \n                nsim=999, \n                zero.policy = TRUE, \n                na.action=na.omit)\nbperm\n\n\n\n    Monte-Carlo simulation of Moran I\n\ndata:  hunan$GDPPC \nweights: rswm_q  \nnumber of simulations + 1: 1000 \n\nstatistic = 0.30075, observed rank = 1000, p-value = 0.001\nalternative hypothesis: greater\n\n\n4.3 Visualising Monte Carlo Moran’s I\nExamine the simulated Moran’s I test statistics in greater detail. This can be achieved by plotting the distribution of the statistical values as a histogram\nIn the code chunk below hist() and abline() of R Graphics are used.\n\n\nCode\nmean(bperm$res[1:999])\n\n\n[1] -0.01504572\n\n\n\n\nCode\nvar(bperm$res[1:999])\n\n\n[1] 0.004371574\n\n\n\n\nCode\nsummary(bperm$res[1:999])\n\n\n    Min.  1st Qu.   Median     Mean  3rd Qu.     Max. \n-0.18339 -0.06168 -0.02125 -0.01505  0.02611  0.27593 \n\n\n\n\nCode\nhist(bperm$res, \n     freq=TRUE, \n     breaks=20, \n     xlab=\"Simulated Moran's I\")\nabline(v=0, \n       col=\"red\") \n\n\n\n\n\n5 Global Measures of Spatial Autocorrelation: Geary’s C\n5.1 Geary’s C test\nPerforms Geary’s C test for spatial autocorrelation by using geary.test() of spdep.\n\n\nCode\ngeary.test(hunan$GDPPC, listw=rswm_q)\n\n\n\n    Geary C test under randomisation\n\ndata:  hunan$GDPPC \nweights: rswm_q \n\nGeary C statistic standard deviate = 3.6108, p-value = 0.0001526\nalternative hypothesis: Expectation greater than statistic\nsample estimates:\nGeary C statistic       Expectation          Variance \n        0.6907223         1.0000000         0.0073364 \n\n\n5.2 Computing Monte Carlo Geary’s C\nPerforms permutation test for Geary’s C statistic by using geary.mc() of spdep.\n\n\nCode\nset.seed(1234)\nbperm=geary.mc(hunan$GDPPC, \n               listw=rswm_q, \n               nsim=999)\nbperm\n\n\n\n    Monte-Carlo simulation of Geary C\n\ndata:  hunan$GDPPC \nweights: rswm_q \nnumber of simulations + 1: 1000 \n\nstatistic = 0.69072, observed rank = 1, p-value = 0.001\nalternative hypothesis: greater\n\n\n5.3 Visualising Monte Carlo Geary’s C Plot a histogram to reveal the distribution of the simulated values\n\n\nCode\nmean(bperm$res[1:999])\n\n\n[1] 1.004402\n\n\n\n\nCode\nvar(bperm$res[1:999])\n\n\n[1] 0.007436493\n\n\n\n\nCode\nsummary(bperm$res[1:999])\n\n\n   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. \n 0.7142  0.9502  1.0052  1.0044  1.0595  1.2722 \n\n\n\n\nCode\nhist(bperm$res, freq=TRUE, breaks=20, xlab=\"Simulated Geary c\")\nabline(v=1, col=\"red\") \n\n\n\n\n\n6 Spatial Correlogram\nSpatial correlograms are great to examine patterns of spatial autocorrelation in your data or model residuals. They show how correlated are pairs of spatial observations when you increase the distance (lag) between them - they are plots of some index of autocorrelation (Moran’s I or Geary’s c) against distance.Although correlograms are not as fundamental as variograms (a keystone concept of geostatistics), they are very useful as an exploratory and descriptive tool. For this purpose they actually provide richer information than variograms.\n6.1 Compute Moran’s coorelogram\nsp.correlogram() of spdep package is used to compute a 6-lag spatial correlogram of GDPPC. The global spatial autocorrelation used in Moran’s I. The plot() of base Graph is then used to plot the output.\n\n\nCode\nMI_corr &lt;- sp.correlogram(wm_q, \n                          hunan$GDPPC, \n                          order=6, \n                          method=\"I\", \n                          style=\"W\")\nplot(MI_corr)\n\n\n\n\n\nPlotting the output might not allow us to provide complete interpretation. This is because not all autocorrelation values are statistically significant. Hence, it is important for us to examine the full analysis report by printing out the analysis results as in the code chunk below.\n\n\nCode\nprint(MI_corr)\n\n\nSpatial correlogram for hunan$GDPPC \nmethod: Moran's I\n         estimate expectation   variance standard deviate Pr(I) two sided    \n1 (88)  0.3007500  -0.0114943  0.0043484           4.7351       2.189e-06 ***\n2 (88)  0.2060084  -0.0114943  0.0020962           4.7505       2.029e-06 ***\n3 (88)  0.0668273  -0.0114943  0.0014602           2.0496        0.040400 *  \n4 (88)  0.0299470  -0.0114943  0.0011717           1.2107        0.226015    \n5 (88) -0.1530471  -0.0114943  0.0012440          -4.0134       5.984e-05 ***\n6 (88) -0.1187070  -0.0114943  0.0016791          -2.6164        0.008886 ** \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\n\n6.2 Compute Geary’s C correlogram and plot\nsp.correlogram() of spdep package is used to compute a 6-lag spatial correlogram of GDPPC. The global spatial autocorrelation used in Geary’s C. The plot() of base Graph is then used to plot the output.\n\n\nCode\nGC_corr &lt;- sp.correlogram(wm_q, \n                          hunan$GDPPC, \n                          order=6, \n                          method=\"C\", \n                          style=\"W\")\nplot(GC_corr)\n\n\n\n\n\nSimilar to the previous step, we will print out the analysis report\n\n\nCode\nprint(GC_corr)\n\n\nSpatial correlogram for hunan$GDPPC \nmethod: Geary's C\n        estimate expectation  variance standard deviate Pr(I) two sided    \n1 (88) 0.6907223   1.0000000 0.0073364          -3.6108       0.0003052 ***\n2 (88) 0.7630197   1.0000000 0.0049126          -3.3811       0.0007220 ***\n3 (88) 0.9397299   1.0000000 0.0049005          -0.8610       0.3892612    \n4 (88) 1.0098462   1.0000000 0.0039631           0.1564       0.8757128    \n5 (88) 1.2008204   1.0000000 0.0035568           3.3673       0.0007592 ***\n6 (88) 1.0773386   1.0000000 0.0058042           1.0151       0.3100407    \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\n\n7 Cluster and Outlier Analysis\nLocal Indicators of Spatial Association or LISA are statistics that evaluate the existence of clusters in the spatial arrangement of a given variable. For instance if we are studying cancer rates among census tracts in a given city local clusters in the rates mean that there are areas that have higher or lower rates than is to be expected by chance alone; that is, the values occurring are above or below those of a random distribution in space.\n7.1 Computing local Moran’s I\nthe localmoran() function of spdep will be used. It computes Ii values, given a set of zi values and a listw object providing neighbour weighting information for the polygon associated with the zi values.\nThe code chunks below are used to compute local Moran’s I of GDPPC2012 at the county level.\n\n\nCode\nfips &lt;- order(hunan$County)\nlocalMI &lt;- localmoran(hunan$GDPPC, rswm_q)\nhead(localMI)\n\n\n            Ii          E.Ii       Var.Ii        Z.Ii Pr(z != E(Ii))\n1 -0.001468468 -2.815006e-05 4.723841e-04 -0.06626904      0.9471636\n2  0.025878173 -6.061953e-04 1.016664e-02  0.26266425      0.7928094\n3 -0.011987646 -5.366648e-03 1.133362e-01 -0.01966705      0.9843090\n4  0.001022468 -2.404783e-07 5.105969e-06  0.45259801      0.6508382\n5  0.014814881 -6.829362e-05 1.449949e-03  0.39085814      0.6959021\n6 -0.038793829 -3.860263e-04 6.475559e-03 -0.47728835      0.6331568\n\n\nlocalmoran() function returns a matrix of values whose columns are:\nIi: the local Moran’s I statistics E.Ii: the expectation of local moran statistic under the randomisation hypothesis Var.Ii: the variance of local moran statistic under the randomisation hypothesis Z.Ii:the standard deviate of local moran statistic Pr(): the p-value of local moran statistic The code chunk below list the content of the local Moran matrix derived by using printCoefmat().\n\n\nCode\nprintCoefmat(data.frame(\n  localMI[fips,], \n  row.names=hunan$County[fips]),\n  check.names=FALSE)\n\n\n                       Ii        E.Ii      Var.Ii        Z.Ii Pr.z....E.Ii..\nAnhua         -2.2493e-02 -5.0048e-03  5.8235e-02 -7.2467e-02         0.9422\nAnren         -3.9932e-01 -7.0111e-03  7.0348e-02 -1.4791e+00         0.1391\nAnxiang       -1.4685e-03 -2.8150e-05  4.7238e-04 -6.6269e-02         0.9472\nBaojing        3.4737e-01 -5.0089e-03  8.3636e-02  1.2185e+00         0.2230\nChaling        2.0559e-02 -9.6812e-04  2.7711e-02  1.2932e-01         0.8971\nChangning     -2.9868e-05 -9.0010e-09  1.5105e-07 -7.6828e-02         0.9388\nChangsha       4.9022e+00 -2.1348e-01  2.3194e+00  3.3590e+00         0.0008\nChengbu        7.3725e-01 -1.0534e-02  2.2132e-01  1.5895e+00         0.1119\nChenxi         1.4544e-01 -2.8156e-03  4.7116e-02  6.8299e-01         0.4946\nCili           7.3176e-02 -1.6747e-03  4.7902e-02  3.4200e-01         0.7324\nDao            2.1420e-01 -2.0824e-03  4.4123e-02  1.0297e+00         0.3032\nDongan         1.5210e-01 -6.3485e-04  1.3471e-02  1.3159e+00         0.1882\nDongkou        5.2918e-01 -6.4461e-03  1.0748e-01  1.6338e+00         0.1023\nFenghuang      1.8013e-01 -6.2832e-03  1.3257e-01  5.1198e-01         0.6087\nGuidong       -5.9160e-01 -1.3086e-02  3.7003e-01 -9.5104e-01         0.3416\nGuiyang        1.8240e-01 -3.6908e-03  3.2610e-02  1.0305e+00         0.3028\nGuzhang        2.8466e-01 -8.5054e-03  1.4152e-01  7.7931e-01         0.4358\nHanshou        2.5878e-02 -6.0620e-04  1.0167e-02  2.6266e-01         0.7928\nHengdong       9.9964e-03 -4.9063e-04  6.7742e-03  1.2742e-01         0.8986\nHengnan        2.8064e-02 -3.2160e-04  3.7597e-03  4.6294e-01         0.6434\nHengshan      -5.8201e-03 -3.0437e-05  5.1076e-04 -2.5618e-01         0.7978\nHengyang       6.2997e-02 -1.3046e-03  2.1865e-02  4.3486e-01         0.6637\nHongjiang      1.8790e-01 -2.3019e-03  3.1725e-02  1.0678e+00         0.2856\nHuarong       -1.5389e-02 -1.8667e-03  8.1030e-02 -4.7503e-02         0.9621\nHuayuan        8.3772e-02 -8.5569e-04  2.4495e-02  5.4072e-01         0.5887\nHuitong        2.5997e-01 -5.2447e-03  1.1077e-01  7.9685e-01         0.4255\nJiahe         -1.2431e-01 -3.0550e-03  5.1111e-02 -5.3633e-01         0.5917\nJianghua       2.8651e-01 -3.8280e-03  8.0968e-02  1.0204e+00         0.3076\nJiangyong      2.4337e-01 -2.7082e-03  1.1746e-01  7.1800e-01         0.4728\nJingzhou       1.8270e-01 -8.5106e-04  2.4363e-02  1.1759e+00         0.2396\nJinshi        -1.1988e-02 -5.3666e-03  1.1334e-01 -1.9667e-02         0.9843\nJishou        -2.8680e-01 -2.6305e-03  4.4028e-02 -1.3543e+00         0.1756\nLanshan        6.3334e-02 -9.6365e-04  2.0441e-02  4.4972e-01         0.6529\nLeiyang        1.1581e-02 -1.4948e-04  2.5082e-03  2.3422e-01         0.8148\nLengshuijiang -1.7903e+00 -8.2129e-02  2.1598e+00 -1.1623e+00         0.2451\nLi             1.0225e-03 -2.4048e-07  5.1060e-06  4.5260e-01         0.6508\nLianyuan      -1.4672e-01 -1.8983e-03  1.9145e-02 -1.0467e+00         0.2952\nLiling         1.3774e+00 -1.5097e-02  4.2601e-01  2.1335e+00         0.0329\nLinli          1.4815e-02 -6.8294e-05  1.4499e-03  3.9086e-01         0.6959\nLinwu         -2.4621e-03 -9.0703e-06  1.9258e-04 -1.7676e-01         0.8597\nLinxiang       6.5904e-02 -2.9028e-03  2.5470e-01  1.3634e-01         0.8916\nLiuyang        3.3688e+00 -7.7502e-02  1.5180e+00  2.7972e+00         0.0052\nLonghui        8.0801e-01 -1.1377e-02  1.5538e-01  2.0787e+00         0.0376\nLongshan       7.5663e-01 -1.1100e-02  3.1449e-01  1.3690e+00         0.1710\nLuxi           1.8177e-01 -2.4855e-03  3.4249e-02  9.9561e-01         0.3194\nMayang         2.1852e-01 -5.8773e-03  9.8049e-02  7.1663e-01         0.4736\nMiluo          1.8704e+00 -1.6927e-02  2.7925e-01  3.5715e+00         0.0004\nNan           -9.5789e-03 -4.9497e-04  6.8341e-03 -1.0988e-01         0.9125\nNingxiang      1.5607e+00 -7.3878e-02  8.0012e-01  1.8274e+00         0.0676\nNingyuan       2.0910e-01 -7.0884e-03  8.2306e-02  7.5356e-01         0.4511\nPingjiang     -9.8964e-01 -2.6457e-03  5.6027e-02 -4.1698e+00         0.0000\nQidong         1.1806e-01 -2.1207e-03  2.4747e-02  7.6396e-01         0.4449\nQiyang         6.1966e-02 -7.3374e-04  8.5743e-03  6.7712e-01         0.4983\nRucheng       -3.6992e-01 -8.8999e-03  2.5272e-01 -7.1814e-01         0.4727\nSangzhi        2.5053e-01 -4.9470e-03  6.8000e-02  9.7972e-01         0.3272\nShaodong      -3.2659e-02 -3.6592e-05  5.0546e-04 -1.4510e+00         0.1468\nShaoshan       2.1223e+00 -5.0227e-02  1.3668e+00  1.8583e+00         0.0631\nShaoyang       5.9499e-01 -1.1253e-02  1.3012e-01  1.6807e+00         0.0928\nShimen        -3.8794e-02 -3.8603e-04  6.4756e-03 -4.7729e-01         0.6332\nShuangfeng     9.2835e-03 -2.2867e-03  3.1516e-02  6.5174e-02         0.9480\nShuangpai      8.0591e-02 -3.1366e-04  8.9838e-03  8.5358e-01         0.3933\nSuining        3.7585e-01 -3.5933e-03  4.1870e-02  1.8544e+00         0.0637\nTaojiang      -2.5394e-01 -1.2395e-03  1.4477e-02 -2.1002e+00         0.0357\nTaoyuan        1.4729e-02 -1.2039e-04  8.5103e-04  5.0903e-01         0.6107\nTongdao        4.6482e-01 -6.9870e-03  1.9879e-01  1.0582e+00         0.2900\nWangcheng      4.4220e+00 -1.1067e-01  1.3596e+00  3.8873e+00         0.0001\nWugang         7.1003e-01 -7.8144e-03  1.0710e-01  2.1935e+00         0.0283\nXiangtan       2.4530e-01 -3.6457e-04  3.2319e-03  4.3213e+00         0.0000\nXiangxiang     2.6271e-01 -1.2703e-03  2.1290e-02  1.8092e+00         0.0704\nXiangyin       5.4525e-01 -4.7442e-03  7.9236e-02  1.9539e+00         0.0507\nXinhua         1.1810e-01 -6.2649e-03  8.6001e-02  4.2409e-01         0.6715\nXinhuang       1.5725e-01 -4.1820e-03  3.6648e-01  2.6667e-01         0.7897\nXinning        6.8928e-01 -9.6674e-03  2.0328e-01  1.5502e+00         0.1211\nXinshao        5.7578e-02 -8.5932e-03  1.1769e-01  1.9289e-01         0.8470\nXintian       -7.4050e-03 -5.1493e-03  1.0877e-01 -6.8395e-03         0.9945\nXupu           3.2406e-01 -5.7468e-03  5.7735e-02  1.3726e+00         0.1699\nYanling       -6.9021e-02 -5.9211e-04  9.9306e-03 -6.8667e-01         0.4923\nYizhang       -2.6844e-01 -2.2463e-03  4.7588e-02 -1.2202e+00         0.2224\nYongshun       6.3064e-01 -1.1350e-02  1.8830e-01  1.4795e+00         0.1390\nYongxing       4.3411e-01 -9.0735e-03  1.5088e-01  1.1409e+00         0.2539\nYou            7.8750e-02 -7.2728e-03  1.2116e-01  2.4714e-01         0.8048\nYuanjiang      2.0004e-04 -1.7760e-04  2.9798e-03  6.9181e-03         0.9945\nYuanling       8.7298e-03 -2.2981e-06  2.3221e-05  1.8121e+00         0.0700\nYueyang        4.1189e-02 -1.9768e-04  2.3113e-03  8.6085e-01         0.3893\nZhijiang       1.0476e-01 -7.8123e-04  1.3100e-02  9.2214e-01         0.3565\nZhongfang     -2.2685e-01 -2.1455e-03  3.5927e-02 -1.1855e+00         0.2358\nZhuzhou        3.2864e-01 -5.2432e-04  7.2391e-03  3.8688e+00         0.0001\nZixing        -7.6849e-01 -8.8210e-02  9.4057e-01 -7.0144e-01         0.4830\n\n\n7.1.1 Mapping the local Moran’s I\nBefore mapping the local Moran’s I map, it is wise to append the local Moran’s I dataframe (i.e. localMI) onto hunan SpatialPolygonDataFrame. The code chunks below can be used to perform the task. The out SpatialPolygonDataFrame is called hunan.localMI.\n\n\nCode\nhunan.localMI &lt;- cbind(hunan,localMI) %&gt;%\n  rename(Pr.Ii = Pr.z....E.Ii..)\n\n\n7.1.2 Mapping local Moran’s I values Using choropleth mapping functions of tmap package, we can plot the local Moran’s I values by using the code chinks below.\n\n\nCode\ntm_shape(hunan.localMI) +\n  tm_fill(col = \"Ii\", \n          style = \"pretty\",\n          palette = \"RdBu\",\n          title = \"local moran statistics\") +\n  tm_borders(alpha = 0.5)\n\n\n\n\n\n7.1.3 Mapping local Moran’s I p-values\nThe choropleth shows there is evidence for both positive and negative Ii values. However, it is useful to consider the p-values for each of these values, as consider above.\nThe code chunks below produce a choropleth map of Moran’s I p-values by using functions of tmap package.\n\n\nCode\ntm_shape(hunan.localMI) +\n  tm_fill(col = \"Pr.Ii\", \n          breaks=c(-Inf, 0.001, 0.01, 0.05, 0.1, Inf),\n          palette=\"-Blues\", \n          title = \"local Moran's I p-values\") +\n  tm_borders(alpha = 0.5)\n\n\n\n\n\n7.1.4 Mapping both local Moran’s I values and p-values\nFor effective interpretation, it is better to plot both the local Moran’s I values map and its corresponding p-values map next to each other.\nThe code chunk below will be used to create such visualisation.\n\n\nCode\nlocalMI.map &lt;- tm_shape(hunan.localMI) +\n  tm_fill(col = \"Ii\", \n          style = \"pretty\", \n          title = \"local moran statistics\") +\n  tm_borders(alpha = 0.5)\n\npvalue.map &lt;- tm_shape(hunan.localMI) +\n  tm_fill(col = \"Pr.Ii\", \n          breaks=c(-Inf, 0.001, 0.01, 0.05, 0.1, Inf),\n          palette=\"-Blues\", \n          title = \"local Moran's I p-values\") +\n  tm_borders(alpha = 0.5)\n\ntmap_arrange(localMI.map, pvalue.map, asp=1, ncol=2)\n\n\n\n\n\n8 Creating a LISA Cluster Map\nLISA Cluster Map shows the significant locations color coded by type of spatial autocorrelation. The first step before we can generate the LISA cluster map is to plot the Moran scatterplot.\n8.1 Plotting Moran scatterplot\nMoran scatterplot is an illustration of the relationship between the values of the chosen attribute at each location and the average value of the same attribute at neighboring locations.\nThe code chunk below plots the Moran scatterplot of GDPPC 2012 by using moran.plot() of spdep.\n\n\nCode\nnci &lt;- moran.plot(hunan$GDPPC, rswm_q,\n                  labels=as.character(hunan$County), \n                  xlab=\"GDPPC 2012\", \n                  ylab=\"Spatially Lag GDPPC 2012\")\n\n\n\n\n\nNotice that the plot is split in 4 quadrants. The top right corner belongs to areas that have high GDPPC and are surrounded by other areas that have the average level of GDPPC.\n8.2 Plotting Moran scatterplot with standardised variable\nFirst we will use scale() to centers and scales the variable. Here centering is done by subtracting the mean (omitting NAs) the corresponding columns, and scaling is done by dividing the (centered) variable by their standard deviations.\n\n\nCode\nhunan$Z.GDPPC &lt;- scale(hunan$GDPPC) %&gt;% \n  as.vector \n\n\nThe as.vector() added to the end is to make sure that the data type we get out of this is a vector, that map neatly into out dataframe.\nNow, we are ready to plot the Moran scatterplot again by using the code chunk below.\n\n\nCode\nnci2 &lt;- moran.plot(hunan$Z.GDPPC, rswm_q,\n                   labels=as.character(hunan$County),\n                   xlab=\"z-GDPPC 2012\", \n                   ylab=\"Spatially Lag z-GDPPC 2012\")\n\n\n\n\n\n8.3 Preparing LISA map classes\nThe steps to prepare a LISA cluster map.\n\n\nCode\nquadrant &lt;- vector(mode=\"numeric\",length=nrow(localMI))\n\n\nNext, derives the spatially lagged variable of interest (i.e. GDPPC) and centers the spatially lagged variable around its mean.\n\n\nCode\nhunan$lag_GDPPC &lt;- lag.listw(rswm_q, hunan$GDPPC)\nDV &lt;- hunan$lag_GDPPC - mean(hunan$lag_GDPPC)     \n\n\nThis is follow by centering the local Moran’s around the mean.\n\n\nCode\nLM_I &lt;- localMI[,1] - mean(localMI[,1])    \n\n\nNext, we will set a statistical significance level for the local Moran.\n\n\nCode\nsignif &lt;- 0.05\n\n\nThese four command lines define the low-low (1), low-high (2), high-low (3) and high-high (4) categories.\n\n\nCode\nquadrant[DV &lt;0 & LM_I&gt;0] &lt;- 1\nquadrant[DV &gt;0 & LM_I&lt;0] &lt;- 2\nquadrant[DV &lt;0 & LM_I&lt;0] &lt;- 3  \nquadrant[DV &gt;0 & LM_I&gt;0] &lt;- 4      \n\n\nLastly, places non-significant Moran in the category 0.\n\n\nCode\nquadrant[localMI[,5]&gt;signif] &lt;- 0\n\n\nIn fact, we can combined all the steps into one single code chunk as shown below:\n\n\nCode\nquadrant &lt;- vector(mode=\"numeric\",length=nrow(localMI))\nhunan$lag_GDPPC &lt;- lag.listw(rswm_q, hunan$GDPPC)\nDV &lt;- hunan$lag_GDPPC - mean(hunan$lag_GDPPC)     \nLM_I &lt;- localMI[,1]   \nsignif &lt;- 0.05       \nquadrant[DV &lt;0 & LM_I&gt;0] &lt;- 1\nquadrant[DV &gt;0 & LM_I&lt;0] &lt;- 2\nquadrant[DV &lt;0 & LM_I&lt;0] &lt;- 3  \nquadrant[DV &gt;0 & LM_I&gt;0] &lt;- 4    \nquadrant[localMI[,5]&gt;signif] &lt;- 0\n\n\n8.4 Plotting LISA map\nNow, we can build the LISA map\n\n\nCode\nhunan.localMI$quadrant &lt;- quadrant\ncolors &lt;- c(\"#ffffff\", \"#2c7bb6\", \"#abd9e9\", \"#fdae61\", \"#d7191c\")\nclusters &lt;- c(\"insignificant\", \"low-low\", \"low-high\", \"high-low\", \"high-high\")\n\ntm_shape(hunan.localMI) +\n  tm_fill(col = \"quadrant\", \n          style = \"cat\", \n          palette = colors[c(sort(unique(quadrant)))+1], \n          labels = clusters[c(sort(unique(quadrant)))+1],\n          popup.vars = c(\"\")) +\n  tm_view(set.zoom.limits = c(11,17)) +\n  tm_borders(alpha=0.5)\n\n\n\n\n\nFor effective interpretation, it is better to plot both the local Moran’s I values map and its corresponding p-values map next to each other.\nThe code chunk below will be used to create such visualisation.\n\n\nCode\ngdppc &lt;- qtm(hunan, \"GDPPC\")\n\nhunan.localMI$quadrant &lt;- quadrant\ncolors &lt;- c(\"#ffffff\", \"#2c7bb6\", \"#abd9e9\", \"#fdae61\", \"#d7191c\")\nclusters &lt;- c(\"insignificant\", \"low-low\", \"low-high\", \"high-low\", \"high-high\")\n\nLISAmap &lt;- tm_shape(hunan.localMI) +\n  tm_fill(col = \"quadrant\", \n          style = \"cat\", \n          palette = colors[c(sort(unique(quadrant)))+1], \n          labels = clusters[c(sort(unique(quadrant)))+1],\n          popup.vars = c(\"\")) +\n  tm_view(set.zoom.limits = c(11,17)) +\n  tm_borders(alpha=0.5)\n\ntmap_arrange(gdppc, LISAmap, \n             asp=1, ncol=2)\n\n\n\n\n\n9 Hot Spot and Cold Spot Area Analysis\nBeside detecting cluster and outliers, localised spatial statistics can be also used to detect hot spot and/or cold spot areas.\nThe term ‘hot spot’ has been used generically across disciplines to describe a region or value that is higher relative to its surroundings\n9.1 Getis and Ord’s G-Statistics\nAn alternative spatial statistics to detect spatial anomalies is the Getis and Ord’s G-statistics (Getis and Ord, 1972; Ord and Getis, 1995). It looks at neighbours within a defined proximity to identify where either high or low values clutser spatially. Here, statistically significant hot-spots are recognised as areas of high values where other areas within a neighbourhood range also share high values too.\nThe analysis consists of three steps:\nDeriving spatial weight matrix Computing Gi statistics Mapping Gi statistics\n9.2 Deriving distance-based weight matrix\nFirst, we need to define a new set of neighbours. Whist the spatial autocorrelation considered units which shared borders, for Getis-Ord we are defining neighbours based on distance.\nThere are two type of distance-based proximity matrix, they are:\nfixed distance weight matrix; and adaptive distance weight matrix.\n9.2.1 Deriving the centroid\nneed points to associate with each polygon before we can make our connectivity graph. It will be a little more complicated than just running st_centroid() on the sf object: us.bound. We need the coordinates in a separate data frame for this to work. To do this we will use a mapping function. The mapping function applies a given function to each element of a vector and returns a vector of the same length. Our input vector will be the geometry column of us.bound. Our function will be st_centroid(). We will be using map_dbl variation of map from the purrr package. For more documentation, check out map documentation\nTo get our longitude values we map the st_centroid() function over the geometry column of us.bound and access the longitude value through double bracket notation [[]] and 1. This allows us to get only the longitude, which is the first value in each centroid.\n\n\nCode\nlongitude &lt;- map_dbl(hunan$geometry, ~st_centroid(.x)[[1]])\n\n\nWe do the same for latitude with one key difference. We access the second value per each centroid with [[2]].\n\n\nCode\nlatitude &lt;- map_dbl(hunan$geometry, ~st_centroid(.x)[[2]])\n\n\nNow that we have latitude and longitude, we use cbind to put longitude and latitude into the same object.\n\n\nCode\ncoords &lt;- cbind(longitude, latitude)\n\n\n9.2.2 Determine the cut-off distance\nFirstly, we need to determine the upper limit for distance band by using the steps below:\nReturn a matrix with the indices of points belonging to the set of the k nearest neighbours of each other by using knearneigh() of spdep. Convert the knn object returned by knearneigh() into a neighbours list of class nb with a list of integer vectors containing neighbour region number ids by using knn2nb(). Return the length of neighbour relationship edges by using nbdists() of spdep. The function returns in the units of the coordinates if the coordinates are projected, in km otherwise. Remove the list structure of the returned object by using unlist().\n\n\nCode\n#coords &lt;- coordinates(hunan)\nk1 &lt;- knn2nb(knearneigh(coords))\nk1dists &lt;- unlist(nbdists(k1, coords, longlat = TRUE))\nsummary(k1dists)\n\n\n   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. \n  24.79   32.57   38.01   39.07   44.52   61.79 \n\n\nThe summary report shows that the largest first nearest neighbour distance is 61.79 km, so using this as the upper threshold gives certainty that all units will have at least one neighbour.\n9.2.3 Computing fixed distance weight matrix\nNow, we will compute the distance weight matrix by using dnearneigh()\n\n\nCode\nwm_d62 &lt;- dnearneigh(coords, 0, 62, longlat = TRUE)\nwm_d62\n\n\nNeighbour list object:\nNumber of regions: 88 \nNumber of nonzero links: 324 \nPercentage nonzero weights: 4.183884 \nAverage number of links: 3.681818 \n\n\nNext, nb2listw() is used to convert the nb object into spatial weights object.\n\n\nCode\nwm62_lw &lt;- nb2listw(wm_d62, style = 'B')\nsummary(wm62_lw)\n\n\nCharacteristics of weights list object:\nNeighbour list object:\nNumber of regions: 88 \nNumber of nonzero links: 324 \nPercentage nonzero weights: 4.183884 \nAverage number of links: 3.681818 \nLink number distribution:\n\n 1  2  3  4  5  6 \n 6 15 14 26 20  7 \n6 least connected regions:\n6 15 30 32 56 65 with 1 link\n7 most connected regions:\n21 28 35 45 50 52 82 with 6 links\n\nWeights style: B \nWeights constants summary:\n   n   nn  S0  S1   S2\nB 88 7744 324 648 5440\n\n\n9.3 Computing adaptive distance weight matrix\nOne of the characteristics of fixed distance weight matrix is that more densely settled areas (usually the urban areas) tend to have more neighbours and the less densely settled areas (usually the rural counties) tend to have lesser neighbours. Having many neighbours smoothes the neighbour relationship across more neighbours.\nIt is possible to control the numbers of neighbours directly using k-nearest neighbours, either accepting asymmetric neighbours or imposing symmetry as shown in the code chunk below.\n\n\nCode\nknn &lt;- knn2nb(knearneigh(coords, k=8))\nknn\n\n\nNeighbour list object:\nNumber of regions: 88 \nNumber of nonzero links: 704 \nPercentage nonzero weights: 9.090909 \nAverage number of links: 8 \nNon-symmetric neighbours list\n\n\nNext, nb2listw() is used to convert the nb object into spatial weights object.\n\n\nCode\nknn_lw &lt;- nb2listw(knn, style = 'B')\nsummary(knn_lw)\n\n\nCharacteristics of weights list object:\nNeighbour list object:\nNumber of regions: 88 \nNumber of nonzero links: 704 \nPercentage nonzero weights: 9.090909 \nAverage number of links: 8 \nNon-symmetric neighbours list\nLink number distribution:\n\n 8 \n88 \n88 least connected regions:\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 with 8 links\n88 most connected regions:\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 with 8 links\n\nWeights style: B \nWeights constants summary:\n   n   nn  S0   S1    S2\nB 88 7744 704 1300 23014\n\n\n10 Computing Gi statistics\n10.1 Gi statistics using fixed distance\n\n\nCode\nfips &lt;- order(hunan$County)\ngi.fixed &lt;- localG(hunan$GDPPC, wm62_lw)\ngi.fixed\n\n\n [1]  0.436075843 -0.265505650 -0.073033665  0.413017033  0.273070579\n [6] -0.377510776  2.863898821  2.794350420  5.216125401  0.228236603\n[11]  0.951035346 -0.536334231  0.176761556  1.195564020 -0.033020610\n[16]  1.378081093 -0.585756761 -0.419680565  0.258805141  0.012056111\n[21] -0.145716531 -0.027158687 -0.318615290 -0.748946051 -0.961700582\n[26] -0.796851342 -1.033949773 -0.460979158 -0.885240161 -0.266671512\n[31] -0.886168613 -0.855476971 -0.922143185 -1.162328599  0.735582222\n[36] -0.003358489 -0.967459309 -1.259299080 -1.452256513 -1.540671121\n[41] -1.395011407 -1.681505286 -1.314110709 -0.767944457 -0.192889342\n[46]  2.720804542  1.809191360 -1.218469473 -0.511984469 -0.834546363\n[51] -0.908179070 -1.541081516 -1.192199867 -1.075080164 -1.631075961\n[56] -0.743472246  0.418842387  0.832943753 -0.710289083 -0.449718820\n[61] -0.493238743 -1.083386776  0.042979051  0.008596093  0.136337469\n[66]  2.203411744  2.690329952  4.453703219 -0.340842743 -0.129318589\n[71]  0.737806634 -1.246912658  0.666667559  1.088613505 -0.985792573\n[76]  1.233609606 -0.487196415  1.626174042 -1.060416797  0.425361422\n[81] -0.837897118 -0.314565243  0.371456331  4.424392623 -0.109566928\n[86]  1.364597995 -1.029658605 -0.718000620\nattr(,\"internals\")\n               Gi      E(Gi)        V(Gi)        Z(Gi) Pr(z != E(Gi))\n [1,] 0.064192949 0.05747126 2.375922e-04  0.436075843   6.627817e-01\n [2,] 0.042300020 0.04597701 1.917951e-04 -0.265505650   7.906200e-01\n [3,] 0.044961480 0.04597701 1.933486e-04 -0.073033665   9.417793e-01\n [4,] 0.039475779 0.03448276 1.461473e-04  0.413017033   6.795941e-01\n [5,] 0.049767939 0.04597701 1.927263e-04  0.273070579   7.847990e-01\n [6,] 0.008825335 0.01149425 4.998177e-05 -0.377510776   7.057941e-01\n [7,] 0.050807266 0.02298851 9.435398e-05  2.863898821   4.184617e-03\n [8,] 0.083966739 0.04597701 1.848292e-04  2.794350420   5.200409e-03\n [9,] 0.115751554 0.04597701 1.789361e-04  5.216125401   1.827045e-07\n[10,] 0.049115587 0.04597701 1.891013e-04  0.228236603   8.194623e-01\n[11,] 0.045819180 0.03448276 1.420884e-04  0.951035346   3.415864e-01\n[12,] 0.049183846 0.05747126 2.387633e-04 -0.536334231   5.917276e-01\n[13,] 0.048429181 0.04597701 1.924532e-04  0.176761556   8.596957e-01\n[14,] 0.034733752 0.02298851 9.651140e-05  1.195564020   2.318667e-01\n[15,] 0.011262043 0.01149425 4.945294e-05 -0.033020610   9.736582e-01\n[16,] 0.065131196 0.04597701 1.931870e-04  1.378081093   1.681783e-01\n[17,] 0.027587075 0.03448276 1.385862e-04 -0.585756761   5.580390e-01\n[18,] 0.029409313 0.03448276 1.461397e-04 -0.419680565   6.747188e-01\n[19,] 0.061466754 0.05747126 2.383385e-04  0.258805141   7.957856e-01\n[20,] 0.057656917 0.05747126 2.371303e-04  0.012056111   9.903808e-01\n[21,] 0.066518379 0.06896552 2.820326e-04 -0.145716531   8.841452e-01\n[22,] 0.045599896 0.04597701 1.928108e-04 -0.027158687   9.783332e-01\n[23,] 0.030646753 0.03448276 1.449523e-04 -0.318615290   7.500183e-01\n[24,] 0.035635552 0.04597701 1.906613e-04 -0.748946051   4.538897e-01\n[25,] 0.032606647 0.04597701 1.932888e-04 -0.961700582   3.362000e-01\n[26,] 0.035001352 0.04597701 1.897172e-04 -0.796851342   4.255374e-01\n[27,] 0.012746354 0.02298851 9.812587e-05 -1.033949773   3.011596e-01\n[28,] 0.061287917 0.06896552 2.773884e-04 -0.460979158   6.448136e-01\n[29,] 0.014277403 0.02298851 9.683314e-05 -0.885240161   3.760271e-01\n[30,] 0.009622875 0.01149425 4.924586e-05 -0.266671512   7.897221e-01\n[31,] 0.014258398 0.02298851 9.705244e-05 -0.886168613   3.755267e-01\n[32,] 0.005453443 0.01149425 4.986245e-05 -0.855476971   3.922871e-01\n[33,] 0.043283712 0.05747126 2.367109e-04 -0.922143185   3.564539e-01\n[34,] 0.020763514 0.03448276 1.393165e-04 -1.162328599   2.451020e-01\n[35,] 0.081261843 0.06896552 2.794398e-04  0.735582222   4.619850e-01\n[36,] 0.057419907 0.05747126 2.338437e-04 -0.003358489   9.973203e-01\n[37,] 0.013497133 0.02298851 9.624821e-05 -0.967459309   3.333145e-01\n[38,] 0.019289310 0.03448276 1.455643e-04 -1.259299080   2.079223e-01\n[39,] 0.025996272 0.04597701 1.892938e-04 -1.452256513   1.464303e-01\n[40,] 0.016092694 0.03448276 1.424776e-04 -1.540671121   1.233968e-01\n[41,] 0.035952614 0.05747126 2.379439e-04 -1.395011407   1.630124e-01\n[42,] 0.031690963 0.05747126 2.350604e-04 -1.681505286   9.266481e-02\n[43,] 0.018750079 0.03448276 1.433314e-04 -1.314110709   1.888090e-01\n[44,] 0.015449080 0.02298851 9.638666e-05 -0.767944457   4.425202e-01\n[45,] 0.065760689 0.06896552 2.760533e-04 -0.192889342   8.470456e-01\n[46,] 0.098966900 0.05747126 2.326002e-04  2.720804542   6.512325e-03\n[47,] 0.085415780 0.05747126 2.385746e-04  1.809191360   7.042128e-02\n[48,] 0.038816536 0.05747126 2.343951e-04 -1.218469473   2.230456e-01\n[49,] 0.038931873 0.04597701 1.893501e-04 -0.511984469   6.086619e-01\n[50,] 0.055098610 0.06896552 2.760948e-04 -0.834546363   4.039732e-01\n[51,] 0.033405005 0.04597701 1.916312e-04 -0.908179070   3.637836e-01\n[52,] 0.043040784 0.06896552 2.829941e-04 -1.541081516   1.232969e-01\n[53,] 0.011297699 0.02298851 9.615920e-05 -1.192199867   2.331829e-01\n[54,] 0.040968457 0.05747126 2.356318e-04 -1.075080164   2.823388e-01\n[55,] 0.023629663 0.04597701 1.877170e-04 -1.631075961   1.028743e-01\n[56,] 0.006281129 0.01149425 4.916619e-05 -0.743472246   4.571958e-01\n[57,] 0.063918654 0.05747126 2.369553e-04  0.418842387   6.753313e-01\n[58,] 0.070325003 0.05747126 2.381374e-04  0.832943753   4.048765e-01\n[59,] 0.025947288 0.03448276 1.444058e-04 -0.710289083   4.775249e-01\n[60,] 0.039752578 0.04597701 1.915656e-04 -0.449718820   6.529132e-01\n[61,] 0.049934283 0.05747126 2.334965e-04 -0.493238743   6.218439e-01\n[62,] 0.030964195 0.04597701 1.920248e-04 -1.083386776   2.786368e-01\n[63,] 0.058129184 0.05747126 2.343319e-04  0.042979051   9.657182e-01\n[64,] 0.046096514 0.04597701 1.932637e-04  0.008596093   9.931414e-01\n[65,] 0.012459080 0.01149425 5.008051e-05  0.136337469   8.915545e-01\n[66,] 0.091447733 0.05747126 2.377744e-04  2.203411744   2.756574e-02\n[67,] 0.049575872 0.02298851 9.766513e-05  2.690329952   7.138140e-03\n[68,] 0.107907212 0.04597701 1.933581e-04  4.453703219   8.440175e-06\n[69,] 0.019616151 0.02298851 9.789454e-05 -0.340842743   7.332220e-01\n[70,] 0.032923393 0.03448276 1.454032e-04 -0.129318589   8.971056e-01\n[71,] 0.030317663 0.02298851 9.867859e-05  0.737806634   4.606320e-01\n[72,] 0.019437582 0.03448276 1.455870e-04 -1.246912658   2.124295e-01\n[73,] 0.055245460 0.04597701 1.932838e-04  0.666667559   5.049845e-01\n[74,] 0.074278054 0.05747126 2.383538e-04  1.088613505   2.763244e-01\n[75,] 0.013269580 0.02298851 9.719982e-05 -0.985792573   3.242349e-01\n[76,] 0.049407829 0.03448276 1.463785e-04  1.233609606   2.173484e-01\n[77,] 0.028605749 0.03448276 1.455139e-04 -0.487196415   6.261191e-01\n[78,] 0.039087662 0.02298851 9.801040e-05  1.626174042   1.039126e-01\n[79,] 0.031447120 0.04597701 1.877464e-04 -1.060416797   2.889550e-01\n[80,] 0.064005294 0.05747126 2.359641e-04  0.425361422   6.705732e-01\n[81,] 0.044606529 0.05747126 2.357330e-04 -0.837897118   4.020885e-01\n[82,] 0.063700493 0.06896552 2.801427e-04 -0.314565243   7.530918e-01\n[83,] 0.051142205 0.04597701 1.933560e-04  0.371456331   7.102977e-01\n[84,] 0.102121112 0.04597701 1.610278e-04  4.424392623   9.671399e-06\n[85,] 0.021901462 0.02298851 9.843172e-05 -0.109566928   9.127528e-01\n[86,] 0.064931813 0.04597701 1.929430e-04  1.364597995   1.723794e-01\n[87,] 0.031747344 0.04597701 1.909867e-04 -1.029658605   3.031703e-01\n[88,] 0.015893319 0.02298851 9.765131e-05 -0.718000620   4.727569e-01\nattr(,\"cluster\")\n [1] Low  Low  High High High High High High High Low  Low  High Low  Low  Low \n[16] High High High High Low  High High Low  Low  High Low  Low  Low  Low  Low \n[31] Low  Low  Low  High Low  Low  Low  Low  Low  Low  High Low  Low  Low  Low \n[46] High High Low  Low  Low  Low  High Low  Low  Low  Low  Low  High Low  Low \n[61] Low  Low  Low  High High High Low  High Low  Low  High Low  High High Low \n[76] High Low  Low  Low  Low  Low  Low  High High Low  High Low  Low \nLevels: Low High\nattr(,\"gstari\")\n[1] FALSE\nattr(,\"call\")\nlocalG(x = hunan$GDPPC, listw = wm62_lw)\nattr(,\"class\")\n[1] \"localG\"\n\n\nThe output of localG() is a vector of G or Gstar values, with attributes “gstari” set to TRUE or FALSE, “call” set to the function call, and class “localG”.\nThe Gi statistics is represented as a Z-score. Greater values represent a greater intensity of clustering and the direction (positive or negative) indicates high or low clusters.\nNext, we will join the Gi values to their corresponding hunan sf data frame by using the code chunk below.\n\n\nCode\nhunan.gi &lt;- cbind(hunan, as.matrix(gi.fixed)) %&gt;%\n  rename(gstat_fixed = as.matrix.gi.fixed.)\n\n\nIn fact, the code chunk above performs three tasks. First, it convert the output vector (i.e. gi.fixed) into r matrix object by using as.matrix(). Next, cbind() is used to join hunan@data and gi.fixed matrix to produce a new SpatialPolygonDataFrame called hunan.gi. Lastly, the field name of the gi values is renamed to gstat_fixed by using rename().\n10.2 Mapping Gi values with fixed distance weights\nThe code chunk below shows the functions used to map the Gi values derived using fixed distance weight matrix.\n\n\nCode\ngdppc &lt;- qtm(hunan, \"GDPPC\")\n\nGimap &lt;-tm_shape(hunan.gi) +\n  tm_fill(col = \"gstat_fixed\", \n          style = \"pretty\",\n          palette=\"-RdBu\",\n          title = \"local Gi\") +\n  tm_borders(alpha = 0.5)\n\ntmap_arrange(gdppc, Gimap, asp=1, ncol=2)\n\n\n\n\n\n10.3 Gi statistics using adaptive distance\nThe code chunk below are used to compute the Gi values for GDPPC2012 by using an adaptive distance weight matrix (i.e knb_lw).\n\n\nCode\nfips &lt;- order(hunan$County)\ngi.adaptive &lt;- localG(hunan$GDPPC, knn_lw)\nhunan.gi &lt;- cbind(hunan, as.matrix(gi.adaptive)) %&gt;%\n  rename(gstat_adaptive = as.matrix.gi.adaptive.)\n\n\n10.4 Mapping Gi values with adaptive distance weights\nIt is time for us to visualise the locations of hot spot and cold spot areas. The choropleth mapping functions of tmap package will be used to map the Gi values.\nThe code chunk below shows the functions used to map the Gi values derived using fixed distance weight matrix.\n\n\nCode\ngdppc&lt;- qtm(hunan, \"GDPPC\")\n\nGimap &lt;- tm_shape(hunan.gi) + \n  tm_fill(col = \"gstat_adaptive\", \n          style = \"pretty\", \n          palette=\"-RdBu\", \n          title = \"local Gi\") + \n  tm_borders(alpha = 0.5)\n\ntmap_arrange(gdppc, \n             Gimap, \n             asp=1, \n             ncol=2)"
  },
  {
    "objectID": "In-class_Ex/In-class_Ex05/In-class_Ex05.html",
    "href": "In-class_Ex/In-class_Ex05/In-class_Ex05.html",
    "title": "In class Exercise 6",
    "section": "",
    "text": "Code\npacman::p_load(sf, tmap, tidyverse, sfdep)\n\n\n\n\nShow the Code\nhunan &lt;- st_read(dsn = \"data/geospatial\", \n                 layer = \"Hunan\")\n\n\nReading layer `Hunan' from data source \n  `C:\\EbenezerHo\\IS415-GAA\\In-class_Ex\\In-class_Ex05\\data\\geospatial' \n  using driver `ESRI Shapefile'\nSimple feature collection with 88 features and 7 fields\nGeometry type: POLYGON\nDimension:     XY\nBounding box:  xmin: 108.7831 ymin: 24.6342 xmax: 114.2544 ymax: 30.12812\nGeodetic CRS:  WGS 84\n\n\n:::callout note hello\n\n\nCode\nhunan2012 &lt;- read_csv(\"data/aspatial/Hunan_2012.csv\")\n\n\n\n\nCode\nhunanGDPPC &lt;- left_join(hunan,hunan2012) %&gt;%\n  select(1:4, 7, 15)\n\n\n\n\nCode\ntmap_mode(\"plot\")\ntm_shape(hunanGDPPC) +\n  tm_fill(\"GDPPC\", \n          style = \"quantile\", \n          title = \"GDP per capita\") +\n  tm_layout(main.title = \"Distribution of GDP per capita by ...\",\n            main.title.size = 1.5,\n            main.title.position = \"center\")+\n  tm_borders(alpha = 0.2)+\n  tm_compass(type = \"8star\", size = 2)+\n  tm_scale_bar()+\n  tm_grid(alpha = 0.2)\n\n\n\n\n\n\n\nCode\n# nb is neighbour and wt is weight\n# we use st_contiguity to create a neighbour object from geometry. \n# Then we use st_weights to create a weight object from the neighbour object.\n# .before = 1 will put inside from the first column \n\nwm_q &lt;- hunanGDPPC %&gt;%\n  mutate(nb = st_contiguity(geometry),\n         wt = st_weights(nb, \n                        style = \"W\"),\n         .before = 1)\n\n\nmoran I\n\n\nCode\nglobal_moran_test(wm_q$GDPPC,\n                  wm_q$nb,\n                  wm_q$wt)\n\n\n\n    Moran I test under randomisation\n\ndata:  x  \nweights: listw    \n\nMoran I statistic standard deviate = 4.7351, p-value = 1.095e-06\nalternative hypothesis: greater\nsample estimates:\nMoran I statistic       Expectation          Variance \n      0.300749970      -0.011494253       0.004348351 \n\n\nnow, since people will question your wj we will use permutate to test the significance of the moran I\n\n\nCode\nglobal_moran_perm(wm_q$GDPPC,\n                  wm_q$nb,\n                  wm_q$wt,\n                 nsim = 99)\n\n\n\n    Monte-Carlo simulation of Moran I\n\ndata:  x \nweights: listw  \nnumber of simulations + 1: 100 \n\nstatistic = 0.30075, observed rank = 100, p-value &lt; 2.2e-16\nalternative hypothesis: two.sided\n\n\n:::callout note Te number of simulation is always equal to nsim +! this mean in nsim = 99 this mean 100 simulations will be"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex05/Hands-on_Ex05.html",
    "href": "Hands-on_Ex/Hands-on_Ex05/Hands-on_Ex05.html",
    "title": "Hands-on Exercise 5 - Global Measures of Spatial Autocorrelation & Local Measures of Spatial Autocorrelation",
    "section": "",
    "text": "1 Getting Started\n1.1 The analytical question\n1.1 The Study Area and Data\nTwo data sets will be used in this hands-on exercise, they are:\nHunan province administrative boundary layer at county level. This is a geospatial data set in ESRI shapefile format. Hunan_2012.csv: This csv file contains selected Hunan’s local development indicators in 2012.\n1.2 Install and Load R packages\n\n\nCode\npacman::p_load(sf, spdep, tmap, tidyverse, dplyr)\n\n\n2 Getting Data into R environment\n2.1 Importing shape file into r environment\nUses st_read() of sf package to import Hunan shapefile into R. The imported shapefile will be simple features Object of sf.\n\n\nCode\nhunan &lt;- st_read(dsn = \"data/geospatial\", \n                 layer = \"Hunan\")\n\n\nReading layer `Hunan' from data source \n  `C:\\EbenezerHo\\IS415-GAA\\Hands-on_Ex\\Hands-on_Ex05\\data\\geospatial' \n  using driver `ESRI Shapefile'\nSimple feature collection with 88 features and 7 fields\nGeometry type: POLYGON\nDimension:     XY\nBounding box:  xmin: 108.7831 ymin: 24.6342 xmax: 114.2544 ymax: 30.12812\nGeodetic CRS:  WGS 84\n\n\n2.2 Importing csv file into environment\nImport Hunan_2012.csv into R by using read_csv() of readr package. The output is R data frame class.\n\n\nCode\nhunan2012 &lt;- read_csv(\"data/aspatial/Hunan_2012.csv\")\n\n\n2.3 Performing relational join\nUpdate the attribute table of hunan’s SpatialPolygonsDataFrame with the attribute fields of hunan2012 dataframe. This is performed by using left_join() of dplyr package.\n\n\nCode\nhunan &lt;- left_join(hunan,hunan2012) %&gt;%\n  dplyr::select(1:4, 7, 15)\n\n\n2.4 Visualising Regional Development Indicator\nPrepare a basemap and a choropleth map showing the distribution of GDPPC 2012 by using qtm() of tmap package.\n\n\nCode\nequal &lt;- tm_shape(hunan) +\n  tm_fill(\"GDPPC\",\n          n = 5,\n          style = \"equal\") +\n  tm_borders(alpha = 0.5) +\n  tm_layout(main.title = \"Equal interval classification\")\n\nquantile &lt;- tm_shape(hunan) +\n  tm_fill(\"GDPPC\",\n          n = 5,\n          style = \"quantile\") +\n  tm_borders(alpha = 0.5) +\n  tm_layout(main.title = \"Equal quantile classification\")\n\ntmap_arrange(equal, \n             quantile, \n             asp=1, \n             ncol=2)\n\n\n\n\n\n3 Global Measures of Spatial Autocorrelation\nCompute global spatial autocorrelation statistics and to perform spatial complete randomness test for global spatial autocorrelation.\n3.1 Computing Contiguity Spatial Weights\nFirst, need to construct a spatial weights of the study area. The spatial weights is used to define the neighbourhood relationships between the geographical units (i.e. county) in the study area.\nspdep package is used to compute contiguity weight matrices for the study area. This function builds a neighbours list based on regions with contiguous boundaries. If you look at the documentation you will see that you can pass a “queen” argument that takes TRUE or FALSE as options. If you do not specify this argument the default is set to TRUE, that is, if you don’t specify queen = FALSE this function will return a list of first order neighbours using the Queen criteria.\nMore specifically, the code chunk below is used to compute Queen contiguity weight matrix.\n\n\nCode\nwm_q &lt;- poly2nb(hunan, \n                queen=TRUE)\nsummary(wm_q)\n\n\nNeighbour list object:\nNumber of regions: 88 \nNumber of nonzero links: 448 \nPercentage nonzero weights: 5.785124 \nAverage number of links: 5.090909 \nLink number distribution:\n\n 1  2  3  4  5  6  7  8  9 11 \n 2  2 12 16 24 14 11  4  2  1 \n2 least connected regions:\n30 65 with 1 link\n1 most connected region:\n85 with 11 links\n\n\nSummary report above shows that there are 88 area units in Hunan. The most connected area unit has 11 neighbours. There are two area units with only one neighbours.\n3.2 Row-standardized weights matrix\nNext,need to assign weights to each neighboring polygon. Each neighboring polygon will be assigned equal weight (style=“W”). This is accomplished by assigning the fraction 1/(#ofneighbors) to each neighboring county then summing the weighted income values.For this example, we’ll stick with the style=“W” option for simplicity’s sake but note that other more robust options are available, notably style=“B”.\n\n\nCode\nrswm_q &lt;- nb2listw(wm_q, \n                   style=\"W\", \n                   zero.policy = TRUE)\nrswm_q\n\n\nCharacteristics of weights list object:\nNeighbour list object:\nNumber of regions: 88 \nNumber of nonzero links: 448 \nPercentage nonzero weights: 5.785124 \nAverage number of links: 5.090909 \n\nWeights style: W \nWeights constants summary:\n   n   nn S0       S1       S2\nW 88 7744 88 37.86334 365.9147\n\n\n4 Global Measures of Spatial Autocorrelation: Moran’s I\n4.1 Maron’s I test\nPerform Moran’s I statistics testing by using moran.test() of spdep.\n\n\nCode\nmoran.test(hunan$GDPPC, \n           listw=rswm_q, \n           zero.policy = TRUE, \n           na.action=na.omit)\n\n\n\n    Moran I test under randomisation\n\ndata:  hunan$GDPPC  \nweights: rswm_q    \n\nMoran I statistic standard deviate = 4.7351, p-value = 1.095e-06\nalternative hypothesis: greater\nsample estimates:\nMoran I statistic       Expectation          Variance \n      0.300749970      -0.011494253       0.004348351 \n\n\n4.2 Computing Monte Carlo Moran’s I Performs permutation test for Moran’s I statistic by using moran.mc() of spdep. A total of 1000 simulation will be performed.\n\n\nCode\nset.seed(1234)\nbperm= moran.mc(hunan$GDPPC, \n                listw=rswm_q, \n                nsim=999, \n                zero.policy = TRUE, \n                na.action=na.omit)\nbperm\n\n\n\n    Monte-Carlo simulation of Moran I\n\ndata:  hunan$GDPPC \nweights: rswm_q  \nnumber of simulations + 1: 1000 \n\nstatistic = 0.30075, observed rank = 1000, p-value = 0.001\nalternative hypothesis: greater\n\n\n4.3 Visualising Monte Carlo Moran’s I\nExamine the simulated Moran’s I test statistics in greater detail. This can be achieved by plotting the distribution of the statistical values as a histogram\nIn the code chunk below hist() and abline() of R Graphics are used.\n\n\nCode\nmean(bperm$res[1:999])\n\n\n[1] -0.01504572\n\n\n\n\nCode\nvar(bperm$res[1:999])\n\n\n[1] 0.004371574\n\n\n\n\nCode\nsummary(bperm$res[1:999])\n\n\n    Min.  1st Qu.   Median     Mean  3rd Qu.     Max. \n-0.18339 -0.06168 -0.02125 -0.01505  0.02611  0.27593 \n\n\n\n\nCode\nhist(bperm$res, \n     freq=TRUE, \n     breaks=20, \n     xlab=\"Simulated Moran's I\")\nabline(v=0, \n       col=\"red\") \n\n\n\n\n\n5 Global Measures of Spatial Autocorrelation: Geary’s C\n5.1 Geary’s C test\nPerforms Geary’s C test for spatial autocorrelation by using geary.test() of spdep.\n\n\nCode\ngeary.test(hunan$GDPPC, listw=rswm_q)\n\n\n\n    Geary C test under randomisation\n\ndata:  hunan$GDPPC \nweights: rswm_q \n\nGeary C statistic standard deviate = 3.6108, p-value = 0.0001526\nalternative hypothesis: Expectation greater than statistic\nsample estimates:\nGeary C statistic       Expectation          Variance \n        0.6907223         1.0000000         0.0073364 \n\n\n5.2 Computing Monte Carlo Geary’s C\nPerforms permutation test for Geary’s C statistic by using geary.mc() of spdep.\n\n\nCode\nset.seed(1234)\nbperm=geary.mc(hunan$GDPPC, \n               listw=rswm_q, \n               nsim=999)\nbperm\n\n\n\n    Monte-Carlo simulation of Geary C\n\ndata:  hunan$GDPPC \nweights: rswm_q \nnumber of simulations + 1: 1000 \n\nstatistic = 0.69072, observed rank = 1, p-value = 0.001\nalternative hypothesis: greater\n\n\n5.3 Visualising Monte Carlo Geary’s C Plot a histogram to reveal the distribution of the simulated values\n\n\nCode\nmean(bperm$res[1:999])\n\n\n[1] 1.004402\n\n\n\n\nCode\nvar(bperm$res[1:999])\n\n\n[1] 0.007436493\n\n\n\n\nCode\nsummary(bperm$res[1:999])\n\n\n   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. \n 0.7142  0.9502  1.0052  1.0044  1.0595  1.2722 \n\n\n\n\nCode\nhist(bperm$res, freq=TRUE, breaks=20, xlab=\"Simulated Geary c\")\nabline(v=1, col=\"red\") \n\n\n\n\n\n6 Spatial Correlogram\nSpatial correlograms are great to examine patterns of spatial autocorrelation in your data or model residuals. They show how correlated are pairs of spatial observations when you increase the distance (lag) between them - they are plots of some index of autocorrelation (Moran’s I or Geary’s c) against distance.Although correlograms are not as fundamental as variograms (a keystone concept of geostatistics), they are very useful as an exploratory and descriptive tool. For this purpose they actually provide richer information than variograms.\n6.1 Compute Moran’s coorelogram\nsp.correlogram() of spdep package is used to compute a 6-lag spatial correlogram of GDPPC. The global spatial autocorrelation used in Moran’s I. The plot() of base Graph is then used to plot the output.\n\n\nCode\nMI_corr &lt;- sp.correlogram(wm_q, \n                          hunan$GDPPC, \n                          order=6, \n                          method=\"I\", \n                          style=\"W\")\nplot(MI_corr)\n\n\n\n\n\nPlotting the output might not allow us to provide complete interpretation. This is because not all autocorrelation values are statistically significant. Hence, it is important for us to examine the full analysis report by printing out the analysis results as in the code chunk below.\n\n\nCode\nprint(MI_corr)\n\n\nSpatial correlogram for hunan$GDPPC \nmethod: Moran's I\n         estimate expectation   variance standard deviate Pr(I) two sided    \n1 (88)  0.3007500  -0.0114943  0.0043484           4.7351       2.189e-06 ***\n2 (88)  0.2060084  -0.0114943  0.0020962           4.7505       2.029e-06 ***\n3 (88)  0.0668273  -0.0114943  0.0014602           2.0496        0.040400 *  \n4 (88)  0.0299470  -0.0114943  0.0011717           1.2107        0.226015    \n5 (88) -0.1530471  -0.0114943  0.0012440          -4.0134       5.984e-05 ***\n6 (88) -0.1187070  -0.0114943  0.0016791          -2.6164        0.008886 ** \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\n\n6.2 Compute Geary’s C correlogram and plot\nsp.correlogram() of spdep package is used to compute a 6-lag spatial correlogram of GDPPC. The global spatial autocorrelation used in Geary’s C. The plot() of base Graph is then used to plot the output.\n\n\nCode\nGC_corr &lt;- sp.correlogram(wm_q, \n                          hunan$GDPPC, \n                          order=6, \n                          method=\"C\", \n                          style=\"W\")\nplot(GC_corr)\n\n\n\n\n\nSimilar to the previous step, we will print out the analysis report\n\n\nCode\nprint(GC_corr)\n\n\nSpatial correlogram for hunan$GDPPC \nmethod: Geary's C\n        estimate expectation  variance standard deviate Pr(I) two sided    \n1 (88) 0.6907223   1.0000000 0.0073364          -3.6108       0.0003052 ***\n2 (88) 0.7630197   1.0000000 0.0049126          -3.3811       0.0007220 ***\n3 (88) 0.9397299   1.0000000 0.0049005          -0.8610       0.3892612    \n4 (88) 1.0098462   1.0000000 0.0039631           0.1564       0.8757128    \n5 (88) 1.2008204   1.0000000 0.0035568           3.3673       0.0007592 ***\n6 (88) 1.0773386   1.0000000 0.0058042           1.0151       0.3100407    \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\n\n7 Cluster and Outlier Analysis\nLocal Indicators of Spatial Association or LISA are statistics that evaluate the existence of clusters in the spatial arrangement of a given variable. For instance if we are studying cancer rates among census tracts in a given city local clusters in the rates mean that there are areas that have higher or lower rates than is to be expected by chance alone; that is, the values occurring are above or below those of a random distribution in space.\n7.1 Computing local Moran’s I\nthe localmoran() function of spdep will be used. It computes Ii values, given a set of zi values and a listw object providing neighbour weighting information for the polygon associated with the zi values.\nThe code chunks below are used to compute local Moran’s I of GDPPC2012 at the county level.\n\n\nCode\nfips &lt;- order(hunan$County)\nlocalMI &lt;- localmoran(hunan$GDPPC, rswm_q)\nhead(localMI)\n\n\n            Ii          E.Ii       Var.Ii        Z.Ii Pr(z != E(Ii))\n1 -0.001468468 -2.815006e-05 4.723841e-04 -0.06626904      0.9471636\n2  0.025878173 -6.061953e-04 1.016664e-02  0.26266425      0.7928094\n3 -0.011987646 -5.366648e-03 1.133362e-01 -0.01966705      0.9843090\n4  0.001022468 -2.404783e-07 5.105969e-06  0.45259801      0.6508382\n5  0.014814881 -6.829362e-05 1.449949e-03  0.39085814      0.6959021\n6 -0.038793829 -3.860263e-04 6.475559e-03 -0.47728835      0.6331568\n\n\nlocalmoran() function returns a matrix of values whose columns are:\nIi: the local Moran’s I statistics E.Ii: the expectation of local moran statistic under the randomisation hypothesis Var.Ii: the variance of local moran statistic under the randomisation hypothesis Z.Ii:the standard deviate of local moran statistic Pr(): the p-value of local moran statistic The code chunk below list the content of the local Moran matrix derived by using printCoefmat().\n\n\nCode\nprintCoefmat(data.frame(\n  localMI[fips,], \n  row.names=hunan$County[fips]),\n  check.names=FALSE)\n\n\n                       Ii        E.Ii      Var.Ii        Z.Ii Pr.z....E.Ii..\nAnhua         -2.2493e-02 -5.0048e-03  5.8235e-02 -7.2467e-02         0.9422\nAnren         -3.9932e-01 -7.0111e-03  7.0348e-02 -1.4791e+00         0.1391\nAnxiang       -1.4685e-03 -2.8150e-05  4.7238e-04 -6.6269e-02         0.9472\nBaojing        3.4737e-01 -5.0089e-03  8.3636e-02  1.2185e+00         0.2230\nChaling        2.0559e-02 -9.6812e-04  2.7711e-02  1.2932e-01         0.8971\nChangning     -2.9868e-05 -9.0010e-09  1.5105e-07 -7.6828e-02         0.9388\nChangsha       4.9022e+00 -2.1348e-01  2.3194e+00  3.3590e+00         0.0008\nChengbu        7.3725e-01 -1.0534e-02  2.2132e-01  1.5895e+00         0.1119\nChenxi         1.4544e-01 -2.8156e-03  4.7116e-02  6.8299e-01         0.4946\nCili           7.3176e-02 -1.6747e-03  4.7902e-02  3.4200e-01         0.7324\nDao            2.1420e-01 -2.0824e-03  4.4123e-02  1.0297e+00         0.3032\nDongan         1.5210e-01 -6.3485e-04  1.3471e-02  1.3159e+00         0.1882\nDongkou        5.2918e-01 -6.4461e-03  1.0748e-01  1.6338e+00         0.1023\nFenghuang      1.8013e-01 -6.2832e-03  1.3257e-01  5.1198e-01         0.6087\nGuidong       -5.9160e-01 -1.3086e-02  3.7003e-01 -9.5104e-01         0.3416\nGuiyang        1.8240e-01 -3.6908e-03  3.2610e-02  1.0305e+00         0.3028\nGuzhang        2.8466e-01 -8.5054e-03  1.4152e-01  7.7931e-01         0.4358\nHanshou        2.5878e-02 -6.0620e-04  1.0167e-02  2.6266e-01         0.7928\nHengdong       9.9964e-03 -4.9063e-04  6.7742e-03  1.2742e-01         0.8986\nHengnan        2.8064e-02 -3.2160e-04  3.7597e-03  4.6294e-01         0.6434\nHengshan      -5.8201e-03 -3.0437e-05  5.1076e-04 -2.5618e-01         0.7978\nHengyang       6.2997e-02 -1.3046e-03  2.1865e-02  4.3486e-01         0.6637\nHongjiang      1.8790e-01 -2.3019e-03  3.1725e-02  1.0678e+00         0.2856\nHuarong       -1.5389e-02 -1.8667e-03  8.1030e-02 -4.7503e-02         0.9621\nHuayuan        8.3772e-02 -8.5569e-04  2.4495e-02  5.4072e-01         0.5887\nHuitong        2.5997e-01 -5.2447e-03  1.1077e-01  7.9685e-01         0.4255\nJiahe         -1.2431e-01 -3.0550e-03  5.1111e-02 -5.3633e-01         0.5917\nJianghua       2.8651e-01 -3.8280e-03  8.0968e-02  1.0204e+00         0.3076\nJiangyong      2.4337e-01 -2.7082e-03  1.1746e-01  7.1800e-01         0.4728\nJingzhou       1.8270e-01 -8.5106e-04  2.4363e-02  1.1759e+00         0.2396\nJinshi        -1.1988e-02 -5.3666e-03  1.1334e-01 -1.9667e-02         0.9843\nJishou        -2.8680e-01 -2.6305e-03  4.4028e-02 -1.3543e+00         0.1756\nLanshan        6.3334e-02 -9.6365e-04  2.0441e-02  4.4972e-01         0.6529\nLeiyang        1.1581e-02 -1.4948e-04  2.5082e-03  2.3422e-01         0.8148\nLengshuijiang -1.7903e+00 -8.2129e-02  2.1598e+00 -1.1623e+00         0.2451\nLi             1.0225e-03 -2.4048e-07  5.1060e-06  4.5260e-01         0.6508\nLianyuan      -1.4672e-01 -1.8983e-03  1.9145e-02 -1.0467e+00         0.2952\nLiling         1.3774e+00 -1.5097e-02  4.2601e-01  2.1335e+00         0.0329\nLinli          1.4815e-02 -6.8294e-05  1.4499e-03  3.9086e-01         0.6959\nLinwu         -2.4621e-03 -9.0703e-06  1.9258e-04 -1.7676e-01         0.8597\nLinxiang       6.5904e-02 -2.9028e-03  2.5470e-01  1.3634e-01         0.8916\nLiuyang        3.3688e+00 -7.7502e-02  1.5180e+00  2.7972e+00         0.0052\nLonghui        8.0801e-01 -1.1377e-02  1.5538e-01  2.0787e+00         0.0376\nLongshan       7.5663e-01 -1.1100e-02  3.1449e-01  1.3690e+00         0.1710\nLuxi           1.8177e-01 -2.4855e-03  3.4249e-02  9.9561e-01         0.3194\nMayang         2.1852e-01 -5.8773e-03  9.8049e-02  7.1663e-01         0.4736\nMiluo          1.8704e+00 -1.6927e-02  2.7925e-01  3.5715e+00         0.0004\nNan           -9.5789e-03 -4.9497e-04  6.8341e-03 -1.0988e-01         0.9125\nNingxiang      1.5607e+00 -7.3878e-02  8.0012e-01  1.8274e+00         0.0676\nNingyuan       2.0910e-01 -7.0884e-03  8.2306e-02  7.5356e-01         0.4511\nPingjiang     -9.8964e-01 -2.6457e-03  5.6027e-02 -4.1698e+00         0.0000\nQidong         1.1806e-01 -2.1207e-03  2.4747e-02  7.6396e-01         0.4449\nQiyang         6.1966e-02 -7.3374e-04  8.5743e-03  6.7712e-01         0.4983\nRucheng       -3.6992e-01 -8.8999e-03  2.5272e-01 -7.1814e-01         0.4727\nSangzhi        2.5053e-01 -4.9470e-03  6.8000e-02  9.7972e-01         0.3272\nShaodong      -3.2659e-02 -3.6592e-05  5.0546e-04 -1.4510e+00         0.1468\nShaoshan       2.1223e+00 -5.0227e-02  1.3668e+00  1.8583e+00         0.0631\nShaoyang       5.9499e-01 -1.1253e-02  1.3012e-01  1.6807e+00         0.0928\nShimen        -3.8794e-02 -3.8603e-04  6.4756e-03 -4.7729e-01         0.6332\nShuangfeng     9.2835e-03 -2.2867e-03  3.1516e-02  6.5174e-02         0.9480\nShuangpai      8.0591e-02 -3.1366e-04  8.9838e-03  8.5358e-01         0.3933\nSuining        3.7585e-01 -3.5933e-03  4.1870e-02  1.8544e+00         0.0637\nTaojiang      -2.5394e-01 -1.2395e-03  1.4477e-02 -2.1002e+00         0.0357\nTaoyuan        1.4729e-02 -1.2039e-04  8.5103e-04  5.0903e-01         0.6107\nTongdao        4.6482e-01 -6.9870e-03  1.9879e-01  1.0582e+00         0.2900\nWangcheng      4.4220e+00 -1.1067e-01  1.3596e+00  3.8873e+00         0.0001\nWugang         7.1003e-01 -7.8144e-03  1.0710e-01  2.1935e+00         0.0283\nXiangtan       2.4530e-01 -3.6457e-04  3.2319e-03  4.3213e+00         0.0000\nXiangxiang     2.6271e-01 -1.2703e-03  2.1290e-02  1.8092e+00         0.0704\nXiangyin       5.4525e-01 -4.7442e-03  7.9236e-02  1.9539e+00         0.0507\nXinhua         1.1810e-01 -6.2649e-03  8.6001e-02  4.2409e-01         0.6715\nXinhuang       1.5725e-01 -4.1820e-03  3.6648e-01  2.6667e-01         0.7897\nXinning        6.8928e-01 -9.6674e-03  2.0328e-01  1.5502e+00         0.1211\nXinshao        5.7578e-02 -8.5932e-03  1.1769e-01  1.9289e-01         0.8470\nXintian       -7.4050e-03 -5.1493e-03  1.0877e-01 -6.8395e-03         0.9945\nXupu           3.2406e-01 -5.7468e-03  5.7735e-02  1.3726e+00         0.1699\nYanling       -6.9021e-02 -5.9211e-04  9.9306e-03 -6.8667e-01         0.4923\nYizhang       -2.6844e-01 -2.2463e-03  4.7588e-02 -1.2202e+00         0.2224\nYongshun       6.3064e-01 -1.1350e-02  1.8830e-01  1.4795e+00         0.1390\nYongxing       4.3411e-01 -9.0735e-03  1.5088e-01  1.1409e+00         0.2539\nYou            7.8750e-02 -7.2728e-03  1.2116e-01  2.4714e-01         0.8048\nYuanjiang      2.0004e-04 -1.7760e-04  2.9798e-03  6.9181e-03         0.9945\nYuanling       8.7298e-03 -2.2981e-06  2.3221e-05  1.8121e+00         0.0700\nYueyang        4.1189e-02 -1.9768e-04  2.3113e-03  8.6085e-01         0.3893\nZhijiang       1.0476e-01 -7.8123e-04  1.3100e-02  9.2214e-01         0.3565\nZhongfang     -2.2685e-01 -2.1455e-03  3.5927e-02 -1.1855e+00         0.2358\nZhuzhou        3.2864e-01 -5.2432e-04  7.2391e-03  3.8688e+00         0.0001\nZixing        -7.6849e-01 -8.8210e-02  9.4057e-01 -7.0144e-01         0.4830\n\n\n7.1.1 Mapping the local Moran’s I\nBefore mapping the local Moran’s I map, it is wise to append the local Moran’s I dataframe (i.e. localMI) onto hunan SpatialPolygonDataFrame. The code chunks below can be used to perform the task. The out SpatialPolygonDataFrame is called hunan.localMI.\n\n\nCode\nhunan.localMI &lt;- cbind(hunan,localMI) %&gt;%\n  rename(Pr.Ii = Pr.z....E.Ii..)\n\n\n7.1.2 Mapping local Moran’s I values Using choropleth mapping functions of tmap package, we can plot the local Moran’s I values by using the code chinks below.\n\n\nCode\ntm_shape(hunan.localMI) +\n  tm_fill(col = \"Ii\", \n          style = \"pretty\",\n          palette = \"RdBu\",\n          title = \"local moran statistics\") +\n  tm_borders(alpha = 0.5)\n\n\n\n\n\n7.1.3 Mapping local Moran’s I p-values\nThe choropleth shows there is evidence for both positive and negative Ii values. However, it is useful to consider the p-values for each of these values, as consider above.\nThe code chunks below produce a choropleth map of Moran’s I p-values by using functions of tmap package.\n\n\nCode\ntm_shape(hunan.localMI) +\n  tm_fill(col = \"Pr.Ii\", \n          breaks=c(-Inf, 0.001, 0.01, 0.05, 0.1, Inf),\n          palette=\"-Blues\", \n          title = \"local Moran's I p-values\") +\n  tm_borders(alpha = 0.5)\n\n\n\n\n\n7.1.4 Mapping both local Moran’s I values and p-values\nFor effective interpretation, it is better to plot both the local Moran’s I values map and its corresponding p-values map next to each other.\nThe code chunk below will be used to create such visualisation.\n\n\nCode\nlocalMI.map &lt;- tm_shape(hunan.localMI) +\n  tm_fill(col = \"Ii\", \n          style = \"pretty\", \n          title = \"local moran statistics\") +\n  tm_borders(alpha = 0.5)\n\npvalue.map &lt;- tm_shape(hunan.localMI) +\n  tm_fill(col = \"Pr.Ii\", \n          breaks=c(-Inf, 0.001, 0.01, 0.05, 0.1, Inf),\n          palette=\"-Blues\", \n          title = \"local Moran's I p-values\") +\n  tm_borders(alpha = 0.5)\n\ntmap_arrange(localMI.map, pvalue.map, asp=1, ncol=2)\n\n\n\n\n\n8 Creating a LISA Cluster Map\nLISA Cluster Map shows the significant locations color coded by type of spatial autocorrelation. The first step before we can generate the LISA cluster map is to plot the Moran scatterplot.\n8.1 Plotting Moran scatterplot\nMoran scatterplot is an illustration of the relationship between the values of the chosen attribute at each location and the average value of the same attribute at neighboring locations.\nThe code chunk below plots the Moran scatterplot of GDPPC 2012 by using moran.plot() of spdep.\n\n\nCode\nnci &lt;- moran.plot(hunan$GDPPC, rswm_q,\n                  labels=as.character(hunan$County), \n                  xlab=\"GDPPC 2012\", \n                  ylab=\"Spatially Lag GDPPC 2012\")\n\n\n\n\n\nNotice that the plot is split in 4 quadrants. The top right corner belongs to areas that have high GDPPC and are surrounded by other areas that have the average level of GDPPC.\n8.2 Plotting Moran scatterplot with standardised variable\nFirst we will use scale() to centers and scales the variable. Here centering is done by subtracting the mean (omitting NAs) the corresponding columns, and scaling is done by dividing the (centered) variable by their standard deviations.\n\n\nCode\nhunan$Z.GDPPC &lt;- scale(hunan$GDPPC) %&gt;% \n  as.vector \n\n\nThe as.vector() added to the end is to make sure that the data type we get out of this is a vector, that map neatly into out dataframe.\nNow, we are ready to plot the Moran scatterplot again by using the code chunk below.\n\n\nCode\nnci2 &lt;- moran.plot(hunan$Z.GDPPC, rswm_q,\n                   labels=as.character(hunan$County),\n                   xlab=\"z-GDPPC 2012\", \n                   ylab=\"Spatially Lag z-GDPPC 2012\")\n\n\n\n\n\n8.3 Preparing LISA map classes\nThe steps to prepare a LISA cluster map.\n\n\nCode\nquadrant &lt;- vector(mode=\"numeric\",length=nrow(localMI))\n\n\nNext, derives the spatially lagged variable of interest (i.e. GDPPC) and centers the spatially lagged variable around its mean.\n\n\nCode\nhunan$lag_GDPPC &lt;- lag.listw(rswm_q, hunan$GDPPC)\nDV &lt;- hunan$lag_GDPPC - mean(hunan$lag_GDPPC)     \n\n\nThis is follow by centering the local Moran’s around the mean.\n\n\nCode\nLM_I &lt;- localMI[,1] - mean(localMI[,1])    \n\n\nNext, we will set a statistical significance level for the local Moran.\n\n\nCode\nsignif &lt;- 0.05\n\n\nThese four command lines define the low-low (1), low-high (2), high-low (3) and high-high (4) categories.\n\n\nCode\nquadrant[DV &lt;0 & LM_I&gt;0] &lt;- 1\nquadrant[DV &gt;0 & LM_I&lt;0] &lt;- 2\nquadrant[DV &lt;0 & LM_I&lt;0] &lt;- 3  \nquadrant[DV &gt;0 & LM_I&gt;0] &lt;- 4      \n\n\nLastly, places non-significant Moran in the category 0.\n\n\nCode\nquadrant[localMI[,5]&gt;signif] &lt;- 0\n\n\nIn fact, we can combined all the steps into one single code chunk as shown below:\n\n\nCode\nquadrant &lt;- vector(mode=\"numeric\",length=nrow(localMI))\nhunan$lag_GDPPC &lt;- lag.listw(rswm_q, hunan$GDPPC)\nDV &lt;- hunan$lag_GDPPC - mean(hunan$lag_GDPPC)     \nLM_I &lt;- localMI[,1]   \nsignif &lt;- 0.05       \nquadrant[DV &lt;0 & LM_I&gt;0] &lt;- 1\nquadrant[DV &gt;0 & LM_I&lt;0] &lt;- 2\nquadrant[DV &lt;0 & LM_I&lt;0] &lt;- 3  \nquadrant[DV &gt;0 & LM_I&gt;0] &lt;- 4    \nquadrant[localMI[,5]&gt;signif] &lt;- 0\n\n\n8.4 Plotting LISA map\nNow, we can build the LISA map\n\n\nCode\nhunan.localMI$quadrant &lt;- quadrant\ncolors &lt;- c(\"#ffffff\", \"#2c7bb6\", \"#abd9e9\", \"#fdae61\", \"#d7191c\")\nclusters &lt;- c(\"insignificant\", \"low-low\", \"low-high\", \"high-low\", \"high-high\")\n\ntm_shape(hunan.localMI) +\n  tm_fill(col = \"quadrant\", \n          style = \"cat\", \n          palette = colors[c(sort(unique(quadrant)))+1], \n          labels = clusters[c(sort(unique(quadrant)))+1],\n          popup.vars = c(\"\")) +\n  tm_view(set.zoom.limits = c(11,17)) +\n  tm_borders(alpha=0.5)\n\n\n\n\n\nFor effective interpretation, it is better to plot both the local Moran’s I values map and its corresponding p-values map next to each other.\nThe code chunk below will be used to create such visualisation.\n\n\nCode\ngdppc &lt;- qtm(hunan, \"GDPPC\")\n\nhunan.localMI$quadrant &lt;- quadrant\ncolors &lt;- c(\"#ffffff\", \"#2c7bb6\", \"#abd9e9\", \"#fdae61\", \"#d7191c\")\nclusters &lt;- c(\"insignificant\", \"low-low\", \"low-high\", \"high-low\", \"high-high\")\n\nLISAmap &lt;- tm_shape(hunan.localMI) +\n  tm_fill(col = \"quadrant\", \n          style = \"cat\", \n          palette = colors[c(sort(unique(quadrant)))+1], \n          labels = clusters[c(sort(unique(quadrant)))+1],\n          popup.vars = c(\"\")) +\n  tm_view(set.zoom.limits = c(11,17)) +\n  tm_borders(alpha=0.5)\n\ntmap_arrange(gdppc, LISAmap, \n             asp=1, ncol=2)\n\n\n\n\n\n9 Hot Spot and Cold Spot Area Analysis\nBeside detecting cluster and outliers, localised spatial statistics can be also used to detect hot spot and/or cold spot areas.\nThe term ‘hot spot’ has been used generically across disciplines to describe a region or value that is higher relative to its surroundings\n9.1 Getis and Ord’s G-Statistics\nAn alternative spatial statistics to detect spatial anomalies is the Getis and Ord’s G-statistics (Getis and Ord, 1972; Ord and Getis, 1995). It looks at neighbours within a defined proximity to identify where either high or low values clutser spatially. Here, statistically significant hot-spots are recognised as areas of high values where other areas within a neighbourhood range also share high values too.\nThe analysis consists of three steps:\nDeriving spatial weight matrix Computing Gi statistics Mapping Gi statistics\n9.2 Deriving distance-based weight matrix\nFirst, we need to define a new set of neighbours. Whist the spatial autocorrelation considered units which shared borders, for Getis-Ord we are defining neighbours based on distance.\nThere are two type of distance-based proximity matrix, they are:\nfixed distance weight matrix; and adaptive distance weight matrix.\n9.2.1 Deriving the centroid\nneed points to associate with each polygon before we can make our connectivity graph. It will be a little more complicated than just running st_centroid() on the sf object: us.bound. We need the coordinates in a separate data frame for this to work. To do this we will use a mapping function. The mapping function applies a given function to each element of a vector and returns a vector of the same length. Our input vector will be the geometry column of us.bound. Our function will be st_centroid(). We will be using map_dbl variation of map from the purrr package. For more documentation, check out map documentation\nTo get our longitude values we map the st_centroid() function over the geometry column of us.bound and access the longitude value through double bracket notation [[]] and 1. This allows us to get only the longitude, which is the first value in each centroid.\n\n\nCode\nlongitude &lt;- map_dbl(hunan$geometry, ~st_centroid(.x)[[1]])\n\n\nWe do the same for latitude with one key difference. We access the second value per each centroid with [[2]].\n\n\nCode\nlatitude &lt;- map_dbl(hunan$geometry, ~st_centroid(.x)[[2]])\n\n\nNow that we have latitude and longitude, we use cbind to put longitude and latitude into the same object.\n\n\nCode\ncoords &lt;- cbind(longitude, latitude)\n\n\n9.2.2 Determine the cut-off distance\nFirstly, we need to determine the upper limit for distance band by using the steps below:\nReturn a matrix with the indices of points belonging to the set of the k nearest neighbours of each other by using knearneigh() of spdep. Convert the knn object returned by knearneigh() into a neighbours list of class nb with a list of integer vectors containing neighbour region number ids by using knn2nb(). Return the length of neighbour relationship edges by using nbdists() of spdep. The function returns in the units of the coordinates if the coordinates are projected, in km otherwise. Remove the list structure of the returned object by using unlist().\n\n\nCode\n#coords &lt;- coordinates(hunan)\nk1 &lt;- knn2nb(knearneigh(coords))\nk1dists &lt;- unlist(nbdists(k1, coords, longlat = TRUE))\nsummary(k1dists)\n\n\n   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. \n  24.79   32.57   38.01   39.07   44.52   61.79 \n\n\nThe summary report shows that the largest first nearest neighbour distance is 61.79 km, so using this as the upper threshold gives certainty that all units will have at least one neighbour.\n9.2.3 Computing fixed distance weight matrix\nNow, we will compute the distance weight matrix by using dnearneigh()\n\n\nCode\nwm_d62 &lt;- dnearneigh(coords, 0, 62, longlat = TRUE)\nwm_d62\n\n\nNeighbour list object:\nNumber of regions: 88 \nNumber of nonzero links: 324 \nPercentage nonzero weights: 4.183884 \nAverage number of links: 3.681818 \n\n\nNext, nb2listw() is used to convert the nb object into spatial weights object.\n\n\nCode\nwm62_lw &lt;- nb2listw(wm_d62, style = 'B')\nsummary(wm62_lw)\n\n\nCharacteristics of weights list object:\nNeighbour list object:\nNumber of regions: 88 \nNumber of nonzero links: 324 \nPercentage nonzero weights: 4.183884 \nAverage number of links: 3.681818 \nLink number distribution:\n\n 1  2  3  4  5  6 \n 6 15 14 26 20  7 \n6 least connected regions:\n6 15 30 32 56 65 with 1 link\n7 most connected regions:\n21 28 35 45 50 52 82 with 6 links\n\nWeights style: B \nWeights constants summary:\n   n   nn  S0  S1   S2\nB 88 7744 324 648 5440\n\n\n9.3 Computing adaptive distance weight matrix\nOne of the characteristics of fixed distance weight matrix is that more densely settled areas (usually the urban areas) tend to have more neighbours and the less densely settled areas (usually the rural counties) tend to have lesser neighbours. Having many neighbours smoothes the neighbour relationship across more neighbours.\nIt is possible to control the numbers of neighbours directly using k-nearest neighbours, either accepting asymmetric neighbours or imposing symmetry as shown in the code chunk below.\n\n\nCode\nknn &lt;- knn2nb(knearneigh(coords, k=8))\nknn\n\n\nNeighbour list object:\nNumber of regions: 88 \nNumber of nonzero links: 704 \nPercentage nonzero weights: 9.090909 \nAverage number of links: 8 \nNon-symmetric neighbours list\n\n\nNext, nb2listw() is used to convert the nb object into spatial weights object.\n\n\nCode\nknn_lw &lt;- nb2listw(knn, style = 'B')\nsummary(knn_lw)\n\n\nCharacteristics of weights list object:\nNeighbour list object:\nNumber of regions: 88 \nNumber of nonzero links: 704 \nPercentage nonzero weights: 9.090909 \nAverage number of links: 8 \nNon-symmetric neighbours list\nLink number distribution:\n\n 8 \n88 \n88 least connected regions:\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 with 8 links\n88 most connected regions:\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 with 8 links\n\nWeights style: B \nWeights constants summary:\n   n   nn  S0   S1    S2\nB 88 7744 704 1300 23014\n\n\n10 Computing Gi statistics\n10.1 Gi statistics using fixed distance\n\n\nCode\nfips &lt;- order(hunan$County)\ngi.fixed &lt;- localG(hunan$GDPPC, wm62_lw)\ngi.fixed\n\n\n [1]  0.436075843 -0.265505650 -0.073033665  0.413017033  0.273070579\n [6] -0.377510776  2.863898821  2.794350420  5.216125401  0.228236603\n[11]  0.951035346 -0.536334231  0.176761556  1.195564020 -0.033020610\n[16]  1.378081093 -0.585756761 -0.419680565  0.258805141  0.012056111\n[21] -0.145716531 -0.027158687 -0.318615290 -0.748946051 -0.961700582\n[26] -0.796851342 -1.033949773 -0.460979158 -0.885240161 -0.266671512\n[31] -0.886168613 -0.855476971 -0.922143185 -1.162328599  0.735582222\n[36] -0.003358489 -0.967459309 -1.259299080 -1.452256513 -1.540671121\n[41] -1.395011407 -1.681505286 -1.314110709 -0.767944457 -0.192889342\n[46]  2.720804542  1.809191360 -1.218469473 -0.511984469 -0.834546363\n[51] -0.908179070 -1.541081516 -1.192199867 -1.075080164 -1.631075961\n[56] -0.743472246  0.418842387  0.832943753 -0.710289083 -0.449718820\n[61] -0.493238743 -1.083386776  0.042979051  0.008596093  0.136337469\n[66]  2.203411744  2.690329952  4.453703219 -0.340842743 -0.129318589\n[71]  0.737806634 -1.246912658  0.666667559  1.088613505 -0.985792573\n[76]  1.233609606 -0.487196415  1.626174042 -1.060416797  0.425361422\n[81] -0.837897118 -0.314565243  0.371456331  4.424392623 -0.109566928\n[86]  1.364597995 -1.029658605 -0.718000620\nattr(,\"internals\")\n               Gi      E(Gi)        V(Gi)        Z(Gi) Pr(z != E(Gi))\n [1,] 0.064192949 0.05747126 2.375922e-04  0.436075843   6.627817e-01\n [2,] 0.042300020 0.04597701 1.917951e-04 -0.265505650   7.906200e-01\n [3,] 0.044961480 0.04597701 1.933486e-04 -0.073033665   9.417793e-01\n [4,] 0.039475779 0.03448276 1.461473e-04  0.413017033   6.795941e-01\n [5,] 0.049767939 0.04597701 1.927263e-04  0.273070579   7.847990e-01\n [6,] 0.008825335 0.01149425 4.998177e-05 -0.377510776   7.057941e-01\n [7,] 0.050807266 0.02298851 9.435398e-05  2.863898821   4.184617e-03\n [8,] 0.083966739 0.04597701 1.848292e-04  2.794350420   5.200409e-03\n [9,] 0.115751554 0.04597701 1.789361e-04  5.216125401   1.827045e-07\n[10,] 0.049115587 0.04597701 1.891013e-04  0.228236603   8.194623e-01\n[11,] 0.045819180 0.03448276 1.420884e-04  0.951035346   3.415864e-01\n[12,] 0.049183846 0.05747126 2.387633e-04 -0.536334231   5.917276e-01\n[13,] 0.048429181 0.04597701 1.924532e-04  0.176761556   8.596957e-01\n[14,] 0.034733752 0.02298851 9.651140e-05  1.195564020   2.318667e-01\n[15,] 0.011262043 0.01149425 4.945294e-05 -0.033020610   9.736582e-01\n[16,] 0.065131196 0.04597701 1.931870e-04  1.378081093   1.681783e-01\n[17,] 0.027587075 0.03448276 1.385862e-04 -0.585756761   5.580390e-01\n[18,] 0.029409313 0.03448276 1.461397e-04 -0.419680565   6.747188e-01\n[19,] 0.061466754 0.05747126 2.383385e-04  0.258805141   7.957856e-01\n[20,] 0.057656917 0.05747126 2.371303e-04  0.012056111   9.903808e-01\n[21,] 0.066518379 0.06896552 2.820326e-04 -0.145716531   8.841452e-01\n[22,] 0.045599896 0.04597701 1.928108e-04 -0.027158687   9.783332e-01\n[23,] 0.030646753 0.03448276 1.449523e-04 -0.318615290   7.500183e-01\n[24,] 0.035635552 0.04597701 1.906613e-04 -0.748946051   4.538897e-01\n[25,] 0.032606647 0.04597701 1.932888e-04 -0.961700582   3.362000e-01\n[26,] 0.035001352 0.04597701 1.897172e-04 -0.796851342   4.255374e-01\n[27,] 0.012746354 0.02298851 9.812587e-05 -1.033949773   3.011596e-01\n[28,] 0.061287917 0.06896552 2.773884e-04 -0.460979158   6.448136e-01\n[29,] 0.014277403 0.02298851 9.683314e-05 -0.885240161   3.760271e-01\n[30,] 0.009622875 0.01149425 4.924586e-05 -0.266671512   7.897221e-01\n[31,] 0.014258398 0.02298851 9.705244e-05 -0.886168613   3.755267e-01\n[32,] 0.005453443 0.01149425 4.986245e-05 -0.855476971   3.922871e-01\n[33,] 0.043283712 0.05747126 2.367109e-04 -0.922143185   3.564539e-01\n[34,] 0.020763514 0.03448276 1.393165e-04 -1.162328599   2.451020e-01\n[35,] 0.081261843 0.06896552 2.794398e-04  0.735582222   4.619850e-01\n[36,] 0.057419907 0.05747126 2.338437e-04 -0.003358489   9.973203e-01\n[37,] 0.013497133 0.02298851 9.624821e-05 -0.967459309   3.333145e-01\n[38,] 0.019289310 0.03448276 1.455643e-04 -1.259299080   2.079223e-01\n[39,] 0.025996272 0.04597701 1.892938e-04 -1.452256513   1.464303e-01\n[40,] 0.016092694 0.03448276 1.424776e-04 -1.540671121   1.233968e-01\n[41,] 0.035952614 0.05747126 2.379439e-04 -1.395011407   1.630124e-01\n[42,] 0.031690963 0.05747126 2.350604e-04 -1.681505286   9.266481e-02\n[43,] 0.018750079 0.03448276 1.433314e-04 -1.314110709   1.888090e-01\n[44,] 0.015449080 0.02298851 9.638666e-05 -0.767944457   4.425202e-01\n[45,] 0.065760689 0.06896552 2.760533e-04 -0.192889342   8.470456e-01\n[46,] 0.098966900 0.05747126 2.326002e-04  2.720804542   6.512325e-03\n[47,] 0.085415780 0.05747126 2.385746e-04  1.809191360   7.042128e-02\n[48,] 0.038816536 0.05747126 2.343951e-04 -1.218469473   2.230456e-01\n[49,] 0.038931873 0.04597701 1.893501e-04 -0.511984469   6.086619e-01\n[50,] 0.055098610 0.06896552 2.760948e-04 -0.834546363   4.039732e-01\n[51,] 0.033405005 0.04597701 1.916312e-04 -0.908179070   3.637836e-01\n[52,] 0.043040784 0.06896552 2.829941e-04 -1.541081516   1.232969e-01\n[53,] 0.011297699 0.02298851 9.615920e-05 -1.192199867   2.331829e-01\n[54,] 0.040968457 0.05747126 2.356318e-04 -1.075080164   2.823388e-01\n[55,] 0.023629663 0.04597701 1.877170e-04 -1.631075961   1.028743e-01\n[56,] 0.006281129 0.01149425 4.916619e-05 -0.743472246   4.571958e-01\n[57,] 0.063918654 0.05747126 2.369553e-04  0.418842387   6.753313e-01\n[58,] 0.070325003 0.05747126 2.381374e-04  0.832943753   4.048765e-01\n[59,] 0.025947288 0.03448276 1.444058e-04 -0.710289083   4.775249e-01\n[60,] 0.039752578 0.04597701 1.915656e-04 -0.449718820   6.529132e-01\n[61,] 0.049934283 0.05747126 2.334965e-04 -0.493238743   6.218439e-01\n[62,] 0.030964195 0.04597701 1.920248e-04 -1.083386776   2.786368e-01\n[63,] 0.058129184 0.05747126 2.343319e-04  0.042979051   9.657182e-01\n[64,] 0.046096514 0.04597701 1.932637e-04  0.008596093   9.931414e-01\n[65,] 0.012459080 0.01149425 5.008051e-05  0.136337469   8.915545e-01\n[66,] 0.091447733 0.05747126 2.377744e-04  2.203411744   2.756574e-02\n[67,] 0.049575872 0.02298851 9.766513e-05  2.690329952   7.138140e-03\n[68,] 0.107907212 0.04597701 1.933581e-04  4.453703219   8.440175e-06\n[69,] 0.019616151 0.02298851 9.789454e-05 -0.340842743   7.332220e-01\n[70,] 0.032923393 0.03448276 1.454032e-04 -0.129318589   8.971056e-01\n[71,] 0.030317663 0.02298851 9.867859e-05  0.737806634   4.606320e-01\n[72,] 0.019437582 0.03448276 1.455870e-04 -1.246912658   2.124295e-01\n[73,] 0.055245460 0.04597701 1.932838e-04  0.666667559   5.049845e-01\n[74,] 0.074278054 0.05747126 2.383538e-04  1.088613505   2.763244e-01\n[75,] 0.013269580 0.02298851 9.719982e-05 -0.985792573   3.242349e-01\n[76,] 0.049407829 0.03448276 1.463785e-04  1.233609606   2.173484e-01\n[77,] 0.028605749 0.03448276 1.455139e-04 -0.487196415   6.261191e-01\n[78,] 0.039087662 0.02298851 9.801040e-05  1.626174042   1.039126e-01\n[79,] 0.031447120 0.04597701 1.877464e-04 -1.060416797   2.889550e-01\n[80,] 0.064005294 0.05747126 2.359641e-04  0.425361422   6.705732e-01\n[81,] 0.044606529 0.05747126 2.357330e-04 -0.837897118   4.020885e-01\n[82,] 0.063700493 0.06896552 2.801427e-04 -0.314565243   7.530918e-01\n[83,] 0.051142205 0.04597701 1.933560e-04  0.371456331   7.102977e-01\n[84,] 0.102121112 0.04597701 1.610278e-04  4.424392623   9.671399e-06\n[85,] 0.021901462 0.02298851 9.843172e-05 -0.109566928   9.127528e-01\n[86,] 0.064931813 0.04597701 1.929430e-04  1.364597995   1.723794e-01\n[87,] 0.031747344 0.04597701 1.909867e-04 -1.029658605   3.031703e-01\n[88,] 0.015893319 0.02298851 9.765131e-05 -0.718000620   4.727569e-01\nattr(,\"cluster\")\n [1] Low  Low  High High High High High High High Low  Low  High Low  Low  Low \n[16] High High High High Low  High High Low  Low  High Low  Low  Low  Low  Low \n[31] Low  Low  Low  High Low  Low  Low  Low  Low  Low  High Low  Low  Low  Low \n[46] High High Low  Low  Low  Low  High Low  Low  Low  Low  Low  High Low  Low \n[61] Low  Low  Low  High High High Low  High Low  Low  High Low  High High Low \n[76] High Low  Low  Low  Low  Low  Low  High High Low  High Low  Low \nLevels: Low High\nattr(,\"gstari\")\n[1] FALSE\nattr(,\"call\")\nlocalG(x = hunan$GDPPC, listw = wm62_lw)\nattr(,\"class\")\n[1] \"localG\"\n\n\nThe output of localG() is a vector of G or Gstar values, with attributes “gstari” set to TRUE or FALSE, “call” set to the function call, and class “localG”.\nThe Gi statistics is represented as a Z-score. Greater values represent a greater intensity of clustering and the direction (positive or negative) indicates high or low clusters.\nNext, we will join the Gi values to their corresponding hunan sf data frame by using the code chunk below.\n\n\nCode\nhunan.gi &lt;- cbind(hunan, as.matrix(gi.fixed)) %&gt;%\n  rename(gstat_fixed = as.matrix.gi.fixed.)\n\n\nIn fact, the code chunk above performs three tasks. First, it convert the output vector (i.e. gi.fixed) into r matrix object by using as.matrix(). Next, cbind() is used to join hunan@data and gi.fixed matrix to produce a new SpatialPolygonDataFrame called hunan.gi. Lastly, the field name of the gi values is renamed to gstat_fixed by using rename().\n10.2 Mapping Gi values with fixed distance weights\nThe code chunk below shows the functions used to map the Gi values derived using fixed distance weight matrix.\n\n\nCode\ngdppc &lt;- qtm(hunan, \"GDPPC\")\n\nGimap &lt;-tm_shape(hunan.gi) +\n  tm_fill(col = \"gstat_fixed\", \n          style = \"pretty\",\n          palette=\"-RdBu\",\n          title = \"local Gi\") +\n  tm_borders(alpha = 0.5)\n\ntmap_arrange(gdppc, Gimap, asp=1, ncol=2)\n\n\n\n\n\n10.3 Gi statistics using adaptive distance\nThe code chunk below are used to compute the Gi values for GDPPC2012 by using an adaptive distance weight matrix (i.e knb_lw).\n\n\nCode\nfips &lt;- order(hunan$County)\ngi.adaptive &lt;- localG(hunan$GDPPC, knn_lw)\nhunan.gi &lt;- cbind(hunan, as.matrix(gi.adaptive)) %&gt;%\n  rename(gstat_adaptive = as.matrix.gi.adaptive.)\n\n\n10.4 Mapping Gi values with adaptive distance weights\nIt is time for us to visualise the locations of hot spot and cold spot areas. The choropleth mapping functions of tmap package will be used to map the Gi values.\nThe code chunk below shows the functions used to map the Gi values derived using fixed distance weight matrix.\n\n\nCode\ngdppc&lt;- qtm(hunan, \"GDPPC\")\n\nGimap &lt;- tm_shape(hunan.gi) + \n  tm_fill(col = \"gstat_adaptive\", \n          style = \"pretty\", \n          palette=\"-RdBu\", \n          title = \"local Gi\") + \n  tm_borders(alpha = 0.5)\n\ntmap_arrange(gdppc, \n             Gimap, \n             asp=1, \n             ncol=2)"
  },
  {
    "objectID": "Take-home_Ex/Take-home_Ex02/Take-home_Ex02.html",
    "href": "Take-home_Ex/Take-home_Ex02/Take-home_Ex02.html",
    "title": "Take-home Exercise 02",
    "section": "",
    "text": "Dengue Hemorrhagic Fever (in short dengue fever) is one of the most widespread mosquito-borne diseases in the most tropical and subtropical regions. It is an acute disease caused by dengue virus infection which is transmitted by female Aedes aegypti and Aedes albopictus mosquitoes. In 2015, Taiwan had recorded the most severe dengue fever outbreak with more than 43,000 dengue cases and 228 deaths. Since then, the annual reported dengue fever cases were maintained at the level of not more than 200 cases. However, in 2023, Taiwan recorded 26703 dengue fever cases. Figure below reveals that more than 25,000 cases were reported at Tainan City.\n\n\n\nAs a curious geospatial analytics green horn, you are interested to discover:\nif the distribution of dengue fever outbreak at Tainan City, Taiwan are independent from space and space and time. If the outbreak is indeed spatial and spatio-temporal dependent, then, you would like to detect where are the clusters and outliers, and the emerging hot spot/cold spot areas.\n\n\n\nThe specific tasks of this take-home exercise are as follows:\n\nUsing appropriate function of sf and tidyverse, preparing the following geospatial data layer:\n\na study area layer in sf polygon features. It must be at village level and confined to the D01, D02, D04, D06, D07, D08, D32 and D39 counties of Tainan City, Taiwan.\na dengue fever layer within the study area in sf point features. The dengue fever cases should be confined to epidemiology week 31-50, 2023.\na derived dengue fever layer in spacetime s3 class of sfdep. It should contain, among many other useful information,\na data field showing number of dengue fever cases by village and by epidemiology week.\n\nUsing the extracted data, perform global spatial autocorrelation analysis by using sfdep methods.\nUsing the extracted data, perform local spatial autocorrelation analysis by using sfdep methods.\nUsing the extracted data, perform emerging hotspot analysis by using sfdep methods.\nDescribe the spatial patterns revealed by the analysis above.\n\n\n\n\nPackages Used:\n\nsf: For importing, managing, and processing geospatial data.\ntidyverse: Collection of packages for data science tasks.\ntmap: For creating thematic maps, such as choropleth and bubble maps.\nsfdep: Creating an sf and tidyverse friendly interface.\nKendall: To perform Mann Kendall test on Gi*\nlubridate: For working with dates and times.\ndplyr: For data manipulation.\n\n\n\nCode\npacman::p_load(sf, tmap, tidyverse, lubridate, dplyr, sfdep, Kendall)\n\n\n\n\n\n\n\nWe begin first by working with dengue (Aspatial) data as aspatial data usually requires more wrangling.\n\n\nCode\ndengue &lt;- read_csv(\"data/aspatial/Dengue_Daily.csv\")\n\n\n\n\nCode\nhead(dengue)\n\n\n\n\nCode\nglimpse(dengue)\n\n\nFrom viewing the head of dengue, we can see that the data contains “None” values in x and y coordinates. We’ll remove them using the filter function from dplyr.\n\n\n\nCode\ndengue &lt;- dengue %&gt;% filter(最小統計區中心點X != \"None\" | 最小統計區中心點Y != \"None\")\n\n\nSince the task confines us to the epidemiology week 31-50, 2023, we’ll filter the data to only include the specified weeks.\n\n\nCode\ndengue &lt;- dengue %&gt;% filter(year(發病日) == 2023) %&gt;% filter(epiweek(發病日) &gt;=31 & epiweek(發病日)&lt;= 50)\n\n\nFrom there, we’ll filter the columns to select what we’ll be using later on.\n\n\nCode\ndf &lt;- dengue %&gt;%\n  select(\"發病日\", \"最小統計區中心點X\", \"最小統計區中心點Y\")\n\n\nRename the columns to english to make it easier to read. We’ll use names() from base R to rename the columns.\n\n\nCode\nnames(df) &lt;- c(\"onset-date\", \"x-coordinate\",\"y-coordinate\")\n\n\nOnce we are satisfied with our aspatial data, let’s import our geospatial data.\n\n\nCode\ntainan &lt;- st_read(dsn = \"data/geospatial\", \n                 layer = \"TAINAN_VILLAGE\")\n\n\n\n\nCode\nglimpse(tainan)\n\n\nSince we’ll need to combine the dengue data with the tainan data, we’ll need to ensure that the coordinate reference system (CRS) of both datasets are the same. We’ll use st_crs() to check the CRS of the tainan data.\n\n\nCode\nst_crs(tainan)\n\n\nCheck if there are any invalid values in the tainan data using st_is_valid().\n\n\nCode\nlength(which(st_is_valid(tainan) == FALSE))\n\n\nOnce it’s done, we’ll convert our aspatial dataset into a spatial dataset using st_as_sf().\n\n\nCode\ndengue_sf &lt;- st_as_sf(df, \n                      coords = c(\"x-coordinate\",\"y-coordinate\"),\n                      crs = 3824)\n\n\nWe are also confining our tainan data set to the specified villages.\n\n\nCode\nvillages &lt;- c(\"D01\", \"D02\", \"D04\", \"D06\", \"D07\", \"D08\", \"D32\", \"D39\")\n\n\n\n\nCode\ntainan_vil &lt;- tainan %&gt;%\n  filter(TOWNID %in% villages)\n\n\nOnce that is done, let’s combine the datasets together and see the dengue cases for the specified villages. We’ll use st_join() to join the datasets.\n\n\nCode\nselected_dengue &lt;- dengue_sf %&gt;% st_join(tainan_vil, join = st_within)\n\n\nRemove rows where TOWNID is NA\n\n\nCode\nselected_dengue &lt;- selected_dengue %&gt;% filter(!is.na(TOWNID))\n\n\n\n\nCode\noverall_dengue &lt;- st_intersection(dengue_sf, tainan_vil)\n\n\nOnce we are satisfied with our data wrangling, we’ll save the datasets into rds files for future use.\n\n\nCode\nsaveRDS(overall_dengue, \"data/rds/overall_dengue.rds\")\nsaveRDS(tainan_vil, \"data/rds/tainan_vil.rds\")\n\n\n\n\nCode\noverall_dengue &lt;- readRDS(\"data/rds/overall_dengue.rds\")\ntainan_vil &lt;- readRDS(\"data/rds/tainan_vil.rds\")\n\n\n\n\n\n\n\n\nCode\nplot(st_geometry(tainan_vil), col = \"grey\")\n\n\n\n\n\n\n\nCode\nplot(st_geometry(overall_dengue), col = \"grey\")\nplot(st_geometry(tainan_vil), add = TRUE)\n\n\n\n\n\nFrom here, we can identify the rough distribution of dengue cases in tainan. We notice that majority of the cases are occuring in the middle segments of tainan.\n\n\nCode\ndengue_sf &lt;- st_join(tainan_vil, overall_dengue, join = st_contains)\n\n\n\n\nCode\ndengue_sf &lt;- dengue_sf %&gt;% select(VILLENG.x, TOWNID.x, onset.date, geometry,week) %&gt;% rename(VILLENG = VILLENG.x) %&gt;% rename(TOWNID = TOWNID.x) %&gt;% rename(onset_date = onset.date)\n\n\nwe’ll attempt to group by both villeng and townid first then villeng by itself. This section will be explained later on.\n\n\nCode\ndengue_agg &lt;- st_join(tainan_vil, dengue_sf, join = st_contains) %&gt;% group_by (VILLENG.x, TOWNID.x) %&gt;% summarize(total_cases= n())\n\n\n\n\nCode\ndengue_agg2 &lt;- st_join(tainan_vil, dengue_sf, join = st_contains) %&gt;% group_by (VILLENG.x) %&gt;% summarize(total_cases= n())\n\n\nLet’s save our results for future work.\n\n\nCode\nsaveRDS(dengue_agg, \"data/rds/dengue_agg.rds\")\nsaveRDS(dengue_agg2, \"data/rds/dengue_agg2.rds\")\n\n\n\n\nCode\ndengue_agg &lt;- readRDS(\"data/rds/dengue_agg.rds\")\ndengue_agg2 &lt;- readRDS(\"data/rds/dengue_agg2.rds\")\n\n\n\n\nCode\ntm_shape(dengue_agg2) + \n  tm_polygons(\"total_cases\") + \n  tm_layout(main.title = \"Number of dengue cases by Village\", \n            main.title.position = \"center\",\n            main.title.size = 1.0,\n            legend.height = 0.45,\n            legend.width=0.35,\n            frame = TRUE) + \n  tm_borders(alpha=0.5)+\n  tm_compass(type=\"8star\", size = 2) +\n  tm_scale_bar() +\n  tm_grid(alpha =0.2)\n\n\n\n\n\nGrouping VillEng by itself, we can identify a few spots where dengue cases are more prevalent.\nWe will then plot a bar chart to show the distribution of dengue cases in each village.\n\n\nCode\nggplot(dengue_agg, aes(x = TOWNID.x, y = total_cases)) +\n  geom_bar(stat = \"identity\", position = \"dodge\") +\n  theme_minimal() +\n  theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1)) +\n  labs(title = \"Dengue cases in Tainan\",\n       x = \"Village\",\n       y = \"Number of cases\")\n\n\n\n\n\nFrom the chart above, we can notice that village D07, D08 and D32 have the lowest number of dengue cases. Meanwhile, D06 and D39 has the highest.\n\n\n\n\n\nCode\ndengue_agg_sf &lt;- dengue_agg %&gt;% select(VILLENG.x, total_cases, geometry) %&gt;% rename(VILLENG = VILLENG.x)\n\n\n\n\nCode\ndengue_count &lt;- dengue_agg_sf\n\n\n\n\nCode\ndengue_count\n\n\nSimple feature collection with 258 features and 2 fields\nGeometry type: POLYGON\nDimension:     XY\nBounding box:  xmin: 120.0627 ymin: 22.89401 xmax: 120.2925 ymax: 23.09144\nGeodetic CRS:  TWD97\n# A tibble: 258 × 3\n# Groups:   VILLENG [249]\n   VILLENG     total_cases                                              geometry\n   &lt;chr&gt;             &lt;int&gt;                                         &lt;POLYGON [°]&gt;\n 1 Andong Vil.          67 ((120.2164 23.0404, 120.2154 23.04033, 120.2153 23.0…\n 2 Anfu Vil.           311 ((120.1932 23.0294, 120.1929 23.02938, 120.1926 23.0…\n 3 Anhe Vil.            73 ((120.2258 23.04424, 120.2219 23.03862, 120.2219 23.…\n 4 Ankang Vil.          97 ((120.2269 23.01413, 120.2274 23.01331, 120.2277 23.…\n 5 Anqing Vil.         111 ((120.2113 23.04414, 120.2111 23.04413, 120.2108 23.…\n 6 Anshun Vil.          34 ((120.2136 23.05601, 120.2136 23.05586, 120.2135 23.…\n 7 Anxi Vil.           110 ((120.2123 23.03689, 120.212 23.03685, 120.2121 23.0…\n 8 Bao'an Vil.          19 ((120.2304 22.93544, 120.2301 22.93511, 120.2301 22.…\n 9 Beihua Vil.          82 ((120.2034 23.00257, 120.2032 23.0022, 120.2028 23.0…\n10 Beimen Vil.         249 ((120.2176 23.02032, 120.2173 23.02013, 120.2172 23.…\n# ℹ 248 more rows\n\n\n\n\nCode\nunique(dengue_count$VILLENG)\n\n\n  [1] \"Andong Vil.\"     \"Anfu Vil.\"       \"Anhe Vil.\"       \"Ankang Vil.\"    \n  [5] \"Anqing Vil.\"     \"Anshun Vil.\"     \"Anxi Vil.\"       \"Bao'an Vil.\"    \n  [9] \"Beihua Vil.\"     \"Beimen Vil.\"     \"Beiwan Vil.\"     \"Beixing Vil.\"   \n [13] \"Budai Vil.\"      \"Chang'an Vil.\"   \"Chengbei Vil.\"   \"Chengda Vil.\"   \n [17] \"Chengde Vil.\"    \"Chengdong Vil.\"  \"Chenggong Vil.\"  \"Chenghuang Vil.\"\n [21] \"Chengnan Vil.\"   \"Chengxi Vil.\"    \"Chengzhong Vil.\" \"Chihkan Vil.\"   \n [25] \"Chongcheng Vil.\" \"Chongde Vil.\"    \"Chonghui Vil.\"   \"Chongming Vil.\" \n [29] \"Chongshan Vil.\"  \"Chongwen Vil.\"   \"Chongxin Vil.\"   \"Chongxue Vil.\"  \n [33] \"Da'an Vil.\"      \"Da'en Vil.\"      \"Dacheng Vil.\"    \"Dade Vil.\"      \n [37] \"Dafeng Vil.\"     \"Dafu Vil.\"       \"Dagang Vil.\"     \"Daguang Vil.\"   \n [41] \"Dahe Vil.\"       \"Dajia Vil.\"      \"Daliang Vil.\"    \"Dalin Vil.\"     \n [45] \"Daqiao Vil.\"     \"Datong Vil.\"     \"Dawan Vil.\"      \"Daxing Vil.\"    \n [49] \"Daxue Vil.\"      \"Dazhi Vil.\"      \"Dazhong Vil.\"    \"Degao Vil.\"     \n [53] \"Deguang Vil.\"    \"Diandong Vil.\"   \"Dianxi Vil.\"     \"Ding'an Vil.\"   \n [57] \"Dong'an Vil.\"    \"Dongguang Vil.\"  \"Donghe Vil.\"     \"Dongmen Vil.\"   \n [61] \"Dongming Vil.\"   \"Dongqiao Vil.\"   \"Dongsheng Vil.\"  \"Dongwan Vil.\"   \n [65] \"Dongxing Vil.\"   \"Dongzhi Vil.\"    \"Duiyue Vil.\"     \"Erwang Vil.\"    \n [69] \"Erxing Vil.\"     \"Fahua Vil.\"      \"Fenghuang Vil.\"  \"Fotan Vil.\"     \n [73] \"Fude Vil.\"       \"Fuguo Vil.\"      \"Fuhua Vil.\"      \"Funan Vil.\"     \n [77] \"Fuqian Vil.\"     \"Fuqiang Vil.\"    \"Fuxing Vil.\"     \"Fuyu Vil.\"      \n [81] \"Gongqin Vil.\"    \"Gongwen Vil.\"    \"Gongyuan Vil.\"   \"Guangfu Vil.\"   \n [85] \"Guangming Vil.\"  \"Guangxian Vil.\"  \"Guangzhou Vil.\"  \"Guansheng Vil.\" \n [89] \"Guo'an Vil.\"     \"Guoping Vil.\"    \"Guozhai Vil.\"    \"Haidian Vil.\"   \n [93] \"Haidong Vil.\"    \"Hainan Vil.\"     \"Haixi Vil.\"      \"Heping Vil.\"    \n [97] \"Heshun Vil.\"     \"Hexing Vil.\"     \"Houbi Vil.\"      \"Houjia Vil.\"    \n[101] \"Huade Vil.\"      \"Huaping Vil.\"    \"Huwei Vil.\"      \"Jiading Vil.\"   \n[105] \"Jianguo Vil.\"    \"Jiannan Vil.\"    \"Jianping Vil.\"   \"Jincheng Vil.\"  \n[109] \"Jinhua Vil.\"     \"Junnan Vil.\"     \"Junwang Vil.\"    \"Kainan Vil.\"    \n[113] \"Kaishan Vil.\"    \"Kaiyuan Vil.\"    \"Kunshan Vil.\"    \"Kunshen Vil.\"   \n[117] \"Liren Vil.\"      \"Liuhe Vil.\"      \"Lixiang Vil.\"    \"Lixing Vil.\"    \n[121] \"Longpu Vil.\"     \"Longshan Vil.\"   \"Longtan Vil.\"    \"Lu'er Vil.\"     \n[125] \"Ludong Vil.\"     \"Meihua Vil.\"     \"Mingde Vil.\"     \"Mingliang Vil.\" \n[129] \"Mingxing Vil.\"   \"Nanchang Vil.\"   \"Nandou Vil.\"     \"Nanhua Vil.\"    \n[133] \"Nanmei Vil.\"     \"Nanmen Vil.\"     \"Nansheng Vil.\"   \"Nanwan Vil.\"    \n[137] \"Nanxing Vil.\"    \"Niaosong Vil.\"   \"Ping'an Vil.\"    \"Pingtong Vil.\"  \n[141] \"Puyuan Vil.\"     \"Qiancao Vil.\"    \"Qingcao Vil.\"    \"Quannan Vil.\"   \n[145] \"Ren'ai Vil.\"     \"Rende Vil.\"      \"Renhe Vil.\"      \"Renyi Vil.\"     \n[149] \"Sanhe Vil.\"      \"Sanmin Vil.\"     \"Shalun Vil.\"     \"Shangding Vil.\" \n[153] \"Shanglun Vil.\"   \"Shenggong Vil.\"  \"Shengli Vil.\"    \"Shenzhou Vil.\"  \n[157] \"Shuang'an Vil.\"  \"Sicao Vil.\"      \"Song'an Vil.\"    \"Taizi Vil.\"     \n[161] \"Tianfei Vil.\"    \"Tianliao Vil.\"   \"Tong'an Vil.\"    \"Tuku Vil.\"      \n[165] \"Wangcheng Vil.\"  \"Wangliao Vil.\"   \"Wangxing Vil.\"   \"Weiguo Vil.\"    \n[169] \"Weixia Vil.\"     \"Wencheng Vil.\"   \"Wenhua Vil.\"     \"Wennan Vil.\"    \n[173] \"Wenping Vil.\"    \"Wensheng Vil.\"   \"Wenxian Vil.\"    \"Wenyuan Vil.\"   \n[177] \"Wutiaogang Vil.\" \"Wuwang Vil.\"     \"Wuzhu Vil.\"      \"Xianbei Vil.\"   \n[181] \"Xiangong Vil.\"   \"Xiaobei Vil.\"    \"Xiaodong Vil.\"   \"Xiaoximen Vil.\" \n[185] \"Xibei Vil.\"      \"Xiding Vil.\"     \"Xidong Vil.\"     \"Xihe Vil.\"      \n[189] \"Xihu Vil.\"       \"Xinan Vil.\"      \"Xinchang Vil.\"   \"Xindong Vil.\"   \n[193] \"Xingfu Vil.\"     \"Xingnong Vil.\"   \"Xinsheng Vil.\"   \"Xinshu Vil.\"    \n[197] \"Xinshun Vil.\"    \"Xintian Vil.\"    \"Xinxing Vil.\"    \"Xiqi Vil.\"      \n[201] \"Xiqiao Vil.\"     \"Xishi Vil.\"      \"Xiwan Vil.\"      \"Xixian Vil.\"    \n[205] \"Xixin Vil.\"      \"Xuedong Vil.\"    \"Yancheng Vil.\"   \"Yantian  Vil.\"  \n[209] \"Yanxing  Vil.\"   \"Yanxing Vil.\"    \"Yanzhou  Vil.\"   \"Yaowang Vil.\"   \n[213] \"Yijia Vil.\"      \"Yiping Vil.\"     \"Yizai Vil.\"      \"Yonghua Vil.\"   \n[217] \"Yongkang Vil.\"   \"Yongming Vil.\"   \"Yongning Vil.\"   \"Yongxiang Vil.\" \n[221] \"Yuanbao Vil.\"    \"Yuandian Vil.\"   \"Yuandong Vil.\"   \"Yuanmei Vil.\"   \n[225] \"Yuanxi Vil.\"     \"Yuanzhong Vil.\"  \"Yuguang Vil.\"    \"Yunong Vil.\"    \n[229] \"Yuping Vil.\"     \"Yusheng Vil.\"    \"Zaixing Vil.\"    \"Zhangnan Vil.\"  \n[233] \"Zhangsheng Vil.\" \"Zhangxing Vil.\"  \"Zhengjue Vil.\"   \"Zhengqiang Vil.\"\n[237] \"Zhenxing Vil.\"   \"Zhonghua Vil.\"   \"Zhonglou Vil.\"   \"Zhongxi Vil.\"   \n[241] \"Zhongxiao Vil.\"  \"Zhongxing Vil.\"  \"Zhongzhou Vil.\"  \"Zhoubei Vil.\"   \n[245] \"Zhounan Vil.\"    \"Zhuangjing Vil.\" \"Zhuxi Vil.\"      \"Ziqiang Vil.\"   \n[249] \"Zongtou Vil.\"   \n\n\nWhen viewing the unique values of villeng, we notice that there are duplicates in the dataset. We use the function cat() to print the number of unique villages, total features, and any duplicate values.\n\n\nCode\n# Count the number of unique values in the VILLENG column\nnum_unique_villages &lt;- length(unique(dengue_count$VILLENG))\n\n# Count the total number of features (polygons) in the dataset\ntotal_features &lt;- nrow(dengue_count)\n\n# Check for duplicate values in the VILLENG column\nduplicate_villages &lt;- dengue_count %&gt;%\n  group_by(VILLENG) %&gt;%\n  filter(n() &gt; 1) %&gt;%\n  distinct()\n\n# Print the number of unique villages, total features, and any duplicate values\ncat(\"Number of unique villages:\", num_unique_villages, \"\\n\")\n\n\nNumber of unique villages: 249 \n\n\nCode\ncat(\"Total features (polygons):\", total_features, \"\\n\")\n\n\nTotal features (polygons): 258 \n\n\nCode\ncat(\"Duplicate villages:\", nrow(duplicate_villages), \"\\n\")\n\n\nDuplicate villages: 17 \n\n\n\n\nCode\nduplicate_villages \n\n\nSimple feature collection with 17 features and 2 fields\nGeometry type: POLYGON\nDimension:     XY\nBounding box:  xmin: 120.1705 ymin: 22.9264 xmax: 120.2458 ymax: 23.07585\nGeodetic CRS:  TWD97\n# A tibble: 17 × 3\n# Groups:   VILLENG [8]\n   VILLENG        total_cases                                           geometry\n   &lt;chr&gt;                &lt;int&gt;                                      &lt;POLYGON [°]&gt;\n 1 Chenggong Vil.          84 ((120.2094 23.02295, 120.2088 23.02294, 120.2081 …\n 2 Chenggong Vil.          62 ((120.2247 22.96165, 120.2247 22.96165, 120.2246 …\n 3 Chenggong Vil.          32 ((120.2388 23.00454, 120.2388 23.00452, 120.2385 …\n 4 Fuxing Vil.            139 ((120.2373 22.98504, 120.237 22.98501, 120.2361 2…\n 5 Fuxing Vil.             61 ((120.2433 23.00544, 120.2432 23.00544, 120.2427 …\n 6 Ren'ai Vil.             78 ((120.2248 23.0057, 120.2243 23.00504, 120.2242 2…\n 7 Ren'ai Vil.             17 ((120.2214 22.96205, 120.2213 22.96203, 120.2211 …\n 8 Renhe Vil.             103 ((120.2361 22.96897, 120.2367 22.969, 120.2371 22…\n 9 Renhe Vil.               9 ((120.2233 22.96183, 120.2233 22.96183, 120.2233 …\n10 Wennan Vil.             81 ((120.1866 22.98634, 120.1865 22.98631, 120.1862 …\n11 Wennan Vil.             18 ((120.2226 23.07585, 120.2225 23.07582, 120.2225 …\n12 Xibei Vil.              17 ((120.1706 22.95257, 120.1706 22.95249, 120.1706 …\n13 Xibei Vil.              91 ((120.214 23.02902, 120.2135 23.02874, 120.2132 2…\n14 Xidong Vil.             21 ((120.2015 22.95139, 120.1987 22.95137, 120.1983 …\n15 Xidong Vil.            167 ((120.1987 23.029, 120.1987 23.02896, 120.1988 23…\n16 Zhongxing Vil.          26 ((120.2262 23.00712, 120.2261 23.006, 120.2258 23…\n17 Zhongxing Vil.          51 ((120.2417 23.00886, 120.2416 23.00883, 120.2416 …\n\n\nFrom there, we realise that dengue_agg itself has duplicates. We then will use dengue_agg2 to perform the global spatial autocorrelation analysis. We’ll keep dengue_agg for future use.\n\n\n\n\nCode\nwm_q &lt;- dengue_agg2 %&gt;%\n  mutate(\n    nb = st_contiguity(geometry, queen = TRUE),\n    wt = st_weights(nb, style = \"W\", allow_zero = TRUE)\n  )\n\n\n\n\nCode\nwm_q\n\n\nSimple feature collection with 249 features and 4 fields\nGeometry type: GEOMETRY\nDimension:     XY\nBounding box:  xmin: 120.0627 ymin: 22.89401 xmax: 120.2925 ymax: 23.09144\nGeodetic CRS:  TWD97\n# A tibble: 249 × 5\n   VILLENG.x   total_cases                                  geometry nb    wt   \n * &lt;chr&gt;             &lt;int&gt;                             &lt;POLYGON [°]&gt; &lt;nb&gt;  &lt;lis&gt;\n 1 Andong Vil.          67 ((120.2164 23.0404, 120.2154 23.04033, 1… &lt;int&gt; &lt;dbl&gt;\n 2 Anfu Vil.           311 ((120.1932 23.0294, 120.1929 23.02938, 1… &lt;int&gt; &lt;dbl&gt;\n 3 Anhe Vil.            73 ((120.2258 23.04424, 120.2219 23.03862, … &lt;int&gt; &lt;dbl&gt;\n 4 Ankang Vil.          97 ((120.2269 23.01413, 120.2274 23.01331, … &lt;int&gt; &lt;dbl&gt;\n 5 Anqing Vil.         111 ((120.2113 23.04414, 120.2111 23.04413, … &lt;int&gt; &lt;dbl&gt;\n 6 Anshun Vil.          34 ((120.2136 23.05601, 120.2136 23.05586, … &lt;int&gt; &lt;dbl&gt;\n 7 Anxi Vil.           110 ((120.2123 23.03689, 120.212 23.03685, 1… &lt;int&gt; &lt;dbl&gt;\n 8 Bao'an Vil.          19 ((120.2304 22.93544, 120.2301 22.93511, … &lt;int&gt; &lt;dbl&gt;\n 9 Beihua Vil.          82 ((120.2034 23.00257, 120.2032 23.0022, 1… &lt;int&gt; &lt;dbl&gt;\n10 Beimen Vil.         249 ((120.2176 23.02032, 120.2173 23.02013, … &lt;int&gt; &lt;dbl&gt;\n# ℹ 239 more rows\n\n\n\n\n\n\n\nCode\nglobal_moran_test(wm_q$total_cases,\n                  wm_q$nb,\n                  wm_q$wt)\n\n\n\n    Moran I test under randomisation\n\ndata:  x  \nweights: listw    \n\nMoran I statistic standard deviate = 12.062, p-value &lt; 2.2e-16\nalternative hypothesis: greater\nsample estimates:\nMoran I statistic       Expectation          Variance \n      0.440989474      -0.004032258       0.001361217 \n\n\n\n\n\nIn R, the set.seed() function is used to set the seed for random number generation. It ensures reproducibility in simulations or any other random number-dependent operations by initializing the random number generator to a specified starting point.\n\n\nCode\nset.seed(1234)\n\n\n\n\nCode\nglobal_moran_perm(wm_q$total_cases,\n                  wm_q$nb,\n                  wm_q$wt,\n                  nsim=49)\n\n\n\n    Monte-Carlo simulation of Moran I\n\ndata:  x \nweights: listw  \nnumber of simulations + 1: 50 \n\nstatistic = 0.44099, observed rank = 50, p-value &lt; 2.2e-16\nalternative hypothesis: two.sided\n\n\nSince our permutation statistics return 0.44, it signifies that there are forms of clustering present in the dataset.\n\n\n\n\ncomputing lisa\n\n\nCode\nlisa &lt;- wm_q %&gt;% mutate(local_moran = local_moran(\n  total_cases, nb, wt, nsim = 79),\n  .before = 1) %&gt;%\n  unnest(local_moran)\n\n\n\n\n\n\nCode\ntm_shape(lisa) + \n  tm_fill(\"ii\") + \n  tm_borders(alpha=0.5) +\n  tm_layout(main.title = \"Local Moran's I of Total Cases\", \n            main.title.size = 0.8)\n\n\n\n\n\n\n\n\n\n\nCode\ntm_shape(lisa) +\n  tm_fill(\"p_ii_sim\",\n          breaks = c(0, 0.001, 0.01, 0.05, 1),\n          labels = c(\"0.001\", \"0.01\", \"0.05\", \"Not significant\")) +\n  tm_borders(alpha = 0.5) +\n  tm_layout (main.title = \"p-value of local Moran's I\",\n             main.title.size = 0.8)\n\n\n\n\n\n\n\n\n\n\nCode\nlocal_mapi &lt;- tm_shape(lisa) + \n  tm_fill(\"ii\") + \n  tm_borders(alpha=0.5) +\n  tm_layout(main.title = \"Local Moran's I of Total Cases\", \n            main.title.size = 0.8)\n\nlocal_mapp &lt;- tm_shape(lisa) +\n  tm_fill(\"p_ii_sim\",\n          breaks = c(0, 0.001, 0.01, 0.05, 1),\n          labels = c(\"0.001\", \"0.01\", \"0.05\", \"Not significant\")) +\n  tm_borders(alpha = 0.5) +\n  tm_layout (main.title = \"p-value of local Moran's I\",\n             main.title.size = 0.8)\n\ntmap_arrange(local_mapi, local_mapp, ncol = 2)\n\n\n\n\n\nFrom the visualizations above, we can see that there are clusters and outliers in the dataset. We can see that there are a few areas where the p-value is less than 0.05, indicating that the clusters are statistically significant. We’ll then proceed to filter out the significant clusters and outliers.\n\n\n\n\nCode\nlisa_sig &lt;- lisa %&gt;% filter(p_ii &lt;0.05)\n\ntm_shape(lisa) + \n  tm_polygons() +\n  tm_borders(alpha = 0.5) +\n  tm_shape(lisa_sig) +\n  tm_fill(\"mean\") +\n  tm_borders(alpha=0.4)\n\n\n\n\n\nOn the exterior of tainan, we notice that there are multiple Low-Low which indicates that the number of dengue cases are relatively low comapred to their neighbours. Meanwhile, in the middle of tainan, we notice that there are multiple High-High which indicates that the number of dengue cases are relatively high.\nFor Low-High regions, we notice that there are a few areas where the number of dengue cases are relatively low compared to their neighbours. However, they are surrounded by areas where the number of dengue cases are relatively high. This could indicate that the low number of dengue cases are outliers.\nSince there are still signs of clustering, we shall proceed to perform Emerging Hotspot Analysis (EHSA) to determine the location of the clusters and where the hotspots are clusters or outliers.\n\n\n\n\n\nWe’ll reload the dengue dataset for us to get a better look at the available data.\nFor EHSA, we will be using VILLCODE as a unique identifier as it is the most granular level of the dataset. However, since dengue dataset does not offer VILLCODE, we will use TOWNNAME and VILLNAME as a foreign key to join the tables.\n\n\n\n\nCode\ndengue &lt;- read_csv(\"data/aspatial/Dengue_Daily.csv\")\n\n\n\n\nCode\nglimpse(dengue)\n\n\n\n\nCode\nfil_dengue &lt;- dengue %&gt;% select(發病日, 最小統計區中心點X, 最小統計區中心點Y, 居住縣市,居住村里, 居住鄉鎮) %&gt;% \n  rename(onset_date = 發病日, x_coordinate = 最小統計區中心點X, y_coordinate = 最小統計區中心點Y, COUNTYNAME = 居住縣市, VILLNAME = 居住村里, TOWNNAME = 居住鄉鎮)\n\n\nWe need to get the epi weeks for dengues cases. We’ll use lubridate::epiweek() to get the epi weeks. We use epi week to start on sunday instead of isoweek which starts on monday\n\n\nCode\nweek_dengue &lt;- fil_dengue %&gt;%\n  mutate(week = lubridate::epiweek(onset_date))\n\n\nWe group by week, townname and villname to get the total cases for each week, town and village.\n\n\nCode\ncases_dengue &lt;- week_dengue %&gt;% group_by(week, TOWNNAME, VILLNAME) %&gt;% summarize(total_cases = n())\n\n\n\n\nCode\nmerge_tnd &lt;- left_join(tainan_vil, cases_dengue, by = c(\"TOWNNAME\", \"VILLNAME\"))\n\n\n\n\nCode\nmerge_tnd &lt;- merge_tnd %&gt;% select(VILLCODE, week, total_cases)\n\n\nWe’ll have to form a dataframe with all the possible combinations of village codes and weeks. We’ll use expand.grid() to create the dataframe.From there, replace missing cases with 0. This will give us a full grid to form our spacetime cube.\n\n\nCode\nunique_villcodes &lt;- unique(tainan_vil$VILLCODE)\nunique_weeks &lt;- rep(31:50)\n\nall_combinations &lt;- expand.grid(VILLCODE = unique_villcodes, week = unique_weeks)\n\n# Convert VILLCODE to character type (if it's not already)\nall_combinations$VILLCODE &lt;- as.character(all_combinations$VILLCODE)\n\n# Merge with the original dataframe\ndf_merged &lt;- merge(all_combinations, merge_tnd, by = c(\"VILLCODE\", \"week\"), all.x = TRUE)\n\n# Replace missing total_cases with 0\ndf_merged$total_cases[is.na(df_merged$total_cases)] &lt;- 0\n\n\nSave df_merged into rds\n\n\nCode\nsaveRDS(df_merged, \"data/rds/df_merged.rds\")\n\n\n\n\nCode\ndf_merged &lt;- readRDS(\"data/rds/df_merged.rds\")\n\n\nSince spacetime cube requires the data to be in tibble format, we’ll convert df_merged into tibble format. We will use as_tibble() from the tibble package to convert the dataframe into tibble format.\n\n\nCode\ndf_merged_tb &lt;- as_tibble(df_merged)\n\n\n\n\n\n\n\nCode\ndengue_st &lt;- spacetime(df_merged_tb , tainan_vil,\n         .loc_col = \"VILLCODE\",.time_col = \"week\")\n\n\n\n\nCode\nis_spacetime_cube(dengue_st)\n\n\n[1] TRUE\n\n\nAmazing! We managed to create a spacetime cube. We’ll now proceed to perform emerging hotspot analysis on the spacetime cube.\n\n\n\n\n\nCode\ndg_nb &lt;- dengue_st %&gt;%\n  activate(\"geometry\") %&gt;%\n  mutate(nb = include_self(st_contiguity(geometry)),\n         wt = st_inverse_distance(nb, geometry,\n                                  scale = 1,\n                                  alpha = 1),\n         .before = 1) %&gt;%\n  set_nbs(\"nb\") %&gt;%\n  set_wts(\"wt\")\n\n\n\n\n\n\n\nCode\ngi_stars &lt;- dg_nb %&gt;% \n  group_by(week) %&gt;% \n  mutate(gi_star = local_gstar_perm(\n    total_cases, nb, wt)) %&gt;% \n  tidyr::unnest(gi_star)\n\n\nSince we used Vilcode as the location, we are not able to understand which villages corresponds to which gi*. Therefore, let’s simply plot the min and max values to get a better understanding of the data.\nStore gi_stars in rds\n\n\nCode\nsaveRDS(gi_stars, \"data/rds/gi_stars.rds\")\n\n\n\n\nCode\ngi_stars &lt;- readRDS(\"data/rds/gi_stars.rds\")\n\n\n\n\nCode\nmin_gi &lt;- min(gi_stars$gi_star)\nmax_gi &lt;- max(gi_stars$gi_star)\n\n\nFind the villcode where the gi_star is equals to min_gi, max_gi\n\n\nCode\nmin_gi_vil &lt;- gi_stars %&gt;% \n  filter(gi_star == min_gi) %&gt;% \n  select(VILLCODE)\n\nmax_gi_vil &lt;- gi_stars %&gt;%\n  filter(gi_star == max_gi) %&gt;%\n  select(VILLCODE)\n\nmin_gi_vil\n\n\n# A tibble: 1 × 2\n# Groups:   week [1]\n   week VILLCODE   \n  &lt;int&gt; &lt;chr&gt;      \n1    41 67000350034\n\n\nCode\nmax_gi_vil\n\n\n# A tibble: 1 × 2\n# Groups:   week [1]\n   week VILLCODE   \n  &lt;int&gt; &lt;chr&gt;      \n1    34 67000350040\n\n\n\n\n\n\n\nCode\nmkt_min &lt;- gi_stars %&gt;% \n  ungroup() %&gt;% \n  filter(VILLCODE == min_gi_vil$VILLCODE) |&gt; \n  select(VILLCODE, week, gi_star)\n\n\n\n\nCode\nmkt_max &lt;- gi_stars %&gt;% \n  ungroup() %&gt;% \n  filter(VILLCODE == max_gi_vil$VILLCODE) |&gt; \n  select(VILLCODE, week, gi_star)\n\n\n\n\nCode\nggplot(data = mkt_min, \n       aes(x = week, \n           y = gi_star)) +\n  geom_line() +\n  theme_light()\n\n\n\n\n\n\n\nCode\nggplot(data = mkt_max, \n       aes(x = week, \n           y = gi_star)) +\n  geom_line() +\n  theme_light()\n\n\n\n\n\nLet’s plot them together to gauge how the min and max values defer in tainan.\n\n\nCode\nggplot() +\n  geom_line(data = mkt_min, mapping = aes(x = week, y = gi_star, color = \"Min\")) +\n  geom_line(data = mkt_max, mapping = aes(x = week, y = gi_star, color = \"Max\")) + \n  labs(x = \"Week\", y = \"GiStar Value\", \n       title = \"GiStar Min and Max Values\",\n       color = \"Villages\")\n\n\n\n\n\nWe can see that the min and max values of gi* are quite different. The min value of gi* is relatively stable throughout the weeks while the max value of gi* fluctuates quite a bit. Eventually, they both converge back close to 0.\n\n\n\nWe can replicate the above calculation for the entire dataset using group_by of dplyr package.\n\n\nCode\nehsa &lt;- gi_stars %&gt;%\n  group_by(VILLCODE) %&gt;%\n  summarise(mk = list(\n    unclass(\n      Kendall::MannKendall(gi_star)))) %&gt;%\n  tidyr::unnest_wider(mk)\n\n\nWe arrange it to show significant emerging hot/cold spots.\n\n\nCode\nemerging &lt;- ehsa %&gt;% \n  arrange(sl, abs(tau)) %&gt;% \n  slice(1:5)\n\n\nLastly, we will perform EHSA analysis by using emerging_hotspot_analysis() of sfdep package. It takes a spacetime object x (i.e. GDPPC_st), and the quoted name of the variable of interest (i.e. GDPPC) for .var argument. The k argument is used to specify the number of time lags which is set to 1 by default. Lastly, nsim map numbers of simulation to be performed.\n\n\nCode\nehsa &lt;- emerging_hotspot_analysis(\n  x = dengue_st, \n  .var = \"total_cases\", \n  k = 1, \n  nsim = 99\n)\n\n\n\n\nCode\nsaveRDS(ehsa, \"data/rds/ehsa.rds\")\n\n\n\n\nCode\nehsa &lt;- readRDS(\"data/rds/ehsa.rds\")\n\n\n\n\n\n\n\nCode\nggplot(data = ehsa,\n       aes(x = classification)) +\n  geom_bar()\n\n\n\n\n\n\n\n\n\n\nCode\ntn_ehsa &lt;- tainan_vil %&gt;%\n  left_join(ehsa,\n            by = join_by(VILLCODE == location))\n\n\nTmap functions will be used to plot a categorical choropleth map by using the code chunk below.\n\n\nCode\nehsa_sig &lt;- tn_ehsa  %&gt;%\n  filter(p_value &lt; 0.05)\ntmap_mode(\"plot\")\ntm_shape(tn_ehsa) +\n  tm_polygons() +\n  tm_borders(alpha = 0.5) +\ntm_shape(ehsa_sig) +\n  tm_fill(\"classification\") + \n  tm_borders(alpha = 0.4)\n\n\n\n\n\nFrom the visualisation above, we can see that there are a few areas where the p-value is less than 0.05, indicating that the clusters are statistically significant.\nWe’ll reference the table below to understand what the classifications mean. Source: https://pro.arcgis.com/en/pro-app/2.8/tool-reference/space-time-pattern-mining/learnmoreemerging.htm\n\n\n\n\n\n\n\nPattern Name\nDefinition\n\n\n\n\nConsecutive Cold Spot\nA location with a single uninterrupted run of statistically significant cold spot bins in the final time-step intervals. The location has never been a statistically significant cold spot prior to the final cold spot run and less than ninety percent of all bins are statistically significant cold spots.\n\n\nConsecutive Hot Spot\nA location with a single uninterrupted run of statistically significant hot spot bins in the final time-step intervals. The location has never been a statistically significant hot spot prior to the final hot spot run and less than ninety percent of all bins are statistically significant hot spots.\n\n\nNew Cold Spot\nA location that is a statistically significant cold spot for the final time step and has never been a statistically significant cold spot before.\n\n\nOscillating Cold Spot\nA statistically significant cold spot for the final time-step interval that has a history of also being a statistically significant hot spot during a prior time step. Less than ninety percent of the time-step intervals have been statistically significant cold spots.\n\n\nOscillating Hot Spot\nA statistically significant hot spot for the final time-step interval that has a history of also being a statistically significant cold spot during a prior time step. Less than ninety percent of the time-step intervals have been statistically significant hot spots.\n\n\nSporadic Cold Spot\nA location that is an on-again then off-again cold spot. Less than ninety percent of the time-step intervals have been statistically significant cold spots and none of the time-step intervals have been statistically significant hot spots.\n\n\nSporadic Hot Spot\nA location that is an on-again then off-again hot spot. Less than ninety percent of the time-step intervals have been statistically significant hot spots and none of the time-step intervals have been statistically significant cold spots.\n\n\nNo Pattern Detected\nDoes not fall into any of the hot or cold spot patterns defined below.\n\n\n\n\n\n\n\nIn conclusion, we have successfully performed global spatial autocorrelation analysis, local spatial autocorrelation analysis and emerging hotspot analysis on the distribution of dengue fever in Tainan City, Taiwan. We have discovered that the distribution of dengue fever outbreak at Tainan City, Taiwan are spatially dependent. We have also detected clusters and outliers, and the emerging hot spot/cold spot areas.\nFrom the EHSA analysis, we have identified the following significant emerging hot/cold spots: Consecutive Cold Spot, Consecutive Hot Spot, New Cold Spot, Oscillating Cold Spot, Oscillating Hot Spot, Sporadic Cold Spot, Sporadic Hot Spot and No Pattern Detected. Majority of the areas are oscillating hot spots and sporadic hot spots. These suggests that the dengue fever outbreak in Tainan City, Taiwan are not consistent and are sporadic in nature. For consecutive hotspots,\nThe results of the analysis can be used to inform public health officials and policy makers to allocate resources and implement targeted interventions to control the spread of dengue fever in Tainan City, Taiwan.\n\n\n\nAfter Take-home exercise 2, I further realised the importance of data wrangling and data cleaning. It is important to ensure that the data is clean and in the right format before performing any analysis. Using a function is simple, but preparing a dataset for the function to use is not. I need to be more careful in the future to ensure that the data is in the right format before performing any analysis.\nOverall, with the QnAs from Piazza, I managed to work ma way through the exercise and understand the concepts of spatial autocorrelation and emerging hotspot analysis. I am looking forward to the next exercise to further improve my skills in spatial analysis."
  },
  {
    "objectID": "Take-home_Ex/Take-home_Ex02/Take-home_Ex02.html#load-the-data",
    "href": "Take-home_Ex/Take-home_Ex02/Take-home_Ex02.html#load-the-data",
    "title": "Take-home Exercise 02",
    "section": "",
    "text": "We begin first by working with dengue (Aspatial) data as aspatial data usually requires more wrangling.\n\n\nCode\ndengue &lt;- read_csv(\"data/aspatial/Dengue_Daily.csv\")\n\n\n\n\nCode\nhead(dengue)\n\n\n\n\nCode\nglimpse(dengue)\n\n\nFrom viewing the head of dengue, we can see that the data contains “None” values in x and y coordinates. We’ll remove them using the filter function from dplyr.\n\n\n\nCode\ndengue &lt;- dengue %&gt;% filter(最小統計區中心點X != \"None\" | 最小統計區中心點Y != \"None\")\n\n\nSince the task confines us to the epidemiology week 31-50, 2023, we’ll filter the data to only include the specified weeks.\n\n\nCode\ndengue &lt;- dengue %&gt;% filter(year(發病日) == 2023) %&gt;% filter(epiweek(發病日) &gt;=31 & epiweek(發病日)&lt;= 50)\n\n\nFrom there, we’ll filter the columns to select what we’ll be using later on.\n\n\nCode\ndf &lt;- dengue %&gt;%\n  select(\"發病日\", \"最小統計區中心點X\", \"最小統計區中心點Y\")\n\n\nRename the columns to english to make it easier to read. We’ll use names() from base R to rename the columns.\n\n\nCode\nnames(df) &lt;- c(\"onset-date\", \"x-coordinate\",\"y-coordinate\")\n\n\nOnce we are satisfied with our aspatial data, let’s import our geospatial data.\n\n\nCode\ntainan &lt;- st_read(dsn = \"data/geospatial\", \n                 layer = \"TAINAN_VILLAGE\")\n\n\n\n\nCode\nglimpse(tainan)\n\n\nSince we’ll need to combine the dengue data with the tainan data, we’ll need to ensure that the coordinate reference system (CRS) of both datasets are the same. We’ll use st_crs() to check the CRS of the tainan data.\n\n\nCode\nst_crs(tainan)\n\n\nCheck if there are any invalid values in the tainan data using st_is_valid().\n\n\nCode\nlength(which(st_is_valid(tainan) == FALSE))\n\n\nOnce it’s done, we’ll convert our aspatial dataset into a spatial dataset using st_as_sf().\n\n\nCode\ndengue_sf &lt;- st_as_sf(df, \n                      coords = c(\"x-coordinate\",\"y-coordinate\"),\n                      crs = 3824)\n\n\nWe are also confining our tainan data set to the specified villages.\n\n\nCode\nvillages &lt;- c(\"D01\", \"D02\", \"D04\", \"D06\", \"D07\", \"D08\", \"D32\", \"D39\")\n\n\n\n\nCode\ntainan_vil &lt;- tainan %&gt;%\n  filter(TOWNID %in% villages)\n\n\nOnce that is done, let’s combine the datasets together and see the dengue cases for the specified villages. We’ll use st_join() to join the datasets.\n\n\nCode\nselected_dengue &lt;- dengue_sf %&gt;% st_join(tainan_vil, join = st_within)\n\n\nRemove rows where TOWNID is NA\n\n\nCode\nselected_dengue &lt;- selected_dengue %&gt;% filter(!is.na(TOWNID))\n\n\n\n\nCode\noverall_dengue &lt;- st_intersection(dengue_sf, tainan_vil)\n\n\nOnce we are satisfied with our data wrangling, we’ll save the datasets into rds files for future use.\n\n\nCode\nsaveRDS(overall_dengue, \"data/rds/overall_dengue.rds\")\nsaveRDS(tainan_vil, \"data/rds/tainan_vil.rds\")\n\n\n\n\nCode\noverall_dengue &lt;- readRDS(\"data/rds/overall_dengue.rds\")\ntainan_vil &lt;- readRDS(\"data/rds/tainan_vil.rds\")"
  },
  {
    "objectID": "Take-home_Ex/Take-home_Ex02/data/geospatial/TAINAN_VILLAGE.html",
    "href": "Take-home_Ex/Take-home_Ex02/data/geospatial/TAINAN_VILLAGE.html",
    "title": "IS415-GAA",
    "section": "",
    "text": "&lt;!DOCTYPE qgis PUBLIC ‘http://mrcc.com/qgis.dtd’ ‘SYSTEM’&gt;     dataset\n\n\n       GEOGCRS[“TWD97”,DATUM[“Taiwan Datum 1997”,ELLIPSOID[“GRS 1980”,6378137,298.257222101,LENGTHUNIT[“metre”,1]]],PRIMEM[“Greenwich”,0,ANGLEUNIT[“degree”,0.0174532925199433]],CS[ellipsoidal,2],AXIS[“geodetic latitude (Lat)”,north,ORDER[1],ANGLEUNIT[“degree”,0.0174532925199433]],AXIS[“geodetic longitude (Lon)”,east,ORDER[2],ANGLEUNIT[“degree”,0.0174532925199433]],USAGE[SCOPE[“Horizontal component of 3D system.”],AREA[“Taiwan, Republic of China - onshore and offshore - Taiwan Island, Penghu (Pescadores) Islands.”],BBOX[17.36,114.32,26.96,123.61]],ID[“EPSG”,3824]] +proj=longlat +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +no_defs 27230 3824 EPSG:3824 TWD97 longlat EPSG:7019 true"
  },
  {
    "objectID": "Take-home_Ex/Take-home_Ex02/Take-home_Ex02.html#setting-the-scene",
    "href": "Take-home_Ex/Take-home_Ex02/Take-home_Ex02.html#setting-the-scene",
    "title": "Take-home Exercise 02",
    "section": "",
    "text": "Dengue Hemorrhagic Fever (in short dengue fever) is one of the most widespread mosquito-borne diseases in the most tropical and subtropical regions. It is an acute disease caused by dengue virus infection which is transmitted by female Aedes aegypti and Aedes albopictus mosquitoes. In 2015, Taiwan had recorded the most severe dengue fever outbreak with more than 43,000 dengue cases and 228 deaths. Since then, the annual reported dengue fever cases were maintained at the level of not more than 200 cases. However, in 2023, Taiwan recorded 26703 dengue fever cases. Figure below reveals that more than 25,000 cases were reported at Tainan City."
  },
  {
    "objectID": "Take-home_Ex/Take-home_Ex02/Take-home_Ex02.html#objectives",
    "href": "Take-home_Ex/Take-home_Ex02/Take-home_Ex02.html#objectives",
    "title": "Take-home Exercise 02",
    "section": "",
    "text": "As a curious geospatial analytics green horn, you are interested to discover:\nif the distribution of dengue fever outbreak at Tainan City, Taiwan are independent from space and space and time. If the outbreak is indeed spatial and spatio-temporal dependent, then, you would like to detect where are the clusters and outliers, and the emerging hot spot/cold spot areas."
  },
  {
    "objectID": "Take-home_Ex/Take-home_Ex02/Take-home_Ex02.html#the-task",
    "href": "Take-home_Ex/Take-home_Ex02/Take-home_Ex02.html#the-task",
    "title": "Take-home Exercise 02",
    "section": "",
    "text": "The specific tasks of this take-home exercise are as follows:\n\nUsing appropriate function of sf and tidyverse, preparing the following geospatial data layer:\n\na study area layer in sf polygon features. It must be at village level and confined to the D01, D02, D04, D06, D07, D08, D32 and D39 counties of Tainan City, Taiwan.\na dengue fever layer within the study area in sf point features. The dengue fever cases should be confined to epidemiology week 31-50, 2023.\na derived dengue fever layer in spacetime s3 class of sfdep. It should contain, among many other useful information,\na data field showing number of dengue fever cases by village and by epidemiology week.\n\nUsing the extracted data, perform global spatial autocorrelation analysis by using sfdep methods.\nUsing the extracted data, perform local spatial autocorrelation analysis by using sfdep methods.\nUsing the extracted data, perform emerging hotspot analysis by using sfdep methods.\nDescribe the spatial patterns revealed by the analysis above."
  },
  {
    "objectID": "Take-home_Ex/Take-home_Ex02/Take-home_Ex02.html#install-packages-and-load-libraries",
    "href": "Take-home_Ex/Take-home_Ex02/Take-home_Ex02.html#install-packages-and-load-libraries",
    "title": "Take-home Exercise 02",
    "section": "",
    "text": "Packages Used:\n\nsf: For importing, managing, and processing geospatial data.\ntidyverse: Collection of packages for data science tasks.\ntmap: For creating thematic maps, such as choropleth and bubble maps.\nsfdep: Creating an sf and tidyverse friendly interface.\nKendall: To perform Mann Kendall test on Gi*\nlubridate: For working with dates and times.\ndplyr: For data manipulation.\n\n\n\nCode\npacman::p_load(sf, tmap, tidyverse, lubridate, dplyr, sfdep, Kendall)"
  },
  {
    "objectID": "Take-home_Ex/Take-home_Ex02/Take-home_Ex02.html#visualizing-the-data",
    "href": "Take-home_Ex/Take-home_Ex02/Take-home_Ex02.html#visualizing-the-data",
    "title": "Take-home Exercise 02",
    "section": "",
    "text": "Code\nplot(st_geometry(tainan_vil), col = \"grey\")\n\n\n\n\n\n\n\nCode\nplot(st_geometry(overall_dengue), col = \"grey\")\nplot(st_geometry(tainan_vil), add = TRUE)\n\n\n\n\n\nFrom here, we can identify the rough distribution of dengue cases in tainan. We notice that majority of the cases are occuring in the middle segments of tainan.\n\n\nCode\ndengue_sf &lt;- st_join(tainan_vil, overall_dengue, join = st_contains)\n\n\n\n\nCode\ndengue_sf &lt;- dengue_sf %&gt;% select(VILLENG.x, TOWNID.x, onset.date, geometry,week) %&gt;% rename(VILLENG = VILLENG.x) %&gt;% rename(TOWNID = TOWNID.x) %&gt;% rename(onset_date = onset.date)\n\n\nwe’ll attempt to group by both villeng and townid first then villeng by itself. This section will be explained later on.\n\n\nCode\ndengue_agg &lt;- st_join(tainan_vil, dengue_sf, join = st_contains) %&gt;% group_by (VILLENG.x, TOWNID.x) %&gt;% summarize(total_cases= n())\n\n\n\n\nCode\ndengue_agg2 &lt;- st_join(tainan_vil, dengue_sf, join = st_contains) %&gt;% group_by (VILLENG.x) %&gt;% summarize(total_cases= n())\n\n\nLet’s save our results for future work.\n\n\nCode\nsaveRDS(dengue_agg, \"data/rds/dengue_agg.rds\")\nsaveRDS(dengue_agg2, \"data/rds/dengue_agg2.rds\")\n\n\n\n\nCode\ndengue_agg &lt;- readRDS(\"data/rds/dengue_agg.rds\")\ndengue_agg2 &lt;- readRDS(\"data/rds/dengue_agg2.rds\")\n\n\n\n\nCode\ntm_shape(dengue_agg2) + \n  tm_polygons(\"total_cases\") + \n  tm_layout(main.title = \"Number of dengue cases by Village\", \n            main.title.position = \"center\",\n            main.title.size = 1.0,\n            legend.height = 0.45,\n            legend.width=0.35,\n            frame = TRUE) + \n  tm_borders(alpha=0.5)+\n  tm_compass(type=\"8star\", size = 2) +\n  tm_scale_bar() +\n  tm_grid(alpha =0.2)\n\n\n\n\n\nGrouping VillEng by itself, we can identify a few spots where dengue cases are more prevalent.\nWe will then plot a bar chart to show the distribution of dengue cases in each village.\n\n\nCode\nggplot(dengue_agg, aes(x = TOWNID.x, y = total_cases)) +\n  geom_bar(stat = \"identity\", position = \"dodge\") +\n  theme_minimal() +\n  theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1)) +\n  labs(title = \"Dengue cases in Tainan\",\n       x = \"Village\",\n       y = \"Number of cases\")\n\n\n\n\n\nFrom the chart above, we can notice that village D07, D08 and D32 have the lowest number of dengue cases. Meanwhile, D06 and D39 has the highest."
  },
  {
    "objectID": "Take-home_Ex/Take-home_Ex02/test.html",
    "href": "Take-home_Ex/Take-home_Ex02/test.html",
    "title": "Take-home Exercise 02",
    "section": "",
    "text": "import pow.kml in data folder\n\n\nCode\npacman::p_load(sf, tmap, tidyverse, lubridate, dplyr)\n\n\n\n\nCode\nkml &lt;- \"data/pow.kml\"\n\n\nread all the layers in pow.kml file\n\n\nCode\nlayer_info &lt;- st_layers(kml)\n\n\n\n\nCode\nlayer_info\n\n\nDriver: KML \nAvailable layers:\n               layer_name geometry_type features fields crs_name\n1                 Mosques      3D Point       54      2   WGS 84\n2 Taoist/Buddhist Temples      3D Point      200      2   WGS 84\n3                Churches      3D Point      202      2   WGS 84\n4           Hindu Temples      3D Point       23      2   WGS 84\n5               Gurdwaras      3D Point        6      2   WGS 84\n6              Synagogues      3D Point        2      2   WGS 84\n7                  Others      3D Point        3      2   WGS 84\n8                  Future      3D Point       94      2   WGS 84\n\n\n\n\nCode\n# Define the layer names based on the provided information\nlayer_names &lt;- c(\"Mosques\", \"Taoist/Buddhist Temples\", \"Churches\", \"Hindu Temples\", \"Gurdwaras\", \"Synagogues\", \"Others\", \"Future\")\n\n# Loop through each layer name\nfor (layer_name in layer_names) {\n  # Read the layer\n  assign(layer_name, st_read(kml, layer = layer_name))\n}\n\n\nReading layer `Mosques' from data source \n  `C:\\EbenezerHo\\IS415-GAA\\Take-home_Ex\\Take-home_Ex02\\data\\pow.kml' \n  using driver `KML'\nSimple feature collection with 54 features and 2 fields\nGeometry type: POINT\nDimension:     XYZ\nBounding box:  xmin: 103.7049 ymin: 1.222984 xmax: 103.9641 ymax: 1.45575\nz_range:       zmin: 0 zmax: 0\nGeodetic CRS:  WGS 84\nReading layer `Taoist/Buddhist Temples' from data source \n  `C:\\EbenezerHo\\IS415-GAA\\Take-home_Ex\\Take-home_Ex02\\data\\pow.kml' \n  using driver `KML'\nSimple feature collection with 200 features and 2 fields\nGeometry type: POINT\nDimension:     XYZ\nBounding box:  xmin: 103.6905 ymin: 1.223303 xmax: 103.9698 ymax: 1.461702\nz_range:       zmin: 0 zmax: 0\nGeodetic CRS:  WGS 84\nReading layer `Churches' from data source \n  `C:\\EbenezerHo\\IS415-GAA\\Take-home_Ex\\Take-home_Ex02\\data\\pow.kml' \n  using driver `KML'\nSimple feature collection with 202 features and 2 fields\nGeometry type: POINT\nDimension:     XYZ\nBounding box:  xmin: 103.6918 ymin: 1.269492 xmax: 103.9752 ymax: 1.454738\nz_range:       zmin: 0 zmax: 0\nGeodetic CRS:  WGS 84\nReading layer `Hindu Temples' from data source \n  `C:\\EbenezerHo\\IS415-GAA\\Take-home_Ex\\Take-home_Ex02\\data\\pow.kml' \n  using driver `KML'\nSimple feature collection with 23 features and 2 fields\nGeometry type: POINT\nDimension:     XYZ\nBounding box:  xmin: 103.7387 ymin: 1.281318 xmax: 103.9871 ymax: 1.441771\nz_range:       zmin: 0 zmax: 0\nGeodetic CRS:  WGS 84\nReading layer `Gurdwaras' from data source \n  `C:\\EbenezerHo\\IS415-GAA\\Take-home_Ex\\Take-home_Ex02\\data\\pow.kml' \n  using driver `KML'\nSimple feature collection with 6 features and 2 fields\nGeometry type: POINT\nDimension:     XYZ\nBounding box:  xmin: 103.8326 ymin: 1.277029 xmax: 103.8606 ymax: 1.417251\nz_range:       zmin: 0 zmax: 0\nGeodetic CRS:  WGS 84\nReading layer `Synagogues' from data source \n  `C:\\EbenezerHo\\IS415-GAA\\Take-home_Ex\\Take-home_Ex02\\data\\pow.kml' \n  using driver `KML'\nSimple feature collection with 2 features and 2 fields\nGeometry type: POINT\nDimension:     XYZ\nBounding box:  xmin: 103.8427 ymin: 1.297302 xmax: 103.8507 ymax: 1.298282\nz_range:       zmin: 0 zmax: 0\nGeodetic CRS:  WGS 84\nReading layer `Others' from data source \n  `C:\\EbenezerHo\\IS415-GAA\\Take-home_Ex\\Take-home_Ex02\\data\\pow.kml' \n  using driver `KML'\nSimple feature collection with 3 features and 2 fields\nGeometry type: POINT\nDimension:     XYZ\nBounding box:  xmin: 103.7741 ymin: 1.289914 xmax: 103.847 ymax: 1.344948\nz_range:       zmin: 0 zmax: 0\nGeodetic CRS:  WGS 84\nReading layer `Future' from data source \n  `C:\\EbenezerHo\\IS415-GAA\\Take-home_Ex\\Take-home_Ex02\\data\\pow.kml' \n  using driver `KML'\nSimple feature collection with 94 features and 2 fields\nGeometry type: POINT\nDimension:     XYZ\nBounding box:  xmin: 103.6866 ymin: 1.300069 xmax: 103.9509 ymax: 1.461493\nz_range:       zmin: 0 zmax: 0\nGeodetic CRS:  WGS 84"
  },
  {
    "objectID": "Take-home_Ex/Take-home_Ex02/Take-home_Ex02.html#global-spatial-autocorrelation-analysis",
    "href": "Take-home_Ex/Take-home_Ex02/Take-home_Ex02.html#global-spatial-autocorrelation-analysis",
    "title": "Take-home Exercise 02",
    "section": "",
    "text": "Code\ndengue_agg_sf &lt;- dengue_agg %&gt;% select(VILLENG.x, total_cases, geometry) %&gt;% rename(VILLENG = VILLENG.x)\n\n\n\n\nCode\ndengue_count &lt;- dengue_agg_sf\n\n\n\n\nCode\ndengue_count\n\n\nSimple feature collection with 258 features and 2 fields\nGeometry type: POLYGON\nDimension:     XY\nBounding box:  xmin: 120.0627 ymin: 22.89401 xmax: 120.2925 ymax: 23.09144\nGeodetic CRS:  TWD97\n# A tibble: 258 × 3\n# Groups:   VILLENG [249]\n   VILLENG     total_cases                                              geometry\n   &lt;chr&gt;             &lt;int&gt;                                         &lt;POLYGON [°]&gt;\n 1 Andong Vil.          67 ((120.2164 23.0404, 120.2154 23.04033, 120.2153 23.0…\n 2 Anfu Vil.           311 ((120.1932 23.0294, 120.1929 23.02938, 120.1926 23.0…\n 3 Anhe Vil.            73 ((120.2258 23.04424, 120.2219 23.03862, 120.2219 23.…\n 4 Ankang Vil.          97 ((120.2269 23.01413, 120.2274 23.01331, 120.2277 23.…\n 5 Anqing Vil.         111 ((120.2113 23.04414, 120.2111 23.04413, 120.2108 23.…\n 6 Anshun Vil.          34 ((120.2136 23.05601, 120.2136 23.05586, 120.2135 23.…\n 7 Anxi Vil.           110 ((120.2123 23.03689, 120.212 23.03685, 120.2121 23.0…\n 8 Bao'an Vil.          19 ((120.2304 22.93544, 120.2301 22.93511, 120.2301 22.…\n 9 Beihua Vil.          82 ((120.2034 23.00257, 120.2032 23.0022, 120.2028 23.0…\n10 Beimen Vil.         249 ((120.2176 23.02032, 120.2173 23.02013, 120.2172 23.…\n# ℹ 248 more rows\n\n\n\n\nCode\nunique(dengue_count$VILLENG)\n\n\n  [1] \"Andong Vil.\"     \"Anfu Vil.\"       \"Anhe Vil.\"       \"Ankang Vil.\"    \n  [5] \"Anqing Vil.\"     \"Anshun Vil.\"     \"Anxi Vil.\"       \"Bao'an Vil.\"    \n  [9] \"Beihua Vil.\"     \"Beimen Vil.\"     \"Beiwan Vil.\"     \"Beixing Vil.\"   \n [13] \"Budai Vil.\"      \"Chang'an Vil.\"   \"Chengbei Vil.\"   \"Chengda Vil.\"   \n [17] \"Chengde Vil.\"    \"Chengdong Vil.\"  \"Chenggong Vil.\"  \"Chenghuang Vil.\"\n [21] \"Chengnan Vil.\"   \"Chengxi Vil.\"    \"Chengzhong Vil.\" \"Chihkan Vil.\"   \n [25] \"Chongcheng Vil.\" \"Chongde Vil.\"    \"Chonghui Vil.\"   \"Chongming Vil.\" \n [29] \"Chongshan Vil.\"  \"Chongwen Vil.\"   \"Chongxin Vil.\"   \"Chongxue Vil.\"  \n [33] \"Da'an Vil.\"      \"Da'en Vil.\"      \"Dacheng Vil.\"    \"Dade Vil.\"      \n [37] \"Dafeng Vil.\"     \"Dafu Vil.\"       \"Dagang Vil.\"     \"Daguang Vil.\"   \n [41] \"Dahe Vil.\"       \"Dajia Vil.\"      \"Daliang Vil.\"    \"Dalin Vil.\"     \n [45] \"Daqiao Vil.\"     \"Datong Vil.\"     \"Dawan Vil.\"      \"Daxing Vil.\"    \n [49] \"Daxue Vil.\"      \"Dazhi Vil.\"      \"Dazhong Vil.\"    \"Degao Vil.\"     \n [53] \"Deguang Vil.\"    \"Diandong Vil.\"   \"Dianxi Vil.\"     \"Ding'an Vil.\"   \n [57] \"Dong'an Vil.\"    \"Dongguang Vil.\"  \"Donghe Vil.\"     \"Dongmen Vil.\"   \n [61] \"Dongming Vil.\"   \"Dongqiao Vil.\"   \"Dongsheng Vil.\"  \"Dongwan Vil.\"   \n [65] \"Dongxing Vil.\"   \"Dongzhi Vil.\"    \"Duiyue Vil.\"     \"Erwang Vil.\"    \n [69] \"Erxing Vil.\"     \"Fahua Vil.\"      \"Fenghuang Vil.\"  \"Fotan Vil.\"     \n [73] \"Fude Vil.\"       \"Fuguo Vil.\"      \"Fuhua Vil.\"      \"Funan Vil.\"     \n [77] \"Fuqian Vil.\"     \"Fuqiang Vil.\"    \"Fuxing Vil.\"     \"Fuyu Vil.\"      \n [81] \"Gongqin Vil.\"    \"Gongwen Vil.\"    \"Gongyuan Vil.\"   \"Guangfu Vil.\"   \n [85] \"Guangming Vil.\"  \"Guangxian Vil.\"  \"Guangzhou Vil.\"  \"Guansheng Vil.\" \n [89] \"Guo'an Vil.\"     \"Guoping Vil.\"    \"Guozhai Vil.\"    \"Haidian Vil.\"   \n [93] \"Haidong Vil.\"    \"Hainan Vil.\"     \"Haixi Vil.\"      \"Heping Vil.\"    \n [97] \"Heshun Vil.\"     \"Hexing Vil.\"     \"Houbi Vil.\"      \"Houjia Vil.\"    \n[101] \"Huade Vil.\"      \"Huaping Vil.\"    \"Huwei Vil.\"      \"Jiading Vil.\"   \n[105] \"Jianguo Vil.\"    \"Jiannan Vil.\"    \"Jianping Vil.\"   \"Jincheng Vil.\"  \n[109] \"Jinhua Vil.\"     \"Junnan Vil.\"     \"Junwang Vil.\"    \"Kainan Vil.\"    \n[113] \"Kaishan Vil.\"    \"Kaiyuan Vil.\"    \"Kunshan Vil.\"    \"Kunshen Vil.\"   \n[117] \"Liren Vil.\"      \"Liuhe Vil.\"      \"Lixiang Vil.\"    \"Lixing Vil.\"    \n[121] \"Longpu Vil.\"     \"Longshan Vil.\"   \"Longtan Vil.\"    \"Lu'er Vil.\"     \n[125] \"Ludong Vil.\"     \"Meihua Vil.\"     \"Mingde Vil.\"     \"Mingliang Vil.\" \n[129] \"Mingxing Vil.\"   \"Nanchang Vil.\"   \"Nandou Vil.\"     \"Nanhua Vil.\"    \n[133] \"Nanmei Vil.\"     \"Nanmen Vil.\"     \"Nansheng Vil.\"   \"Nanwan Vil.\"    \n[137] \"Nanxing Vil.\"    \"Niaosong Vil.\"   \"Ping'an Vil.\"    \"Pingtong Vil.\"  \n[141] \"Puyuan Vil.\"     \"Qiancao Vil.\"    \"Qingcao Vil.\"    \"Quannan Vil.\"   \n[145] \"Ren'ai Vil.\"     \"Rende Vil.\"      \"Renhe Vil.\"      \"Renyi Vil.\"     \n[149] \"Sanhe Vil.\"      \"Sanmin Vil.\"     \"Shalun Vil.\"     \"Shangding Vil.\" \n[153] \"Shanglun Vil.\"   \"Shenggong Vil.\"  \"Shengli Vil.\"    \"Shenzhou Vil.\"  \n[157] \"Shuang'an Vil.\"  \"Sicao Vil.\"      \"Song'an Vil.\"    \"Taizi Vil.\"     \n[161] \"Tianfei Vil.\"    \"Tianliao Vil.\"   \"Tong'an Vil.\"    \"Tuku Vil.\"      \n[165] \"Wangcheng Vil.\"  \"Wangliao Vil.\"   \"Wangxing Vil.\"   \"Weiguo Vil.\"    \n[169] \"Weixia Vil.\"     \"Wencheng Vil.\"   \"Wenhua Vil.\"     \"Wennan Vil.\"    \n[173] \"Wenping Vil.\"    \"Wensheng Vil.\"   \"Wenxian Vil.\"    \"Wenyuan Vil.\"   \n[177] \"Wutiaogang Vil.\" \"Wuwang Vil.\"     \"Wuzhu Vil.\"      \"Xianbei Vil.\"   \n[181] \"Xiangong Vil.\"   \"Xiaobei Vil.\"    \"Xiaodong Vil.\"   \"Xiaoximen Vil.\" \n[185] \"Xibei Vil.\"      \"Xiding Vil.\"     \"Xidong Vil.\"     \"Xihe Vil.\"      \n[189] \"Xihu Vil.\"       \"Xinan Vil.\"      \"Xinchang Vil.\"   \"Xindong Vil.\"   \n[193] \"Xingfu Vil.\"     \"Xingnong Vil.\"   \"Xinsheng Vil.\"   \"Xinshu Vil.\"    \n[197] \"Xinshun Vil.\"    \"Xintian Vil.\"    \"Xinxing Vil.\"    \"Xiqi Vil.\"      \n[201] \"Xiqiao Vil.\"     \"Xishi Vil.\"      \"Xiwan Vil.\"      \"Xixian Vil.\"    \n[205] \"Xixin Vil.\"      \"Xuedong Vil.\"    \"Yancheng Vil.\"   \"Yantian  Vil.\"  \n[209] \"Yanxing  Vil.\"   \"Yanxing Vil.\"    \"Yanzhou  Vil.\"   \"Yaowang Vil.\"   \n[213] \"Yijia Vil.\"      \"Yiping Vil.\"     \"Yizai Vil.\"      \"Yonghua Vil.\"   \n[217] \"Yongkang Vil.\"   \"Yongming Vil.\"   \"Yongning Vil.\"   \"Yongxiang Vil.\" \n[221] \"Yuanbao Vil.\"    \"Yuandian Vil.\"   \"Yuandong Vil.\"   \"Yuanmei Vil.\"   \n[225] \"Yuanxi Vil.\"     \"Yuanzhong Vil.\"  \"Yuguang Vil.\"    \"Yunong Vil.\"    \n[229] \"Yuping Vil.\"     \"Yusheng Vil.\"    \"Zaixing Vil.\"    \"Zhangnan Vil.\"  \n[233] \"Zhangsheng Vil.\" \"Zhangxing Vil.\"  \"Zhengjue Vil.\"   \"Zhengqiang Vil.\"\n[237] \"Zhenxing Vil.\"   \"Zhonghua Vil.\"   \"Zhonglou Vil.\"   \"Zhongxi Vil.\"   \n[241] \"Zhongxiao Vil.\"  \"Zhongxing Vil.\"  \"Zhongzhou Vil.\"  \"Zhoubei Vil.\"   \n[245] \"Zhounan Vil.\"    \"Zhuangjing Vil.\" \"Zhuxi Vil.\"      \"Ziqiang Vil.\"   \n[249] \"Zongtou Vil.\"   \n\n\nWhen viewing the unique values of villeng, we notice that there are duplicates in the dataset. We use the function cat() to print the number of unique villages, total features, and any duplicate values.\n\n\nCode\n# Count the number of unique values in the VILLENG column\nnum_unique_villages &lt;- length(unique(dengue_count$VILLENG))\n\n# Count the total number of features (polygons) in the dataset\ntotal_features &lt;- nrow(dengue_count)\n\n# Check for duplicate values in the VILLENG column\nduplicate_villages &lt;- dengue_count %&gt;%\n  group_by(VILLENG) %&gt;%\n  filter(n() &gt; 1) %&gt;%\n  distinct()\n\n# Print the number of unique villages, total features, and any duplicate values\ncat(\"Number of unique villages:\", num_unique_villages, \"\\n\")\n\n\nNumber of unique villages: 249 \n\n\nCode\ncat(\"Total features (polygons):\", total_features, \"\\n\")\n\n\nTotal features (polygons): 258 \n\n\nCode\ncat(\"Duplicate villages:\", nrow(duplicate_villages), \"\\n\")\n\n\nDuplicate villages: 17 \n\n\n\n\nCode\nduplicate_villages \n\n\nSimple feature collection with 17 features and 2 fields\nGeometry type: POLYGON\nDimension:     XY\nBounding box:  xmin: 120.1705 ymin: 22.9264 xmax: 120.2458 ymax: 23.07585\nGeodetic CRS:  TWD97\n# A tibble: 17 × 3\n# Groups:   VILLENG [8]\n   VILLENG        total_cases                                           geometry\n   &lt;chr&gt;                &lt;int&gt;                                      &lt;POLYGON [°]&gt;\n 1 Chenggong Vil.          84 ((120.2094 23.02295, 120.2088 23.02294, 120.2081 …\n 2 Chenggong Vil.          62 ((120.2247 22.96165, 120.2247 22.96165, 120.2246 …\n 3 Chenggong Vil.          32 ((120.2388 23.00454, 120.2388 23.00452, 120.2385 …\n 4 Fuxing Vil.            139 ((120.2373 22.98504, 120.237 22.98501, 120.2361 2…\n 5 Fuxing Vil.             61 ((120.2433 23.00544, 120.2432 23.00544, 120.2427 …\n 6 Ren'ai Vil.             78 ((120.2248 23.0057, 120.2243 23.00504, 120.2242 2…\n 7 Ren'ai Vil.             17 ((120.2214 22.96205, 120.2213 22.96203, 120.2211 …\n 8 Renhe Vil.             103 ((120.2361 22.96897, 120.2367 22.969, 120.2371 22…\n 9 Renhe Vil.               9 ((120.2233 22.96183, 120.2233 22.96183, 120.2233 …\n10 Wennan Vil.             81 ((120.1866 22.98634, 120.1865 22.98631, 120.1862 …\n11 Wennan Vil.             18 ((120.2226 23.07585, 120.2225 23.07582, 120.2225 …\n12 Xibei Vil.              17 ((120.1706 22.95257, 120.1706 22.95249, 120.1706 …\n13 Xibei Vil.              91 ((120.214 23.02902, 120.2135 23.02874, 120.2132 2…\n14 Xidong Vil.             21 ((120.2015 22.95139, 120.1987 22.95137, 120.1983 …\n15 Xidong Vil.            167 ((120.1987 23.029, 120.1987 23.02896, 120.1988 23…\n16 Zhongxing Vil.          26 ((120.2262 23.00712, 120.2261 23.006, 120.2258 23…\n17 Zhongxing Vil.          51 ((120.2417 23.00886, 120.2416 23.00883, 120.2416 …\n\n\nFrom there, we realise that dengue_agg itself has duplicates. We then will use dengue_agg2 to perform the global spatial autocorrelation analysis. We’ll keep dengue_agg for future use.\n\n\n\n\nCode\nwm_q &lt;- dengue_agg2 %&gt;%\n  mutate(\n    nb = st_contiguity(geometry, queen = TRUE),\n    wt = st_weights(nb, style = \"W\", allow_zero = TRUE)\n  )\n\n\n\n\nCode\nwm_q\n\n\nSimple feature collection with 249 features and 4 fields\nGeometry type: GEOMETRY\nDimension:     XY\nBounding box:  xmin: 120.0627 ymin: 22.89401 xmax: 120.2925 ymax: 23.09144\nGeodetic CRS:  TWD97\n# A tibble: 249 × 5\n   VILLENG.x   total_cases                                  geometry nb    wt   \n * &lt;chr&gt;             &lt;int&gt;                             &lt;POLYGON [°]&gt; &lt;nb&gt;  &lt;lis&gt;\n 1 Andong Vil.          67 ((120.2164 23.0404, 120.2154 23.04033, 1… &lt;int&gt; &lt;dbl&gt;\n 2 Anfu Vil.           311 ((120.1932 23.0294, 120.1929 23.02938, 1… &lt;int&gt; &lt;dbl&gt;\n 3 Anhe Vil.            73 ((120.2258 23.04424, 120.2219 23.03862, … &lt;int&gt; &lt;dbl&gt;\n 4 Ankang Vil.          97 ((120.2269 23.01413, 120.2274 23.01331, … &lt;int&gt; &lt;dbl&gt;\n 5 Anqing Vil.         111 ((120.2113 23.04414, 120.2111 23.04413, … &lt;int&gt; &lt;dbl&gt;\n 6 Anshun Vil.          34 ((120.2136 23.05601, 120.2136 23.05586, … &lt;int&gt; &lt;dbl&gt;\n 7 Anxi Vil.           110 ((120.2123 23.03689, 120.212 23.03685, 1… &lt;int&gt; &lt;dbl&gt;\n 8 Bao'an Vil.          19 ((120.2304 22.93544, 120.2301 22.93511, … &lt;int&gt; &lt;dbl&gt;\n 9 Beihua Vil.          82 ((120.2034 23.00257, 120.2032 23.0022, 1… &lt;int&gt; &lt;dbl&gt;\n10 Beimen Vil.         249 ((120.2176 23.02032, 120.2173 23.02013, … &lt;int&gt; &lt;dbl&gt;\n# ℹ 239 more rows\n\n\n\n\n\n\n\nCode\nglobal_moran_test(wm_q$total_cases,\n                  wm_q$nb,\n                  wm_q$wt)\n\n\n\n    Moran I test under randomisation\n\ndata:  x  \nweights: listw    \n\nMoran I statistic standard deviate = 12.062, p-value &lt; 2.2e-16\nalternative hypothesis: greater\nsample estimates:\nMoran I statistic       Expectation          Variance \n      0.440989474      -0.004032258       0.001361217 \n\n\n\n\n\nIn R, the set.seed() function is used to set the seed for random number generation. It ensures reproducibility in simulations or any other random number-dependent operations by initializing the random number generator to a specified starting point.\n\n\nCode\nset.seed(1234)\n\n\n\n\nCode\nglobal_moran_perm(wm_q$total_cases,\n                  wm_q$nb,\n                  wm_q$wt,\n                  nsim=49)\n\n\n\n    Monte-Carlo simulation of Moran I\n\ndata:  x \nweights: listw  \nnumber of simulations + 1: 50 \n\nstatistic = 0.44099, observed rank = 50, p-value &lt; 2.2e-16\nalternative hypothesis: two.sided\n\n\nSince our permutation statistics return 0.44, it signifies that there are forms of clustering present in the dataset."
  },
  {
    "objectID": "Take-home_Ex/Take-home_Ex02/Take-home_Ex02.html#local-spatial-autocorrelation-analysis",
    "href": "Take-home_Ex/Take-home_Ex02/Take-home_Ex02.html#local-spatial-autocorrelation-analysis",
    "title": "Take-home Exercise 02",
    "section": "",
    "text": "computing lisa\n\n\nCode\nlisa &lt;- wm_q %&gt;% mutate(local_moran = local_moran(\n  total_cases, nb, wt, nsim = 79),\n  .before = 1) %&gt;%\n  unnest(local_moran)\n\n\n\n\n\n\nCode\ntm_shape(lisa) + \n  tm_fill(\"ii\") + \n  tm_borders(alpha=0.5) +\n  tm_layout(main.title = \"Local Moran's I of Total Cases\", \n            main.title.size = 0.8)\n\n\n\n\n\n\n\n\n\n\nCode\ntm_shape(lisa) +\n  tm_fill(\"p_ii_sim\",\n          breaks = c(0, 0.001, 0.01, 0.05, 1),\n          labels = c(\"0.001\", \"0.01\", \"0.05\", \"Not significant\")) +\n  tm_borders(alpha = 0.5) +\n  tm_layout (main.title = \"p-value of local Moran's I\",\n             main.title.size = 0.8)\n\n\n\n\n\n\n\n\n\n\nCode\nlocal_mapi &lt;- tm_shape(lisa) + \n  tm_fill(\"ii\") + \n  tm_borders(alpha=0.5) +\n  tm_layout(main.title = \"Local Moran's I of Total Cases\", \n            main.title.size = 0.8)\n\nlocal_mapp &lt;- tm_shape(lisa) +\n  tm_fill(\"p_ii_sim\",\n          breaks = c(0, 0.001, 0.01, 0.05, 1),\n          labels = c(\"0.001\", \"0.01\", \"0.05\", \"Not significant\")) +\n  tm_borders(alpha = 0.5) +\n  tm_layout (main.title = \"p-value of local Moran's I\",\n             main.title.size = 0.8)\n\ntmap_arrange(local_mapi, local_mapp, ncol = 2)\n\n\n\n\n\nFrom the visualizations above, we can see that there are clusters and outliers in the dataset. We can see that there are a few areas where the p-value is less than 0.05, indicating that the clusters are statistically significant. We’ll then proceed to filter out the significant clusters and outliers.\n\n\n\n\nCode\nlisa_sig &lt;- lisa %&gt;% filter(p_ii &lt;0.05)\n\ntm_shape(lisa) + \n  tm_polygons() +\n  tm_borders(alpha = 0.5) +\n  tm_shape(lisa_sig) +\n  tm_fill(\"mean\") +\n  tm_borders(alpha=0.4)\n\n\n\n\n\nOn the exterior of tainan, we notice that there are multiple Low-Low which indicates that the number of dengue cases are relatively low comapred to their neighbours. Meanwhile, in the middle of tainan, we notice that there are multiple High-High which indicates that the number of dengue cases are relatively high.\nFor Low-High regions, we notice that there are a few areas where the number of dengue cases are relatively low compared to their neighbours. However, they are surrounded by areas where the number of dengue cases are relatively high. This could indicate that the low number of dengue cases are outliers.\nSince there are still signs of clustering, we shall proceed to perform Emerging Hotspot Analysis (EHSA) to determine the location of the clusters and where the hotspots are clusters or outliers."
  },
  {
    "objectID": "Take-home_Ex/Take-home_Ex02/Take-home_Ex02.html#emerging-hotspot-analysis-ehsa",
    "href": "Take-home_Ex/Take-home_Ex02/Take-home_Ex02.html#emerging-hotspot-analysis-ehsa",
    "title": "Take-home Exercise 02",
    "section": "",
    "text": "We’ll reload the dengue dataset for us to get a better look at the available data.\nFor EHSA, we will be using VILLCODE as a unique identifier as it is the most granular level of the dataset. However, since dengue dataset does not offer VILLCODE, we will use TOWNNAME and VILLNAME as a foreign key to join the tables.\n\n\n\n\nCode\ndengue &lt;- read_csv(\"data/aspatial/Dengue_Daily.csv\")\n\n\n\n\nCode\nglimpse(dengue)\n\n\n\n\nCode\nfil_dengue &lt;- dengue %&gt;% select(發病日, 最小統計區中心點X, 最小統計區中心點Y, 居住縣市,居住村里, 居住鄉鎮) %&gt;% \n  rename(onset_date = 發病日, x_coordinate = 最小統計區中心點X, y_coordinate = 最小統計區中心點Y, COUNTYNAME = 居住縣市, VILLNAME = 居住村里, TOWNNAME = 居住鄉鎮)\n\n\nWe need to get the epi weeks for dengues cases. We’ll use lubridate::epiweek() to get the epi weeks. We use epi week to start on sunday instead of isoweek which starts on monday\n\n\nCode\nweek_dengue &lt;- fil_dengue %&gt;%\n  mutate(week = lubridate::epiweek(onset_date))\n\n\nWe group by week, townname and villname to get the total cases for each week, town and village.\n\n\nCode\ncases_dengue &lt;- week_dengue %&gt;% group_by(week, TOWNNAME, VILLNAME) %&gt;% summarize(total_cases = n())\n\n\n\n\nCode\nmerge_tnd &lt;- left_join(tainan_vil, cases_dengue, by = c(\"TOWNNAME\", \"VILLNAME\"))\n\n\n\n\nCode\nmerge_tnd &lt;- merge_tnd %&gt;% select(VILLCODE, week, total_cases)\n\n\nWe’ll have to form a dataframe with all the possible combinations of village codes and weeks. We’ll use expand.grid() to create the dataframe.From there, replace missing cases with 0. This will give us a full grid to form our spacetime cube.\n\n\nCode\nunique_villcodes &lt;- unique(tainan_vil$VILLCODE)\nunique_weeks &lt;- rep(31:50)\n\nall_combinations &lt;- expand.grid(VILLCODE = unique_villcodes, week = unique_weeks)\n\n# Convert VILLCODE to character type (if it's not already)\nall_combinations$VILLCODE &lt;- as.character(all_combinations$VILLCODE)\n\n# Merge with the original dataframe\ndf_merged &lt;- merge(all_combinations, merge_tnd, by = c(\"VILLCODE\", \"week\"), all.x = TRUE)\n\n# Replace missing total_cases with 0\ndf_merged$total_cases[is.na(df_merged$total_cases)] &lt;- 0\n\n\nSave df_merged into rds\n\n\nCode\nsaveRDS(df_merged, \"data/rds/df_merged.rds\")\n\n\n\n\nCode\ndf_merged &lt;- readRDS(\"data/rds/df_merged.rds\")\n\n\nSince spacetime cube requires the data to be in tibble format, we’ll convert df_merged into tibble format. We will use as_tibble() from the tibble package to convert the dataframe into tibble format.\n\n\nCode\ndf_merged_tb &lt;- as_tibble(df_merged)\n\n\n\n\n\n\n\nCode\ndengue_st &lt;- spacetime(df_merged_tb , tainan_vil,\n         .loc_col = \"VILLCODE\",.time_col = \"week\")\n\n\n\n\nCode\nis_spacetime_cube(dengue_st)\n\n\n[1] TRUE\n\n\nAmazing! We managed to create a spacetime cube. We’ll now proceed to perform emerging hotspot analysis on the spacetime cube.\n\n\n\n\n\nCode\ndg_nb &lt;- dengue_st %&gt;%\n  activate(\"geometry\") %&gt;%\n  mutate(nb = include_self(st_contiguity(geometry)),\n         wt = st_inverse_distance(nb, geometry,\n                                  scale = 1,\n                                  alpha = 1),\n         .before = 1) %&gt;%\n  set_nbs(\"nb\") %&gt;%\n  set_wts(\"wt\")\n\n\n\n\n\n\n\nCode\ngi_stars &lt;- dg_nb %&gt;% \n  group_by(week) %&gt;% \n  mutate(gi_star = local_gstar_perm(\n    total_cases, nb, wt)) %&gt;% \n  tidyr::unnest(gi_star)\n\n\nSince we used Vilcode as the location, we are not able to understand which villages corresponds to which gi*. Therefore, let’s simply plot the min and max values to get a better understanding of the data.\nStore gi_stars in rds\n\n\nCode\nsaveRDS(gi_stars, \"data/rds/gi_stars.rds\")\n\n\n\n\nCode\ngi_stars &lt;- readRDS(\"data/rds/gi_stars.rds\")\n\n\n\n\nCode\nmin_gi &lt;- min(gi_stars$gi_star)\nmax_gi &lt;- max(gi_stars$gi_star)\n\n\nFind the villcode where the gi_star is equals to min_gi, max_gi\n\n\nCode\nmin_gi_vil &lt;- gi_stars %&gt;% \n  filter(gi_star == min_gi) %&gt;% \n  select(VILLCODE)\n\nmax_gi_vil &lt;- gi_stars %&gt;%\n  filter(gi_star == max_gi) %&gt;%\n  select(VILLCODE)\n\nmin_gi_vil\n\n\n# A tibble: 1 × 2\n# Groups:   week [1]\n   week VILLCODE   \n  &lt;int&gt; &lt;chr&gt;      \n1    41 67000350034\n\n\nCode\nmax_gi_vil\n\n\n# A tibble: 1 × 2\n# Groups:   week [1]\n   week VILLCODE   \n  &lt;int&gt; &lt;chr&gt;      \n1    34 67000350040\n\n\n\n\n\n\n\nCode\nmkt_min &lt;- gi_stars %&gt;% \n  ungroup() %&gt;% \n  filter(VILLCODE == min_gi_vil$VILLCODE) |&gt; \n  select(VILLCODE, week, gi_star)\n\n\n\n\nCode\nmkt_max &lt;- gi_stars %&gt;% \n  ungroup() %&gt;% \n  filter(VILLCODE == max_gi_vil$VILLCODE) |&gt; \n  select(VILLCODE, week, gi_star)\n\n\n\n\nCode\nggplot(data = mkt_min, \n       aes(x = week, \n           y = gi_star)) +\n  geom_line() +\n  theme_light()\n\n\n\n\n\n\n\nCode\nggplot(data = mkt_max, \n       aes(x = week, \n           y = gi_star)) +\n  geom_line() +\n  theme_light()\n\n\n\n\n\nLet’s plot them together to gauge how the min and max values defer in tainan.\n\n\nCode\nggplot() +\n  geom_line(data = mkt_min, mapping = aes(x = week, y = gi_star, color = \"Min\")) +\n  geom_line(data = mkt_max, mapping = aes(x = week, y = gi_star, color = \"Max\")) + \n  labs(x = \"Week\", y = \"GiStar Value\", \n       title = \"GiStar Min and Max Values\",\n       color = \"Villages\")\n\n\n\n\n\nWe can see that the min and max values of gi* are quite different. The min value of gi* is relatively stable throughout the weeks while the max value of gi* fluctuates quite a bit. Eventually, they both converge back close to 0.\n\n\n\nWe can replicate the above calculation for the entire dataset using group_by of dplyr package.\n\n\nCode\nehsa &lt;- gi_stars %&gt;%\n  group_by(VILLCODE) %&gt;%\n  summarise(mk = list(\n    unclass(\n      Kendall::MannKendall(gi_star)))) %&gt;%\n  tidyr::unnest_wider(mk)\n\n\nWe arrange it to show significant emerging hot/cold spots.\n\n\nCode\nemerging &lt;- ehsa %&gt;% \n  arrange(sl, abs(tau)) %&gt;% \n  slice(1:5)\n\n\nLastly, we will perform EHSA analysis by using emerging_hotspot_analysis() of sfdep package. It takes a spacetime object x (i.e. GDPPC_st), and the quoted name of the variable of interest (i.e. GDPPC) for .var argument. The k argument is used to specify the number of time lags which is set to 1 by default. Lastly, nsim map numbers of simulation to be performed.\n\n\nCode\nehsa &lt;- emerging_hotspot_analysis(\n  x = dengue_st, \n  .var = \"total_cases\", \n  k = 1, \n  nsim = 99\n)\n\n\n\n\nCode\nsaveRDS(ehsa, \"data/rds/ehsa.rds\")\n\n\n\n\nCode\nehsa &lt;- readRDS(\"data/rds/ehsa.rds\")\n\n\n\n\n\n\n\nCode\nggplot(data = ehsa,\n       aes(x = classification)) +\n  geom_bar()\n\n\n\n\n\n\n\n\n\n\nCode\ntn_ehsa &lt;- tainan_vil %&gt;%\n  left_join(ehsa,\n            by = join_by(VILLCODE == location))\n\n\nTmap functions will be used to plot a categorical choropleth map by using the code chunk below.\n\n\nCode\nehsa_sig &lt;- tn_ehsa  %&gt;%\n  filter(p_value &lt; 0.05)\ntmap_mode(\"plot\")\ntm_shape(tn_ehsa) +\n  tm_polygons() +\n  tm_borders(alpha = 0.5) +\ntm_shape(ehsa_sig) +\n  tm_fill(\"classification\") + \n  tm_borders(alpha = 0.4)\n\n\n\n\n\nFrom the visualisation above, we can see that there are a few areas where the p-value is less than 0.05, indicating that the clusters are statistically significant.\nWe’ll reference the table below to understand what the classifications mean. Source: https://pro.arcgis.com/en/pro-app/2.8/tool-reference/space-time-pattern-mining/learnmoreemerging.htm\n\n\n\n\n\n\n\nPattern Name\nDefinition\n\n\n\n\nConsecutive Cold Spot\nA location with a single uninterrupted run of statistically significant cold spot bins in the final time-step intervals. The location has never been a statistically significant cold spot prior to the final cold spot run and less than ninety percent of all bins are statistically significant cold spots.\n\n\nConsecutive Hot Spot\nA location with a single uninterrupted run of statistically significant hot spot bins in the final time-step intervals. The location has never been a statistically significant hot spot prior to the final hot spot run and less than ninety percent of all bins are statistically significant hot spots.\n\n\nNew Cold Spot\nA location that is a statistically significant cold spot for the final time step and has never been a statistically significant cold spot before.\n\n\nOscillating Cold Spot\nA statistically significant cold spot for the final time-step interval that has a history of also being a statistically significant hot spot during a prior time step. Less than ninety percent of the time-step intervals have been statistically significant cold spots.\n\n\nOscillating Hot Spot\nA statistically significant hot spot for the final time-step interval that has a history of also being a statistically significant cold spot during a prior time step. Less than ninety percent of the time-step intervals have been statistically significant hot spots.\n\n\nSporadic Cold Spot\nA location that is an on-again then off-again cold spot. Less than ninety percent of the time-step intervals have been statistically significant cold spots and none of the time-step intervals have been statistically significant hot spots.\n\n\nSporadic Hot Spot\nA location that is an on-again then off-again hot spot. Less than ninety percent of the time-step intervals have been statistically significant hot spots and none of the time-step intervals have been statistically significant cold spots.\n\n\nNo Pattern Detected\nDoes not fall into any of the hot or cold spot patterns defined below."
  },
  {
    "objectID": "Take-home_Ex/Take-home_Ex02/Take-home_Ex02.html#conclusion",
    "href": "Take-home_Ex/Take-home_Ex02/Take-home_Ex02.html#conclusion",
    "title": "Take-home Exercise 02",
    "section": "",
    "text": "In conclusion, we have successfully performed global spatial autocorrelation analysis, local spatial autocorrelation analysis and emerging hotspot analysis on the distribution of dengue fever in Tainan City, Taiwan. We have discovered that the distribution of dengue fever outbreak at Tainan City, Taiwan are spatially dependent. We have also detected clusters and outliers, and the emerging hot spot/cold spot areas.\nFrom the EHSA analysis, we have identified the following significant emerging hot/cold spots: Consecutive Cold Spot, Consecutive Hot Spot, New Cold Spot, Oscillating Cold Spot, Oscillating Hot Spot, Sporadic Cold Spot, Sporadic Hot Spot and No Pattern Detected. Majority of the areas are oscillating hot spots and sporadic hot spots. These suggests that the dengue fever outbreak in Tainan City, Taiwan are not consistent and are sporadic in nature. For consecutive hotspots,\nThe results of the analysis can be used to inform public health officials and policy makers to allocate resources and implement targeted interventions to control the spread of dengue fever in Tainan City, Taiwan."
  },
  {
    "objectID": "Take-home_Ex/Take-home_Ex02/Take-home_Ex02.html#learning-points",
    "href": "Take-home_Ex/Take-home_Ex02/Take-home_Ex02.html#learning-points",
    "title": "Take-home Exercise 02",
    "section": "",
    "text": "After Take-home exercise 2, I further realised the importance of data wrangling and data cleaning. It is important to ensure that the data is clean and in the right format before performing any analysis. Using a function is simple, but preparing a dataset for the function to use is not. I need to be more careful in the future to ensure that the data is in the right format before performing any analysis.\nOverall, with the QnAs from Piazza, I managed to work ma way through the exercise and understand the concepts of spatial autocorrelation and emerging hotspot analysis. I am looking forward to the next exercise to further improve my skills in spatial analysis."
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex07/Hands-on_Ex07.html",
    "href": "Hands-on_Ex/Hands-on_Ex07/Hands-on_Ex07.html",
    "title": "Hands-on Exercise 7 - Geographical Segmentation with Spatially Constrained Clustering Techniques",
    "section": "",
    "text": "Code\npacman::p_load( spdep, tmap, sf, ClustGeo, \n               ggpubr, cluster, factoextra, NbClust,\n               heatmaply, corrplot, psych, tidyverse, GGally)\n\n\n\n\n\n\n\nCode\nshan_sf &lt;- st_read(dsn = \"data/geospatial\", \n                   layer = \"myanmar_township_boundaries\") %&gt;%\n  filter(ST %in% c(\"Shan (East)\", \"Shan (North)\", \"Shan (South)\")) %&gt;%\n  select(c(2:7))\n\n\nReading layer `myanmar_township_boundaries' from data source \n  `C:\\EbenezerHo\\IS415-GAA\\Hands-on_Ex\\Hands-on_Ex07\\data\\geospatial' \n  using driver `ESRI Shapefile'\nSimple feature collection with 330 features and 14 fields\nGeometry type: MULTIPOLYGON\nDimension:     XY\nBounding box:  xmin: 92.17275 ymin: 9.671252 xmax: 101.1699 ymax: 28.54554\nGeodetic CRS:  WGS 84\n\n\n\n\nCode\nshan_sf\n\n\nSimple feature collection with 55 features and 6 fields\nGeometry type: MULTIPOLYGON\nDimension:     XY\nBounding box:  xmin: 96.15107 ymin: 19.29932 xmax: 101.1699 ymax: 24.15907\nGeodetic CRS:  WGS 84\nFirst 10 features:\n             ST ST_PCODE       DT   DT_PCODE        TS  TS_PCODE\n1  Shan (North)   MMR015  Mongmit MMR015D008   Mongmit MMR015017\n2  Shan (South)   MMR014 Taunggyi MMR014D001   Pindaya MMR014006\n3  Shan (South)   MMR014 Taunggyi MMR014D001   Ywangan MMR014007\n4  Shan (South)   MMR014 Taunggyi MMR014D001  Pinlaung MMR014009\n5  Shan (North)   MMR015  Mongmit MMR015D008    Mabein MMR015018\n6  Shan (South)   MMR014 Taunggyi MMR014D001     Kalaw MMR014005\n7  Shan (South)   MMR014 Taunggyi MMR014D001     Pekon MMR014010\n8  Shan (South)   MMR014 Taunggyi MMR014D001  Lawksawk MMR014008\n9  Shan (North)   MMR015  Kyaukme MMR015D003 Nawnghkio MMR015013\n10 Shan (North)   MMR015  Kyaukme MMR015D003   Kyaukme MMR015012\n                         geometry\n1  MULTIPOLYGON (((96.96001 23...\n2  MULTIPOLYGON (((96.7731 21....\n3  MULTIPOLYGON (((96.78483 21...\n4  MULTIPOLYGON (((96.49518 20...\n5  MULTIPOLYGON (((96.66306 24...\n6  MULTIPOLYGON (((96.49518 20...\n7  MULTIPOLYGON (((97.14738 19...\n8  MULTIPOLYGON (((96.94981 22...\n9  MULTIPOLYGON (((96.75648 22...\n10 MULTIPOLYGON (((96.95498 22...\n\n\n\n\nCode\nict &lt;- read_csv (\"data/aspatial/Shan-ICT.csv\")\n\n\n\n\nCode\nsummary(ict)\n\n\n District Pcode     District Name      Township Pcode     Township Name     \n Length:55          Length:55          Length:55          Length:55         \n Class :character   Class :character   Class :character   Class :character  \n Mode  :character   Mode  :character   Mode  :character   Mode  :character  \n                                                                            \n                                                                            \n                                                                            \n Total households     Radio         Television    Land line phone \n Min.   : 3318    Min.   :  115   Min.   :  728   Min.   :  20.0  \n 1st Qu.: 8711    1st Qu.: 1260   1st Qu.: 3744   1st Qu.: 266.5  \n Median :13685    Median : 2497   Median : 6117   Median : 695.0  \n Mean   :18369    Mean   : 4487   Mean   :10183   Mean   : 929.9  \n 3rd Qu.:23471    3rd Qu.: 6192   3rd Qu.:13906   3rd Qu.:1082.5  \n Max.   :82604    Max.   :30176   Max.   :62388   Max.   :6736.0  \n  Mobile phone      Computer      Internet at home\n Min.   :  150   Min.   :  20.0   Min.   :   8.0  \n 1st Qu.: 2037   1st Qu.: 121.0   1st Qu.:  88.0  \n Median : 3559   Median : 244.0   Median : 316.0  \n Mean   : 6470   Mean   : 575.5   Mean   : 760.2  \n 3rd Qu.: 7177   3rd Qu.: 507.0   3rd Qu.: 630.5  \n Max.   :48461   Max.   :6705.0   Max.   :9746.0  \n\n\n\n\nCode\nict_derived &lt;- ict %&gt;%\n  mutate(`RADIO_PR` = `Radio`/`Total households`*1000) %&gt;%\n  mutate(`TV_PR` = `Television`/`Total households`*1000) %&gt;%\n  mutate(`LLPHONE_PR` = `Land line phone`/`Total households`*1000) %&gt;%\n  mutate(`MPHONE_PR` = `Mobile phone`/`Total households`*1000) %&gt;%\n  mutate(`COMPUTER_PR` = `Computer`/`Total households`*1000) %&gt;%\n  mutate(`INTERNET_PR` = `Internet at home`/`Total households`*1000) %&gt;%\n  rename(`DT_PCODE` =`District Pcode`,`DT`=`District Name`,\n         `TS_PCODE`=`Township Pcode`, `TS`=`Township Name`,\n         `TT_HOUSEHOLDS`=`Total households`,\n         `RADIO`=`Radio`, `TV`=`Television`, \n         `LLPHONE`=`Land line phone`, `MPHONE`=`Mobile phone`,\n         `COMPUTER`=`Computer`, `INTERNET`=`Internet at home`) \n\n\n\n\nCode\nsummary(ict_derived)\n\n\n   DT_PCODE              DT              TS_PCODE              TS           \n Length:55          Length:55          Length:55          Length:55         \n Class :character   Class :character   Class :character   Class :character  \n Mode  :character   Mode  :character   Mode  :character   Mode  :character  \n                                                                            \n                                                                            \n                                                                            \n TT_HOUSEHOLDS       RADIO             TV           LLPHONE      \n Min.   : 3318   Min.   :  115   Min.   :  728   Min.   :  20.0  \n 1st Qu.: 8711   1st Qu.: 1260   1st Qu.: 3744   1st Qu.: 266.5  \n Median :13685   Median : 2497   Median : 6117   Median : 695.0  \n Mean   :18369   Mean   : 4487   Mean   :10183   Mean   : 929.9  \n 3rd Qu.:23471   3rd Qu.: 6192   3rd Qu.:13906   3rd Qu.:1082.5  \n Max.   :82604   Max.   :30176   Max.   :62388   Max.   :6736.0  \n     MPHONE         COMPUTER         INTERNET         RADIO_PR     \n Min.   :  150   Min.   :  20.0   Min.   :   8.0   Min.   : 21.05  \n 1st Qu.: 2037   1st Qu.: 121.0   1st Qu.:  88.0   1st Qu.:138.95  \n Median : 3559   Median : 244.0   Median : 316.0   Median :210.95  \n Mean   : 6470   Mean   : 575.5   Mean   : 760.2   Mean   :215.68  \n 3rd Qu.: 7177   3rd Qu.: 507.0   3rd Qu.: 630.5   3rd Qu.:268.07  \n Max.   :48461   Max.   :6705.0   Max.   :9746.0   Max.   :484.52  \n     TV_PR         LLPHONE_PR       MPHONE_PR       COMPUTER_PR    \n Min.   :116.0   Min.   :  2.78   Min.   : 36.42   Min.   : 3.278  \n 1st Qu.:450.2   1st Qu.: 22.84   1st Qu.:190.14   1st Qu.:11.832  \n Median :517.2   Median : 37.59   Median :305.27   Median :18.970  \n Mean   :509.5   Mean   : 51.09   Mean   :314.05   Mean   :24.393  \n 3rd Qu.:606.4   3rd Qu.: 69.72   3rd Qu.:428.43   3rd Qu.:29.897  \n Max.   :842.5   Max.   :181.49   Max.   :735.43   Max.   :92.402  \n  INTERNET_PR     \n Min.   :  1.041  \n 1st Qu.:  8.617  \n Median : 22.829  \n Mean   : 30.644  \n 3rd Qu.: 41.281  \n Max.   :117.985"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex07/Hands-on_Ex07.html#getting-started",
    "href": "Hands-on_Ex/Hands-on_Ex07/Hands-on_Ex07.html#getting-started",
    "title": "Hands-on Exercise 7 - Geographical Segmentation with Spatially Constrained Clustering Techniques",
    "section": "",
    "text": "Code\npacman::p_load( spdep, tmap, sf, ClustGeo, \n               ggpubr, cluster, factoextra, NbClust,\n               heatmaply, corrplot, psych, tidyverse, GGally)\n\n\n\n\n\n\n\nCode\nshan_sf &lt;- st_read(dsn = \"data/geospatial\", \n                   layer = \"myanmar_township_boundaries\") %&gt;%\n  filter(ST %in% c(\"Shan (East)\", \"Shan (North)\", \"Shan (South)\")) %&gt;%\n  select(c(2:7))\n\n\nReading layer `myanmar_township_boundaries' from data source \n  `C:\\EbenezerHo\\IS415-GAA\\Hands-on_Ex\\Hands-on_Ex07\\data\\geospatial' \n  using driver `ESRI Shapefile'\nSimple feature collection with 330 features and 14 fields\nGeometry type: MULTIPOLYGON\nDimension:     XY\nBounding box:  xmin: 92.17275 ymin: 9.671252 xmax: 101.1699 ymax: 28.54554\nGeodetic CRS:  WGS 84\n\n\n\n\nCode\nshan_sf\n\n\nSimple feature collection with 55 features and 6 fields\nGeometry type: MULTIPOLYGON\nDimension:     XY\nBounding box:  xmin: 96.15107 ymin: 19.29932 xmax: 101.1699 ymax: 24.15907\nGeodetic CRS:  WGS 84\nFirst 10 features:\n             ST ST_PCODE       DT   DT_PCODE        TS  TS_PCODE\n1  Shan (North)   MMR015  Mongmit MMR015D008   Mongmit MMR015017\n2  Shan (South)   MMR014 Taunggyi MMR014D001   Pindaya MMR014006\n3  Shan (South)   MMR014 Taunggyi MMR014D001   Ywangan MMR014007\n4  Shan (South)   MMR014 Taunggyi MMR014D001  Pinlaung MMR014009\n5  Shan (North)   MMR015  Mongmit MMR015D008    Mabein MMR015018\n6  Shan (South)   MMR014 Taunggyi MMR014D001     Kalaw MMR014005\n7  Shan (South)   MMR014 Taunggyi MMR014D001     Pekon MMR014010\n8  Shan (South)   MMR014 Taunggyi MMR014D001  Lawksawk MMR014008\n9  Shan (North)   MMR015  Kyaukme MMR015D003 Nawnghkio MMR015013\n10 Shan (North)   MMR015  Kyaukme MMR015D003   Kyaukme MMR015012\n                         geometry\n1  MULTIPOLYGON (((96.96001 23...\n2  MULTIPOLYGON (((96.7731 21....\n3  MULTIPOLYGON (((96.78483 21...\n4  MULTIPOLYGON (((96.49518 20...\n5  MULTIPOLYGON (((96.66306 24...\n6  MULTIPOLYGON (((96.49518 20...\n7  MULTIPOLYGON (((97.14738 19...\n8  MULTIPOLYGON (((96.94981 22...\n9  MULTIPOLYGON (((96.75648 22...\n10 MULTIPOLYGON (((96.95498 22...\n\n\n\n\nCode\nict &lt;- read_csv (\"data/aspatial/Shan-ICT.csv\")\n\n\n\n\nCode\nsummary(ict)\n\n\n District Pcode     District Name      Township Pcode     Township Name     \n Length:55          Length:55          Length:55          Length:55         \n Class :character   Class :character   Class :character   Class :character  \n Mode  :character   Mode  :character   Mode  :character   Mode  :character  \n                                                                            \n                                                                            \n                                                                            \n Total households     Radio         Television    Land line phone \n Min.   : 3318    Min.   :  115   Min.   :  728   Min.   :  20.0  \n 1st Qu.: 8711    1st Qu.: 1260   1st Qu.: 3744   1st Qu.: 266.5  \n Median :13685    Median : 2497   Median : 6117   Median : 695.0  \n Mean   :18369    Mean   : 4487   Mean   :10183   Mean   : 929.9  \n 3rd Qu.:23471    3rd Qu.: 6192   3rd Qu.:13906   3rd Qu.:1082.5  \n Max.   :82604    Max.   :30176   Max.   :62388   Max.   :6736.0  \n  Mobile phone      Computer      Internet at home\n Min.   :  150   Min.   :  20.0   Min.   :   8.0  \n 1st Qu.: 2037   1st Qu.: 121.0   1st Qu.:  88.0  \n Median : 3559   Median : 244.0   Median : 316.0  \n Mean   : 6470   Mean   : 575.5   Mean   : 760.2  \n 3rd Qu.: 7177   3rd Qu.: 507.0   3rd Qu.: 630.5  \n Max.   :48461   Max.   :6705.0   Max.   :9746.0  \n\n\n\n\nCode\nict_derived &lt;- ict %&gt;%\n  mutate(`RADIO_PR` = `Radio`/`Total households`*1000) %&gt;%\n  mutate(`TV_PR` = `Television`/`Total households`*1000) %&gt;%\n  mutate(`LLPHONE_PR` = `Land line phone`/`Total households`*1000) %&gt;%\n  mutate(`MPHONE_PR` = `Mobile phone`/`Total households`*1000) %&gt;%\n  mutate(`COMPUTER_PR` = `Computer`/`Total households`*1000) %&gt;%\n  mutate(`INTERNET_PR` = `Internet at home`/`Total households`*1000) %&gt;%\n  rename(`DT_PCODE` =`District Pcode`,`DT`=`District Name`,\n         `TS_PCODE`=`Township Pcode`, `TS`=`Township Name`,\n         `TT_HOUSEHOLDS`=`Total households`,\n         `RADIO`=`Radio`, `TV`=`Television`, \n         `LLPHONE`=`Land line phone`, `MPHONE`=`Mobile phone`,\n         `COMPUTER`=`Computer`, `INTERNET`=`Internet at home`) \n\n\n\n\nCode\nsummary(ict_derived)\n\n\n   DT_PCODE              DT              TS_PCODE              TS           \n Length:55          Length:55          Length:55          Length:55         \n Class :character   Class :character   Class :character   Class :character  \n Mode  :character   Mode  :character   Mode  :character   Mode  :character  \n                                                                            \n                                                                            \n                                                                            \n TT_HOUSEHOLDS       RADIO             TV           LLPHONE      \n Min.   : 3318   Min.   :  115   Min.   :  728   Min.   :  20.0  \n 1st Qu.: 8711   1st Qu.: 1260   1st Qu.: 3744   1st Qu.: 266.5  \n Median :13685   Median : 2497   Median : 6117   Median : 695.0  \n Mean   :18369   Mean   : 4487   Mean   :10183   Mean   : 929.9  \n 3rd Qu.:23471   3rd Qu.: 6192   3rd Qu.:13906   3rd Qu.:1082.5  \n Max.   :82604   Max.   :30176   Max.   :62388   Max.   :6736.0  \n     MPHONE         COMPUTER         INTERNET         RADIO_PR     \n Min.   :  150   Min.   :  20.0   Min.   :   8.0   Min.   : 21.05  \n 1st Qu.: 2037   1st Qu.: 121.0   1st Qu.:  88.0   1st Qu.:138.95  \n Median : 3559   Median : 244.0   Median : 316.0   Median :210.95  \n Mean   : 6470   Mean   : 575.5   Mean   : 760.2   Mean   :215.68  \n 3rd Qu.: 7177   3rd Qu.: 507.0   3rd Qu.: 630.5   3rd Qu.:268.07  \n Max.   :48461   Max.   :6705.0   Max.   :9746.0   Max.   :484.52  \n     TV_PR         LLPHONE_PR       MPHONE_PR       COMPUTER_PR    \n Min.   :116.0   Min.   :  2.78   Min.   : 36.42   Min.   : 3.278  \n 1st Qu.:450.2   1st Qu.: 22.84   1st Qu.:190.14   1st Qu.:11.832  \n Median :517.2   Median : 37.59   Median :305.27   Median :18.970  \n Mean   :509.5   Mean   : 51.09   Mean   :314.05   Mean   :24.393  \n 3rd Qu.:606.4   3rd Qu.: 69.72   3rd Qu.:428.43   3rd Qu.:29.897  \n Max.   :842.5   Max.   :181.49   Max.   :735.43   Max.   :92.402  \n  INTERNET_PR     \n Min.   :  1.041  \n 1st Qu.:  8.617  \n Median : 22.829  \n Mean   : 30.644  \n 3rd Qu.: 41.281  \n Max.   :117.985"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex07/Hands-on_Ex07.html#eda-using-satistical-graphics",
    "href": "Hands-on_Ex/Hands-on_Ex07/Hands-on_Ex07.html#eda-using-satistical-graphics",
    "title": "Hands-on Exercise 7 - Geographical Segmentation with Spatially Constrained Clustering Techniques",
    "section": "2.1 EDA using satistical graphics",
    "text": "2.1 EDA using satistical graphics\n\n\nCode\nggplot(data=ict_derived, \n       aes(x=`RADIO`)) +\n  geom_histogram(bins=20, \n                 color=\"black\", \n                 fill=\"light blue\")\n\n\n\n\n\n\n\nCode\nggplot(data=ict_derived, \n       aes(x=`RADIO`)) +\n  geom_boxplot(color=\"black\", \n               fill=\"light blue\")\n\n\n\n\n\n\n\nCode\nggplot(data=ict_derived, \n       aes(x=`RADIO_PR`)) +\n  geom_histogram(bins=20, \n                 color=\"black\", \n                 fill=\"light blue\")\n\n\n\n\n\n\n\nCode\nggplot(data=ict_derived, \n       aes(x=`RADIO_PR`)) +\n  geom_boxplot(color=\"black\", \n               fill=\"light blue\")\n\n\n\n\n\n\n\nCode\nradio &lt;- ggplot(data=ict_derived, \n             aes(x= `RADIO_PR`)) +\n  geom_histogram(bins=20, \n                 color=\"black\", \n                 fill=\"light blue\")\n\ntv &lt;- ggplot(data=ict_derived, \n             aes(x= `TV_PR`)) +\n  geom_histogram(bins=20, \n                 color=\"black\", \n                 fill=\"light blue\")\n\nllphone &lt;- ggplot(data=ict_derived, \n             aes(x= `LLPHONE_PR`)) +\n  geom_histogram(bins=20, \n                 color=\"black\", \n                 fill=\"light blue\")\n\nmphone &lt;- ggplot(data=ict_derived, \n             aes(x= `MPHONE_PR`)) +\n  geom_histogram(bins=20, \n                 color=\"black\", \n                 fill=\"light blue\")\n\ncomputer &lt;- ggplot(data=ict_derived, \n             aes(x= `COMPUTER_PR`)) +\n  geom_histogram(bins=20, \n                 color=\"black\", \n                 fill=\"light blue\")\n\ninternet &lt;- ggplot(data=ict_derived, \n             aes(x= `INTERNET_PR`)) +\n  geom_histogram(bins=20, \n                 color=\"black\", \n                 fill=\"light blue\")\n\n\n\n\nCode\nggarrange(radio, tv, llphone, mphone, computer, internet, \n          ncol = 3, \n          nrow = 2)"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex07/Hands-on_Ex07.html#eda-using-choropleth-maps",
    "href": "Hands-on_Ex/Hands-on_Ex07/Hands-on_Ex07.html#eda-using-choropleth-maps",
    "title": "Hands-on Exercise 7 - Geographical Segmentation with Spatially Constrained Clustering Techniques",
    "section": "2.2 EDA using choropleth maps",
    "text": "2.2 EDA using choropleth maps\n\n\nCode\nshan_sf &lt;- left_join(shan_sf, \n                     ict_derived, by=c(\"TS_PCODE\"=\"TS_PCODE\"))\n\n\n\n\nCode\nshan_sf &lt;- read_rds(\"data/rds/shan_sf.rds\")\n\n\n\n\nCode\nqtm(shan_sf, \"RADIO_PR\")\n\n\n\n\n\n\n\nCode\nTT_HOUSEHOLDS.map &lt;- tm_shape(shan_sf) + \n  tm_fill(col = \"TT_HOUSEHOLDS\",\n          n = 5,\n          style = \"jenks\", \n          title = \"Total households\") + \n  tm_borders(alpha = 0.5) \n\nRADIO.map &lt;- tm_shape(shan_sf) + \n  tm_fill(col = \"RADIO\",\n          n = 5,\n          style = \"jenks\",\n          title = \"Number Radio \") + \n  tm_borders(alpha = 0.5) \n\ntmap_arrange(TT_HOUSEHOLDS.map, RADIO.map,\n             asp=NA, ncol=2)\n\n\n\n\n\n\n\nCode\ntm_shape(shan_sf) +\n    tm_polygons(c(\"TT_HOUSEHOLDS\", \"RADIO_PR\"),\n                style=\"jenks\") +\n    tm_facets(sync = TRUE, ncol = 2) +\n  tm_legend(legend.position = c(\"right\", \"bottom\"))+\n  tm_layout(outer.margins=0, asp=0)"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex07/Hands-on_Ex07.html#computing-proximity-matrix",
    "href": "Hands-on_Ex/Hands-on_Ex07/Hands-on_Ex07.html#computing-proximity-matrix",
    "title": "Hands-on Exercise 7 - Geographical Segmentation with Spatially Constrained Clustering Techniques",
    "section": "4.1 computing proximity matrix",
    "text": "4.1 computing proximity matrix\n\n\nCode\nproxmat &lt;- dist(shan_ict, method = 'euclidean')\n\n\n\n\nCode\nproxmat\n\n\n             Mongmit   Pindaya   Ywangan  Pinlaung    Mabein     Kalaw\nPindaya    171.86828                                                  \nYwangan    381.88259 257.31610                                        \nPinlaung    57.46286 208.63519 400.05492                              \nMabein     263.37099 313.45776 529.14689 312.66966                    \nKalaw      160.05997 302.51785 499.53297 181.96406 198.14085          \nPekon       59.61977 117.91580 336.50410  94.61225 282.26877 211.91531\nLawksawk   140.11550 204.32952 432.16535 192.57320 130.36525 140.01101\nNawnghkio   89.07103 180.64047 377.87702 139.27495 204.63154 127.74787\nKyaukme    144.02475 311.01487 505.89191 139.67966 264.88283  79.42225\nMuse       563.01629 704.11252 899.44137 571.58335 453.27410 412.46033\nLaihka     141.87227 298.61288 491.83321 101.10150 345.00222 197.34633\nMongnai    115.86190 258.49346 422.71934  64.52387 358.86053 200.34668\nMawkmai    434.92968 437.99577 397.03752 398.11227 693.24602 562.59200\nKutkai      97.61092 212.81775 360.11861  78.07733 340.55064 204.93018\nMongton    192.67961 283.35574 361.23257 163.42143 425.16902 267.87522\nMongyai    256.72744 287.41816 333.12853 220.56339 516.40426 386.74701\nMongkaing  503.61965 481.71125 364.98429 476.29056 747.17454 625.24500\nLashio     251.29457 398.98167 602.17475 262.51735 231.28227 106.69059\nMongpan    193.32063 335.72896 483.68125 192.78316 301.52942 114.69105\nMatman     401.25041 354.39039 255.22031 382.40610 637.53975 537.63884\nTachileik  529.63213 635.51774 807.44220 555.01039 365.32538 373.64459\nNarphan    406.15714 474.50209 452.95769 371.26895 630.34312 463.53759\nMongkhet   349.45980 391.74783 408.97731 305.86058 610.30557 465.52013\nHsipaw     118.18050 245.98884 388.63147  76.55260 366.42787 212.36711\nMonghsat   214.20854 314.71506 432.98028 160.44703 470.48135 317.96188\nMongmao    242.54541 402.21719 542.85957 217.58854 384.91867 195.18913\nNansang    104.91839 275.44246 472.77637  85.49572 287.92364 124.30500\nLaukkaing  568.27732 726.85355 908.82520 563.81750 520.67373 427.77791\nPangsang   272.67383 428.24958 556.82263 244.47146 418.54016 224.03998\nNamtu      179.62251 225.40822 444.66868 170.04533 366.16094 307.27427\nMonghpyak  177.76325 221.30579 367.44835 222.20020 212.69450 167.08436\nKonkyan    403.39082 500.86933 528.12533 365.44693 613.51206 444.75859\nMongping   265.12574 310.64850 337.94020 229.75261 518.16310 375.64739\nHopong     136.93111 223.06050 352.85844  98.14855 398.00917 264.16294\nNyaungshwe  99.38590 216.52463 407.11649 138.12050 210.21337  95.66782\nHsihseng   131.49728 172.00796 342.91035 111.61846 381.20187 287.11074\nMongla     384.30076 549.42389 728.16301 372.59678 406.09124 260.26411\nHseni      189.37188 337.98982 534.44679 204.47572 213.61240  38.52842\nKunlong    224.12169 355.47066 531.63089 194.76257 396.61508 273.01375\nHopang     281.05362 443.26362 596.19312 265.96924 368.55167 185.14704\nNamhkan    386.02794 543.81859 714.43173 382.78835 379.56035 246.39577\nKengtung   246.45691 385.68322 573.23173 263.48638 219.47071  88.29335\nLangkho    164.26299 323.28133 507.78892 168.44228 253.84371  67.19580\nMonghsu    109.15790 198.35391 340.42789  80.86834 367.19820 237.34578\nTaunggyi   399.84278 503.75471 697.98323 429.54386 226.24011 252.26066\nPangwaun   381.51246 512.13162 580.13146 356.37963 523.44632 338.35194\nKyethi     202.92551 175.54012 287.29358 189.47065 442.07679 360.17247\nLoilen     145.48666 293.61143 469.51621  91.56527 375.06406 217.19877\nManton     430.64070 402.42888 306.16379 405.83081 674.01120 560.16577\nMongyang   309.51302 475.93982 630.71590 286.03834 411.88352 233.56349\nKunhing    173.50424 318.23811 449.67218 141.58836 375.82140 197.63683\nMongyawng  214.21738 332.92193 570.56521 235.55497 193.49994 173.43078\nTangyan    195.92520 208.43740 324.77002 169.50567 448.59948 348.06617\nNamhsan    237.78494 228.41073 286.16305 214.33352 488.33873 385.88676\n               Pekon  Lawksawk Nawnghkio   Kyaukme      Muse    Laihka\nPindaya                                                               \nYwangan                                                               \nPinlaung                                                              \nMabein                                                                \nKalaw                                                                 \nPekon                                                                 \nLawksawk   157.51129                                                  \nNawnghkio  113.15370  90.82891                                        \nKyaukme    202.12206 186.29066 157.04230                              \nMuse       614.56144 510.13288 533.68806 434.75768                    \nLaihka     182.23667 246.74469 211.88187 128.24979 526.65211          \nMongnai    151.60031 241.71260 182.21245 142.45669 571.97975 100.53457\nMawkmai    416.00669 567.52693 495.15047 512.02846 926.93007 429.96554\nKutkai     114.98048 224.64646 147.44053 170.93318 592.90743 144.67198\nMongton    208.14888 311.07742 225.81118 229.28509 634.71074 212.07320\nMongyai    242.52301 391.26989 319.57938 339.27780 763.91399 264.13364\nMongkaing  480.23965 625.18712 546.69447 586.05094 995.66496 522.96309\nLashio     303.80011 220.75270 230.55346 129.95255 313.15288 238.64533\nMongpan    243.30037 228.54223 172.84425 110.37831 447.49969 210.76951\nMatman     368.25761 515.39711 444.05061 505.52285 929.11283 443.25453\nTachileik  573.39528 441.82621 470.45533 429.15493 221.19950 549.08985\nNarphan    416.84901 523.69580 435.59661 420.30003 770.40234 392.32592\nMongkhet   342.08722 487.41102 414.10280 409.03553 816.44931 324.97428\nHsipaw     145.37542 249.35081 176.09570 163.95741 591.03355 128.42987\nMonghsat   225.64279 352.31496 289.83220 253.25370 663.76026 158.93517\nMongmao    293.70625 314.64777 257.76465 146.09228 451.82530 185.99082\nNansang    160.37607 188.78869 151.13185  60.32773 489.35308  78.78999\nLaukkaing  624.82399 548.83928 552.65554 428.74978 149.26996 507.39700\nPangsang   321.81214 345.91486 287.10769 175.35273 460.24292 214.19291\nNamtu      165.02707 260.95300 257.52713 270.87277 659.16927 185.86794\nMonghpyak  190.93173 142.31691  93.03711 217.64419 539.43485 293.22640\nKonkyan    421.48797 520.31264 439.34272 393.79911 704.86973 351.75354\nMongping   259.68288 396.47081 316.14719 330.28984 744.44948 272.82761\nHopong     138.86577 274.91604 204.88286 218.84211 648.68011 157.48857\nNyaungshwe 139.31874 104.17830  43.26545 126.50414 505.88581 201.71653\nHsihseng   105.30573 257.11202 209.88026 250.27059 677.66886 175.89761\nMongla     441.20998 393.18472 381.40808 241.58966 256.80556 315.93218\nHseni      243.98001 171.50398 164.05304  81.20593 381.30567 204.49010\nKunlong    249.36301 318.30406 285.04608 215.63037 547.24297 122.68682\nHopang     336.38582 321.16462 279.84188 154.91633 377.44407 230.78652\nNamhkan    442.77120 379.41126 367.33575 247.81990 238.67060 342.43665\nKengtung   297.67761 209.38215 208.29647 136.23356 330.08211 258.23950\nLangkho    219.21623 190.30257 156.51662  51.67279 413.64173 160.94435\nMonghsu    113.84636 242.04063 170.09168 200.77712 633.21624 163.28926\nTaunggyi   440.66133 304.96838 344.79200 312.60547 250.81471 425.36916\nPangwaun   423.81347 453.02765 381.67478 308.31407 541.97887 351.78203\nKyethi     162.43575 317.74604 267.21607 328.14177 757.16745 255.83275\nLoilen     181.94596 265.29318 219.26405 146.92675 560.43400  59.69478\nManton     403.82131 551.13000 475.77296 522.86003 941.49778 458.30232\nMongyang   363.58788 363.37684 323.32123 188.59489 389.59919 229.71502\nKunhing    213.46379 278.68953 206.15773 145.00266 533.00162 142.03682\nMongyawng  248.43910 179.07229 220.61209 181.55295 422.37358 211.99976\nTangyan    167.79937 323.14701 269.07880 306.78359 736.93741 224.29176\nNamhsan    207.16559 362.84062 299.74967 347.85944 778.52971 273.79672\n             Mongnai   Mawkmai    Kutkai   Mongton   Mongyai Mongkaing\nPindaya                                                               \nYwangan                                                               \nPinlaung                                                              \nMabein                                                                \nKalaw                                                                 \nPekon                                                                 \nLawksawk                                                              \nNawnghkio                                                             \nKyaukme                                                               \nMuse                                                                  \nLaihka                                                                \nMongnai                                                               \nMawkmai    374.50873                                                  \nKutkai      91.15307 364.95519                                        \nMongton    131.67061 313.35220 107.06341                              \nMongyai    203.23607 178.70499 188.94166 159.79790                    \nMongkaing  456.00842 133.29995 428.96133 365.50032 262.84016          \nLashio     270.86983 638.60773 289.82513 347.11584 466.36472 708.65819\nMongpan    178.09554 509.99632 185.18173 200.31803 346.39710 563.56780\nMatman     376.33870 147.83545 340.86349 303.04574 186.95158 135.51424\nTachileik  563.95232 919.38755 568.99109 608.76740 750.29555 967.14087\nNarphan    329.31700 273.75350 314.27683 215.97925 248.82845 285.65085\nMongkhet   275.76855 115.58388 273.91673 223.22828 104.98924 222.60577\nHsipaw      52.68195 351.34601  51.46282  90.69766 177.33790 423.77868\nMonghsat   125.25968 275.09705 154.32012 150.98053 127.35225 375.60376\nMongmao    188.29603 485.52853 204.69232 206.57001 335.61300 552.31959\nNansang     92.79567 462.41938 130.04549 199.58124 288.55962 542.16609\nLaukkaing  551.56800 882.51110 580.38112 604.66190 732.68347 954.11795\nPangsang   204.25746 484.14757 228.33583 210.77938 343.30638 548.40662\nNamtu      209.35473 427.95451 225.28268 308.71751 278.02761 525.04057\nMonghpyak  253.26470 536.71695 206.61627 258.04282 370.01575 568.21089\nKonkyan    328.82831 339.01411 310.60810 248.25265 287.87384 380.92091\nMongping   202.99615 194.31049 182.75266 119.86993  65.38727 257.18572\nHopong      91.53795 302.84362  73.45899 106.21031 124.62791 379.37916\nNyaungshwe 169.63695 502.99026 152.15482 219.72196 327.13541 557.32112\nHsihseng   142.36728 329.29477 128.21054 194.64317 162.27126 411.59788\nMongla     354.10985 686.88950 388.40984 411.06668 535.28615 761.48327\nHseni      216.81639 582.53670 229.37894 286.75945 408.23212 648.04408\nKunlong    202.92529 446.53763 204.54010 270.02165 299.36066 539.91284\nHopang     243.00945 561.24281 263.31986 273.50305 408.73288 626.17673\nNamhkan    370.05669 706.47792 392.48568 414.53594 550.62819 771.39688\nKengtung   272.28711 632.54638 279.19573 329.38387 460.39706 692.74693\nLangkho    174.67678 531.08019 180.51419 236.70878 358.95672 597.42714\nMonghsu     84.11238 332.07962  62.60859 107.04894 154.86049 400.71816\nTaunggyi   448.55282 810.74692 450.33382 508.40925 635.94105 866.21117\nPangwaun   312.13429 500.68857 321.80465 257.50434 394.07696 536.95736\nKyethi     210.50453 278.85535 184.23422 222.52947 137.79420 352.06533\nLoilen      58.41263 388.73386 131.56529 176.16001 224.79239 482.18190\nManton     391.54062 109.08779 361.82684 310.20581 195.59882  81.75337\nMongyang   260.39387 558.83162 285.33223 295.60023 414.31237 631.91325\nKunhing    110.55197 398.43973 108.84990 114.03609 238.99570 465.03971\nMongyawng  275.77546 620.04321 281.03383 375.22688 445.78964 700.98284\nTangyan    180.37471 262.66006 166.61820 198.88460 109.08506 348.56123\nNamhsan    218.10003 215.19289 191.32762 196.76188  77.35900 288.66231\n              Lashio   Mongpan    Matman Tachileik   Narphan  Mongkhet\nPindaya                                                               \nYwangan                                                               \nPinlaung                                                              \nMabein                                                                \nKalaw                                                                 \nPekon                                                                 \nLawksawk                                                              \nNawnghkio                                                             \nKyaukme                                                               \nMuse                                                                  \nLaihka                                                                \nMongnai                                                               \nMawkmai                                                               \nKutkai                                                                \nMongton                                                               \nMongyai                                                               \nMongkaing                                                             \nLashio                                                                \nMongpan    172.33279                                                  \nMatman     628.11049 494.81014                                        \nTachileik  311.95286 411.03849 890.12935                              \nNarphan    525.63854 371.13393 312.05193 760.29566                    \nMongkhet   534.44463 412.17123 203.02855 820.50164 217.28718          \nHsipaw     290.86435 179.52054 344.45451 576.18780 295.40170 253.80950\nMonghsat   377.86793 283.30992 313.59911 677.09508 278.21548 167.98445\nMongmao    214.23677 131.59966 501.59903 472.95568 331.42618 375.35820\nNansang    184.47950 144.77393 458.06573 486.77266 398.13308 360.99219\nLaukkaing  334.65738 435.58047 903.72094 325.06329 708.82887 769.06406\nPangsang   236.72516 140.23910 506.29940 481.31907 316.30314 375.58139\nNamtu      365.88437 352.91394 416.65397 659.56458 494.36143 355.99713\nMonghpyak  262.09281 187.85699 470.46845 444.04411 448.40651 462.63265\nKonkyan    485.51312 365.87588 392.40306 730.92980 158.82353 254.24424\nMongping   454.52548 318.47482 201.65224 727.08969 188.64567 113.80917\nHopong     345.31042 239.43845 291.84351 632.45718 294.40441 212.99485\nNyaungshwe 201.58191 137.29734 460.91883 445.81335 427.94086 417.08639\nHsihseng   369.00833 295.87811 304.02806 658.87060 377.52977 256.70338\nMongla     179.95877 253.20001 708.17595 347.33155 531.46949 574.40292\nHseni       79.41836 120.66550 564.64051 354.90063 474.12297 481.88406\nKunlong    295.23103 288.03320 468.27436 595.70536 413.07823 341.68641\nHopang     170.63913 135.62913 573.55355 403.82035 397.85908 451.51070\nNamhkan    173.27153 240.34131 715.42102 295.91660 536.85519 596.19944\nKengtung    59.85893 142.21554 613.01033 295.90429 505.40025 531.35998\nLangkho    115.18145  94.98486 518.86151 402.33622 420.65204 428.08061\nMonghsu    325.71557 216.25326 308.13805 605.02113 311.92379 247.73318\nTaunggyi   195.14541 319.81385 778.45810 150.84117 684.20905 712.80752\nPangwaun   362.45608 232.52209 523.43600 540.60474 264.64997 407.02947\nKyethi     447.10266 358.89620 233.83079 728.87329 374.90376 233.25039\nLoilen     268.92310 207.25000 406.56282 573.75476 354.79137 284.76895\nManton     646.66493 507.96808  59.52318 910.23039 280.26395 181.33894\nMongyang   209.33700 194.93467 585.61776 448.79027 401.39475 445.40621\nKunhing    255.10832 137.85278 403.66587 532.26397 281.62645 292.49814\nMongyawng  172.70139 275.15989 601.80824 432.10118 572.76394 522.91815\nTangyan    429.84475 340.39128 242.78233 719.84066 348.84991 201.49393\nNamhsan    472.04024 364.77086 180.09747 754.03913 316.54695 170.90848\n              Hsipaw  Monghsat   Mongmao   Nansang Laukkaing  Pangsang\nPindaya                                                               \nYwangan                                                               \nPinlaung                                                              \nMabein                                                                \nKalaw                                                                 \nPekon                                                                 \nLawksawk                                                              \nNawnghkio                                                             \nKyaukme                                                               \nMuse                                                                  \nLaihka                                                                \nMongnai                                                               \nMawkmai                                                               \nKutkai                                                                \nMongton                                                               \nMongyai                                                               \nMongkaing                                                             \nLashio                                                                \nMongpan                                                               \nMatman                                                                \nTachileik                                                             \nNarphan                                                               \nMongkhet                                                              \nHsipaw                                                                \nMonghsat   121.78922                                                  \nMongmao    185.99483 247.17708                                        \nNansang    120.24428 201.92690 164.99494                              \nLaukkaing  569.06099 626.44910 404.00848 480.60074                    \nPangsang   205.04337 256.37933  57.60801 193.36162 408.04016          \nNamtu      229.44658 231.78673 365.03882 217.61884 664.06286 392.97391\nMonghpyak  237.67919 356.84917 291.88846 227.52638 565.84279 315.11651\nKonkyan    296.74316 268.25060 281.87425 374.70456 635.92043 274.81900\nMongping   168.92101 140.95392 305.57166 287.36626 708.13447 308.33123\nHopong      62.86179 100.45714 244.16253 167.66291 628.48557 261.51075\nNyaungshwe 169.92664 286.37238 230.45003 131.18943 520.24345 257.77823\nHsihseng   136.54610 153.49551 311.98001 193.53779 670.74564 335.52974\nMongla     373.47509 429.00536 216.24705 289.45119 202.55831 217.88123\nHseni      231.48538 331.22632 184.67099 136.45492 391.74585 214.66375\nKunlong    205.10051 202.31862 224.43391 183.01388 521.88657 258.49342\nHopang     248.72536 317.64824  78.29342 196.47091 331.67199  92.57672\nNamhkan    382.79302 455.10875 223.32205 302.89487 196.46063 231.38484\nKengtung   284.08582 383.72138 207.58055 193.67980 351.48520 229.85484\nLangkho    183.05109 279.52329 134.50170  99.39859 410.41270 167.65920\nMonghsu     58.55724 137.24737 242.43599 153.59962 619.01766 260.52971\nTaunggyi   462.31183 562.88102 387.33906 365.04897 345.98041 405.59730\nPangwaun   298.12447 343.53898 187.40057 326.12960 470.63605 157.48757\nKyethi     195.17677 190.50609 377.89657 273.02385 749.99415 396.89963\nLoilen      98.04789 118.65144 190.26490  94.23028 535.57527 207.94433\nManton     359.60008 317.15603 503.79786 476.55544 907.38406 504.75214\nMongyang   267.10497 312.64797  91.06281 218.49285 326.19219 108.37735\nKunhing     90.77517 165.38834 103.91040 128.20940 500.41640 123.18870\nMongyawng  294.70967 364.40429 296.40789 191.11990 454.80044 336.16703\nTangyan    167.69794 144.59626 347.14183 249.70235 722.40954 364.76893\nNamhsan    194.47928 169.56962 371.71448 294.16284 760.45960 385.65526\n               Namtu Monghpyak   Konkyan  Mongping    Hopong Nyaungshwe\nPindaya                                                                \nYwangan                                                                \nPinlaung                                                               \nMabein                                                                 \nKalaw                                                                  \nPekon                                                                  \nLawksawk                                                               \nNawnghkio                                                              \nKyaukme                                                                \nMuse                                                                   \nLaihka                                                                 \nMongnai                                                                \nMawkmai                                                                \nKutkai                                                                 \nMongton                                                                \nMongyai                                                                \nMongkaing                                                              \nLashio                                                                 \nMongpan                                                                \nMatman                                                                 \nTachileik                                                              \nNarphan                                                                \nMongkhet                                                               \nHsipaw                                                                 \nMonghsat                                                               \nMongmao                                                                \nNansang                                                                \nLaukkaing                                                              \nPangsang                                                               \nNamtu                                                                  \nMonghpyak  346.57799                                                   \nKonkyan    478.37690 463.39594                                         \nMongping   321.66441 354.76537 242.02901                               \nHopong     206.82668 267.95563 304.49287 134.00139                     \nNyaungshwe 271.41464 103.97300 432.35040 319.32583 209.32532           \nHsihseng   131.89940 285.37627 383.49700 199.64389  91.65458  225.80242\nMongla     483.49434 408.03397 468.09747 512.61580 432.31105  347.60273\nHseni      327.41448 200.26876 448.84563 395.58453 286.41193  130.86310\nKunlong    233.60474 357.44661 329.11433 309.05385 219.06817  285.13095\nHopang     408.24516 304.26577 348.18522 379.27212 309.77356  247.19891\nNamhkan    506.32466 379.50202 481.59596 523.74815 444.13246  333.32428\nKengtung   385.33554 221.47613 474.82621 442.80821 340.47382  177.75714\nLangkho    305.03473 200.27496 386.95022 343.96455 239.63685  128.26577\nMonghsu    209.64684 232.17823 331.72187 158.90478  43.40665  173.82799\nTaunggyi   518.72748 334.17439 650.56905 621.53039 513.76415  325.09619\nPangwaun   517.03554 381.95144 263.97576 340.37881 346.00673  352.92324\nKyethi     186.90932 328.16234 400.10989 187.43974 136.49038  288.06872\nLoilen     194.24075 296.99681 334.19820 231.99959 124.74445  206.40432\nManton     448.58230 502.20840 366.66876 200.48082 310.58885  488.79874\nMongyang   413.26052 358.17599 329.39338 387.80686 323.35704  294.29500\nKunhing    296.43996 250.74435 253.74202 212.59619 145.15617  189.97131\nMongyawng  262.24331 285.56475 522.38580 455.59190 326.59925  218.12104\nTangyan    178.69483 335.26416 367.46064 161.67411 106.82328  284.14692\nNamhsan    240.95555 352.70492 352.20115 130.23777 132.70541  315.91750\n            Hsihseng    Mongla     Hseni   Kunlong    Hopang   Namhkan\nPindaya                                                               \nYwangan                                                               \nPinlaung                                                              \nMabein                                                                \nKalaw                                                                 \nPekon                                                                 \nLawksawk                                                              \nNawnghkio                                                             \nKyaukme                                                               \nMuse                                                                  \nLaihka                                                                \nMongnai                                                               \nMawkmai                                                               \nKutkai                                                                \nMongton                                                               \nMongyai                                                               \nMongkaing                                                             \nLashio                                                                \nMongpan                                                               \nMatman                                                                \nTachileik                                                             \nNarphan                                                               \nMongkhet                                                              \nHsipaw                                                                \nMonghsat                                                              \nMongmao                                                               \nNansang                                                               \nLaukkaing                                                             \nPangsang                                                              \nNamtu                                                                 \nMonghpyak                                                             \nKonkyan                                                               \nMongping                                                              \nHopong                                                                \nNyaungshwe                                                            \nHsihseng                                                              \nMongla     478.66210                                                  \nHseni      312.74375 226.82048                                        \nKunlong    231.85967 346.46200 276.19175                              \nHopang     370.01334 147.02444 162.80878 271.34451                    \nNamhkan    492.09476  77.21355 212.11323 375.73885 146.18632          \nKengtung   370.72441 202.45004  66.12817 317.14187 164.29921 175.63015\nLangkho    276.27441 229.01675  66.66133 224.52741 134.24847 224.40029\nMonghsu     97.82470 424.51868 262.28462 239.89665 301.84458 431.32637\nTaunggyi   528.14240 297.09863 238.19389 471.29032 329.95252 257.29147\nPangwaun   433.06326 319.18643 330.70182 392.45403 206.98364 310.44067\nKyethi      84.04049 556.02500 388.33498 298.55859 440.48114 567.86202\nLoilen     158.84853 338.67408 227.10984 166.53599 242.89326 364.90647\nManton     334.87758 712.51416 584.63341 479.76855 577.52046 721.86149\nMongyang   382.59743 146.66661 210.19929 247.22785  69.25859 167.72448\nKunhing    220.15490 306.47566 206.47448 193.77551 172.96164 314.92119\nMongyawng  309.51462 315.57550 173.86004 240.39800 290.51360 321.21112\nTangyan     70.27241 526.80849 373.07575 268.07983 412.22167 542.64078\nNamhsan    125.74240 564.02740 411.96125 310.40560 440.51555 576.42717\n            Kengtung   Langkho   Monghsu  Taunggyi  Pangwaun    Kyethi\nPindaya                                                               \nYwangan                                                               \nPinlaung                                                              \nMabein                                                                \nKalaw                                                                 \nPekon                                                                 \nLawksawk                                                              \nNawnghkio                                                             \nKyaukme                                                               \nMuse                                                                  \nLaihka                                                                \nMongnai                                                               \nMawkmai                                                               \nKutkai                                                                \nMongton                                                               \nMongyai                                                               \nMongkaing                                                             \nLashio                                                                \nMongpan                                                               \nMatman                                                                \nTachileik                                                             \nNarphan                                                               \nMongkhet                                                              \nHsipaw                                                                \nMonghsat                                                              \nMongmao                                                               \nNansang                                                               \nLaukkaing                                                             \nPangsang                                                              \nNamtu                                                                 \nMonghpyak                                                             \nKonkyan                                                               \nMongping                                                              \nHopong                                                                \nNyaungshwe                                                            \nHsihseng                                                              \nMongla                                                                \nHseni                                                                 \nKunlong                                                               \nHopang                                                                \nNamhkan                                                               \nKengtung                                                              \nLangkho    107.16213                                                  \nMonghsu    316.91914 221.84918                                        \nTaunggyi   186.28225 288.27478 486.91951                              \nPangwaun   337.48335 295.38434 343.38498 497.61245                    \nKyethi     444.26274 350.91512 146.61572 599.57407 476.62610          \nLoilen     282.22935 184.10672 131.55208 455.91617 331.69981 232.32965\nManton     631.99123 535.95620 330.76503 803.08034 510.79265 272.03299\nMongyang   217.08047 175.35413 323.95988 374.58247 225.25026 453.86726\nKunhing    245.95083 146.38284 146.78891 429.98509 229.09986 278.95182\nMongyawng  203.87199 186.11584 312.85089 287.73864 475.33116 387.71518\nTangyan    429.95076 332.02048 127.42203 592.65262 447.05580  47.79331\nNamhsan    466.20497 368.20978 153.22576 631.49232 448.58030  68.67929\n              Loilen    Manton  Mongyang   Kunhing Mongyawng   Tangyan\nPindaya                                                               \nYwangan                                                               \nPinlaung                                                              \nMabein                                                                \nKalaw                                                                 \nPekon                                                                 \nLawksawk                                                              \nNawnghkio                                                             \nKyaukme                                                               \nMuse                                                                  \nLaihka                                                                \nMongnai                                                               \nMawkmai                                                               \nKutkai                                                                \nMongton                                                               \nMongyai                                                               \nMongkaing                                                             \nLashio                                                                \nMongpan                                                               \nMatman                                                                \nTachileik                                                             \nNarphan                                                               \nMongkhet                                                              \nHsipaw                                                                \nMonghsat                                                              \nMongmao                                                               \nNansang                                                               \nLaukkaing                                                             \nPangsang                                                              \nNamtu                                                                 \nMonghpyak                                                             \nKonkyan                                                               \nMongping                                                              \nHopong                                                                \nNyaungshwe                                                            \nHsihseng                                                              \nMongla                                                                \nHseni                                                                 \nKunlong                                                               \nHopang                                                                \nNamhkan                                                               \nKengtung                                                              \nLangkho                                                               \nMonghsu                                                               \nTaunggyi                                                              \nPangwaun                                                              \nKyethi                                                                \nLoilen                                                                \nManton     419.06087                                                  \nMongyang   246.76592 585.70558                                        \nKunhing    130.39336 410.49230 188.89405                              \nMongyawng  261.75211 629.43339 304.21734 295.35984                    \nTangyan    196.60826 271.82672 421.06366 249.74161 377.52279          \nNamhsan    242.15271 210.48485 450.97869 270.79121 430.02019  63.67613"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex07/Hands-on_Ex07.html#computing-hierarchical-clustering",
    "href": "Hands-on_Ex/Hands-on_Ex07/Hands-on_Ex07.html#computing-hierarchical-clustering",
    "title": "Hands-on Exercise 7 - Geographical Segmentation with Spatially Constrained Clustering Techniques",
    "section": "4.2 Computing hierarchical clustering",
    "text": "4.2 Computing hierarchical clustering\n\n\nCode\nhclust_ward &lt;- hclust(proxmat, method = 'ward.D')\n\n\n\n\nCode\nplot(hclust_ward, cex = 0.6)"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex07/Hands-on_Ex07.html#select-optial-clustering-algo",
    "href": "Hands-on_Ex/Hands-on_Ex07/Hands-on_Ex07.html#select-optial-clustering-algo",
    "title": "Hands-on Exercise 7 - Geographical Segmentation with Spatially Constrained Clustering Techniques",
    "section": "4.3 select optial clustering algo",
    "text": "4.3 select optial clustering algo\n\n\nCode\nm &lt;- c( \"average\", \"single\", \"complete\", \"ward\")\nnames(m) &lt;- c( \"average\", \"single\", \"complete\", \"ward\")\n\nac &lt;- function(x) {\n  agnes(shan_ict, method = x)$ac\n}\n\nmap_dbl(m, ac)\n\n\n  average    single  complete      ward \n0.8131144 0.6628705 0.8950702 0.9427730 \n\n\nWith reference to the output above, we can see that Ward’s method provides the strongest clustering structure among the four methods assessed. Hence, in the subsequent analysis, only Ward’s method will be used."
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex07/Hands-on_Ex07.html#determining-cluster",
    "href": "Hands-on_Ex/Hands-on_Ex07/Hands-on_Ex07.html#determining-cluster",
    "title": "Hands-on Exercise 7 - Geographical Segmentation with Spatially Constrained Clustering Techniques",
    "section": "5 determining cluster",
    "text": "5 determining cluster\nThere are three commonly used methods to determine the optimal clusters, they are:\nElbow Method Average Silhouette Method Gap Statistic Method"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex07/Hands-on_Ex07.html#gap-statistic",
    "href": "Hands-on_Ex/Hands-on_Ex07/Hands-on_Ex07.html#gap-statistic",
    "title": "Hands-on Exercise 7 - Geographical Segmentation with Spatially Constrained Clustering Techniques",
    "section": "5.1 gap statistic",
    "text": "5.1 gap statistic\n\n\nCode\nset.seed(12345)\ngap_stat &lt;- clusGap(shan_ict, \n                    FUN = hcut, \n                    nstart = 25, \n                    K.max = 10, \n                    B = 50)\n# Print the result\nprint(gap_stat, method = \"firstmax\")\n\n\nClustering Gap statistic [\"clusGap\"] from call:\nclusGap(x = shan_ict, FUNcluster = hcut, K.max = 10, B = 50, nstart = 25)\nB=50 simulated reference sets, k = 1..10; spaceH0=\"scaledPCA\"\n --&gt; Number of clusters (method 'firstmax'): 1\n          logW   E.logW       gap     SE.sim\n [1,] 8.407129 8.680794 0.2736651 0.04460994\n [2,] 8.130029 8.350712 0.2206824 0.03880130\n [3,] 7.992265 8.202550 0.2102844 0.03362652\n [4,] 7.862224 8.080655 0.2184311 0.03784781\n [5,] 7.756461 7.978022 0.2215615 0.03897071\n [6,] 7.665594 7.887777 0.2221833 0.03973087\n [7,] 7.590919 7.806333 0.2154145 0.04054939\n [8,] 7.526680 7.731619 0.2049390 0.04198644\n [9,] 7.458024 7.660795 0.2027705 0.04421874\n[10,] 7.377412 7.593858 0.2164465 0.04540947\n\n\n\n\nCode\nfviz_gap_stat(gap_stat)\n\n\n\n\n\nIn the dendrogram displayed above, each leaf corresponds to one observation. As we move up the tree, observations that are similar to each other are combined into branches, which are themselves fused at a higher height.\nThe height of the fusion, provided on the vertical axis, indicates the (dis)similarity between two observations. The higher the height of the fusion, the less similar the observations are. Note that, conclusions about the proximity of two observations can be drawn only based on the height where branches containing those two observations first are fused. We cannot use the proximity of two observations along the horizontal axis as a criteria of their similarity.\nIt’s also possible to draw the dendrogram with a border around the selected clusters by using rect.hclust() of R stats. The argument border is used to specify the border colors for the rectangles.\ninterpreting the dendrograms\n\n\nCode\nplot(hclust_ward, cex = 0.6)\nrect.hclust(hclust_ward, \n            k = 6, \n            border = 2:5)\n\n\n\n\n\nVisually-driven hierarchical clustering analysis\n\n\nCode\nshan_ict_mat &lt;- data.matrix(shan_ict)\n\n\n\n\nCode\nheatmaply(normalize(shan_ict_mat),\n          Colv=NA,\n          dist_method = \"euclidean\",\n          hclust_method = \"ward.D\",\n          seriate = \"OLO\",\n          colors = Blues,\n          k_row = 6,\n          margins = c(NA,200,60,NA),\n          fontsize_row = 4,\n          fontsize_col = 5,\n          main=\"Geographic Segmentation of Shan State by ICT indicators\",\n          xlab = \"ICT Indicators\",\n          ylab = \"Townships of Shan State\"\n          )\n\n\n\n\n\n\n\n\nCode\ngroups &lt;- as.factor(cutree(hclust_ward, k=6))\n\n\n\n\nCode\nshan_sf_cluster &lt;- cbind(shan_sf, as.matrix(groups)) %&gt;%\n  rename(`CLUSTER`=`as.matrix.groups.`)\n\n\n\n\nCode\nqtm(shan_sf_cluster, \"CLUSTER\")"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex07/Hands-on_Ex07.html#computing-spatially-constrained-clusters-using-skater-method",
    "href": "Hands-on_Ex/Hands-on_Ex07/Hands-on_Ex07.html#computing-spatially-constrained-clusters-using-skater-method",
    "title": "Hands-on Exercise 7 - Geographical Segmentation with Spatially Constrained Clustering Techniques",
    "section": "6.1 Computing spatially constrained clusters using SKATER method",
    "text": "6.1 Computing spatially constrained clusters using SKATER method\n\n\nCode\nclust6 &lt;- spdep::skater(edges = shan.mst[,1:2], \n                 data = shan_ict, \n                 method = \"euclidean\", \n                 ncuts = 5)\n\n\n\n\nCode\nstr(clust6)\n\n\nList of 8\n $ groups      : num [1:55] 3 3 6 3 3 3 3 3 3 3 ...\n $ edges.groups:List of 6\n  ..$ :List of 3\n  .. ..$ node: num [1:22] 13 48 54 55 45 37 34 16 25 52 ...\n  .. ..$ edge: num [1:21, 1:3] 48 55 54 37 34 16 45 25 13 13 ...\n  .. ..$ ssw : num 3423\n  ..$ :List of 3\n  .. ..$ node: num [1:18] 47 27 53 38 42 15 41 51 43 32 ...\n  .. ..$ edge: num [1:17, 1:3] 53 15 42 38 41 51 15 27 15 43 ...\n  .. ..$ ssw : num 3759\n  ..$ :List of 3\n  .. ..$ node: num [1:11] 2 6 8 1 36 4 10 9 46 5 ...\n  .. ..$ edge: num [1:10, 1:3] 6 1 8 36 4 6 8 10 10 9 ...\n  .. ..$ ssw : num 1458\n  ..$ :List of 3\n  .. ..$ node: num [1:2] 44 20\n  .. ..$ edge: num [1, 1:3] 44 20 95\n  .. ..$ ssw : num 95\n  ..$ :List of 3\n  .. ..$ node: num 23\n  .. ..$ edge: num[0 , 1:3] \n  .. ..$ ssw : num 0\n  ..$ :List of 3\n  .. ..$ node: num 3\n  .. ..$ edge: num[0 , 1:3] \n  .. ..$ ssw : num 0\n $ not.prune   : NULL\n $ candidates  : int [1:6] 1 2 3 4 5 6\n $ ssto        : num 12613\n $ ssw         : num [1:6] 12613 10977 9962 9540 9123 ...\n $ crit        : num [1:2] 1 Inf\n $ vec.crit    : num [1:55] 1 1 1 1 1 1 1 1 1 1 ...\n - attr(*, \"class\")= chr \"skater\"\n\n\n\n\nCode\nccs6 &lt;- clust6$groups\nccs6\n\n\n [1] 3 3 6 3 3 3 3 3 3 3 2 1 1 1 2 1 1 1 2 4 1 2 5 1 1 1 2 1 2 2 1 2 2 1 1 3 1 2\n[39] 2 2 2 2 2 4 1 3 2 1 1 1 2 1 2 1 1\n\n\n\n\nCode\ntable(ccs6)\n\n\nccs6\n 1  2  3  4  5  6 \n22 18 11  2  1  1 \n\n\nplot(shan_sp, border=gray(.5)) plot(clust6, coordinates(shan_sp), cex.lab=.7, groups.colors=c(“red”,“green”,“blue”, “brown”, “pink”), cex.circles=0.005, add=TRUE)\n\n\nCode\ngroups_mat &lt;- as.matrix(clust6$groups)\nshan_sf_spatialcluster &lt;- cbind(shan_sf_cluster, as.factor(groups_mat)) %&gt;%\n  rename(`SP_CLUSTER`=`as.factor.groups_mat.`)\nqtm(shan_sf_spatialcluster, \"SP_CLUSTER\")\n\n\n\n\n\n\n\nCode\nhclust.map &lt;- qtm(shan_sf_cluster,\n                  \"CLUSTER\") + \n  tm_borders(alpha = 0.5) \n\nshclust.map &lt;- qtm(shan_sf_spatialcluster,\n                   \"SP_CLUSTER\") + \n  tm_borders(alpha = 0.5) \n\ntmap_arrange(hclust.map, shclust.map,\n             asp=NA, ncol=2)"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex07/Hands-on_Ex07.html#ward-like-hierarchical-clustering-clustgeo",
    "href": "Hands-on_Ex/Hands-on_Ex07/Hands-on_Ex07.html#ward-like-hierarchical-clustering-clustgeo",
    "title": "Hands-on Exercise 7 - Geographical Segmentation with Spatially Constrained Clustering Techniques",
    "section": "7.1 Ward-like hierarchical clustering: ClustGeo",
    "text": "7.1 Ward-like hierarchical clustering: ClustGeo\n\n\nCode\nnongeo_cluster &lt;- hclustgeo(proxmat)\nplot(nongeo_cluster, cex = 0.5)\nrect.hclust(nongeo_cluster, \n            k = 6, \n            border = 2:5)\n\n\n\n\n\n\n\nCode\ngroups &lt;- as.factor(cutree(nongeo_cluster, k=6))\n\n\n\n\nCode\nshan_sf_ngeo_cluster &lt;- cbind(shan_sf, as.matrix(groups)) %&gt;%\n  rename(`CLUSTER` = `as.matrix.groups.`)\n\n\n\n\nCode\nqtm(shan_sf_ngeo_cluster, \"CLUSTER\")"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex07/Hands-on_Ex07.html#spatially-constrained-hierarchical-clustering",
    "href": "Hands-on_Ex/Hands-on_Ex07/Hands-on_Ex07.html#spatially-constrained-hierarchical-clustering",
    "title": "Hands-on Exercise 7 - Geographical Segmentation with Spatially Constrained Clustering Techniques",
    "section": "7.2 Spatially Constrained Hierarchical Clustering",
    "text": "7.2 Spatially Constrained Hierarchical Clustering\n\n\nCode\ndist &lt;- st_distance(shan_sf, shan_sf)\ndistmat &lt;- as.dist(dist)\n\n\n\n\nCode\ncr &lt;- choicealpha(proxmat, distmat, range.alpha = seq(0, 1, 0.1), K=6, graph = TRUE)\n\n\n\n\n\n\n\n\n\n\nCode\nclustG &lt;- hclustgeo(proxmat, distmat, alpha = 0.3)\n\n\n\n\nCode\ngroups &lt;- as.factor(cutree(clustG, k=6))\n\n\n\n\nCode\nshan_sf_Gcluster &lt;- cbind(shan_sf, as.matrix(groups)) %&gt;%\n  rename(`CLUSTER` = `as.matrix.groups.`)\n\n\n\n\nCode\nqtm(shan_sf_Gcluster, \"CLUSTER\")"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex07/Hands-on_Ex07.html#visualising-individual-clustering-variable",
    "href": "Hands-on_Ex/Hands-on_Ex07/Hands-on_Ex07.html#visualising-individual-clustering-variable",
    "title": "Hands-on Exercise 7 - Geographical Segmentation with Spatially Constrained Clustering Techniques",
    "section": "8.1 Visualising individual clustering variable",
    "text": "8.1 Visualising individual clustering variable\n\n\nCode\nggplot(data = shan_sf_ngeo_cluster,\n       aes(x = CLUSTER, y = RADIO_PR)) +\n  geom_boxplot()"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex07/Hands-on_Ex07.html#multivariate-visualisation",
    "href": "Hands-on_Ex/Hands-on_Ex07/Hands-on_Ex07.html#multivariate-visualisation",
    "title": "Hands-on Exercise 7 - Geographical Segmentation with Spatially Constrained Clustering Techniques",
    "section": "8.2 Multivariate Visualisation",
    "text": "8.2 Multivariate Visualisation\n\n\nCode\nggparcoord(data = shan_sf_ngeo_cluster, \n           columns = c(17:21), \n           scale = \"globalminmax\",\n           alphaLines = 0.2,\n           boxplot = TRUE, \n           title = \"Multiple Parallel Coordinates Plots of ICT Variables by Cluster\") +\n  facet_grid(~ CLUSTER) + \n  theme(axis.text.x = element_text(angle = 30))\n\n\n\n\n\n\n\nCode\nshan_sf_ngeo_cluster %&gt;% \n  st_set_geometry(NULL) %&gt;%\n  group_by(CLUSTER) %&gt;%\n  summarise(mean_RADIO_PR = mean(RADIO_PR),\n            mean_TV_PR = mean(TV_PR),\n            mean_LLPHONE_PR = mean(LLPHONE_PR),\n            mean_MPHONE_PR = mean(MPHONE_PR),\n            mean_COMPUTER_PR = mean(COMPUTER_PR))\n\n\n# A tibble: 6 × 6\n  CLUSTER mean_RADIO_PR mean_TV_PR mean_LLPHONE_PR mean_MPHONE_PR\n  &lt;chr&gt;           &lt;dbl&gt;      &lt;dbl&gt;           &lt;dbl&gt;          &lt;dbl&gt;\n1 1               221.        521.            44.2           246.\n2 2               237.        402.            23.9           134.\n3 3               300.        611.            52.2           392.\n4 4               196.        744.            99.0           651.\n5 5               124.        224.            38.0           132.\n6 6                98.6       499.            74.5           468.\n# ℹ 1 more variable: mean_COMPUTER_PR &lt;dbl&gt;"
  },
  {
    "objectID": "In-class_Ex/In-class_Ex07/In-class_Ex07.html",
    "href": "In-class_Ex/In-class_Ex07/In-class_Ex07.html",
    "title": "In-Class Exercise 7 - Geographical Segmentation with Spatially Constrained Clustering Techniques",
    "section": "",
    "text": "Code\npacman::p_load( spdep, sp, tmap, sf, ClustGeo, \n               ggpubr, cluster, factoextra, NbClust,\n               heatmaply, corrplot, psych, tidyverse, GGally)\n\n\n\n\n\n\n\nCode\nshan_sf &lt;- st_read(dsn = \"data/geospatial\", \n                   layer = \"myanmar_township_boundaries\") %&gt;%\n  filter(ST %in% c(\"Shan (East)\", \"Shan (North)\", \"Shan (South)\")) %&gt;%\n  select(c(2:7))\n\n\nReading layer `myanmar_township_boundaries' from data source \n  `C:\\EbenezerHo\\IS415-GAA\\In-class_Ex\\In-class_Ex07\\data\\geospatial' \n  using driver `ESRI Shapefile'\nSimple feature collection with 330 features and 14 fields\nGeometry type: MULTIPOLYGON\nDimension:     XY\nBounding box:  xmin: 92.17275 ymin: 9.671252 xmax: 101.1699 ymax: 28.54554\nGeodetic CRS:  WGS 84\n\n\n::: callout-note filter is from dplyr package in tidyverse. It is used to filter rows that meet a certain condition. In this case, we are filtering the rows that meet the condition of ST being either “Shan (East)”, “Shan (North)”, or “Shan (South)”.\n\n\nCode\nshan_sf\n\n\nSimple feature collection with 55 features and 6 fields\nGeometry type: MULTIPOLYGON\nDimension:     XY\nBounding box:  xmin: 96.15107 ymin: 19.29932 xmax: 101.1699 ymax: 24.15907\nGeodetic CRS:  WGS 84\nFirst 10 features:\n             ST ST_PCODE       DT   DT_PCODE        TS  TS_PCODE\n1  Shan (North)   MMR015  Mongmit MMR015D008   Mongmit MMR015017\n2  Shan (South)   MMR014 Taunggyi MMR014D001   Pindaya MMR014006\n3  Shan (South)   MMR014 Taunggyi MMR014D001   Ywangan MMR014007\n4  Shan (South)   MMR014 Taunggyi MMR014D001  Pinlaung MMR014009\n5  Shan (North)   MMR015  Mongmit MMR015D008    Mabein MMR015018\n6  Shan (South)   MMR014 Taunggyi MMR014D001     Kalaw MMR014005\n7  Shan (South)   MMR014 Taunggyi MMR014D001     Pekon MMR014010\n8  Shan (South)   MMR014 Taunggyi MMR014D001  Lawksawk MMR014008\n9  Shan (North)   MMR015  Kyaukme MMR015D003 Nawnghkio MMR015013\n10 Shan (North)   MMR015  Kyaukme MMR015D003   Kyaukme MMR015012\n                         geometry\n1  MULTIPOLYGON (((96.96001 23...\n2  MULTIPOLYGON (((96.7731 21....\n3  MULTIPOLYGON (((96.78483 21...\n4  MULTIPOLYGON (((96.49518 20...\n5  MULTIPOLYGON (((96.66306 24...\n6  MULTIPOLYGON (((96.49518 20...\n7  MULTIPOLYGON (((97.14738 19...\n8  MULTIPOLYGON (((96.94981 22...\n9  MULTIPOLYGON (((96.75648 22...\n10 MULTIPOLYGON (((96.95498 22...\n\n\n::: callout-note gives you a description and view of your data. class(df) is used to check the class of the data. sf, data.frame\n\n\nCode\nict &lt;- read_csv (\"data/aspatial/Shan-ICT.csv\")\n\n\n\n\nCode\nsummary(ict)\n\n\n District Pcode     District Name      Township Pcode     Township Name     \n Length:55          Length:55          Length:55          Length:55         \n Class :character   Class :character   Class :character   Class :character  \n Mode  :character   Mode  :character   Mode  :character   Mode  :character  \n                                                                            \n                                                                            \n                                                                            \n Total households     Radio         Television    Land line phone \n Min.   : 3318    Min.   :  115   Min.   :  728   Min.   :  20.0  \n 1st Qu.: 8711    1st Qu.: 1260   1st Qu.: 3744   1st Qu.: 266.5  \n Median :13685    Median : 2497   Median : 6117   Median : 695.0  \n Mean   :18369    Mean   : 4487   Mean   :10183   Mean   : 929.9  \n 3rd Qu.:23471    3rd Qu.: 6192   3rd Qu.:13906   3rd Qu.:1082.5  \n Max.   :82604    Max.   :30176   Max.   :62388   Max.   :6736.0  \n  Mobile phone      Computer      Internet at home\n Min.   :  150   Min.   :  20.0   Min.   :   8.0  \n 1st Qu.: 2037   1st Qu.: 121.0   1st Qu.:  88.0  \n Median : 3559   Median : 244.0   Median : 316.0  \n Mean   : 6470   Mean   : 575.5   Mean   : 760.2  \n 3rd Qu.: 7177   3rd Qu.: 507.0   3rd Qu.: 630.5  \n Max.   :48461   Max.   :6705.0   Max.   :9746.0  \n\n\n::: callout-note summary gives you a summary statistics of each column in the df\n\n\nCode\nict_derived &lt;- ict %&gt;%\n  mutate(`RADIO_PR` = `Radio`/`Total households`*1000) %&gt;%\n  mutate(`TV_PR` = `Television`/`Total households`*1000) %&gt;%\n  mutate(`LLPHONE_PR` = `Land line phone`/`Total households`*1000) %&gt;%\n  mutate(`MPHONE_PR` = `Mobile phone`/`Total households`*1000) %&gt;%\n  mutate(`COMPUTER_PR` = `Computer`/`Total households`*1000) %&gt;%\n  mutate(`INTERNET_PR` = `Internet at home`/`Total households`*1000) %&gt;%\n  rename(`DT_PCODE` =`District Pcode`,`DT`=`District Name`,\n         `TS_PCODE`=`Township Pcode`, `TS`=`Township Name`,\n         `TT_HOUSEHOLDS`=`Total households`,\n         `RADIO`=`Radio`, `TV`=`Television`, \n         `LLPHONE`=`Land line phone`, `MPHONE`=`Mobile phone`,\n         `COMPUTER`=`Computer`, `INTERNET`=`Internet at home`) \n\n\nIn the above code, we scaled the data by dividing the number of each ICT indicator by the total number of households in each township and then multiplied by 1000 to get the number of ICT indicators per 1000 households. We then renamed the columns to make them more readable.\n::: callout-note mutate is a function from the dplyr package in the tidyverse. It is used to add new columns to the data frame. rename is also a function from the dplyr package in the tidyverse. It is used to rename columns in the data frame.\n\n\nCode\nsummary(ict_derived)\n\n\n   DT_PCODE              DT              TS_PCODE              TS           \n Length:55          Length:55          Length:55          Length:55         \n Class :character   Class :character   Class :character   Class :character  \n Mode  :character   Mode  :character   Mode  :character   Mode  :character  \n                                                                            \n                                                                            \n                                                                            \n TT_HOUSEHOLDS       RADIO             TV           LLPHONE      \n Min.   : 3318   Min.   :  115   Min.   :  728   Min.   :  20.0  \n 1st Qu.: 8711   1st Qu.: 1260   1st Qu.: 3744   1st Qu.: 266.5  \n Median :13685   Median : 2497   Median : 6117   Median : 695.0  \n Mean   :18369   Mean   : 4487   Mean   :10183   Mean   : 929.9  \n 3rd Qu.:23471   3rd Qu.: 6192   3rd Qu.:13906   3rd Qu.:1082.5  \n Max.   :82604   Max.   :30176   Max.   :62388   Max.   :6736.0  \n     MPHONE         COMPUTER         INTERNET         RADIO_PR     \n Min.   :  150   Min.   :  20.0   Min.   :   8.0   Min.   : 21.05  \n 1st Qu.: 2037   1st Qu.: 121.0   1st Qu.:  88.0   1st Qu.:138.95  \n Median : 3559   Median : 244.0   Median : 316.0   Median :210.95  \n Mean   : 6470   Mean   : 575.5   Mean   : 760.2   Mean   :215.68  \n 3rd Qu.: 7177   3rd Qu.: 507.0   3rd Qu.: 630.5   3rd Qu.:268.07  \n Max.   :48461   Max.   :6705.0   Max.   :9746.0   Max.   :484.52  \n     TV_PR         LLPHONE_PR       MPHONE_PR       COMPUTER_PR    \n Min.   :116.0   Min.   :  2.78   Min.   : 36.42   Min.   : 3.278  \n 1st Qu.:450.2   1st Qu.: 22.84   1st Qu.:190.14   1st Qu.:11.832  \n Median :517.2   Median : 37.59   Median :305.27   Median :18.970  \n Mean   :509.5   Mean   : 51.09   Mean   :314.05   Mean   :24.393  \n 3rd Qu.:606.4   3rd Qu.: 69.72   3rd Qu.:428.43   3rd Qu.:29.897  \n Max.   :842.5   Max.   :181.49   Max.   :735.43   Max.   :92.402  \n  INTERNET_PR     \n Min.   :  1.041  \n 1st Qu.:  8.617  \n Median : 22.829  \n Mean   : 30.644  \n 3rd Qu.: 41.281  \n Max.   :117.985"
  },
  {
    "objectID": "In-class_Ex/In-class_Ex07/In-class_Ex07.html#getting-started",
    "href": "In-class_Ex/In-class_Ex07/In-class_Ex07.html#getting-started",
    "title": "In-Class Exercise 7 - Geographical Segmentation with Spatially Constrained Clustering Techniques",
    "section": "",
    "text": "Code\npacman::p_load( spdep, sp, tmap, sf, ClustGeo, \n               ggpubr, cluster, factoextra, NbClust,\n               heatmaply, corrplot, psych, tidyverse, GGally)\n\n\n\n\n\n\n\nCode\nshan_sf &lt;- st_read(dsn = \"data/geospatial\", \n                   layer = \"myanmar_township_boundaries\") %&gt;%\n  filter(ST %in% c(\"Shan (East)\", \"Shan (North)\", \"Shan (South)\")) %&gt;%\n  select(c(2:7))\n\n\nReading layer `myanmar_township_boundaries' from data source \n  `C:\\EbenezerHo\\IS415-GAA\\In-class_Ex\\In-class_Ex07\\data\\geospatial' \n  using driver `ESRI Shapefile'\nSimple feature collection with 330 features and 14 fields\nGeometry type: MULTIPOLYGON\nDimension:     XY\nBounding box:  xmin: 92.17275 ymin: 9.671252 xmax: 101.1699 ymax: 28.54554\nGeodetic CRS:  WGS 84\n\n\n::: callout-note filter is from dplyr package in tidyverse. It is used to filter rows that meet a certain condition. In this case, we are filtering the rows that meet the condition of ST being either “Shan (East)”, “Shan (North)”, or “Shan (South)”.\n\n\nCode\nshan_sf\n\n\nSimple feature collection with 55 features and 6 fields\nGeometry type: MULTIPOLYGON\nDimension:     XY\nBounding box:  xmin: 96.15107 ymin: 19.29932 xmax: 101.1699 ymax: 24.15907\nGeodetic CRS:  WGS 84\nFirst 10 features:\n             ST ST_PCODE       DT   DT_PCODE        TS  TS_PCODE\n1  Shan (North)   MMR015  Mongmit MMR015D008   Mongmit MMR015017\n2  Shan (South)   MMR014 Taunggyi MMR014D001   Pindaya MMR014006\n3  Shan (South)   MMR014 Taunggyi MMR014D001   Ywangan MMR014007\n4  Shan (South)   MMR014 Taunggyi MMR014D001  Pinlaung MMR014009\n5  Shan (North)   MMR015  Mongmit MMR015D008    Mabein MMR015018\n6  Shan (South)   MMR014 Taunggyi MMR014D001     Kalaw MMR014005\n7  Shan (South)   MMR014 Taunggyi MMR014D001     Pekon MMR014010\n8  Shan (South)   MMR014 Taunggyi MMR014D001  Lawksawk MMR014008\n9  Shan (North)   MMR015  Kyaukme MMR015D003 Nawnghkio MMR015013\n10 Shan (North)   MMR015  Kyaukme MMR015D003   Kyaukme MMR015012\n                         geometry\n1  MULTIPOLYGON (((96.96001 23...\n2  MULTIPOLYGON (((96.7731 21....\n3  MULTIPOLYGON (((96.78483 21...\n4  MULTIPOLYGON (((96.49518 20...\n5  MULTIPOLYGON (((96.66306 24...\n6  MULTIPOLYGON (((96.49518 20...\n7  MULTIPOLYGON (((97.14738 19...\n8  MULTIPOLYGON (((96.94981 22...\n9  MULTIPOLYGON (((96.75648 22...\n10 MULTIPOLYGON (((96.95498 22...\n\n\n::: callout-note gives you a description and view of your data. class(df) is used to check the class of the data. sf, data.frame\n\n\nCode\nict &lt;- read_csv (\"data/aspatial/Shan-ICT.csv\")\n\n\n\n\nCode\nsummary(ict)\n\n\n District Pcode     District Name      Township Pcode     Township Name     \n Length:55          Length:55          Length:55          Length:55         \n Class :character   Class :character   Class :character   Class :character  \n Mode  :character   Mode  :character   Mode  :character   Mode  :character  \n                                                                            \n                                                                            \n                                                                            \n Total households     Radio         Television    Land line phone \n Min.   : 3318    Min.   :  115   Min.   :  728   Min.   :  20.0  \n 1st Qu.: 8711    1st Qu.: 1260   1st Qu.: 3744   1st Qu.: 266.5  \n Median :13685    Median : 2497   Median : 6117   Median : 695.0  \n Mean   :18369    Mean   : 4487   Mean   :10183   Mean   : 929.9  \n 3rd Qu.:23471    3rd Qu.: 6192   3rd Qu.:13906   3rd Qu.:1082.5  \n Max.   :82604    Max.   :30176   Max.   :62388   Max.   :6736.0  \n  Mobile phone      Computer      Internet at home\n Min.   :  150   Min.   :  20.0   Min.   :   8.0  \n 1st Qu.: 2037   1st Qu.: 121.0   1st Qu.:  88.0  \n Median : 3559   Median : 244.0   Median : 316.0  \n Mean   : 6470   Mean   : 575.5   Mean   : 760.2  \n 3rd Qu.: 7177   3rd Qu.: 507.0   3rd Qu.: 630.5  \n Max.   :48461   Max.   :6705.0   Max.   :9746.0  \n\n\n::: callout-note summary gives you a summary statistics of each column in the df\n\n\nCode\nict_derived &lt;- ict %&gt;%\n  mutate(`RADIO_PR` = `Radio`/`Total households`*1000) %&gt;%\n  mutate(`TV_PR` = `Television`/`Total households`*1000) %&gt;%\n  mutate(`LLPHONE_PR` = `Land line phone`/`Total households`*1000) %&gt;%\n  mutate(`MPHONE_PR` = `Mobile phone`/`Total households`*1000) %&gt;%\n  mutate(`COMPUTER_PR` = `Computer`/`Total households`*1000) %&gt;%\n  mutate(`INTERNET_PR` = `Internet at home`/`Total households`*1000) %&gt;%\n  rename(`DT_PCODE` =`District Pcode`,`DT`=`District Name`,\n         `TS_PCODE`=`Township Pcode`, `TS`=`Township Name`,\n         `TT_HOUSEHOLDS`=`Total households`,\n         `RADIO`=`Radio`, `TV`=`Television`, \n         `LLPHONE`=`Land line phone`, `MPHONE`=`Mobile phone`,\n         `COMPUTER`=`Computer`, `INTERNET`=`Internet at home`) \n\n\nIn the above code, we scaled the data by dividing the number of each ICT indicator by the total number of households in each township and then multiplied by 1000 to get the number of ICT indicators per 1000 households. We then renamed the columns to make them more readable.\n::: callout-note mutate is a function from the dplyr package in the tidyverse. It is used to add new columns to the data frame. rename is also a function from the dplyr package in the tidyverse. It is used to rename columns in the data frame.\n\n\nCode\nsummary(ict_derived)\n\n\n   DT_PCODE              DT              TS_PCODE              TS           \n Length:55          Length:55          Length:55          Length:55         \n Class :character   Class :character   Class :character   Class :character  \n Mode  :character   Mode  :character   Mode  :character   Mode  :character  \n                                                                            \n                                                                            \n                                                                            \n TT_HOUSEHOLDS       RADIO             TV           LLPHONE      \n Min.   : 3318   Min.   :  115   Min.   :  728   Min.   :  20.0  \n 1st Qu.: 8711   1st Qu.: 1260   1st Qu.: 3744   1st Qu.: 266.5  \n Median :13685   Median : 2497   Median : 6117   Median : 695.0  \n Mean   :18369   Mean   : 4487   Mean   :10183   Mean   : 929.9  \n 3rd Qu.:23471   3rd Qu.: 6192   3rd Qu.:13906   3rd Qu.:1082.5  \n Max.   :82604   Max.   :30176   Max.   :62388   Max.   :6736.0  \n     MPHONE         COMPUTER         INTERNET         RADIO_PR     \n Min.   :  150   Min.   :  20.0   Min.   :   8.0   Min.   : 21.05  \n 1st Qu.: 2037   1st Qu.: 121.0   1st Qu.:  88.0   1st Qu.:138.95  \n Median : 3559   Median : 244.0   Median : 316.0   Median :210.95  \n Mean   : 6470   Mean   : 575.5   Mean   : 760.2   Mean   :215.68  \n 3rd Qu.: 7177   3rd Qu.: 507.0   3rd Qu.: 630.5   3rd Qu.:268.07  \n Max.   :48461   Max.   :6705.0   Max.   :9746.0   Max.   :484.52  \n     TV_PR         LLPHONE_PR       MPHONE_PR       COMPUTER_PR    \n Min.   :116.0   Min.   :  2.78   Min.   : 36.42   Min.   : 3.278  \n 1st Qu.:450.2   1st Qu.: 22.84   1st Qu.:190.14   1st Qu.:11.832  \n Median :517.2   Median : 37.59   Median :305.27   Median :18.970  \n Mean   :509.5   Mean   : 51.09   Mean   :314.05   Mean   :24.393  \n 3rd Qu.:606.4   3rd Qu.: 69.72   3rd Qu.:428.43   3rd Qu.:29.897  \n Max.   :842.5   Max.   :181.49   Max.   :735.43   Max.   :92.402  \n  INTERNET_PR     \n Min.   :  1.041  \n 1st Qu.:  8.617  \n Median : 22.829  \n Mean   : 30.644  \n 3rd Qu.: 41.281  \n Max.   :117.985"
  },
  {
    "objectID": "In-class_Ex/In-class_Ex07/In-class_Ex07.html#eda-using-satistical-graphics",
    "href": "In-class_Ex/In-class_Ex07/In-class_Ex07.html#eda-using-satistical-graphics",
    "title": "In-Class Exercise 7 - Geographical Segmentation with Spatially Constrained Clustering Techniques",
    "section": "2.1 EDA using satistical graphics",
    "text": "2.1 EDA using satistical graphics\n\n\nCode\nggplot(data=ict_derived, \n       aes(x=`RADIO`)) +\n  geom_histogram(bins=20, \n                 color=\"black\", \n                 fill=\"light blue\")\n\n\n\n\n\n\n\nCode\nggplot(data=ict_derived, \n       aes(x=`RADIO`)) +\n  geom_boxplot(color=\"black\", \n               fill=\"light blue\")\n\n\n\n\n\n\n\nCode\nggplot(data=ict_derived, \n       aes(x=`RADIO_PR`)) +\n  geom_histogram(bins=20, \n                 color=\"black\", \n                 fill=\"light blue\")\n\n\n\n\n\n\n\nCode\nggplot(data=ict_derived, \n       aes(x=`RADIO_PR`)) +\n  geom_boxplot(color=\"black\", \n               fill=\"light blue\")\n\n\n\n\n\n\n\nCode\nradio &lt;- ggplot(data=ict_derived, \n             aes(x= `RADIO_PR`)) +\n  geom_histogram(bins=20, \n                 color=\"black\", \n                 fill=\"light blue\")\n\ntv &lt;- ggplot(data=ict_derived, \n             aes(x= `TV_PR`)) +\n  geom_histogram(bins=20, \n                 color=\"black\", \n                 fill=\"light blue\")\n\nllphone &lt;- ggplot(data=ict_derived, \n             aes(x= `LLPHONE_PR`)) +\n  geom_histogram(bins=20, \n                 color=\"black\", \n                 fill=\"light blue\")\n\nmphone &lt;- ggplot(data=ict_derived, \n             aes(x= `MPHONE_PR`)) +\n  geom_histogram(bins=20, \n                 color=\"black\", \n                 fill=\"light blue\")\n\ncomputer &lt;- ggplot(data=ict_derived, \n             aes(x= `COMPUTER_PR`)) +\n  geom_histogram(bins=20, \n                 color=\"black\", \n                 fill=\"light blue\")\n\ninternet &lt;- ggplot(data=ict_derived, \n             aes(x= `INTERNET_PR`)) +\n  geom_histogram(bins=20, \n                 color=\"black\", \n                 fill=\"light blue\")\n\n\n\n\nCode\nggarrange(radio, tv, llphone, mphone, computer, internet, \n          ncol = 3, \n          nrow = 2)"
  },
  {
    "objectID": "In-class_Ex/In-class_Ex07/In-class_Ex07.html#eda-using-choropleth-maps",
    "href": "In-class_Ex/In-class_Ex07/In-class_Ex07.html#eda-using-choropleth-maps",
    "title": "In-Class Exercise 7 - Geographical Segmentation with Spatially Constrained Clustering Techniques",
    "section": "2.2 EDA using choropleth maps",
    "text": "2.2 EDA using choropleth maps\n\n\nCode\nshan_sf &lt;- left_join(shan_sf, \n                     ict_derived, by=c(\"TS_PCODE\"=\"TS_PCODE\"))\n\n\nwrite rds\n\n\nCode\nwrite_rds(shan_sf, \"data/rds/shan_sf.rds\")\n\n\n\n\nCode\nshan_sf &lt;- read_rds(\"data/rds/shan_sf.rds\")\n\n\n\n\nCode\nqtm(shan_sf, \"RADIO_PR\")\n\n\n\n\n\n\n\nCode\nTT_HOUSEHOLDS.map &lt;- tm_shape(shan_sf) + \n  tm_fill(col = \"TT_HOUSEHOLDS\",\n          n = 5,\n          style = \"jenks\", \n          title = \"Total households\") + \n  tm_borders(alpha = 0.5) \n\nRADIO.map &lt;- tm_shape(shan_sf) + \n  tm_fill(col = \"RADIO\",\n          n = 5,\n          style = \"jenks\",\n          title = \"Number Radio \") + \n  tm_borders(alpha = 0.5) \n\ntmap_arrange(TT_HOUSEHOLDS.map, RADIO.map,\n             asp=NA, ncol=2)\n\n\n\n\n\n\n\nCode\ntm_shape(shan_sf) +\n    tm_polygons(c(\"TT_HOUSEHOLDS\", \"RADIO_PR\"),\n                style=\"jenks\") +\n    tm_facets(sync = TRUE, ncol = 2) +\n  tm_legend(legend.position = c(\"right\", \"bottom\"))+\n  tm_layout(outer.margins=0, asp=0)"
  },
  {
    "objectID": "In-class_Ex/In-class_Ex07/In-class_Ex07.html#computing-proximity-matrix",
    "href": "In-class_Ex/In-class_Ex07/In-class_Ex07.html#computing-proximity-matrix",
    "title": "In-Class Exercise 7 - Geographical Segmentation with Spatially Constrained Clustering Techniques",
    "section": "4.1 computing proximity matrix",
    "text": "4.1 computing proximity matrix\n\n\nCode\nproxmat &lt;- dist(shan_ict, method = 'euclidean')\n\n\n::: callout-note dist is a function from the base R package. It is used to compute the distance between observations in a data frame. More information can be found in rdocumentation.org. manhattan = city block, minkowski = chebychev\n\n\nCode\nproxmat\n\n\n             Mongmit   Pindaya   Ywangan  Pinlaung    Mabein     Kalaw\nPindaya    171.86828                                                  \nYwangan    381.88259 257.31610                                        \nPinlaung    57.46286 208.63519 400.05492                              \nMabein     263.37099 313.45776 529.14689 312.66966                    \nKalaw      160.05997 302.51785 499.53297 181.96406 198.14085          \nPekon       59.61977 117.91580 336.50410  94.61225 282.26877 211.91531\nLawksawk   140.11550 204.32952 432.16535 192.57320 130.36525 140.01101\nNawnghkio   89.07103 180.64047 377.87702 139.27495 204.63154 127.74787\nKyaukme    144.02475 311.01487 505.89191 139.67966 264.88283  79.42225\nMuse       563.01629 704.11252 899.44137 571.58335 453.27410 412.46033\nLaihka     141.87227 298.61288 491.83321 101.10150 345.00222 197.34633\nMongnai    115.86190 258.49346 422.71934  64.52387 358.86053 200.34668\nMawkmai    434.92968 437.99577 397.03752 398.11227 693.24602 562.59200\nKutkai      97.61092 212.81775 360.11861  78.07733 340.55064 204.93018\nMongton    192.67961 283.35574 361.23257 163.42143 425.16902 267.87522\nMongyai    256.72744 287.41816 333.12853 220.56339 516.40426 386.74701\nMongkaing  503.61965 481.71125 364.98429 476.29056 747.17454 625.24500\nLashio     251.29457 398.98167 602.17475 262.51735 231.28227 106.69059\nMongpan    193.32063 335.72896 483.68125 192.78316 301.52942 114.69105\nMatman     401.25041 354.39039 255.22031 382.40610 637.53975 537.63884\nTachileik  529.63213 635.51774 807.44220 555.01039 365.32538 373.64459\nNarphan    406.15714 474.50209 452.95769 371.26895 630.34312 463.53759\nMongkhet   349.45980 391.74783 408.97731 305.86058 610.30557 465.52013\nHsipaw     118.18050 245.98884 388.63147  76.55260 366.42787 212.36711\nMonghsat   214.20854 314.71506 432.98028 160.44703 470.48135 317.96188\nMongmao    242.54541 402.21719 542.85957 217.58854 384.91867 195.18913\nNansang    104.91839 275.44246 472.77637  85.49572 287.92364 124.30500\nLaukkaing  568.27732 726.85355 908.82520 563.81750 520.67373 427.77791\nPangsang   272.67383 428.24958 556.82263 244.47146 418.54016 224.03998\nNamtu      179.62251 225.40822 444.66868 170.04533 366.16094 307.27427\nMonghpyak  177.76325 221.30579 367.44835 222.20020 212.69450 167.08436\nKonkyan    403.39082 500.86933 528.12533 365.44693 613.51206 444.75859\nMongping   265.12574 310.64850 337.94020 229.75261 518.16310 375.64739\nHopong     136.93111 223.06050 352.85844  98.14855 398.00917 264.16294\nNyaungshwe  99.38590 216.52463 407.11649 138.12050 210.21337  95.66782\nHsihseng   131.49728 172.00796 342.91035 111.61846 381.20187 287.11074\nMongla     384.30076 549.42389 728.16301 372.59678 406.09124 260.26411\nHseni      189.37188 337.98982 534.44679 204.47572 213.61240  38.52842\nKunlong    224.12169 355.47066 531.63089 194.76257 396.61508 273.01375\nHopang     281.05362 443.26362 596.19312 265.96924 368.55167 185.14704\nNamhkan    386.02794 543.81859 714.43173 382.78835 379.56035 246.39577\nKengtung   246.45691 385.68322 573.23173 263.48638 219.47071  88.29335\nLangkho    164.26299 323.28133 507.78892 168.44228 253.84371  67.19580\nMonghsu    109.15790 198.35391 340.42789  80.86834 367.19820 237.34578\nTaunggyi   399.84278 503.75471 697.98323 429.54386 226.24011 252.26066\nPangwaun   381.51246 512.13162 580.13146 356.37963 523.44632 338.35194\nKyethi     202.92551 175.54012 287.29358 189.47065 442.07679 360.17247\nLoilen     145.48666 293.61143 469.51621  91.56527 375.06406 217.19877\nManton     430.64070 402.42888 306.16379 405.83081 674.01120 560.16577\nMongyang   309.51302 475.93982 630.71590 286.03834 411.88352 233.56349\nKunhing    173.50424 318.23811 449.67218 141.58836 375.82140 197.63683\nMongyawng  214.21738 332.92193 570.56521 235.55497 193.49994 173.43078\nTangyan    195.92520 208.43740 324.77002 169.50567 448.59948 348.06617\nNamhsan    237.78494 228.41073 286.16305 214.33352 488.33873 385.88676\n               Pekon  Lawksawk Nawnghkio   Kyaukme      Muse    Laihka\nPindaya                                                               \nYwangan                                                               \nPinlaung                                                              \nMabein                                                                \nKalaw                                                                 \nPekon                                                                 \nLawksawk   157.51129                                                  \nNawnghkio  113.15370  90.82891                                        \nKyaukme    202.12206 186.29066 157.04230                              \nMuse       614.56144 510.13288 533.68806 434.75768                    \nLaihka     182.23667 246.74469 211.88187 128.24979 526.65211          \nMongnai    151.60031 241.71260 182.21245 142.45669 571.97975 100.53457\nMawkmai    416.00669 567.52693 495.15047 512.02846 926.93007 429.96554\nKutkai     114.98048 224.64646 147.44053 170.93318 592.90743 144.67198\nMongton    208.14888 311.07742 225.81118 229.28509 634.71074 212.07320\nMongyai    242.52301 391.26989 319.57938 339.27780 763.91399 264.13364\nMongkaing  480.23965 625.18712 546.69447 586.05094 995.66496 522.96309\nLashio     303.80011 220.75270 230.55346 129.95255 313.15288 238.64533\nMongpan    243.30037 228.54223 172.84425 110.37831 447.49969 210.76951\nMatman     368.25761 515.39711 444.05061 505.52285 929.11283 443.25453\nTachileik  573.39528 441.82621 470.45533 429.15493 221.19950 549.08985\nNarphan    416.84901 523.69580 435.59661 420.30003 770.40234 392.32592\nMongkhet   342.08722 487.41102 414.10280 409.03553 816.44931 324.97428\nHsipaw     145.37542 249.35081 176.09570 163.95741 591.03355 128.42987\nMonghsat   225.64279 352.31496 289.83220 253.25370 663.76026 158.93517\nMongmao    293.70625 314.64777 257.76465 146.09228 451.82530 185.99082\nNansang    160.37607 188.78869 151.13185  60.32773 489.35308  78.78999\nLaukkaing  624.82399 548.83928 552.65554 428.74978 149.26996 507.39700\nPangsang   321.81214 345.91486 287.10769 175.35273 460.24292 214.19291\nNamtu      165.02707 260.95300 257.52713 270.87277 659.16927 185.86794\nMonghpyak  190.93173 142.31691  93.03711 217.64419 539.43485 293.22640\nKonkyan    421.48797 520.31264 439.34272 393.79911 704.86973 351.75354\nMongping   259.68288 396.47081 316.14719 330.28984 744.44948 272.82761\nHopong     138.86577 274.91604 204.88286 218.84211 648.68011 157.48857\nNyaungshwe 139.31874 104.17830  43.26545 126.50414 505.88581 201.71653\nHsihseng   105.30573 257.11202 209.88026 250.27059 677.66886 175.89761\nMongla     441.20998 393.18472 381.40808 241.58966 256.80556 315.93218\nHseni      243.98001 171.50398 164.05304  81.20593 381.30567 204.49010\nKunlong    249.36301 318.30406 285.04608 215.63037 547.24297 122.68682\nHopang     336.38582 321.16462 279.84188 154.91633 377.44407 230.78652\nNamhkan    442.77120 379.41126 367.33575 247.81990 238.67060 342.43665\nKengtung   297.67761 209.38215 208.29647 136.23356 330.08211 258.23950\nLangkho    219.21623 190.30257 156.51662  51.67279 413.64173 160.94435\nMonghsu    113.84636 242.04063 170.09168 200.77712 633.21624 163.28926\nTaunggyi   440.66133 304.96838 344.79200 312.60547 250.81471 425.36916\nPangwaun   423.81347 453.02765 381.67478 308.31407 541.97887 351.78203\nKyethi     162.43575 317.74604 267.21607 328.14177 757.16745 255.83275\nLoilen     181.94596 265.29318 219.26405 146.92675 560.43400  59.69478\nManton     403.82131 551.13000 475.77296 522.86003 941.49778 458.30232\nMongyang   363.58788 363.37684 323.32123 188.59489 389.59919 229.71502\nKunhing    213.46379 278.68953 206.15773 145.00266 533.00162 142.03682\nMongyawng  248.43910 179.07229 220.61209 181.55295 422.37358 211.99976\nTangyan    167.79937 323.14701 269.07880 306.78359 736.93741 224.29176\nNamhsan    207.16559 362.84062 299.74967 347.85944 778.52971 273.79672\n             Mongnai   Mawkmai    Kutkai   Mongton   Mongyai Mongkaing\nPindaya                                                               \nYwangan                                                               \nPinlaung                                                              \nMabein                                                                \nKalaw                                                                 \nPekon                                                                 \nLawksawk                                                              \nNawnghkio                                                             \nKyaukme                                                               \nMuse                                                                  \nLaihka                                                                \nMongnai                                                               \nMawkmai    374.50873                                                  \nKutkai      91.15307 364.95519                                        \nMongton    131.67061 313.35220 107.06341                              \nMongyai    203.23607 178.70499 188.94166 159.79790                    \nMongkaing  456.00842 133.29995 428.96133 365.50032 262.84016          \nLashio     270.86983 638.60773 289.82513 347.11584 466.36472 708.65819\nMongpan    178.09554 509.99632 185.18173 200.31803 346.39710 563.56780\nMatman     376.33870 147.83545 340.86349 303.04574 186.95158 135.51424\nTachileik  563.95232 919.38755 568.99109 608.76740 750.29555 967.14087\nNarphan    329.31700 273.75350 314.27683 215.97925 248.82845 285.65085\nMongkhet   275.76855 115.58388 273.91673 223.22828 104.98924 222.60577\nHsipaw      52.68195 351.34601  51.46282  90.69766 177.33790 423.77868\nMonghsat   125.25968 275.09705 154.32012 150.98053 127.35225 375.60376\nMongmao    188.29603 485.52853 204.69232 206.57001 335.61300 552.31959\nNansang     92.79567 462.41938 130.04549 199.58124 288.55962 542.16609\nLaukkaing  551.56800 882.51110 580.38112 604.66190 732.68347 954.11795\nPangsang   204.25746 484.14757 228.33583 210.77938 343.30638 548.40662\nNamtu      209.35473 427.95451 225.28268 308.71751 278.02761 525.04057\nMonghpyak  253.26470 536.71695 206.61627 258.04282 370.01575 568.21089\nKonkyan    328.82831 339.01411 310.60810 248.25265 287.87384 380.92091\nMongping   202.99615 194.31049 182.75266 119.86993  65.38727 257.18572\nHopong      91.53795 302.84362  73.45899 106.21031 124.62791 379.37916\nNyaungshwe 169.63695 502.99026 152.15482 219.72196 327.13541 557.32112\nHsihseng   142.36728 329.29477 128.21054 194.64317 162.27126 411.59788\nMongla     354.10985 686.88950 388.40984 411.06668 535.28615 761.48327\nHseni      216.81639 582.53670 229.37894 286.75945 408.23212 648.04408\nKunlong    202.92529 446.53763 204.54010 270.02165 299.36066 539.91284\nHopang     243.00945 561.24281 263.31986 273.50305 408.73288 626.17673\nNamhkan    370.05669 706.47792 392.48568 414.53594 550.62819 771.39688\nKengtung   272.28711 632.54638 279.19573 329.38387 460.39706 692.74693\nLangkho    174.67678 531.08019 180.51419 236.70878 358.95672 597.42714\nMonghsu     84.11238 332.07962  62.60859 107.04894 154.86049 400.71816\nTaunggyi   448.55282 810.74692 450.33382 508.40925 635.94105 866.21117\nPangwaun   312.13429 500.68857 321.80465 257.50434 394.07696 536.95736\nKyethi     210.50453 278.85535 184.23422 222.52947 137.79420 352.06533\nLoilen      58.41263 388.73386 131.56529 176.16001 224.79239 482.18190\nManton     391.54062 109.08779 361.82684 310.20581 195.59882  81.75337\nMongyang   260.39387 558.83162 285.33223 295.60023 414.31237 631.91325\nKunhing    110.55197 398.43973 108.84990 114.03609 238.99570 465.03971\nMongyawng  275.77546 620.04321 281.03383 375.22688 445.78964 700.98284\nTangyan    180.37471 262.66006 166.61820 198.88460 109.08506 348.56123\nNamhsan    218.10003 215.19289 191.32762 196.76188  77.35900 288.66231\n              Lashio   Mongpan    Matman Tachileik   Narphan  Mongkhet\nPindaya                                                               \nYwangan                                                               \nPinlaung                                                              \nMabein                                                                \nKalaw                                                                 \nPekon                                                                 \nLawksawk                                                              \nNawnghkio                                                             \nKyaukme                                                               \nMuse                                                                  \nLaihka                                                                \nMongnai                                                               \nMawkmai                                                               \nKutkai                                                                \nMongton                                                               \nMongyai                                                               \nMongkaing                                                             \nLashio                                                                \nMongpan    172.33279                                                  \nMatman     628.11049 494.81014                                        \nTachileik  311.95286 411.03849 890.12935                              \nNarphan    525.63854 371.13393 312.05193 760.29566                    \nMongkhet   534.44463 412.17123 203.02855 820.50164 217.28718          \nHsipaw     290.86435 179.52054 344.45451 576.18780 295.40170 253.80950\nMonghsat   377.86793 283.30992 313.59911 677.09508 278.21548 167.98445\nMongmao    214.23677 131.59966 501.59903 472.95568 331.42618 375.35820\nNansang    184.47950 144.77393 458.06573 486.77266 398.13308 360.99219\nLaukkaing  334.65738 435.58047 903.72094 325.06329 708.82887 769.06406\nPangsang   236.72516 140.23910 506.29940 481.31907 316.30314 375.58139\nNamtu      365.88437 352.91394 416.65397 659.56458 494.36143 355.99713\nMonghpyak  262.09281 187.85699 470.46845 444.04411 448.40651 462.63265\nKonkyan    485.51312 365.87588 392.40306 730.92980 158.82353 254.24424\nMongping   454.52548 318.47482 201.65224 727.08969 188.64567 113.80917\nHopong     345.31042 239.43845 291.84351 632.45718 294.40441 212.99485\nNyaungshwe 201.58191 137.29734 460.91883 445.81335 427.94086 417.08639\nHsihseng   369.00833 295.87811 304.02806 658.87060 377.52977 256.70338\nMongla     179.95877 253.20001 708.17595 347.33155 531.46949 574.40292\nHseni       79.41836 120.66550 564.64051 354.90063 474.12297 481.88406\nKunlong    295.23103 288.03320 468.27436 595.70536 413.07823 341.68641\nHopang     170.63913 135.62913 573.55355 403.82035 397.85908 451.51070\nNamhkan    173.27153 240.34131 715.42102 295.91660 536.85519 596.19944\nKengtung    59.85893 142.21554 613.01033 295.90429 505.40025 531.35998\nLangkho    115.18145  94.98486 518.86151 402.33622 420.65204 428.08061\nMonghsu    325.71557 216.25326 308.13805 605.02113 311.92379 247.73318\nTaunggyi   195.14541 319.81385 778.45810 150.84117 684.20905 712.80752\nPangwaun   362.45608 232.52209 523.43600 540.60474 264.64997 407.02947\nKyethi     447.10266 358.89620 233.83079 728.87329 374.90376 233.25039\nLoilen     268.92310 207.25000 406.56282 573.75476 354.79137 284.76895\nManton     646.66493 507.96808  59.52318 910.23039 280.26395 181.33894\nMongyang   209.33700 194.93467 585.61776 448.79027 401.39475 445.40621\nKunhing    255.10832 137.85278 403.66587 532.26397 281.62645 292.49814\nMongyawng  172.70139 275.15989 601.80824 432.10118 572.76394 522.91815\nTangyan    429.84475 340.39128 242.78233 719.84066 348.84991 201.49393\nNamhsan    472.04024 364.77086 180.09747 754.03913 316.54695 170.90848\n              Hsipaw  Monghsat   Mongmao   Nansang Laukkaing  Pangsang\nPindaya                                                               \nYwangan                                                               \nPinlaung                                                              \nMabein                                                                \nKalaw                                                                 \nPekon                                                                 \nLawksawk                                                              \nNawnghkio                                                             \nKyaukme                                                               \nMuse                                                                  \nLaihka                                                                \nMongnai                                                               \nMawkmai                                                               \nKutkai                                                                \nMongton                                                               \nMongyai                                                               \nMongkaing                                                             \nLashio                                                                \nMongpan                                                               \nMatman                                                                \nTachileik                                                             \nNarphan                                                               \nMongkhet                                                              \nHsipaw                                                                \nMonghsat   121.78922                                                  \nMongmao    185.99483 247.17708                                        \nNansang    120.24428 201.92690 164.99494                              \nLaukkaing  569.06099 626.44910 404.00848 480.60074                    \nPangsang   205.04337 256.37933  57.60801 193.36162 408.04016          \nNamtu      229.44658 231.78673 365.03882 217.61884 664.06286 392.97391\nMonghpyak  237.67919 356.84917 291.88846 227.52638 565.84279 315.11651\nKonkyan    296.74316 268.25060 281.87425 374.70456 635.92043 274.81900\nMongping   168.92101 140.95392 305.57166 287.36626 708.13447 308.33123\nHopong      62.86179 100.45714 244.16253 167.66291 628.48557 261.51075\nNyaungshwe 169.92664 286.37238 230.45003 131.18943 520.24345 257.77823\nHsihseng   136.54610 153.49551 311.98001 193.53779 670.74564 335.52974\nMongla     373.47509 429.00536 216.24705 289.45119 202.55831 217.88123\nHseni      231.48538 331.22632 184.67099 136.45492 391.74585 214.66375\nKunlong    205.10051 202.31862 224.43391 183.01388 521.88657 258.49342\nHopang     248.72536 317.64824  78.29342 196.47091 331.67199  92.57672\nNamhkan    382.79302 455.10875 223.32205 302.89487 196.46063 231.38484\nKengtung   284.08582 383.72138 207.58055 193.67980 351.48520 229.85484\nLangkho    183.05109 279.52329 134.50170  99.39859 410.41270 167.65920\nMonghsu     58.55724 137.24737 242.43599 153.59962 619.01766 260.52971\nTaunggyi   462.31183 562.88102 387.33906 365.04897 345.98041 405.59730\nPangwaun   298.12447 343.53898 187.40057 326.12960 470.63605 157.48757\nKyethi     195.17677 190.50609 377.89657 273.02385 749.99415 396.89963\nLoilen      98.04789 118.65144 190.26490  94.23028 535.57527 207.94433\nManton     359.60008 317.15603 503.79786 476.55544 907.38406 504.75214\nMongyang   267.10497 312.64797  91.06281 218.49285 326.19219 108.37735\nKunhing     90.77517 165.38834 103.91040 128.20940 500.41640 123.18870\nMongyawng  294.70967 364.40429 296.40789 191.11990 454.80044 336.16703\nTangyan    167.69794 144.59626 347.14183 249.70235 722.40954 364.76893\nNamhsan    194.47928 169.56962 371.71448 294.16284 760.45960 385.65526\n               Namtu Monghpyak   Konkyan  Mongping    Hopong Nyaungshwe\nPindaya                                                                \nYwangan                                                                \nPinlaung                                                               \nMabein                                                                 \nKalaw                                                                  \nPekon                                                                  \nLawksawk                                                               \nNawnghkio                                                              \nKyaukme                                                                \nMuse                                                                   \nLaihka                                                                 \nMongnai                                                                \nMawkmai                                                                \nKutkai                                                                 \nMongton                                                                \nMongyai                                                                \nMongkaing                                                              \nLashio                                                                 \nMongpan                                                                \nMatman                                                                 \nTachileik                                                              \nNarphan                                                                \nMongkhet                                                               \nHsipaw                                                                 \nMonghsat                                                               \nMongmao                                                                \nNansang                                                                \nLaukkaing                                                              \nPangsang                                                               \nNamtu                                                                  \nMonghpyak  346.57799                                                   \nKonkyan    478.37690 463.39594                                         \nMongping   321.66441 354.76537 242.02901                               \nHopong     206.82668 267.95563 304.49287 134.00139                     \nNyaungshwe 271.41464 103.97300 432.35040 319.32583 209.32532           \nHsihseng   131.89940 285.37627 383.49700 199.64389  91.65458  225.80242\nMongla     483.49434 408.03397 468.09747 512.61580 432.31105  347.60273\nHseni      327.41448 200.26876 448.84563 395.58453 286.41193  130.86310\nKunlong    233.60474 357.44661 329.11433 309.05385 219.06817  285.13095\nHopang     408.24516 304.26577 348.18522 379.27212 309.77356  247.19891\nNamhkan    506.32466 379.50202 481.59596 523.74815 444.13246  333.32428\nKengtung   385.33554 221.47613 474.82621 442.80821 340.47382  177.75714\nLangkho    305.03473 200.27496 386.95022 343.96455 239.63685  128.26577\nMonghsu    209.64684 232.17823 331.72187 158.90478  43.40665  173.82799\nTaunggyi   518.72748 334.17439 650.56905 621.53039 513.76415  325.09619\nPangwaun   517.03554 381.95144 263.97576 340.37881 346.00673  352.92324\nKyethi     186.90932 328.16234 400.10989 187.43974 136.49038  288.06872\nLoilen     194.24075 296.99681 334.19820 231.99959 124.74445  206.40432\nManton     448.58230 502.20840 366.66876 200.48082 310.58885  488.79874\nMongyang   413.26052 358.17599 329.39338 387.80686 323.35704  294.29500\nKunhing    296.43996 250.74435 253.74202 212.59619 145.15617  189.97131\nMongyawng  262.24331 285.56475 522.38580 455.59190 326.59925  218.12104\nTangyan    178.69483 335.26416 367.46064 161.67411 106.82328  284.14692\nNamhsan    240.95555 352.70492 352.20115 130.23777 132.70541  315.91750\n            Hsihseng    Mongla     Hseni   Kunlong    Hopang   Namhkan\nPindaya                                                               \nYwangan                                                               \nPinlaung                                                              \nMabein                                                                \nKalaw                                                                 \nPekon                                                                 \nLawksawk                                                              \nNawnghkio                                                             \nKyaukme                                                               \nMuse                                                                  \nLaihka                                                                \nMongnai                                                               \nMawkmai                                                               \nKutkai                                                                \nMongton                                                               \nMongyai                                                               \nMongkaing                                                             \nLashio                                                                \nMongpan                                                               \nMatman                                                                \nTachileik                                                             \nNarphan                                                               \nMongkhet                                                              \nHsipaw                                                                \nMonghsat                                                              \nMongmao                                                               \nNansang                                                               \nLaukkaing                                                             \nPangsang                                                              \nNamtu                                                                 \nMonghpyak                                                             \nKonkyan                                                               \nMongping                                                              \nHopong                                                                \nNyaungshwe                                                            \nHsihseng                                                              \nMongla     478.66210                                                  \nHseni      312.74375 226.82048                                        \nKunlong    231.85967 346.46200 276.19175                              \nHopang     370.01334 147.02444 162.80878 271.34451                    \nNamhkan    492.09476  77.21355 212.11323 375.73885 146.18632          \nKengtung   370.72441 202.45004  66.12817 317.14187 164.29921 175.63015\nLangkho    276.27441 229.01675  66.66133 224.52741 134.24847 224.40029\nMonghsu     97.82470 424.51868 262.28462 239.89665 301.84458 431.32637\nTaunggyi   528.14240 297.09863 238.19389 471.29032 329.95252 257.29147\nPangwaun   433.06326 319.18643 330.70182 392.45403 206.98364 310.44067\nKyethi      84.04049 556.02500 388.33498 298.55859 440.48114 567.86202\nLoilen     158.84853 338.67408 227.10984 166.53599 242.89326 364.90647\nManton     334.87758 712.51416 584.63341 479.76855 577.52046 721.86149\nMongyang   382.59743 146.66661 210.19929 247.22785  69.25859 167.72448\nKunhing    220.15490 306.47566 206.47448 193.77551 172.96164 314.92119\nMongyawng  309.51462 315.57550 173.86004 240.39800 290.51360 321.21112\nTangyan     70.27241 526.80849 373.07575 268.07983 412.22167 542.64078\nNamhsan    125.74240 564.02740 411.96125 310.40560 440.51555 576.42717\n            Kengtung   Langkho   Monghsu  Taunggyi  Pangwaun    Kyethi\nPindaya                                                               \nYwangan                                                               \nPinlaung                                                              \nMabein                                                                \nKalaw                                                                 \nPekon                                                                 \nLawksawk                                                              \nNawnghkio                                                             \nKyaukme                                                               \nMuse                                                                  \nLaihka                                                                \nMongnai                                                               \nMawkmai                                                               \nKutkai                                                                \nMongton                                                               \nMongyai                                                               \nMongkaing                                                             \nLashio                                                                \nMongpan                                                               \nMatman                                                                \nTachileik                                                             \nNarphan                                                               \nMongkhet                                                              \nHsipaw                                                                \nMonghsat                                                              \nMongmao                                                               \nNansang                                                               \nLaukkaing                                                             \nPangsang                                                              \nNamtu                                                                 \nMonghpyak                                                             \nKonkyan                                                               \nMongping                                                              \nHopong                                                                \nNyaungshwe                                                            \nHsihseng                                                              \nMongla                                                                \nHseni                                                                 \nKunlong                                                               \nHopang                                                                \nNamhkan                                                               \nKengtung                                                              \nLangkho    107.16213                                                  \nMonghsu    316.91914 221.84918                                        \nTaunggyi   186.28225 288.27478 486.91951                              \nPangwaun   337.48335 295.38434 343.38498 497.61245                    \nKyethi     444.26274 350.91512 146.61572 599.57407 476.62610          \nLoilen     282.22935 184.10672 131.55208 455.91617 331.69981 232.32965\nManton     631.99123 535.95620 330.76503 803.08034 510.79265 272.03299\nMongyang   217.08047 175.35413 323.95988 374.58247 225.25026 453.86726\nKunhing    245.95083 146.38284 146.78891 429.98509 229.09986 278.95182\nMongyawng  203.87199 186.11584 312.85089 287.73864 475.33116 387.71518\nTangyan    429.95076 332.02048 127.42203 592.65262 447.05580  47.79331\nNamhsan    466.20497 368.20978 153.22576 631.49232 448.58030  68.67929\n              Loilen    Manton  Mongyang   Kunhing Mongyawng   Tangyan\nPindaya                                                               \nYwangan                                                               \nPinlaung                                                              \nMabein                                                                \nKalaw                                                                 \nPekon                                                                 \nLawksawk                                                              \nNawnghkio                                                             \nKyaukme                                                               \nMuse                                                                  \nLaihka                                                                \nMongnai                                                               \nMawkmai                                                               \nKutkai                                                                \nMongton                                                               \nMongyai                                                               \nMongkaing                                                             \nLashio                                                                \nMongpan                                                               \nMatman                                                                \nTachileik                                                             \nNarphan                                                               \nMongkhet                                                              \nHsipaw                                                                \nMonghsat                                                              \nMongmao                                                               \nNansang                                                               \nLaukkaing                                                             \nPangsang                                                              \nNamtu                                                                 \nMonghpyak                                                             \nKonkyan                                                               \nMongping                                                              \nHopong                                                                \nNyaungshwe                                                            \nHsihseng                                                              \nMongla                                                                \nHseni                                                                 \nKunlong                                                               \nHopang                                                                \nNamhkan                                                               \nKengtung                                                              \nLangkho                                                               \nMonghsu                                                               \nTaunggyi                                                              \nPangwaun                                                              \nKyethi                                                                \nLoilen                                                                \nManton     419.06087                                                  \nMongyang   246.76592 585.70558                                        \nKunhing    130.39336 410.49230 188.89405                              \nMongyawng  261.75211 629.43339 304.21734 295.35984                    \nTangyan    196.60826 271.82672 421.06366 249.74161 377.52279          \nNamhsan    242.15271 210.48485 450.97869 270.79121 430.02019  63.67613"
  },
  {
    "objectID": "In-class_Ex/In-class_Ex07/In-class_Ex07.html#computing-hierarchical-clustering",
    "href": "In-class_Ex/In-class_Ex07/In-class_Ex07.html#computing-hierarchical-clustering",
    "title": "In-Class Exercise 7 - Geographical Segmentation with Spatially Constrained Clustering Techniques",
    "section": "4.2 Computing hierarchical clustering",
    "text": "4.2 Computing hierarchical clustering\n\n\nCode\nhclust_ward &lt;- hclust(proxmat, method = 'ward.D')\n\n\n::: callout-note hclust is a function from the base R package. It is used to compute hierarchical clustering. More information can be found in rdocumentation.org.\n\n\nCode\nplot(hclust_ward, cex = 0.6)\n\n\n\n\n\nThe dendrogram shows the different clusters and at which height they are merged. Depending on the height at which the clusters are merged, we can determine the number of clusters.\n::: callout-note we indicate the figure size using fig.width and fig.height. this lets us control and adjust the size of our output."
  },
  {
    "objectID": "In-class_Ex/In-class_Ex07/In-class_Ex07.html#select-optial-clustering-algo",
    "href": "In-class_Ex/In-class_Ex07/In-class_Ex07.html#select-optial-clustering-algo",
    "title": "In-Class Exercise 7 - Geographical Segmentation with Spatially Constrained Clustering Techniques",
    "section": "4.3 select optial clustering algo",
    "text": "4.3 select optial clustering algo\n\n\nCode\nm &lt;- c( \"average\", \"single\", \"complete\", \"ward\")\nnames(m) &lt;- c( \"average\", \"single\", \"complete\", \"ward\")\n\nac &lt;- function(x) {\n  agnes(shan_ict, method = x)$ac\n}\n\nmap_dbl(m, ac)\n\n\n  average    single  complete      ward \n0.8131144 0.6628705 0.8950702 0.9427730 \n\n\nWith reference to the output above, we can see that Ward’s method provides the strongest clustering structure among the four methods assessed. Hence, in the subsequent analysis, only Ward’s method will be used."
  },
  {
    "objectID": "In-class_Ex/In-class_Ex07/In-class_Ex07.html#determining-cluster",
    "href": "In-class_Ex/In-class_Ex07/In-class_Ex07.html#determining-cluster",
    "title": "In-Class Exercise 7 - Geographical Segmentation with Spatially Constrained Clustering Techniques",
    "section": "5 determining cluster",
    "text": "5 determining cluster\nThere are three commonly used methods to determine the optimal clusters, they are:\nElbow Method Average Silhouette Method Gap Statistic Method"
  },
  {
    "objectID": "In-class_Ex/In-class_Ex07/In-class_Ex07.html#gap-statistic",
    "href": "In-class_Ex/In-class_Ex07/In-class_Ex07.html#gap-statistic",
    "title": "In-Class Exercise 7 - Geographical Segmentation with Spatially Constrained Clustering Techniques",
    "section": "5.1 gap statistic",
    "text": "5.1 gap statistic\n\n\nCode\nset.seed(12345)\ngap_stat &lt;- clusGap(shan_ict, \n                    FUN = hcut, \n                    nstart = 25, \n                    K.max = 10, \n                    B = 50)\n# Print the result\nprint(gap_stat, method = \"firstmax\")\n\n\nClustering Gap statistic [\"clusGap\"] from call:\nclusGap(x = shan_ict, FUNcluster = hcut, K.max = 10, B = 50, nstart = 25)\nB=50 simulated reference sets, k = 1..10; spaceH0=\"scaledPCA\"\n --&gt; Number of clusters (method 'firstmax'): 1\n          logW   E.logW       gap     SE.sim\n [1,] 8.407129 8.680794 0.2736651 0.04460994\n [2,] 8.130029 8.350712 0.2206824 0.03880130\n [3,] 7.992265 8.202550 0.2102844 0.03362652\n [4,] 7.862224 8.080655 0.2184311 0.03784781\n [5,] 7.756461 7.978022 0.2215615 0.03897071\n [6,] 7.665594 7.887777 0.2221833 0.03973087\n [7,] 7.590919 7.806333 0.2154145 0.04054939\n [8,] 7.526680 7.731619 0.2049390 0.04198644\n [9,] 7.458024 7.660795 0.2027705 0.04421874\n[10,] 7.377412 7.593858 0.2164465 0.04540947\n\n\n\n\nCode\nfviz_gap_stat(gap_stat)\n\n\n\n\n\nIn the dendrogram displayed above, each leaf corresponds to one observation. As we move up the tree, observations that are similar to each other are combined into branches, which are themselves fused at a higher height.\nThe height of the fusion, provided on the vertical axis, indicates the (dis)similarity between two observations. The higher the height of the fusion, the less similar the observations are. Note that, conclusions about the proximity of two observations can be drawn only based on the height where branches containing those two observations first are fused. We cannot use the proximity of two observations along the horizontal axis as a criteria of their similarity.\nIt’s also possible to draw the dendrogram with a border around the selected clusters by using rect.hclust() of R stats. The argument border is used to specify the border colors for the rectangles.\n::: callout-note IMPORTANT! local optimisation might be present. optimised point should be around 5 or 6\ninterpreting the dendrograms\n\n\nCode\nplot(hclust_ward, cex = 0.6)\nrect.hclust(hclust_ward, \n            k = 6, \n            border = 2:5)\n\n\n\n\n\n::: callout-note k=6 determines the number of clusters.\nVisually-driven hierarchical clustering analysis\n\n\nCode\nshan_ict_mat &lt;- data.matrix(shan_ict)\n\n\n\n\nCode\nheatmaply(normalize(shan_ict_mat),\n          Colv=NA,\n          dist_method = \"euclidean\",\n          hclust_method = \"ward.D\",\n          seriate = \"OLO\",\n          colors = Blues,\n          k_row = 6,\n          margins = c(NA,200,60,NA),\n          fontsize_row = 4,\n          fontsize_col = 5,\n          main=\"Geographic Segmentation of Shan State by ICT indicators\",\n          xlab = \"ICT Indicators\",\n          ylab = \"Townships of Shan State\"\n          )\n\n\n\n\n\n\n\n\nCode\ngroups &lt;- as.factor(cutree(hclust_ward, k=6))\n\n\n\n\nCode\nshan_sf_cluster &lt;- cbind(shan_sf, as.matrix(groups)) %&gt;%\n  rename(`CLUSTER`=`as.matrix.groups.`)\n\n\n\n\nCode\nqtm(shan_sf_cluster, \"CLUSTER\")"
  },
  {
    "objectID": "In-class_Ex/In-class_Ex07/In-class_Ex07.html#computing-spatially-constrained-clusters-using-skater-method",
    "href": "In-class_Ex/In-class_Ex07/In-class_Ex07.html#computing-spatially-constrained-clusters-using-skater-method",
    "title": "In-Class Exercise 7 - Geographical Segmentation with Spatially Constrained Clustering Techniques",
    "section": "6.1 Computing spatially constrained clusters using SKATER method",
    "text": "6.1 Computing spatially constrained clusters using SKATER method\n\n\nCode\nclust6 &lt;- spdep::skater(edges = shan.mst[,1:2], \n                 data = shan_ict, \n                 method = \"euclidean\", \n                 ncuts = 5)\n\n\n\n\nCode\nstr(clust6)\n\n\nList of 8\n $ groups      : num [1:55] 3 3 6 3 3 3 3 3 3 3 ...\n $ edges.groups:List of 6\n  ..$ :List of 3\n  .. ..$ node: num [1:22] 13 48 54 55 45 37 34 16 25 52 ...\n  .. ..$ edge: num [1:21, 1:3] 48 55 54 37 34 16 45 25 13 13 ...\n  .. ..$ ssw : num 3423\n  ..$ :List of 3\n  .. ..$ node: num [1:18] 47 27 53 38 42 15 41 51 43 32 ...\n  .. ..$ edge: num [1:17, 1:3] 53 15 42 38 41 51 15 27 15 43 ...\n  .. ..$ ssw : num 3759\n  ..$ :List of 3\n  .. ..$ node: num [1:11] 2 6 8 1 36 4 10 9 46 5 ...\n  .. ..$ edge: num [1:10, 1:3] 6 1 8 36 4 6 8 10 10 9 ...\n  .. ..$ ssw : num 1458\n  ..$ :List of 3\n  .. ..$ node: num [1:2] 44 20\n  .. ..$ edge: num [1, 1:3] 44 20 95\n  .. ..$ ssw : num 95\n  ..$ :List of 3\n  .. ..$ node: num 23\n  .. ..$ edge: num[0 , 1:3] \n  .. ..$ ssw : num 0\n  ..$ :List of 3\n  .. ..$ node: num 3\n  .. ..$ edge: num[0 , 1:3] \n  .. ..$ ssw : num 0\n $ not.prune   : NULL\n $ candidates  : int [1:6] 1 2 3 4 5 6\n $ ssto        : num 12613\n $ ssw         : num [1:6] 12613 10977 9962 9540 9123 ...\n $ crit        : num [1:2] 1 Inf\n $ vec.crit    : num [1:55] 1 1 1 1 1 1 1 1 1 1 ...\n - attr(*, \"class\")= chr \"skater\"\n\n\n\n\nCode\nccs6 &lt;- clust6$groups\nccs6\n\n\n [1] 3 3 6 3 3 3 3 3 3 3 2 1 1 1 2 1 1 1 2 4 1 2 5 1 1 1 2 1 2 2 1 2 2 1 1 3 1 2\n[39] 2 2 2 2 2 4 1 3 2 1 1 1 2 1 2 1 1\n\n\n\n\nCode\ntable(ccs6)\n\n\nccs6\n 1  2  3  4  5  6 \n22 18 11  2  1  1 \n\n\n\n\nCode\nplot(st_geometry(shan_sf), border=gray(.5)) \npts &lt;- st_coordinates(st_centroid(shan_sf))\nplot(shan.nb, \n     pts, \n     col=\"blue\", \n     add=TRUE)\n\n\n\n\n\ninclude st_geometry to plot only the geometry column. pts can be reused throughout the document.\nplot(clust6, coordinates(shan_sp), cex.lab=.7, groups.colors=c(“red”,“green”,“blue”, “brown”, “pink”), cex.circles=0.005, add=TRUE)\n\n\nCode\ngroups_mat &lt;- as.matrix(clust6$groups)\nshan_sf_spatialcluster &lt;- cbind(shan_sf_cluster, as.factor(groups_mat)) %&gt;%\n  rename(`SP_CLUSTER`=`as.factor.groups_mat.`)\nqtm(shan_sf_spatialcluster, \"SP_CLUSTER\")\n\n\n\n\n\n\n\nCode\nhclust.map &lt;- qtm(shan_sf_cluster,\n                  \"CLUSTER\") + \n  tm_borders(alpha = 0.5) \n\nshclust.map &lt;- qtm(shan_sf_spatialcluster,\n                   \"SP_CLUSTER\") + \n  tm_borders(alpha = 0.5) \n\ntmap_arrange(hclust.map, shclust.map,\n             asp=NA, ncol=2)"
  },
  {
    "objectID": "In-class_Ex/In-class_Ex07/In-class_Ex07.html#ward-like-hierarchical-clustering-clustgeo",
    "href": "In-class_Ex/In-class_Ex07/In-class_Ex07.html#ward-like-hierarchical-clustering-clustgeo",
    "title": "In-Class Exercise 7 - Geographical Segmentation with Spatially Constrained Clustering Techniques",
    "section": "7.1 Ward-like hierarchical clustering: ClustGeo",
    "text": "7.1 Ward-like hierarchical clustering: ClustGeo\n\n\nCode\nnongeo_cluster &lt;- hclustgeo(proxmat)\nplot(nongeo_cluster, cex = 0.5)\nrect.hclust(nongeo_cluster, \n            k = 6, \n            border = 2:5)\n\n\n\n\n\n\n\nCode\ngroups &lt;- as.factor(cutree(nongeo_cluster, k=6))\n\n\nnumeric to factor.\n\n\nCode\nshan_sf_ngeo_cluster &lt;- cbind(shan_sf, as.matrix(groups)) %&gt;%\n  rename(`CLUSTER` = `as.matrix.groups.`)\n\n\n\n\nCode\nqtm(shan_sf_ngeo_cluster, \"CLUSTER\")"
  },
  {
    "objectID": "In-class_Ex/In-class_Ex07/In-class_Ex07.html#spatially-constrained-hierarchical-clustering",
    "href": "In-class_Ex/In-class_Ex07/In-class_Ex07.html#spatially-constrained-hierarchical-clustering",
    "title": "In-Class Exercise 7 - Geographical Segmentation with Spatially Constrained Clustering Techniques",
    "section": "7.2 Spatially Constrained Hierarchical Clustering",
    "text": "7.2 Spatially Constrained Hierarchical Clustering\n\n\nCode\ndist &lt;- st_distance(shan_sf, shan_sf)\ndistmat &lt;- as.dist(dist)\n\n\n\n\nCode\ncr &lt;- choicealpha(proxmat, distmat, range.alpha = seq(0, 1, 0.1), K=6, graph = TRUE)\n\n\n\n\n\n\n\n\n\n\nCode\nclustG &lt;- hclustgeo(proxmat, distmat, alpha = 0.3)\n\n\n\n\nCode\ngroups &lt;- as.factor(cutree(clustG, k=6))\n\n\n\n\nCode\nshan_sf_Gcluster &lt;- cbind(shan_sf, as.matrix(groups)) %&gt;%\n  rename(`CLUSTER` = `as.matrix.groups.`)\n\n\nleft join must have a unique identifier. therefore we use cbind to join the two dataframes as the columns are the same\n\n\nCode\nqtm(shan_sf_Gcluster, \"CLUSTER\")"
  },
  {
    "objectID": "In-class_Ex/In-class_Ex07/In-class_Ex07.html#visualising-individual-clustering-variable",
    "href": "In-class_Ex/In-class_Ex07/In-class_Ex07.html#visualising-individual-clustering-variable",
    "title": "In-Class Exercise 7 - Geographical Segmentation with Spatially Constrained Clustering Techniques",
    "section": "8.1 Visualising individual clustering variable",
    "text": "8.1 Visualising individual clustering variable\n\n\nCode\nggplot(data = shan_sf_ngeo_cluster,\n       aes(x = CLUSTER, y = RADIO_PR)) +\n  geom_boxplot()"
  },
  {
    "objectID": "In-class_Ex/In-class_Ex07/In-class_Ex07.html#multivariate-visualisation",
    "href": "In-class_Ex/In-class_Ex07/In-class_Ex07.html#multivariate-visualisation",
    "title": "In-Class Exercise 7 - Geographical Segmentation with Spatially Constrained Clustering Techniques",
    "section": "8.2 Multivariate Visualisation",
    "text": "8.2 Multivariate Visualisation\n\n\nCode\nggparcoord(data = shan_sf_ngeo_cluster, \n           columns = c(17:21), \n           scale = \"globalminmax\",\n           alphaLines = 0.2,\n           boxplot = TRUE, \n           title = \"Multiple Parallel Coordinates Plots of ICT Variables by Cluster\") +\n  facet_grid(~ CLUSTER) + \n  theme(axis.text.x = element_text(angle = 30))\n\n\n\n\n\nGives more description of the clusters. in this case, cluster 4 townships tend to own the highest number of TV and mobile-phone. On the other hand, households in cluster 5 tends to own the lowest of all the ICT indicators.\n\n\nCode\nshan_sf_ngeo_cluster %&gt;% \n  st_set_geometry(NULL) %&gt;%\n  group_by(CLUSTER) %&gt;%\n  summarise(mean_RADIO_PR = mean(RADIO_PR),\n            mean_TV_PR = mean(TV_PR),\n            mean_LLPHONE_PR = mean(LLPHONE_PR),\n            mean_MPHONE_PR = mean(MPHONE_PR),\n            mean_COMPUTER_PR = mean(COMPUTER_PR))\n\n\n# A tibble: 6 × 6\n  CLUSTER mean_RADIO_PR mean_TV_PR mean_LLPHONE_PR mean_MPHONE_PR\n  &lt;chr&gt;           &lt;dbl&gt;      &lt;dbl&gt;           &lt;dbl&gt;          &lt;dbl&gt;\n1 1               221.        521.            44.2           246.\n2 2               237.        402.            23.9           134.\n3 3               300.        611.            52.2           392.\n4 4               196.        744.            99.0           651.\n5 5               124.        224.            38.0           132.\n6 6                98.6       499.            74.5           468.\n# ℹ 1 more variable: mean_COMPUTER_PR &lt;dbl&gt;"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex08/Hands-on_Ex08.html",
    "href": "Hands-on_Ex/Hands-on_Ex08/Hands-on_Ex08.html",
    "title": "In-Class Exercise 8 - Calibrating Hedonic Pricing Model for Private Highrise Property with GWR Method",
    "section": "",
    "text": "Before we get started, it is important for us to install the necessary R packages into R and launch these R packages into R environment.\nThe R packages needed for this exercise are as follows:\n\nR package for building OLS and performing diagnostics tests\n\nolsrr\n\nR package for calibrating geographical weighted family of models\n\nGWmodel\n\nR package for multivariate data visualisation and analysis\n\ncorrplot\n\nSpatial data handling\n\nsf\n\nAttribute data handling\n\ntidyverse, especially readr, ggplot2 and dplyr\n\nChoropleth mapping\n\ntmap\n\n\n\n\n\n\nCode\npacman::p_load(olsrr, corrplot, ggpubr, sf, spdep, GWmodel, tmap, tidyverse, gtsummary)\n\n\n\n\n\nGWmodel package provides a collection of localised spatial statistical methods, namely: GW summary statistics, GW principal components analysis, GW discriminant analysis and various forms of GW regression; some of which are provided in basic and robust (outlier resistant) forms. Commonly, outputs or parameters of the GWmodel are mapped to provide a useful exploratory tool, which can often precede (and direct) a more traditional or sophisticated statistical analysis."
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex08/Hands-on_Ex08.html#installing-packages",
    "href": "Hands-on_Ex/Hands-on_Ex08/Hands-on_Ex08.html#installing-packages",
    "title": "In-Class Exercise 8 - Calibrating Hedonic Pricing Model for Private Highrise Property with GWR Method",
    "section": "",
    "text": "Code\npacman::p_load(olsrr, corrplot, ggpubr, sf, spdep, GWmodel, tmap, tidyverse, gtsummary)"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex08/Hands-on_Ex08.html#short-note-about-gwmodel",
    "href": "Hands-on_Ex/Hands-on_Ex08/Hands-on_Ex08.html#short-note-about-gwmodel",
    "title": "In-Class Exercise 8 - Calibrating Hedonic Pricing Model for Private Highrise Property with GWR Method",
    "section": "",
    "text": "GWmodel package provides a collection of localised spatial statistical methods, namely: GW summary statistics, GW principal components analysis, GW discriminant analysis and various forms of GW regression; some of which are provided in basic and robust (outlier resistant) forms. Commonly, outputs or parameters of the GWmodel are mapped to provide a useful exploratory tool, which can often precede (and direct) a more traditional or sophisticated statistical analysis."
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex08/Hands-on_Ex08.html#geospatial-data",
    "href": "Hands-on_Ex/Hands-on_Ex08/Hands-on_Ex08.html#geospatial-data",
    "title": "In-Class Exercise 8 - Calibrating Hedonic Pricing Model for Private Highrise Property with GWR Method",
    "section": "2.1 Geospatial Data",
    "text": "2.1 Geospatial Data\n\n\nCode\nmpsz = st_read(dsn = \"data/geospatial\", layer = \"MP14_SUBZONE_WEB_PL\")\n\n\nReading layer `MP14_SUBZONE_WEB_PL' from data source \n  `C:\\EbenezerHo\\IS415-GAA\\Hands-on_Ex\\Hands-on_Ex08\\data\\geospatial' \n  using driver `ESRI Shapefile'\nSimple feature collection with 323 features and 15 fields\nGeometry type: MULTIPOLYGON\nDimension:     XY\nBounding box:  xmin: 2667.538 ymin: 15748.72 xmax: 56396.44 ymax: 50256.33\nProjected CRS: SVY21\n\n\n\n2.1.1 Updating CRS information\n\n\nCode\nmpsz_svy21 &lt;- st_transform(mpsz, 3414)\n\n\n\n\nCode\nst_crs(mpsz_svy21)\n\n\nCoordinate Reference System:\n  User input: EPSG:3414 \n  wkt:\nPROJCRS[\"SVY21 / Singapore TM\",\n    BASEGEOGCRS[\"SVY21\",\n        DATUM[\"SVY21\",\n            ELLIPSOID[\"WGS 84\",6378137,298.257223563,\n                LENGTHUNIT[\"metre\",1]]],\n        PRIMEM[\"Greenwich\",0,\n            ANGLEUNIT[\"degree\",0.0174532925199433]],\n        ID[\"EPSG\",4757]],\n    CONVERSION[\"Singapore Transverse Mercator\",\n        METHOD[\"Transverse Mercator\",\n            ID[\"EPSG\",9807]],\n        PARAMETER[\"Latitude of natural origin\",1.36666666666667,\n            ANGLEUNIT[\"degree\",0.0174532925199433],\n            ID[\"EPSG\",8801]],\n        PARAMETER[\"Longitude of natural origin\",103.833333333333,\n            ANGLEUNIT[\"degree\",0.0174532925199433],\n            ID[\"EPSG\",8802]],\n        PARAMETER[\"Scale factor at natural origin\",1,\n            SCALEUNIT[\"unity\",1],\n            ID[\"EPSG\",8805]],\n        PARAMETER[\"False easting\",28001.642,\n            LENGTHUNIT[\"metre\",1],\n            ID[\"EPSG\",8806]],\n        PARAMETER[\"False northing\",38744.572,\n            LENGTHUNIT[\"metre\",1],\n            ID[\"EPSG\",8807]]],\n    CS[Cartesian,2],\n        AXIS[\"northing (N)\",north,\n            ORDER[1],\n            LENGTHUNIT[\"metre\",1]],\n        AXIS[\"easting (E)\",east,\n            ORDER[2],\n            LENGTHUNIT[\"metre\",1]],\n    USAGE[\n        SCOPE[\"Cadastre, engineering survey, topographic mapping.\"],\n        AREA[\"Singapore - onshore and offshore.\"],\n        BBOX[1.13,103.59,1.47,104.07]],\n    ID[\"EPSG\",3414]]\n\n\n\n\nCode\nst_bbox(mpsz_svy21) #view extent\n\n\n     xmin      ymin      xmax      ymax \n 2667.538 15748.721 56396.440 50256.334 \n\n\n::: callout-note st_bbox returns the bounding box of an object, which is a matrix with 2 rows and 2 columns. The first row contains the minimum coordinates of the object, and the second row contains the maximum coordinates of the object."
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex08/Hands-on_Ex08.html#aspatial-data",
    "href": "Hands-on_Ex/Hands-on_Ex08/Hands-on_Ex08.html#aspatial-data",
    "title": "In-Class Exercise 8 - Calibrating Hedonic Pricing Model for Private Highrise Property with GWR Method",
    "section": "2.2 Aspatial Data",
    "text": "2.2 Aspatial Data\n\n\nCode\ncondo_resale = read_csv(\"data/aspatial/Condo_resale_2015.csv\")\n\n\n\n\nCode\nglimpse(condo_resale)\n\n\nRows: 1,436\nColumns: 23\n$ LATITUDE             &lt;dbl&gt; 1.287145, 1.328698, 1.313727, 1.308563, 1.321437,…\n$ LONGITUDE            &lt;dbl&gt; 103.7802, 103.8123, 103.7971, 103.8247, 103.9505,…\n$ POSTCODE             &lt;dbl&gt; 118635, 288420, 267833, 258380, 467169, 466472, 3…\n$ SELLING_PRICE        &lt;dbl&gt; 3000000, 3880000, 3325000, 4250000, 1400000, 1320…\n$ AREA_SQM             &lt;dbl&gt; 309, 290, 248, 127, 145, 139, 218, 141, 165, 168,…\n$ AGE                  &lt;dbl&gt; 30, 32, 33, 7, 28, 22, 24, 24, 27, 31, 17, 22, 6,…\n$ PROX_CBD             &lt;dbl&gt; 7.941259, 6.609797, 6.898000, 4.038861, 11.783402…\n$ PROX_CHILDCARE       &lt;dbl&gt; 0.16597932, 0.28027246, 0.42922669, 0.39473543, 0…\n$ PROX_ELDERLYCARE     &lt;dbl&gt; 2.5198118, 1.9333338, 0.5021395, 1.9910316, 1.121…\n$ PROX_URA_GROWTH_AREA &lt;dbl&gt; 6.618741, 7.505109, 6.463887, 4.906512, 6.410632,…\n$ PROX_HAWKER_MARKET   &lt;dbl&gt; 1.76542207, 0.54507614, 0.37789301, 1.68259969, 0…\n$ PROX_KINDERGARTEN    &lt;dbl&gt; 0.05835552, 0.61592412, 0.14120309, 0.38200076, 0…\n$ PROX_MRT             &lt;dbl&gt; 0.5607188, 0.6584461, 0.3053433, 0.6910183, 0.528…\n$ PROX_PARK            &lt;dbl&gt; 1.1710446, 0.1992269, 0.2779886, 0.9832843, 0.116…\n$ PROX_PRIMARY_SCH     &lt;dbl&gt; 1.6340256, 0.9747834, 1.4715016, 1.4546324, 0.709…\n$ PROX_TOP_PRIMARY_SCH &lt;dbl&gt; 3.3273195, 0.9747834, 1.4715016, 2.3006394, 0.709…\n$ PROX_SHOPPING_MALL   &lt;dbl&gt; 2.2102717, 2.9374279, 1.2256850, 0.3525671, 1.307…\n$ PROX_SUPERMARKET     &lt;dbl&gt; 0.9103958, 0.5900617, 0.4135583, 0.4162219, 0.581…\n$ PROX_BUS_STOP        &lt;dbl&gt; 0.10336166, 0.28673408, 0.28504777, 0.29872340, 0…\n$ NO_Of_UNITS          &lt;dbl&gt; 18, 20, 27, 30, 30, 31, 32, 32, 32, 32, 34, 34, 3…\n$ FAMILY_FRIENDLY      &lt;dbl&gt; 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0…\n$ FREEHOLD             &lt;dbl&gt; 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1…\n$ LEASEHOLD_99YR       &lt;dbl&gt; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0…\n\n\n\n\nCode\nhead(condo_resale$LONGITUDE) #see the data in XCOORD column\n\n\n[1] 103.7802 103.8123 103.7971 103.8247 103.9505 103.9386\n\n\n\n\nCode\nhead(condo_resale$LATITUDE) #see the data in YCOORD column\n\n\n[1] 1.287145 1.328698 1.313727 1.308563 1.321437 1.314198\n\n\n\n\nCode\nsummary(condo_resale)\n\n\n    LATITUDE       LONGITUDE        POSTCODE      SELLING_PRICE     \n Min.   :1.240   Min.   :103.7   Min.   : 18965   Min.   :  540000  \n 1st Qu.:1.309   1st Qu.:103.8   1st Qu.:259849   1st Qu.: 1100000  \n Median :1.328   Median :103.8   Median :469298   Median : 1383222  \n Mean   :1.334   Mean   :103.8   Mean   :440439   Mean   : 1751211  \n 3rd Qu.:1.357   3rd Qu.:103.9   3rd Qu.:589486   3rd Qu.: 1950000  \n Max.   :1.454   Max.   :104.0   Max.   :828833   Max.   :18000000  \n    AREA_SQM          AGE           PROX_CBD       PROX_CHILDCARE    \n Min.   : 34.0   Min.   : 0.00   Min.   : 0.3869   Min.   :0.004927  \n 1st Qu.:103.0   1st Qu.: 5.00   1st Qu.: 5.5574   1st Qu.:0.174481  \n Median :121.0   Median :11.00   Median : 9.3567   Median :0.258135  \n Mean   :136.5   Mean   :12.14   Mean   : 9.3254   Mean   :0.326313  \n 3rd Qu.:156.0   3rd Qu.:18.00   3rd Qu.:12.6661   3rd Qu.:0.368293  \n Max.   :619.0   Max.   :37.00   Max.   :19.1804   Max.   :3.465726  \n PROX_ELDERLYCARE  PROX_URA_GROWTH_AREA PROX_HAWKER_MARKET PROX_KINDERGARTEN \n Min.   :0.05451   Min.   :0.2145       Min.   :0.05182    Min.   :0.004927  \n 1st Qu.:0.61254   1st Qu.:3.1643       1st Qu.:0.55245    1st Qu.:0.276345  \n Median :0.94179   Median :4.6186       Median :0.90842    Median :0.413385  \n Mean   :1.05351   Mean   :4.5981       Mean   :1.27987    Mean   :0.458903  \n 3rd Qu.:1.35122   3rd Qu.:5.7550       3rd Qu.:1.68578    3rd Qu.:0.578474  \n Max.   :3.94916   Max.   :9.1554       Max.   :5.37435    Max.   :2.229045  \n    PROX_MRT         PROX_PARK       PROX_PRIMARY_SCH  PROX_TOP_PRIMARY_SCH\n Min.   :0.05278   Min.   :0.02906   Min.   :0.07711   Min.   :0.07711     \n 1st Qu.:0.34646   1st Qu.:0.26211   1st Qu.:0.44024   1st Qu.:1.34451     \n Median :0.57430   Median :0.39926   Median :0.63505   Median :1.88213     \n Mean   :0.67316   Mean   :0.49802   Mean   :0.75471   Mean   :2.27347     \n 3rd Qu.:0.84844   3rd Qu.:0.65592   3rd Qu.:0.95104   3rd Qu.:2.90954     \n Max.   :3.48037   Max.   :2.16105   Max.   :3.92899   Max.   :6.74819     \n PROX_SHOPPING_MALL PROX_SUPERMARKET PROX_BUS_STOP       NO_Of_UNITS    \n Min.   :0.0000     Min.   :0.0000   Min.   :0.001595   Min.   :  18.0  \n 1st Qu.:0.5258     1st Qu.:0.3695   1st Qu.:0.098356   1st Qu.: 188.8  \n Median :0.9357     Median :0.5687   Median :0.151710   Median : 360.0  \n Mean   :1.0455     Mean   :0.6141   Mean   :0.193974   Mean   : 409.2  \n 3rd Qu.:1.3994     3rd Qu.:0.7862   3rd Qu.:0.220466   3rd Qu.: 590.0  \n Max.   :3.4774     Max.   :2.2441   Max.   :2.476639   Max.   :1703.0  \n FAMILY_FRIENDLY     FREEHOLD      LEASEHOLD_99YR  \n Min.   :0.0000   Min.   :0.0000   Min.   :0.0000  \n 1st Qu.:0.0000   1st Qu.:0.0000   1st Qu.:0.0000  \n Median :0.0000   Median :0.0000   Median :0.0000  \n Mean   :0.4868   Mean   :0.4227   Mean   :0.4882  \n 3rd Qu.:1.0000   3rd Qu.:1.0000   3rd Qu.:1.0000  \n Max.   :1.0000   Max.   :1.0000   Max.   :1.0000  \n\n\n\n2.2.1 converting aspatial data frame into sf\n\n\nCode\ncondo_resale.sf &lt;- st_as_sf(condo_resale,\n                            coords = c(\"LONGITUDE\", \"LATITUDE\"),\n                            crs=4326) %&gt;%\n  st_transform(crs=3414)\n\n\n::: callout-note The st_as_sf function is used to convert a data frame into an sf object. The coords argument is used to specify the columns that contain the spatial coordinates. The crs argument is used to specify the coordinate reference system (CRS) of the spatial object. The st_transform function is used to transform the CRS of the spatial object.\n\n\nCode\nhead(condo_resale.sf)\n\n\nSimple feature collection with 6 features and 21 fields\nGeometry type: POINT\nDimension:     XY\nBounding box:  xmin: 22085.12 ymin: 29951.54 xmax: 41042.56 ymax: 34546.2\nProjected CRS: SVY21 / Singapore TM\n# A tibble: 6 × 22\n  POSTCODE SELLING_PRICE AREA_SQM   AGE PROX_CBD PROX_CHILDCARE PROX_ELDERLYCARE\n     &lt;dbl&gt;         &lt;dbl&gt;    &lt;dbl&gt; &lt;dbl&gt;    &lt;dbl&gt;          &lt;dbl&gt;            &lt;dbl&gt;\n1   118635       3000000      309    30     7.94          0.166            2.52 \n2   288420       3880000      290    32     6.61          0.280            1.93 \n3   267833       3325000      248    33     6.90          0.429            0.502\n4   258380       4250000      127     7     4.04          0.395            1.99 \n5   467169       1400000      145    28    11.8           0.119            1.12 \n6   466472       1320000      139    22    10.3           0.125            0.789\n# ℹ 15 more variables: PROX_URA_GROWTH_AREA &lt;dbl&gt;, PROX_HAWKER_MARKET &lt;dbl&gt;,\n#   PROX_KINDERGARTEN &lt;dbl&gt;, PROX_MRT &lt;dbl&gt;, PROX_PARK &lt;dbl&gt;,\n#   PROX_PRIMARY_SCH &lt;dbl&gt;, PROX_TOP_PRIMARY_SCH &lt;dbl&gt;,\n#   PROX_SHOPPING_MALL &lt;dbl&gt;, PROX_SUPERMARKET &lt;dbl&gt;, PROX_BUS_STOP &lt;dbl&gt;,\n#   NO_Of_UNITS &lt;dbl&gt;, FAMILY_FRIENDLY &lt;dbl&gt;, FREEHOLD &lt;dbl&gt;,\n#   LEASEHOLD_99YR &lt;dbl&gt;, geometry &lt;POINT [m]&gt;"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex08/Hands-on_Ex08.html#eda-using-stats-graphics",
    "href": "Hands-on_Ex/Hands-on_Ex08/Hands-on_Ex08.html#eda-using-stats-graphics",
    "title": "In-Class Exercise 8 - Calibrating Hedonic Pricing Model for Private Highrise Property with GWR Method",
    "section": "3.1 EDA using stats graphics",
    "text": "3.1 EDA using stats graphics\n\n\nCode\nggplot(data=condo_resale.sf, aes(x=`SELLING_PRICE`)) +\n  geom_histogram(bins=20, color=\"black\", fill=\"light blue\")\n\n\n\n\n\nThe figure above reveals a right skewed distribution. This means that more condominium units were transacted at relative lower prices.\nStatistically, the skewed dsitribution can be normalised by using log transformation. The code chunk below is used to derive a new variable called LOG_SELLING_PRICE by using a log transformation on the variable SELLING_PRICE. It is performed using mutate() of dplyr package.\n::: callout-note The mutate() function is used to add new variables to a data frame. The log() function is used to calculate the natural logarithm of a variable. It is important to normalise the data set to get a better model fit.\n\n\nCode\ncondo_resale.sf &lt;- condo_resale.sf %&gt;%\n  mutate(`LOG_SELLING_PRICE` = log(SELLING_PRICE))\n\n\n\n\nCode\nggplot(data=condo_resale.sf, aes(x=`LOG_SELLING_PRICE`)) +\n  geom_histogram(bins=20, color=\"black\", fill=\"light blue\")\n\n\n\n\n\nFrom there, we see that the right skew has decreased significantly"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex08/Hands-on_Ex08.html#multiple-histogram-plots-distribution-of-variables",
    "href": "Hands-on_Ex/Hands-on_Ex08/Hands-on_Ex08.html#multiple-histogram-plots-distribution-of-variables",
    "title": "In-Class Exercise 8 - Calibrating Hedonic Pricing Model for Private Highrise Property with GWR Method",
    "section": "3.2 Multiple Histogram Plots distribution of variables",
    "text": "3.2 Multiple Histogram Plots distribution of variables\nwe’ll draw small multiple histograms (trellis plot) by using ggarange() function of ggpubr package.\n\n\nCode\nAREA_SQM &lt;- ggplot(data=condo_resale.sf, aes(x= `AREA_SQM`)) + \n  geom_histogram(bins=20, color=\"black\", fill=\"light blue\")\n\nAGE &lt;- ggplot(data=condo_resale.sf, aes(x= `AGE`)) +\n  geom_histogram(bins=20, color=\"black\", fill=\"light blue\")\n\nPROX_CBD &lt;- ggplot(data=condo_resale.sf, aes(x= `PROX_CBD`)) +\n  geom_histogram(bins=20, color=\"black\", fill=\"light blue\")\n\nPROX_CHILDCARE &lt;- ggplot(data=condo_resale.sf, aes(x= `PROX_CHILDCARE`)) + \n  geom_histogram(bins=20, color=\"black\", fill=\"light blue\")\n\nPROX_ELDERLYCARE &lt;- ggplot(data=condo_resale.sf, aes(x= `PROX_ELDERLYCARE`)) +\n  geom_histogram(bins=20, color=\"black\", fill=\"light blue\")\n\nPROX_URA_GROWTH_AREA &lt;- ggplot(data=condo_resale.sf, \n                               aes(x= `PROX_URA_GROWTH_AREA`)) +\n  geom_histogram(bins=20, color=\"black\", fill=\"light blue\")\n\nPROX_HAWKER_MARKET &lt;- ggplot(data=condo_resale.sf, aes(x= `PROX_HAWKER_MARKET`)) +\n  geom_histogram(bins=20, color=\"black\", fill=\"light blue\")\n\nPROX_KINDERGARTEN &lt;- ggplot(data=condo_resale.sf, aes(x= `PROX_KINDERGARTEN`)) +\n  geom_histogram(bins=20, color=\"black\", fill=\"light blue\")\n\nPROX_MRT &lt;- ggplot(data=condo_resale.sf, aes(x= `PROX_MRT`)) +\n  geom_histogram(bins=20, color=\"black\", fill=\"light blue\")\n\nPROX_PARK &lt;- ggplot(data=condo_resale.sf, aes(x= `PROX_PARK`)) +\n  geom_histogram(bins=20, color=\"black\", fill=\"light blue\")\n\nPROX_PRIMARY_SCH &lt;- ggplot(data=condo_resale.sf, aes(x= `PROX_PRIMARY_SCH`)) +\n  geom_histogram(bins=20, color=\"black\", fill=\"light blue\")\n\nPROX_TOP_PRIMARY_SCH &lt;- ggplot(data=condo_resale.sf, \n                               aes(x= `PROX_TOP_PRIMARY_SCH`)) +\n  geom_histogram(bins=20, color=\"black\", fill=\"light blue\")\n\nggarrange(AREA_SQM, AGE, PROX_CBD, PROX_CHILDCARE, PROX_ELDERLYCARE, \n          PROX_URA_GROWTH_AREA, PROX_HAWKER_MARKET, PROX_KINDERGARTEN, PROX_MRT,\n          PROX_PARK, PROX_PRIMARY_SCH, PROX_TOP_PRIMARY_SCH,  \n          ncol = 3, nrow = 4)"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex08/Hands-on_Ex08.html#drawing-statistical-point-map",
    "href": "Hands-on_Ex/Hands-on_Ex08/Hands-on_Ex08.html#drawing-statistical-point-map",
    "title": "In-Class Exercise 8 - Calibrating Hedonic Pricing Model for Private Highrise Property with GWR Method",
    "section": "3.3 Drawing Statistical point map",
    "text": "3.3 Drawing Statistical point map\n\n\nCode\ntmap_mode(\"view\")\n\n\n::: callout-note we need to make mpsz_svy21 valid before we can plot it. We will use what we’ve learnt in TOE 1 to make it valid.\ncheck if mpsz_svy21 has is valid\n\n\nCode\nst_is_valid(mpsz_svy21)\n\n\n  [1]  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE\n [13]  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE FALSE FALSE  TRUE  TRUE  TRUE FALSE\n [25]  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE\n [37]  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE\n [49]  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE\n [61]  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE\n [73]  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE\n [85]  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE\n [97]  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE\n[109]  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE\n[121]  TRUE FALSE FALSE  TRUE  TRUE  TRUE  TRUE FALSE  TRUE  TRUE  TRUE  TRUE\n[133]  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE\n[145]  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE\n[157]  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE\n[169]  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE\n[181]  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE\n[193]  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE\n[205]  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE\n[217]  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE\n[229]  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE\n[241]  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE\n[253]  TRUE  TRUE  TRUE  TRUE  TRUE FALSE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE\n[265]  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE\n[277]  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE\n[289]  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE\n[301]  TRUE FALSE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE\n[313]  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE FALSE  TRUE  TRUE  TRUE\n\n\nremove invalid geometries\n\n\nCode\nmpsz_svy21 &lt;- st_make_valid(mpsz_svy21)\n\n\n\n\nCode\ntm_shape(mpsz_svy21)+\n  tm_polygons() +\ntm_shape(condo_resale.sf) +  \n  tm_dots(col = \"SELLING_PRICE\",\n          alpha = 0.6,\n          style=\"quantile\") +\n  tm_view(set.zoom.limits = c(11,14))\n\n\n\n\n\n\n\n\n\nCode\ntmap_mode(\"plot\")"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex08/Hands-on_Ex08.html#simple-linear-regression-method",
    "href": "Hands-on_Ex/Hands-on_Ex08/Hands-on_Ex08.html#simple-linear-regression-method",
    "title": "In-Class Exercise 8 - Calibrating Hedonic Pricing Model for Private Highrise Property with GWR Method",
    "section": "4.1 Simple Linear Regression Method",
    "text": "4.1 Simple Linear Regression Method\n\n\nCode\ncondo.slr &lt;- lm(formula=SELLING_PRICE ~ AREA_SQM, data = condo_resale.sf)\n\n\nlm() returns an object of class “lm” or for multiple responses of class c(“mlm”, “lm”).\nThe functions summary() and anova() can be used to obtain and print a summary and analysis of variance table of the results. The generic accessor functions coefficients, effects, fitted.values and residuals extract various useful features of the value returned by lm.\n\n\nCode\nsummary(condo.slr)\n\n\n\nCall:\nlm(formula = SELLING_PRICE ~ AREA_SQM, data = condo_resale.sf)\n\nResiduals:\n     Min       1Q   Median       3Q      Max \n-3695815  -391764   -87517   258900 13503875 \n\nCoefficients:\n             Estimate Std. Error t value Pr(&gt;|t|)    \n(Intercept) -258121.1    63517.2  -4.064 5.09e-05 ***\nAREA_SQM      14719.0      428.1  34.381  &lt; 2e-16 ***\n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nResidual standard error: 942700 on 1434 degrees of freedom\nMultiple R-squared:  0.4518,    Adjusted R-squared:  0.4515 \nF-statistic:  1182 on 1 and 1434 DF,  p-value: &lt; 2.2e-16\n\n\nThe output report reveals that the SELLING_PRICE can be explained by using the formula:\n  *y = -258121.1 + 14719x1*\nThe R-squared of 0.4518 reveals that the simple regression model built is able to explain about 45% of the resale prices.\nSince p-value is much smaller than 0.0001, we will reject the null hypothesis that mean is a good estimator of SELLING_PRICE. This will allow us to infer that simple linear regression model above is a good estimator of SELLING_PRICE.\nThe Coefficients: section of the report reveals that the p-values of both the estimates of the Intercept and ARA_SQM are smaller than 0.001. In view of this, the null hypothesis of the B0 and B1 are equal to 0 will be rejected. As a results, we will be able to infer that the B0 and B1 are good parameter estimates.\n\n\nCode\nggplot(data=condo_resale.sf,  \n       aes(x=`AREA_SQM`, y=`SELLING_PRICE`)) +\n  geom_point() +\n  geom_smooth(method = lm)"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex08/Hands-on_Ex08.html#multiple-linear-regression-method",
    "href": "Hands-on_Ex/Hands-on_Ex08/Hands-on_Ex08.html#multiple-linear-regression-method",
    "title": "In-Class Exercise 8 - Calibrating Hedonic Pricing Model for Private Highrise Property with GWR Method",
    "section": "4.2 Multiple Linear Regression Method",
    "text": "4.2 Multiple Linear Regression Method\n\n\nCode\ncorrplot(cor(condo_resale[, 5:23]), diag = FALSE, order = \"AOE\",\n         tl.pos = \"td\", tl.cex = 0.5, method = \"number\", type = \"upper\")\n\n\n\n\n\nMatrix reorder is very important for mining the hiden structure and patter in the matrix. There are four methods in corrplot (parameter order), named “AOE”, “FPC”, “hclust”, “alphabet”. In the code chunk above, AOE order is used. It orders the variables by using the angular order of the eigenvectors method suggested by Michael Friendly.\nFrom the scatterplot matrix, it is clear that Freehold is highly correlated to LEASE_99YEAR. In view of this, it is wiser to only include either one of them in the subsequent model building. As a result, LEASE_99YEAR is excluded in the subsequent model building."
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex08/Hands-on_Ex08.html#building-a-hedonic-pricing-model-using-multiple-linear-regression-method",
    "href": "Hands-on_Ex/Hands-on_Ex08/Hands-on_Ex08.html#building-a-hedonic-pricing-model-using-multiple-linear-regression-method",
    "title": "In-Class Exercise 8 - Calibrating Hedonic Pricing Model for Private Highrise Property with GWR Method",
    "section": "4.3 Building a hedonic pricing model using multiple linear regression method",
    "text": "4.3 Building a hedonic pricing model using multiple linear regression method\n\n\nCode\ncondo.mlr &lt;- lm(formula = SELLING_PRICE ~ AREA_SQM + AGE    + \n                  PROX_CBD + PROX_CHILDCARE + PROX_ELDERLYCARE +\n                  PROX_URA_GROWTH_AREA + PROX_HAWKER_MARKET + PROX_KINDERGARTEN + \n                  PROX_MRT  + PROX_PARK + PROX_PRIMARY_SCH + \n                  PROX_TOP_PRIMARY_SCH + PROX_SHOPPING_MALL + PROX_SUPERMARKET + \n                  PROX_BUS_STOP + NO_Of_UNITS + FAMILY_FRIENDLY + FREEHOLD, \n                data=condo_resale.sf)\nsummary(condo.mlr)\n\n\n\nCall:\nlm(formula = SELLING_PRICE ~ AREA_SQM + AGE + PROX_CBD + PROX_CHILDCARE + \n    PROX_ELDERLYCARE + PROX_URA_GROWTH_AREA + PROX_HAWKER_MARKET + \n    PROX_KINDERGARTEN + PROX_MRT + PROX_PARK + PROX_PRIMARY_SCH + \n    PROX_TOP_PRIMARY_SCH + PROX_SHOPPING_MALL + PROX_SUPERMARKET + \n    PROX_BUS_STOP + NO_Of_UNITS + FAMILY_FRIENDLY + FREEHOLD, \n    data = condo_resale.sf)\n\nResiduals:\n     Min       1Q   Median       3Q      Max \n-3475964  -293923   -23069   241043 12260381 \n\nCoefficients:\n                       Estimate Std. Error t value Pr(&gt;|t|)    \n(Intercept)           481728.40  121441.01   3.967 7.65e-05 ***\nAREA_SQM               12708.32     369.59  34.385  &lt; 2e-16 ***\nAGE                   -24440.82    2763.16  -8.845  &lt; 2e-16 ***\nPROX_CBD              -78669.78    6768.97 -11.622  &lt; 2e-16 ***\nPROX_CHILDCARE       -351617.91  109467.25  -3.212  0.00135 ** \nPROX_ELDERLYCARE      171029.42   42110.51   4.061 5.14e-05 ***\nPROX_URA_GROWTH_AREA   38474.53   12523.57   3.072  0.00217 ** \nPROX_HAWKER_MARKET     23746.10   29299.76   0.810  0.41782    \nPROX_KINDERGARTEN     147468.99   82668.87   1.784  0.07466 .  \nPROX_MRT             -314599.68   57947.44  -5.429 6.66e-08 ***\nPROX_PARK             563280.50   66551.68   8.464  &lt; 2e-16 ***\nPROX_PRIMARY_SCH      180186.08   65237.95   2.762  0.00582 ** \nPROX_TOP_PRIMARY_SCH    2280.04   20410.43   0.112  0.91107    \nPROX_SHOPPING_MALL   -206604.06   42840.60  -4.823 1.57e-06 ***\nPROX_SUPERMARKET      -44991.80   77082.64  -0.584  0.55953    \nPROX_BUS_STOP         683121.35  138353.28   4.938 8.85e-07 ***\nNO_Of_UNITS             -231.18      89.03  -2.597  0.00951 ** \nFAMILY_FRIENDLY       140340.77   47020.55   2.985  0.00289 ** \nFREEHOLD              359913.01   49220.22   7.312 4.38e-13 ***\n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nResidual standard error: 755800 on 1417 degrees of freedom\nMultiple R-squared:  0.6518,    Adjusted R-squared:  0.6474 \nF-statistic: 147.4 on 18 and 1417 DF,  p-value: &lt; 2.2e-16"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex08/Hands-on_Ex08.html#preparing-publication-quality-table-olsrr-method",
    "href": "Hands-on_Ex/Hands-on_Ex08/Hands-on_Ex08.html#preparing-publication-quality-table-olsrr-method",
    "title": "In-Class Exercise 8 - Calibrating Hedonic Pricing Model for Private Highrise Property with GWR Method",
    "section": "4.4 Preparing Publication Quality Table: olsrr method",
    "text": "4.4 Preparing Publication Quality Table: olsrr method\n\n\nCode\ncondo.mlr1 &lt;- lm(formula = SELLING_PRICE ~ AREA_SQM + AGE + \n                   PROX_CBD + PROX_CHILDCARE + PROX_ELDERLYCARE +\n                   PROX_URA_GROWTH_AREA + PROX_MRT  + PROX_PARK + \n                   PROX_PRIMARY_SCH + PROX_SHOPPING_MALL    + PROX_BUS_STOP + \n                   NO_Of_UNITS + FAMILY_FRIENDLY + FREEHOLD,\n                 data=condo_resale.sf)\nols_regress(condo.mlr1)\n\n\n                                Model Summary                                 \n-----------------------------------------------------------------------------\nR                            0.807       RMSE                     751998.679 \nR-Squared                    0.651       MSE                571471422208.591 \nAdj. R-Squared               0.647       Coef. Var                    43.168 \nPred R-Squared               0.638       AIC                       42966.758 \nMAE                     414819.628       SBC                       43051.072 \n-----------------------------------------------------------------------------\n RMSE: Root Mean Square Error \n MSE: Mean Square Error \n MAE: Mean Absolute Error \n AIC: Akaike Information Criteria \n SBC: Schwarz Bayesian Criteria \n\n                                     ANOVA                                       \n--------------------------------------------------------------------------------\n                    Sum of                                                      \n                   Squares          DF         Mean Square       F         Sig. \n--------------------------------------------------------------------------------\nRegression    1.512586e+15          14        1.080418e+14    189.059    0.0000 \nResidual      8.120609e+14        1421    571471422208.591                      \nTotal         2.324647e+15        1435                                          \n--------------------------------------------------------------------------------\n\n                                               Parameter Estimates                                                \n-----------------------------------------------------------------------------------------------------------------\n               model           Beta    Std. Error    Std. Beta       t        Sig           lower          upper \n-----------------------------------------------------------------------------------------------------------------\n         (Intercept)     527633.222    108183.223                   4.877    0.000     315417.244     739849.200 \n            AREA_SQM      12777.523       367.479        0.584     34.771    0.000      12056.663      13498.382 \n                 AGE     -24687.739      2754.845       -0.167     -8.962    0.000     -30091.739     -19283.740 \n            PROX_CBD     -77131.323      5763.125       -0.263    -13.384    0.000     -88436.469     -65826.176 \n      PROX_CHILDCARE    -318472.751    107959.512       -0.084     -2.950    0.003    -530249.889    -106695.613 \n    PROX_ELDERLYCARE     185575.623     39901.864        0.090      4.651    0.000     107302.737     263848.510 \nPROX_URA_GROWTH_AREA      39163.254     11754.829        0.060      3.332    0.001      16104.571      62221.936 \n            PROX_MRT    -294745.107     56916.367       -0.112     -5.179    0.000    -406394.234    -183095.980 \n           PROX_PARK     570504.807     65507.029        0.150      8.709    0.000     442003.938     699005.677 \n    PROX_PRIMARY_SCH     159856.136     60234.599        0.062      2.654    0.008      41697.849     278014.424 \n  PROX_SHOPPING_MALL    -220947.251     36561.832       -0.115     -6.043    0.000    -292668.213    -149226.288 \n       PROX_BUS_STOP     682482.221    134513.243        0.134      5.074    0.000     418616.359     946348.082 \n         NO_Of_UNITS       -245.480        87.947       -0.053     -2.791    0.005       -418.000        -72.961 \n     FAMILY_FRIENDLY     146307.576     46893.021        0.057      3.120    0.002      54320.593     238294.560 \n            FREEHOLD     350599.812     48506.485        0.136      7.228    0.000     255447.802     445751.821 \n-----------------------------------------------------------------------------------------------------------------"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex08/Hands-on_Ex08.html#preparing-publication-quality-table-gtsummary-method",
    "href": "Hands-on_Ex/Hands-on_Ex08/Hands-on_Ex08.html#preparing-publication-quality-table-gtsummary-method",
    "title": "In-Class Exercise 8 - Calibrating Hedonic Pricing Model for Private Highrise Property with GWR Method",
    "section": "4.5 Preparing Publication Quality Table: gtsummary method",
    "text": "4.5 Preparing Publication Quality Table: gtsummary method\n\n\nCode\ntbl_regression(condo.mlr1, intercept = TRUE)\n\n\n\n\n\n\n  \n    \n      Characteristic\n      Beta\n      95% CI1\n      p-value\n    \n  \n  \n    (Intercept)\n527,633\n315,417, 739,849\n&lt;0.001\n    AREA_SQM\n12,778\n12,057, 13,498\n&lt;0.001\n    AGE\n-24,688\n-30,092, -19,284\n&lt;0.001\n    PROX_CBD\n-77,131\n-88,436, -65,826\n&lt;0.001\n    PROX_CHILDCARE\n-318,473\n-530,250, -106,696\n0.003\n    PROX_ELDERLYCARE\n185,576\n107,303, 263,849\n&lt;0.001\n    PROX_URA_GROWTH_AREA\n39,163\n16,105, 62,222\n&lt;0.001\n    PROX_MRT\n-294,745\n-406,394, -183,096\n&lt;0.001\n    PROX_PARK\n570,505\n442,004, 699,006\n&lt;0.001\n    PROX_PRIMARY_SCH\n159,856\n41,698, 278,014\n0.008\n    PROX_SHOPPING_MALL\n-220,947\n-292,668, -149,226\n&lt;0.001\n    PROX_BUS_STOP\n682,482\n418,616, 946,348\n&lt;0.001\n    NO_Of_UNITS\n-245\n-418, -73\n0.005\n    FAMILY_FRIENDLY\n146,308\n54,321, 238,295\n0.002\n    FREEHOLD\n350,600\n255,448, 445,752\n&lt;0.001\n  \n  \n  \n    \n      1 CI = Confidence Interval\n    \n  \n\n\n\n\nWith gtsummary package, model statistics can be included in the report by either appending them to the report table by using add_glance_table() or adding as a table source note by using add_glance_source_note() as shown in the code chunk below.\n\n\nCode\ntbl_regression(condo.mlr1, \n               intercept = TRUE) %&gt;% \n  add_glance_source_note(\n    label = list(sigma ~ \"\\U03C3\"),\n    include = c(r.squared, adj.r.squared, \n                AIC, statistic,\n                p.value, sigma))\n\n\n\n\n\n\n  \n    \n      Characteristic\n      Beta\n      95% CI1\n      p-value\n    \n  \n  \n    (Intercept)\n527,633\n315,417, 739,849\n&lt;0.001\n    AREA_SQM\n12,778\n12,057, 13,498\n&lt;0.001\n    AGE\n-24,688\n-30,092, -19,284\n&lt;0.001\n    PROX_CBD\n-77,131\n-88,436, -65,826\n&lt;0.001\n    PROX_CHILDCARE\n-318,473\n-530,250, -106,696\n0.003\n    PROX_ELDERLYCARE\n185,576\n107,303, 263,849\n&lt;0.001\n    PROX_URA_GROWTH_AREA\n39,163\n16,105, 62,222\n&lt;0.001\n    PROX_MRT\n-294,745\n-406,394, -183,096\n&lt;0.001\n    PROX_PARK\n570,505\n442,004, 699,006\n&lt;0.001\n    PROX_PRIMARY_SCH\n159,856\n41,698, 278,014\n0.008\n    PROX_SHOPPING_MALL\n-220,947\n-292,668, -149,226\n&lt;0.001\n    PROX_BUS_STOP\n682,482\n418,616, 946,348\n&lt;0.001\n    NO_Of_UNITS\n-245\n-418, -73\n0.005\n    FAMILY_FRIENDLY\n146,308\n54,321, 238,295\n0.002\n    FREEHOLD\n350,600\n255,448, 445,752\n&lt;0.001\n  \n  \n    \n      R² = 0.651; Adjusted R² = 0.647; AIC = 42,967; Statistic = 189; p-value = &lt;0.001; σ = 755,957\n    \n  \n  \n    \n      1 CI = Confidence Interval\n    \n  \n\n\n\n\n\n4.5.1 Check for multi colinearity\nIn this section, we would like to introduce you a fantastic R package specially programmed for performing OLS regression. It is called olsrr. It provides a collection of very useful methods for building better multiple linear regression models:\ncomprehensive regression output residual diagnostics measures of influence heteroskedasticity tests collinearity diagnostics model fit assessment variable contribution assessment variable selection procedures\nIn the code chunk below, the ols_vif_tol() of olsrr package is used to test if there are sign of multicollinearity.\n\n\nCode\nols_vif_tol(condo.mlr1)\n\n\n              Variables Tolerance      VIF\n1              AREA_SQM 0.8728554 1.145665\n2                   AGE 0.7071275 1.414172\n3              PROX_CBD 0.6356147 1.573280\n4        PROX_CHILDCARE 0.3066019 3.261559\n5      PROX_ELDERLYCARE 0.6598479 1.515501\n6  PROX_URA_GROWTH_AREA 0.7510311 1.331503\n7              PROX_MRT 0.5236090 1.909822\n8             PROX_PARK 0.8279261 1.207837\n9      PROX_PRIMARY_SCH 0.4524628 2.210126\n10   PROX_SHOPPING_MALL 0.6738795 1.483945\n11        PROX_BUS_STOP 0.3514118 2.845664\n12          NO_Of_UNITS 0.6901036 1.449058\n13      FAMILY_FRIENDLY 0.7244157 1.380423\n14             FREEHOLD 0.6931163 1.442759\n\n\n\n\n4.5.2 Test for Non-Linearity\nIn multiple linear regression, it is important for us to test the assumption that linearity and additivity of the relationship between dependent and independent variables.\nIn the code chunk below, the ols_plot_resid_fit() of olsrr package is used to perform linearity assumption test.\n\n\nCode\nols_plot_resid_fit(condo.mlr1)\n\n\n\n\n\n\n\n4.5.3 Test for Normality Assumption\nLastly, the code chunk below uses ols_plot_resid_hist() of olsrr package to perform normality assumption test.\n\n\nCode\nols_plot_resid_hist(condo.mlr1)\n\n\n\n\n\nThe figure reveals that the residual of the multiple linear regression model (i.e. condo.mlr1) is resemble normal distribution.\nIf you prefer formal statistical test methods, the ols_test_normality() of olsrr package can be used as shown in the code chun below.\n\n\nCode\nols_test_normality(condo.mlr1)\n\n\n-----------------------------------------------\n       Test             Statistic       pvalue  \n-----------------------------------------------\nShapiro-Wilk              0.6856         0.0000 \nKolmogorov-Smirnov        0.1366         0.0000 \nCramer-von Mises         121.0768        0.0000 \nAnderson-Darling         67.9551         0.0000 \n-----------------------------------------------\n\n\nThe summary table above reveals that the p-values of the four tests are way smaller than the alpha value of 0.05. Hence we will reject the null hypothesis and infer that there is statistical evidence that the residual are not normally distributed.\n\n\n4.5.4 Testing for Spatial Autocorrelation\nThe hedonic model we try to build are using geographically referenced attributes, hence it is also important for us to visual the residual of the hedonic pricing model.\nIn order to perform spatial autocorrelation test, we need to convert condo_resale.sf from sf data frame into a SpatialPointsDataFrame.\nFirst, we will export the residual of the hedonic pricing model and save it as a data frame.\n\n\nCode\nmlr.output &lt;- as.data.frame(condo.mlr1$residuals)\n\n\n\n\nCode\ncondo_resale.res.sf &lt;- cbind(condo_resale.sf, \n                        condo.mlr1$residuals) %&gt;%\nrename(`MLR_RES` = `condo.mlr1.residuals`)\n\n\n\n\nCode\ncondo_resale.sp &lt;- as_Spatial(condo_resale.res.sf)\ncondo_resale.sp\n\n\nclass       : SpatialPointsDataFrame \nfeatures    : 1436 \nextent      : 14940.85, 43352.45, 24765.67, 48382.81  (xmin, xmax, ymin, ymax)\ncrs         : +proj=tmerc +lat_0=1.36666666666667 +lon_0=103.833333333333 +k=1 +x_0=28001.642 +y_0=38744.572 +ellps=WGS84 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs \nvariables   : 23\nnames       : POSTCODE, SELLING_PRICE, AREA_SQM, AGE,    PROX_CBD, PROX_CHILDCARE, PROX_ELDERLYCARE, PROX_URA_GROWTH_AREA, PROX_HAWKER_MARKET, PROX_KINDERGARTEN,    PROX_MRT,   PROX_PARK, PROX_PRIMARY_SCH, PROX_TOP_PRIMARY_SCH, PROX_SHOPPING_MALL, ... \nmin values  :    18965,        540000,       34,   0, 0.386916393,    0.004927023,      0.054508623,          0.214539508,        0.051817113,       0.004927023, 0.052779424, 0.029064164,      0.077106132,          0.077106132,                  0, ... \nmax values  :   828833,       1.8e+07,      619,  37, 19.18042832,     3.46572633,      3.949157205,           9.15540001,        5.374348075,       2.229045366,  3.48037319,  2.16104919,      3.928989144,          6.748192062,        3.477433767, ... \n\n\n\n\nCode\ntmap_mode(\"view\")\n\n\n\n\nCode\ntm_shape(mpsz_svy21)+\n  tmap_options(check.and.fix = TRUE) +\n  tm_polygons(alpha = 0.4) +\ntm_shape(condo_resale.res.sf) +  \n  tm_dots(col = \"MLR_RES\",\n          alpha = 0.6,\n          style=\"quantile\") +\n  tm_view(set.zoom.limits = c(11,14))\n\n\n\n\n\n\n\n\n\nCode\ntmap_mode(\"plot\")\n\n\nThe figure above reveal that there is sign of spatial autocorrelation.\nTo proof that our observation is indeed true, the Moran’s I test will be performed\nFirst, we will compute the distance-based weight matrix by using dnearneigh() function of spdep.\n\n\nCode\nnb &lt;- dnearneigh(coordinates(condo_resale.sp), 0, 1500, longlat = FALSE)\nsummary(nb)\n\n\nNeighbour list object:\nNumber of regions: 1436 \nNumber of nonzero links: 66266 \nPercentage nonzero weights: 3.213526 \nAverage number of links: 46.14624 \n10 disjoint connected subgraphs\nLink number distribution:\n\n  1   3   5   7   9  10  11  12  13  14  15  16  17  18  19  20  21  22  23  24 \n  3   3   9   4   3  15  10  19  17  45  19   5  14  29  19   6  35  45  18  47 \n 25  26  27  28  29  30  31  32  33  34  35  36  37  38  39  40  41  42  43  44 \n 16  43  22  26  21  11   9  23  22  13  16  25  21  37  16  18   8  21   4  12 \n 45  46  47  48  49  50  51  52  53  54  55  56  57  58  59  60  61  62  63  64 \n  8  36  18  14  14  43  11  12   8  13  12  13   4   5   6  12  11  20  29  33 \n 65  66  67  68  69  70  71  72  73  74  75  76  77  78  79  80  81  82  83  84 \n 15  20  10  14  15  15  11  16  12  10   8  19  12  14   9   8   4  13  11   6 \n 85  86  87  88  89  90  91  92  93  94  95  96  97  98  99 100 101 102 103 104 \n  4   9   4   4   4   6   2  16   9   4   5   9   3   9   4   2   1   2   1   1 \n105 106 107 108 109 110 112 116 125 \n  1   5   9   2   1   3   1   1   1 \n3 least connected regions:\n193 194 277 with 1 link\n1 most connected region:\n285 with 125 links\n\n\nNext, nb2listw() of spdep packge will be used to convert the output neighbours lists (i.e. nb) into a spatial weights.\n\n\nCode\nnb_lw &lt;- nb2listw(nb, style = 'W')\nsummary(nb_lw)\n\n\nCharacteristics of weights list object:\nNeighbour list object:\nNumber of regions: 1436 \nNumber of nonzero links: 66266 \nPercentage nonzero weights: 3.213526 \nAverage number of links: 46.14624 \n10 disjoint connected subgraphs\nLink number distribution:\n\n  1   3   5   7   9  10  11  12  13  14  15  16  17  18  19  20  21  22  23  24 \n  3   3   9   4   3  15  10  19  17  45  19   5  14  29  19   6  35  45  18  47 \n 25  26  27  28  29  30  31  32  33  34  35  36  37  38  39  40  41  42  43  44 \n 16  43  22  26  21  11   9  23  22  13  16  25  21  37  16  18   8  21   4  12 \n 45  46  47  48  49  50  51  52  53  54  55  56  57  58  59  60  61  62  63  64 \n  8  36  18  14  14  43  11  12   8  13  12  13   4   5   6  12  11  20  29  33 \n 65  66  67  68  69  70  71  72  73  74  75  76  77  78  79  80  81  82  83  84 \n 15  20  10  14  15  15  11  16  12  10   8  19  12  14   9   8   4  13  11   6 \n 85  86  87  88  89  90  91  92  93  94  95  96  97  98  99 100 101 102 103 104 \n  4   9   4   4   4   6   2  16   9   4   5   9   3   9   4   2   1   2   1   1 \n105 106 107 108 109 110 112 116 125 \n  1   5   9   2   1   3   1   1   1 \n3 least connected regions:\n193 194 277 with 1 link\n1 most connected region:\n285 with 125 links\n\nWeights style: W \nWeights constants summary:\n     n      nn   S0       S1       S2\nW 1436 2062096 1436 94.81916 5798.341\n\n\nNext, lm.morantest() of spdep package will be used to perform Moran’s I test for residual spatial autocorrelation\n\n\nCode\nlm.morantest(condo.mlr1, nb_lw)\n\n\n\n    Global Moran I for regression residuals\n\ndata:  \nmodel: lm(formula = SELLING_PRICE ~ AREA_SQM + AGE + PROX_CBD +\nPROX_CHILDCARE + PROX_ELDERLYCARE + PROX_URA_GROWTH_AREA + PROX_MRT +\nPROX_PARK + PROX_PRIMARY_SCH + PROX_SHOPPING_MALL + PROX_BUS_STOP +\nNO_Of_UNITS + FAMILY_FRIENDLY + FREEHOLD, data = condo_resale.sf)\nweights: nb_lw\n\nMoran I statistic standard deviate = 24.366, p-value &lt; 2.2e-16\nalternative hypothesis: greater\nsample estimates:\nObserved Moran I      Expectation         Variance \n    1.438876e-01    -5.487594e-03     3.758259e-05"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex08/Hands-on_Ex08.html#building-fixed-bandwidth-gwr-model",
    "href": "Hands-on_Ex/Hands-on_Ex08/Hands-on_Ex08.html#building-fixed-bandwidth-gwr-model",
    "title": "In-Class Exercise 8 - Calibrating Hedonic Pricing Model for Private Highrise Property with GWR Method",
    "section": "5.1 Building Fixed Bandwidth GWR Model",
    "text": "5.1 Building Fixed Bandwidth GWR Model\n\n5.1.1 Computing fixed bandwidth\nIn the code chunk below bw.gwr() of GWModel package is used to determine the optimal fixed bandwidth to use in the model. Notice that the argument adaptive is set to FALSE indicates that we are interested to compute the fixed bandwidth.\nThere are two possible approaches can be uused to determine the stopping rule, they are: CV cross-validation approach and AIC corrected (AICc) approach. We define the stopping rule using approach argeement.\n\n\nCode\nbw.fixed &lt;- bw.gwr(formula = SELLING_PRICE ~ AREA_SQM + AGE + PROX_CBD + \n                     PROX_CHILDCARE + PROX_ELDERLYCARE  + PROX_URA_GROWTH_AREA + \n                     PROX_MRT   + PROX_PARK + PROX_PRIMARY_SCH + \n                     PROX_SHOPPING_MALL + PROX_BUS_STOP + NO_Of_UNITS + \n                     FAMILY_FRIENDLY + FREEHOLD, \n                   data=condo_resale.sp, \n                   approach=\"CV\", \n                   kernel=\"gaussian\", \n                   adaptive=FALSE, \n                   longlat=FALSE)\n\n\nFixed bandwidth: 17660.96 CV score: 8.259118e+14 \nFixed bandwidth: 10917.26 CV score: 7.970454e+14 \nFixed bandwidth: 6749.419 CV score: 7.273273e+14 \nFixed bandwidth: 4173.553 CV score: 6.300006e+14 \nFixed bandwidth: 2581.58 CV score: 5.404958e+14 \nFixed bandwidth: 1597.687 CV score: 4.857515e+14 \nFixed bandwidth: 989.6077 CV score: 4.722431e+14 \nFixed bandwidth: 613.7939 CV score: 1.378294e+16 \nFixed bandwidth: 1221.873 CV score: 4.778717e+14 \nFixed bandwidth: 846.0596 CV score: 4.791629e+14 \nFixed bandwidth: 1078.325 CV score: 4.751406e+14 \nFixed bandwidth: 934.7772 CV score: 4.72518e+14 \nFixed bandwidth: 1023.495 CV score: 4.730305e+14 \nFixed bandwidth: 968.6643 CV score: 4.721317e+14 \nFixed bandwidth: 955.7206 CV score: 4.722072e+14 \nFixed bandwidth: 976.6639 CV score: 4.721387e+14 \nFixed bandwidth: 963.7202 CV score: 4.721484e+14 \nFixed bandwidth: 971.7199 CV score: 4.721293e+14 \nFixed bandwidth: 973.6083 CV score: 4.721309e+14 \nFixed bandwidth: 970.5527 CV score: 4.721295e+14 \nFixed bandwidth: 972.4412 CV score: 4.721296e+14 \nFixed bandwidth: 971.2741 CV score: 4.721292e+14 \nFixed bandwidth: 970.9985 CV score: 4.721293e+14 \nFixed bandwidth: 971.4443 CV score: 4.721292e+14 \nFixed bandwidth: 971.5496 CV score: 4.721293e+14 \nFixed bandwidth: 971.3793 CV score: 4.721292e+14 \nFixed bandwidth: 971.3391 CV score: 4.721292e+14 \nFixed bandwidth: 971.3143 CV score: 4.721292e+14 \nFixed bandwidth: 971.3545 CV score: 4.721292e+14 \nFixed bandwidth: 971.3296 CV score: 4.721292e+14 \nFixed bandwidth: 971.345 CV score: 4.721292e+14 \nFixed bandwidth: 971.3355 CV score: 4.721292e+14 \nFixed bandwidth: 971.3413 CV score: 4.721292e+14 \nFixed bandwidth: 971.3377 CV score: 4.721292e+14 \nFixed bandwidth: 971.34 CV score: 4.721292e+14 \nFixed bandwidth: 971.3405 CV score: 4.721292e+14 \nFixed bandwidth: 971.3408 CV score: 4.721292e+14 \nFixed bandwidth: 971.3403 CV score: 4.721292e+14 \nFixed bandwidth: 971.3406 CV score: 4.721292e+14 \nFixed bandwidth: 971.3404 CV score: 4.721292e+14 \nFixed bandwidth: 971.3405 CV score: 4.721292e+14 \nFixed bandwidth: 971.3405 CV score: 4.721292e+14 \n\n\n\n\n5.1.2 GWModel method - fixed bandwith\n\n\nCode\ngwr.fixed &lt;- gwr.basic(formula = SELLING_PRICE ~ AREA_SQM + AGE + PROX_CBD + \n                         PROX_CHILDCARE + PROX_ELDERLYCARE  + PROX_URA_GROWTH_AREA + \n                         PROX_MRT   + PROX_PARK + PROX_PRIMARY_SCH + \n                         PROX_SHOPPING_MALL + PROX_BUS_STOP + NO_Of_UNITS + \n                         FAMILY_FRIENDLY + FREEHOLD, \n                       data=condo_resale.sp, \n                       bw=bw.fixed, \n                       kernel = 'gaussian', \n                       longlat = FALSE)\n\n\nThe output is saved in a list of class “gwrm”. The code below can be used to display the model output.\n\n\nCode\ngwr.fixed\n\n\n   ***********************************************************************\n   *                       Package   GWmodel                             *\n   ***********************************************************************\n   Program starts at: 2024-03-09 23:13:43.972933 \n   Call:\n   gwr.basic(formula = SELLING_PRICE ~ AREA_SQM + AGE + PROX_CBD + \n    PROX_CHILDCARE + PROX_ELDERLYCARE + PROX_URA_GROWTH_AREA + \n    PROX_MRT + PROX_PARK + PROX_PRIMARY_SCH + PROX_SHOPPING_MALL + \n    PROX_BUS_STOP + NO_Of_UNITS + FAMILY_FRIENDLY + FREEHOLD, \n    data = condo_resale.sp, bw = bw.fixed, kernel = \"gaussian\", \n    longlat = FALSE)\n\n   Dependent (y) variable:  SELLING_PRICE\n   Independent variables:  AREA_SQM AGE PROX_CBD PROX_CHILDCARE PROX_ELDERLYCARE PROX_URA_GROWTH_AREA PROX_MRT PROX_PARK PROX_PRIMARY_SCH PROX_SHOPPING_MALL PROX_BUS_STOP NO_Of_UNITS FAMILY_FRIENDLY FREEHOLD\n   Number of data points: 1436\n   ***********************************************************************\n   *                    Results of Global Regression                     *\n   ***********************************************************************\n\n   Call:\n    lm(formula = formula, data = data)\n\n   Residuals:\n     Min       1Q   Median       3Q      Max \n-3470778  -298119   -23481   248917 12234210 \n\n   Coefficients:\n                          Estimate Std. Error t value Pr(&gt;|t|)    \n   (Intercept)           527633.22  108183.22   4.877 1.20e-06 ***\n   AREA_SQM               12777.52     367.48  34.771  &lt; 2e-16 ***\n   AGE                   -24687.74    2754.84  -8.962  &lt; 2e-16 ***\n   PROX_CBD              -77131.32    5763.12 -13.384  &lt; 2e-16 ***\n   PROX_CHILDCARE       -318472.75  107959.51  -2.950 0.003231 ** \n   PROX_ELDERLYCARE      185575.62   39901.86   4.651 3.61e-06 ***\n   PROX_URA_GROWTH_AREA   39163.25   11754.83   3.332 0.000885 ***\n   PROX_MRT             -294745.11   56916.37  -5.179 2.56e-07 ***\n   PROX_PARK             570504.81   65507.03   8.709  &lt; 2e-16 ***\n   PROX_PRIMARY_SCH      159856.14   60234.60   2.654 0.008046 ** \n   PROX_SHOPPING_MALL   -220947.25   36561.83  -6.043 1.93e-09 ***\n   PROX_BUS_STOP         682482.22  134513.24   5.074 4.42e-07 ***\n   NO_Of_UNITS             -245.48      87.95  -2.791 0.005321 ** \n   FAMILY_FRIENDLY       146307.58   46893.02   3.120 0.001845 ** \n   FREEHOLD              350599.81   48506.48   7.228 7.98e-13 ***\n\n   ---Significance stars\n   Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1 \n   Residual standard error: 756000 on 1421 degrees of freedom\n   Multiple R-squared: 0.6507\n   Adjusted R-squared: 0.6472 \n   F-statistic: 189.1 on 14 and 1421 DF,  p-value: &lt; 2.2e-16 \n   ***Extra Diagnostic information\n   Residual sum of squares: 8.120609e+14\n   Sigma(hat): 752522.9\n   AIC:  42966.76\n   AICc:  42967.14\n   BIC:  41731.39\n   ***********************************************************************\n   *          Results of Geographically Weighted Regression              *\n   ***********************************************************************\n\n   *********************Model calibration information*********************\n   Kernel function: gaussian \n   Fixed bandwidth: 971.3405 \n   Regression points: the same locations as observations are used.\n   Distance metric: Euclidean distance metric is used.\n\n   ****************Summary of GWR coefficient estimates:******************\n                               Min.     1st Qu.      Median     3rd Qu.\n   Intercept            -3.5988e+07 -5.1998e+05  7.6780e+05  1.7412e+06\n   AREA_SQM              1.0003e+03  5.2758e+03  7.4740e+03  1.2301e+04\n   AGE                  -1.3475e+05 -2.0813e+04 -8.6260e+03 -3.7784e+03\n   PROX_CBD             -7.7047e+07 -2.3608e+05 -8.3600e+04  3.4646e+04\n   PROX_CHILDCARE       -6.0097e+06 -3.3667e+05 -9.7425e+04  2.9007e+05\n   PROX_ELDERLYCARE     -3.5000e+06 -1.5970e+05  3.1971e+04  1.9577e+05\n   PROX_URA_GROWTH_AREA -3.0170e+06 -8.2013e+04  7.0749e+04  2.2612e+05\n   PROX_MRT             -3.5282e+06 -6.5836e+05 -1.8833e+05  3.6922e+04\n   PROX_PARK            -1.2062e+06 -2.1732e+05  3.5383e+04  4.1335e+05\n   PROX_PRIMARY_SCH     -2.2695e+07 -1.7066e+05  4.8472e+04  5.1555e+05\n   PROX_SHOPPING_MALL   -7.2585e+06 -1.6684e+05 -1.0517e+04  1.5923e+05\n   PROX_BUS_STOP        -1.4676e+06 -4.5207e+04  3.7601e+05  1.1664e+06\n   NO_Of_UNITS          -1.3170e+03 -2.4822e+02 -3.0846e+01  2.5496e+02\n   FAMILY_FRIENDLY      -2.2749e+06 -1.1140e+05  7.6214e+03  1.6107e+05\n   FREEHOLD             -9.2067e+06  3.8073e+04  1.5169e+05  3.7528e+05\n                             Max.\n   Intercept            112793548\n   AREA_SQM                 21575\n   AGE                     434201\n   PROX_CBD               2704596\n   PROX_CHILDCARE         1654087\n   PROX_ELDERLYCARE      38867814\n   PROX_URA_GROWTH_AREA  78515730\n   PROX_MRT               3124316\n   PROX_PARK             18122425\n   PROX_PRIMARY_SCH       4637503\n   PROX_SHOPPING_MALL     1529952\n   PROX_BUS_STOP         11342182\n   NO_Of_UNITS              12907\n   FAMILY_FRIENDLY        1720744\n   FREEHOLD               6073636\n   ************************Diagnostic information*************************\n   Number of data points: 1436 \n   Effective number of parameters (2trace(S) - trace(S'S)): 438.3804 \n   Effective degrees of freedom (n-2trace(S) + trace(S'S)): 997.6196 \n   AICc (GWR book, Fotheringham, et al. 2002, p. 61, eq 2.33): 42263.61 \n   AIC (GWR book, Fotheringham, et al. 2002,GWR p. 96, eq. 4.22): 41632.36 \n   BIC (GWR book, Fotheringham, et al. 2002,GWR p. 61, eq. 2.34): 42515.71 \n   Residual sum of squares: 2.53407e+14 \n   R-square value:  0.8909912 \n   Adjusted R-square value:  0.8430417 \n\n   ***********************************************************************\n   Program stops at: 2024-03-09 23:13:45.145323"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex08/Hands-on_Ex08.html#building-adaptive-bandwidth-gwr-model",
    "href": "Hands-on_Ex/Hands-on_Ex08/Hands-on_Ex08.html#building-adaptive-bandwidth-gwr-model",
    "title": "In-Class Exercise 8 - Calibrating Hedonic Pricing Model for Private Highrise Property with GWR Method",
    "section": "5.2 Building Adaptive Bandwidth GWR Model",
    "text": "5.2 Building Adaptive Bandwidth GWR Model\n\n5.2.1 Computing adaptive bandwidth\n\n\nCode\nbw.adaptive &lt;- bw.gwr(formula = SELLING_PRICE ~ AREA_SQM + AGE  + \n                        PROX_CBD + PROX_CHILDCARE + PROX_ELDERLYCARE    + \n                        PROX_URA_GROWTH_AREA + PROX_MRT + PROX_PARK + \n                        PROX_PRIMARY_SCH + PROX_SHOPPING_MALL   + PROX_BUS_STOP + \n                        NO_Of_UNITS + FAMILY_FRIENDLY + FREEHOLD, \n                      data=condo_resale.sp, \n                      approach=\"CV\", \n                      kernel=\"gaussian\", \n                      adaptive=TRUE, \n                      longlat=FALSE)\n\n\nAdaptive bandwidth: 895 CV score: 7.952401e+14 \nAdaptive bandwidth: 561 CV score: 7.667364e+14 \nAdaptive bandwidth: 354 CV score: 6.953454e+14 \nAdaptive bandwidth: 226 CV score: 6.15223e+14 \nAdaptive bandwidth: 147 CV score: 5.674373e+14 \nAdaptive bandwidth: 98 CV score: 5.426745e+14 \nAdaptive bandwidth: 68 CV score: 5.168117e+14 \nAdaptive bandwidth: 49 CV score: 4.859631e+14 \nAdaptive bandwidth: 37 CV score: 4.646518e+14 \nAdaptive bandwidth: 30 CV score: 4.422088e+14 \nAdaptive bandwidth: 25 CV score: 4.430816e+14 \nAdaptive bandwidth: 32 CV score: 4.505602e+14 \nAdaptive bandwidth: 27 CV score: 4.462172e+14 \nAdaptive bandwidth: 30 CV score: 4.422088e+14 \n\n\n\n\n5.2.2 Constructing the adaptive bandwidth gwr mode\n\n\nCode\ngwr.adaptive &lt;- gwr.basic(formula = SELLING_PRICE ~ AREA_SQM + AGE + \n                            PROX_CBD + PROX_CHILDCARE + PROX_ELDERLYCARE + \n                            PROX_URA_GROWTH_AREA + PROX_MRT + PROX_PARK + \n                            PROX_PRIMARY_SCH + PROX_SHOPPING_MALL + PROX_BUS_STOP + \n                            NO_Of_UNITS + FAMILY_FRIENDLY + FREEHOLD, \n                          data=condo_resale.sp, bw=bw.adaptive, \n                          kernel = 'gaussian', \n                          adaptive=TRUE, \n                          longlat = FALSE)\n\n\n\n\nCode\ngwr.adaptive\n\n\n   ***********************************************************************\n   *                       Package   GWmodel                             *\n   ***********************************************************************\n   Program starts at: 2024-03-09 23:13:53.008819 \n   Call:\n   gwr.basic(formula = SELLING_PRICE ~ AREA_SQM + AGE + PROX_CBD + \n    PROX_CHILDCARE + PROX_ELDERLYCARE + PROX_URA_GROWTH_AREA + \n    PROX_MRT + PROX_PARK + PROX_PRIMARY_SCH + PROX_SHOPPING_MALL + \n    PROX_BUS_STOP + NO_Of_UNITS + FAMILY_FRIENDLY + FREEHOLD, \n    data = condo_resale.sp, bw = bw.adaptive, kernel = \"gaussian\", \n    adaptive = TRUE, longlat = FALSE)\n\n   Dependent (y) variable:  SELLING_PRICE\n   Independent variables:  AREA_SQM AGE PROX_CBD PROX_CHILDCARE PROX_ELDERLYCARE PROX_URA_GROWTH_AREA PROX_MRT PROX_PARK PROX_PRIMARY_SCH PROX_SHOPPING_MALL PROX_BUS_STOP NO_Of_UNITS FAMILY_FRIENDLY FREEHOLD\n   Number of data points: 1436\n   ***********************************************************************\n   *                    Results of Global Regression                     *\n   ***********************************************************************\n\n   Call:\n    lm(formula = formula, data = data)\n\n   Residuals:\n     Min       1Q   Median       3Q      Max \n-3470778  -298119   -23481   248917 12234210 \n\n   Coefficients:\n                          Estimate Std. Error t value Pr(&gt;|t|)    \n   (Intercept)           527633.22  108183.22   4.877 1.20e-06 ***\n   AREA_SQM               12777.52     367.48  34.771  &lt; 2e-16 ***\n   AGE                   -24687.74    2754.84  -8.962  &lt; 2e-16 ***\n   PROX_CBD              -77131.32    5763.12 -13.384  &lt; 2e-16 ***\n   PROX_CHILDCARE       -318472.75  107959.51  -2.950 0.003231 ** \n   PROX_ELDERLYCARE      185575.62   39901.86   4.651 3.61e-06 ***\n   PROX_URA_GROWTH_AREA   39163.25   11754.83   3.332 0.000885 ***\n   PROX_MRT             -294745.11   56916.37  -5.179 2.56e-07 ***\n   PROX_PARK             570504.81   65507.03   8.709  &lt; 2e-16 ***\n   PROX_PRIMARY_SCH      159856.14   60234.60   2.654 0.008046 ** \n   PROX_SHOPPING_MALL   -220947.25   36561.83  -6.043 1.93e-09 ***\n   PROX_BUS_STOP         682482.22  134513.24   5.074 4.42e-07 ***\n   NO_Of_UNITS             -245.48      87.95  -2.791 0.005321 ** \n   FAMILY_FRIENDLY       146307.58   46893.02   3.120 0.001845 ** \n   FREEHOLD              350599.81   48506.48   7.228 7.98e-13 ***\n\n   ---Significance stars\n   Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1 \n   Residual standard error: 756000 on 1421 degrees of freedom\n   Multiple R-squared: 0.6507\n   Adjusted R-squared: 0.6472 \n   F-statistic: 189.1 on 14 and 1421 DF,  p-value: &lt; 2.2e-16 \n   ***Extra Diagnostic information\n   Residual sum of squares: 8.120609e+14\n   Sigma(hat): 752522.9\n   AIC:  42966.76\n   AICc:  42967.14\n   BIC:  41731.39\n   ***********************************************************************\n   *          Results of Geographically Weighted Regression              *\n   ***********************************************************************\n\n   *********************Model calibration information*********************\n   Kernel function: gaussian \n   Adaptive bandwidth: 30 (number of nearest neighbours)\n   Regression points: the same locations as observations are used.\n   Distance metric: Euclidean distance metric is used.\n\n   ****************Summary of GWR coefficient estimates:******************\n                               Min.     1st Qu.      Median     3rd Qu.\n   Intercept            -1.3487e+08 -2.4669e+05  7.7928e+05  1.6194e+06\n   AREA_SQM              3.3188e+03  5.6285e+03  7.7825e+03  1.2738e+04\n   AGE                  -9.6746e+04 -2.9288e+04 -1.4043e+04 -5.6119e+03\n   PROX_CBD             -2.5330e+06 -1.6256e+05 -7.7242e+04  2.6624e+03\n   PROX_CHILDCARE       -1.2790e+06 -2.0175e+05  8.7158e+03  3.7778e+05\n   PROX_ELDERLYCARE     -1.6212e+06 -9.2050e+04  6.1029e+04  2.8184e+05\n   PROX_URA_GROWTH_AREA -7.2686e+06 -3.0350e+04  4.5869e+04  2.4613e+05\n   PROX_MRT             -4.3781e+07 -6.7282e+05 -2.2115e+05 -7.4593e+04\n   PROX_PARK            -2.9020e+06 -1.6782e+05  1.1601e+05  4.6572e+05\n   PROX_PRIMARY_SCH     -8.6418e+05 -1.6627e+05 -7.7853e+03  4.3222e+05\n   PROX_SHOPPING_MALL   -1.8272e+06 -1.3175e+05 -1.4049e+04  1.3799e+05\n   PROX_BUS_STOP        -2.0579e+06 -7.1461e+04  4.1104e+05  1.2071e+06\n   NO_Of_UNITS          -2.1993e+03 -2.3685e+02 -3.4699e+01  1.1657e+02\n   FAMILY_FRIENDLY      -5.9879e+05 -5.0927e+04  2.6173e+04  2.2481e+05\n   FREEHOLD             -1.6340e+05  4.0765e+04  1.9023e+05  3.7960e+05\n                            Max.\n   Intercept            18758355\n   AREA_SQM                23064\n   AGE                     13303\n   PROX_CBD             11346650\n   PROX_CHILDCARE        2892127\n   PROX_ELDERLYCARE      2465671\n   PROX_URA_GROWTH_AREA  7384059\n   PROX_MRT              1186242\n   PROX_PARK             2588497\n   PROX_PRIMARY_SCH      3381462\n   PROX_SHOPPING_MALL   38038564\n   PROX_BUS_STOP        12081592\n   NO_Of_UNITS              1010\n   FAMILY_FRIENDLY       2072414\n   FREEHOLD              1813995\n   ************************Diagnostic information*************************\n   Number of data points: 1436 \n   Effective number of parameters (2trace(S) - trace(S'S)): 350.3088 \n   Effective degrees of freedom (n-2trace(S) + trace(S'S)): 1085.691 \n   AICc (GWR book, Fotheringham, et al. 2002, p. 61, eq 2.33): 41982.22 \n   AIC (GWR book, Fotheringham, et al. 2002,GWR p. 96, eq. 4.22): 41546.74 \n   BIC (GWR book, Fotheringham, et al. 2002,GWR p. 61, eq. 2.34): 41914.08 \n   Residual sum of squares: 2.528227e+14 \n   R-square value:  0.8912425 \n   Adjusted R-square value:  0.8561185 \n\n   ***********************************************************************\n   Program stops at: 2024-03-09 23:13:54.906363"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex08/Hands-on_Ex08.html#visualising-gwr-output",
    "href": "Hands-on_Ex/Hands-on_Ex08/Hands-on_Ex08.html#visualising-gwr-output",
    "title": "In-Class Exercise 8 - Calibrating Hedonic Pricing Model for Private Highrise Property with GWR Method",
    "section": "5.3 Visualising GWR Output",
    "text": "5.3 Visualising GWR Output\nIn addition to regression residuals, the output feature class table includes fields for observed and predicted y values, condition number (cond), Local R2, residuals, and explanatory variable coefficients and standard errors:\nCondition Number: this diagnostic evaluates local collinearity. In the presence of strong local collinearity, results become unstable. Results associated with condition numbers larger than 30, may be unreliable.\nLocal R2: these values range between 0.0 and 1.0 and indicate how well the local regression model fits observed y values. Very low values indicate the local model is performing poorly. Mapping the Local R2 values to see where GWR predicts well and where it predicts poorly may provide clues about important variables that may be missing from the regression model.\nPredicted: these are the estimated (or fitted) y values 3. computed by GWR.\nResiduals: to obtain the residual values, the fitted y values are subtracted from the observed y values. Standardized residuals have a mean of zero and a standard deviation of 1. A cold-to-hot rendered map of standardized residuals can be produce by using these values.\nCoefficient Standard Error: these values measure the reliability of each coefficient estimate. Confidence in those estimates are higher when standard errors are small in relation to the actual coefficient values. Large standard errors may indicate problems with local collinearity.\nThey are all stored in a SpatialPointsDataFrame or SpatialPolygonsDataFrame object integrated with fit.points, GWR coefficient estimates, y value, predicted values, coefficient standard errors and t-values in its “data” slot in an object called SDF of the output list."
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex08/Hands-on_Ex08.html#converting-sdf-into-sf-data.frame",
    "href": "Hands-on_Ex/Hands-on_Ex08/Hands-on_Ex08.html#converting-sdf-into-sf-data.frame",
    "title": "In-Class Exercise 8 - Calibrating Hedonic Pricing Model for Private Highrise Property with GWR Method",
    "section": "5.4 Converting SDF into sf data.frame",
    "text": "5.4 Converting SDF into sf data.frame\n\n\nCode\ncondo_resale.sf.adaptive &lt;- st_as_sf(gwr.adaptive$SDF) %&gt;%\n  st_transform(crs=3414)\n\n\n\n\nCode\ncondo_resale.sf.adaptive.svy21 &lt;- st_transform(condo_resale.sf.adaptive, 3414)\ncondo_resale.sf.adaptive.svy21  \n\n\nSimple feature collection with 1436 features and 51 fields\nGeometry type: POINT\nDimension:     XY\nBounding box:  xmin: 14940.85 ymin: 24765.67 xmax: 43352.45 ymax: 48382.81\nProjected CRS: SVY21 / Singapore TM\nFirst 10 features:\n    Intercept  AREA_SQM        AGE  PROX_CBD PROX_CHILDCARE PROX_ELDERLYCARE\n1   2050011.7  9561.892  -9514.634 -120681.9      319266.92       -393417.79\n2   1633128.2 16576.853 -58185.479 -149434.2      441102.18        325188.74\n3   3433608.2 13091.861 -26707.386 -259397.8     -120116.82        535855.81\n4    234358.9 20730.601 -93308.988 2426853.7      480825.28        314783.72\n5   2285804.9  6722.836 -17608.018 -316835.5       90764.78       -137384.61\n6  -3568877.4  6039.581 -26535.592  327306.1     -152531.19       -700392.85\n7  -2874842.4 16843.575 -59166.727 -983577.2     -177810.50       -122384.02\n8   2038086.0  6905.135 -17681.897 -285076.6       70259.40        -96012.78\n9   1718478.4  9580.703 -14401.128  105803.4     -657698.02       -123276.00\n10  3457054.0 14072.011 -31579.884 -234895.4       79961.45        548581.04\n   PROX_URA_GROWTH_AREA    PROX_MRT  PROX_PARK PROX_PRIMARY_SCH\n1            -159980.20  -299742.96 -172104.47        242668.03\n2            -142290.39 -2510522.23  523379.72       1106830.66\n3            -253621.21  -936853.28  209099.85        571462.33\n4           -2679297.89 -2039479.50 -759153.26       3127477.21\n5             303714.81   -44567.05  -10284.62         30413.56\n6             -28051.25   733566.47 1511488.92        320878.23\n7            1397676.38 -2745430.34  710114.74       1786570.95\n8             269368.71   -14552.99   73533.34         53359.73\n9            -361974.72  -476785.32 -132067.59        -40128.92\n10           -150024.38 -1503835.53  574155.47        108996.67\n   PROX_SHOPPING_MALL PROX_BUS_STOP  NO_Of_UNITS FAMILY_FRIENDLY  FREEHOLD\n1          300881.390     1210615.4  104.8290640       -9075.370  303955.6\n2          -87693.378     1843587.2 -288.3441183      310074.664  396221.3\n3         -126732.712     1411924.9   -9.5532945        5949.746  168821.7\n4          -29593.342     7225577.5 -161.3551620     1556178.531 1212515.6\n5           -7490.586      677577.0   42.2659674       58986.951  328175.2\n6          258583.881     1086012.6 -214.3671271      201992.641  471873.1\n7         -384251.210     5094060.5   -0.9212521      359659.512  408871.9\n8          -39634.902      735767.1   30.1741069       55602.506  347075.0\n9          276718.757     2815772.4  675.1615559      -30453.297  503872.8\n10        -454726.822     2123557.0  -21.3044311     -100935.586  213324.6\n         y    yhat    residual CV_Score Stud_residual Intercept_SE AREA_SQM_SE\n1  3000000 2886532   113468.16        0    0.38207013     516105.5    823.2860\n2  3880000 3466801   413198.52        0    1.01433140     488083.5    825.2380\n3  3325000 3616527  -291527.20        0   -0.83780678     963711.4    988.2240\n4  4250000 5435482 -1185481.63        0   -2.84614670     444185.5    617.4007\n5  1400000 1388166    11834.26        0    0.03404453    2119620.6   1376.2778\n6  1320000 1516702  -196701.94        0   -0.72065800   28572883.7   2348.0091\n7  3410000 3266881   143118.77        0    0.41291992     679546.6    893.5893\n8  1420000 1431955   -11955.27        0   -0.03033109    2217773.1   1415.2604\n9  2025000 1832799   192200.83        0    0.52018109     814281.8    943.8434\n10 2550000 2223364   326635.53        0    1.10559735    2410252.0   1271.4073\n      AGE_SE PROX_CBD_SE PROX_CHILDCARE_SE PROX_ELDERLYCARE_SE\n1   5889.782    37411.22          319111.1           120633.34\n2   6226.916    23615.06          299705.3            84546.69\n3   6510.236    56103.77          349128.5           129687.07\n4   6010.511   469337.41          304965.2           127150.69\n5   8180.361   410644.47          698720.6           327371.55\n6  14601.909  5272846.47         1141599.8          1653002.19\n7   8970.629   346164.20          530101.1           148598.71\n8   8661.309   438035.69          742532.8           399221.05\n9  11791.208    89148.35          704630.7           329683.30\n10  9941.980   173532.77          500976.2           281876.74\n   PROX_URA_GROWTH_AREA_SE PROX_MRT_SE PROX_PARK_SE PROX_PRIMARY_SCH_SE\n1                 56207.39    185181.3     205499.6            152400.7\n2                 76956.50    281133.9     229358.7            165150.7\n3                 95774.60    275483.7     314124.3            196662.6\n4                470762.12    279877.1     227249.4            240878.9\n5                474339.56    363830.0     364580.9            249087.7\n6               5496627.21    730453.2    1741712.0            683265.5\n7                371692.97    375511.9     297400.9            344602.8\n8                517977.91    423155.4     440984.4            261251.2\n9                153436.22    285325.4     304998.4            278258.5\n10               239182.57    571355.7     599131.8            331284.8\n   PROX_SHOPPING_MALL_SE PROX_BUS_STOP_SE NO_Of_UNITS_SE FAMILY_FRIENDLY_SE\n1               109268.8         600668.6       218.1258           131474.7\n2                98906.8         410222.1       208.9410           114989.1\n3               119913.3         464156.7       210.9828           146607.2\n4               177104.1         562810.8       361.7767           108726.6\n5               301032.9         740922.4       299.5034           160663.7\n6              2931208.6        1418333.3       602.5571           331727.0\n7               249969.5         821236.4       532.1978           129241.2\n8               351634.0         775038.4       338.6777           171895.1\n9               289872.7         850095.5       439.9037           220223.4\n10              265529.7         631399.2       259.0169           189125.5\n   FREEHOLD_SE Intercept_TV AREA_SQM_TV     AGE_TV PROX_CBD_TV\n1     115954.0    3.9720784   11.614302  -1.615447 -3.22582173\n2     130110.0    3.3460017   20.087361  -9.344188 -6.32792021\n3     141031.5    3.5629010   13.247868  -4.102368 -4.62353528\n4     138239.1    0.5276150   33.577223 -15.524302  5.17080808\n5     210641.1    1.0784029    4.884795  -2.152474 -0.77155660\n6     374347.3   -0.1249043    2.572214  -1.817269  0.06207388\n7     182216.9   -4.2305303   18.849348  -6.595605 -2.84136028\n8     216649.4    0.9189786    4.879056  -2.041481 -0.65080678\n9     220473.7    2.1104224   10.150733  -1.221345  1.18682383\n10    206346.2    1.4343123   11.068059  -3.176418 -1.35360852\n   PROX_CHILDCARE_TV PROX_ELDERLYCARE_TV PROX_URA_GROWTH_AREA_TV PROX_MRT_TV\n1         1.00048819          -3.2612693            -2.846248368 -1.61864578\n2         1.47178634           3.8462625            -1.848971738 -8.92998600\n3        -0.34404755           4.1319138            -2.648105057 -3.40075727\n4         1.57665606           2.4756745            -5.691404992 -7.28705261\n5         0.12990138          -0.4196596             0.640289855 -0.12249416\n6        -0.13361179          -0.4237096            -0.005103357  1.00426206\n7        -0.33542751          -0.8235874             3.760298131 -7.31116712\n8         0.09462126          -0.2405003             0.520038994 -0.03439159\n9        -0.93339393          -0.3739225            -2.359121712 -1.67102293\n10        0.15961128           1.9461735            -0.627237944 -2.63204802\n   PROX_PARK_TV PROX_PRIMARY_SCH_TV PROX_SHOPPING_MALL_TV PROX_BUS_STOP_TV\n1   -0.83749312           1.5923022            2.75358842        2.0154464\n2    2.28192684           6.7019454           -0.88662640        4.4941192\n3    0.66565951           2.9058009           -1.05686949        3.0419145\n4   -3.34061770          12.9836105           -0.16709578       12.8383775\n5   -0.02820944           0.1220998           -0.02488294        0.9145046\n6    0.86781794           0.4696245            0.08821750        0.7656963\n7    2.38773567           5.1844351           -1.53719231        6.2029165\n8    0.16674816           0.2042469           -0.11271635        0.9493299\n9   -0.43301073          -0.1442145            0.95462153        3.3123012\n10   0.95831249           0.3290120           -1.71252687        3.3632555\n   NO_Of_UNITS_TV FAMILY_FRIENDLY_TV FREEHOLD_TV  Local_R2\n1     0.480589953        -0.06902748    2.621347 0.8846744\n2    -1.380026395         2.69655779    3.045280 0.8899773\n3    -0.045279967         0.04058290    1.197050 0.8947007\n4    -0.446007570        14.31276425    8.771149 0.9073605\n5     0.141120178         0.36714544    1.557983 0.9510057\n6    -0.355762335         0.60891234    1.260522 0.9247586\n7    -0.001731033         2.78285441    2.243875 0.8310458\n8     0.089093858         0.32346758    1.602012 0.9463936\n9     1.534793921        -0.13828365    2.285410 0.8380365\n10   -0.082251138        -0.53369623    1.033819 0.9080753\n                    geometry\n1  POINT (22085.12 29951.54)\n2   POINT (25656.84 34546.2)\n3   POINT (23963.99 32890.8)\n4  POINT (27044.28 32319.77)\n5  POINT (41042.56 33743.64)\n6   POINT (39717.04 32943.1)\n7   POINT (28419.1 33513.37)\n8  POINT (40763.57 33879.61)\n9  POINT (23595.63 28884.78)\n10 POINT (24586.56 33194.31)\n\n\n\n\nCode\nglimpse(condo_resale.sf.adaptive)\n\n\nRows: 1,436\nColumns: 52\n$ Intercept               &lt;dbl&gt; 2050011.67, 1633128.24, 3433608.17, 234358.91,…\n$ AREA_SQM                &lt;dbl&gt; 9561.892, 16576.853, 13091.861, 20730.601, 672…\n$ AGE                     &lt;dbl&gt; -9514.634, -58185.479, -26707.386, -93308.988,…\n$ PROX_CBD                &lt;dbl&gt; -120681.94, -149434.22, -259397.77, 2426853.66…\n$ PROX_CHILDCARE          &lt;dbl&gt; 319266.925, 441102.177, -120116.816, 480825.28…\n$ PROX_ELDERLYCARE        &lt;dbl&gt; -393417.795, 325188.741, 535855.806, 314783.72…\n$ PROX_URA_GROWTH_AREA    &lt;dbl&gt; -159980.203, -142290.389, -253621.206, -267929…\n$ PROX_MRT                &lt;dbl&gt; -299742.96, -2510522.23, -936853.28, -2039479.…\n$ PROX_PARK               &lt;dbl&gt; -172104.47, 523379.72, 209099.85, -759153.26, …\n$ PROX_PRIMARY_SCH        &lt;dbl&gt; 242668.03, 1106830.66, 571462.33, 3127477.21, …\n$ PROX_SHOPPING_MALL      &lt;dbl&gt; 300881.390, -87693.378, -126732.712, -29593.34…\n$ PROX_BUS_STOP           &lt;dbl&gt; 1210615.44, 1843587.22, 1411924.90, 7225577.51…\n$ NO_Of_UNITS             &lt;dbl&gt; 104.8290640, -288.3441183, -9.5532945, -161.35…\n$ FAMILY_FRIENDLY         &lt;dbl&gt; -9075.370, 310074.664, 5949.746, 1556178.531, …\n$ FREEHOLD                &lt;dbl&gt; 303955.61, 396221.27, 168821.75, 1212515.58, 3…\n$ y                       &lt;dbl&gt; 3000000, 3880000, 3325000, 4250000, 1400000, 1…\n$ yhat                    &lt;dbl&gt; 2886531.8, 3466801.5, 3616527.2, 5435481.6, 13…\n$ residual                &lt;dbl&gt; 113468.16, 413198.52, -291527.20, -1185481.63,…\n$ CV_Score                &lt;dbl&gt; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0…\n$ Stud_residual           &lt;dbl&gt; 0.38207013, 1.01433140, -0.83780678, -2.846146…\n$ Intercept_SE            &lt;dbl&gt; 516105.5, 488083.5, 963711.4, 444185.5, 211962…\n$ AREA_SQM_SE             &lt;dbl&gt; 823.2860, 825.2380, 988.2240, 617.4007, 1376.2…\n$ AGE_SE                  &lt;dbl&gt; 5889.782, 6226.916, 6510.236, 6010.511, 8180.3…\n$ PROX_CBD_SE             &lt;dbl&gt; 37411.22, 23615.06, 56103.77, 469337.41, 41064…\n$ PROX_CHILDCARE_SE       &lt;dbl&gt; 319111.1, 299705.3, 349128.5, 304965.2, 698720…\n$ PROX_ELDERLYCARE_SE     &lt;dbl&gt; 120633.34, 84546.69, 129687.07, 127150.69, 327…\n$ PROX_URA_GROWTH_AREA_SE &lt;dbl&gt; 56207.39, 76956.50, 95774.60, 470762.12, 47433…\n$ PROX_MRT_SE             &lt;dbl&gt; 185181.3, 281133.9, 275483.7, 279877.1, 363830…\n$ PROX_PARK_SE            &lt;dbl&gt; 205499.6, 229358.7, 314124.3, 227249.4, 364580…\n$ PROX_PRIMARY_SCH_SE     &lt;dbl&gt; 152400.7, 165150.7, 196662.6, 240878.9, 249087…\n$ PROX_SHOPPING_MALL_SE   &lt;dbl&gt; 109268.8, 98906.8, 119913.3, 177104.1, 301032.…\n$ PROX_BUS_STOP_SE        &lt;dbl&gt; 600668.6, 410222.1, 464156.7, 562810.8, 740922…\n$ NO_Of_UNITS_SE          &lt;dbl&gt; 218.1258, 208.9410, 210.9828, 361.7767, 299.50…\n$ FAMILY_FRIENDLY_SE      &lt;dbl&gt; 131474.73, 114989.07, 146607.22, 108726.62, 16…\n$ FREEHOLD_SE             &lt;dbl&gt; 115954.0, 130110.0, 141031.5, 138239.1, 210641…\n$ Intercept_TV            &lt;dbl&gt; 3.9720784, 3.3460017, 3.5629010, 0.5276150, 1.…\n$ AREA_SQM_TV             &lt;dbl&gt; 11.614302, 20.087361, 13.247868, 33.577223, 4.…\n$ AGE_TV                  &lt;dbl&gt; -1.6154474, -9.3441881, -4.1023685, -15.524301…\n$ PROX_CBD_TV             &lt;dbl&gt; -3.22582173, -6.32792021, -4.62353528, 5.17080…\n$ PROX_CHILDCARE_TV       &lt;dbl&gt; 1.000488185, 1.471786337, -0.344047555, 1.5766…\n$ PROX_ELDERLYCARE_TV     &lt;dbl&gt; -3.26126929, 3.84626245, 4.13191383, 2.4756745…\n$ PROX_URA_GROWTH_AREA_TV &lt;dbl&gt; -2.846248368, -1.848971738, -2.648105057, -5.6…\n$ PROX_MRT_TV             &lt;dbl&gt; -1.61864578, -8.92998600, -3.40075727, -7.2870…\n$ PROX_PARK_TV            &lt;dbl&gt; -0.83749312, 2.28192684, 0.66565951, -3.340617…\n$ PROX_PRIMARY_SCH_TV     &lt;dbl&gt; 1.59230221, 6.70194543, 2.90580089, 12.9836104…\n$ PROX_SHOPPING_MALL_TV   &lt;dbl&gt; 2.753588422, -0.886626400, -1.056869486, -0.16…\n$ PROX_BUS_STOP_TV        &lt;dbl&gt; 2.0154464, 4.4941192, 3.0419145, 12.8383775, 0…\n$ NO_Of_UNITS_TV          &lt;dbl&gt; 0.480589953, -1.380026395, -0.045279967, -0.44…\n$ FAMILY_FRIENDLY_TV      &lt;dbl&gt; -0.06902748, 2.69655779, 0.04058290, 14.312764…\n$ FREEHOLD_TV             &lt;dbl&gt; 2.6213469, 3.0452799, 1.1970499, 8.7711485, 1.…\n$ Local_R2                &lt;dbl&gt; 0.8846744, 0.8899773, 0.8947007, 0.9073605, 0.…\n$ geometry                &lt;POINT [m]&gt; POINT (22085.12 29951.54), POINT (25656.…"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex08/Hands-on_Ex08.html#visualising-local-r2",
    "href": "Hands-on_Ex/Hands-on_Ex08/Hands-on_Ex08.html#visualising-local-r2",
    "title": "In-Class Exercise 8 - Calibrating Hedonic Pricing Model for Private Highrise Property with GWR Method",
    "section": "5.5 Visualising local R2",
    "text": "5.5 Visualising local R2\n\n\nCode\ntmap_mode(\"view\")\ntm_shape(mpsz_svy21)+\n  tm_polygons(alpha = 0.1) +\ntm_shape(condo_resale.sf.adaptive) +  \n  tm_dots(col = \"Local_R2\",\n          border.col = \"gray60\",\n          border.lwd = 1) +\n  tm_view(set.zoom.limits = c(11,14))"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex08/Hands-on_Ex08.html#visualising-coefficient-estimates",
    "href": "Hands-on_Ex/Hands-on_Ex08/Hands-on_Ex08.html#visualising-coefficient-estimates",
    "title": "In-Class Exercise 8 - Calibrating Hedonic Pricing Model for Private Highrise Property with GWR Method",
    "section": "5.6 Visualising coefficient estimates",
    "text": "5.6 Visualising coefficient estimates\n\n\nCode\ntmap_mode(\"view\")\nAREA_SQM_SE &lt;- tm_shape(mpsz_svy21)+\n  tm_polygons(alpha = 0.1) +\ntm_shape(condo_resale.sf.adaptive) +  \n  tm_dots(col = \"AREA_SQM_SE\",\n          border.col = \"gray60\",\n          border.lwd = 1) +\n  tm_view(set.zoom.limits = c(11,14))\n\nAREA_SQM_TV &lt;- tm_shape(mpsz_svy21)+\n  tm_polygons(alpha = 0.1) +\ntm_shape(condo_resale.sf.adaptive) +  \n  tm_dots(col = \"AREA_SQM_TV\",\n          border.col = \"gray60\",\n          border.lwd = 1) +\n  tm_view(set.zoom.limits = c(11,14))\n\ntmap_arrange(AREA_SQM_SE, AREA_SQM_TV, \n             asp=1, ncol=2,\n             sync = TRUE)\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nCode\ntmap_mode(\"plot\")"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex08/Hands-on_Ex08.html#by-ura-planning-region",
    "href": "Hands-on_Ex/Hands-on_Ex08/Hands-on_Ex08.html#by-ura-planning-region",
    "title": "In-Class Exercise 8 - Calibrating Hedonic Pricing Model for Private Highrise Property with GWR Method",
    "section": "5.7 By URA Planning Region",
    "text": "5.7 By URA Planning Region\n\n\nCode\ntm_shape(mpsz_svy21[mpsz_svy21$REGION_N==\"CENTRAL REGION\", ])+\n  tm_polygons()+\ntm_shape(condo_resale.sf.adaptive) + \n  tm_bubbles(col = \"Local_R2\",\n           size = 0.15,\n           border.col = \"gray60\",\n           border.lwd = 1)"
  },
  {
    "objectID": "In-class_Ex/In-class_Ex08/In-class_Ex08.html",
    "href": "In-class_Ex/In-class_Ex08/In-class_Ex08.html",
    "title": "In-Class Exercise 8 - Calibrating Hedonic Pricing Model for Private Highrise Property with GWR Method",
    "section": "",
    "text": "Code\npacman::p_load(olsrr, corrplot, ggpubr, sf, spdep, GWmodel, tmap, tidyverse, gtsummary, ggstatsplot)\n\n\nggstatsplot - for visualizing the results of statistical tests. We will use it to compare with other models."
  },
  {
    "objectID": "In-class_Ex/In-class_Ex08/In-class_Ex08.html#geospatial-data",
    "href": "In-class_Ex/In-class_Ex08/In-class_Ex08.html#geospatial-data",
    "title": "In-Class Exercise 8 - Calibrating Hedonic Pricing Model for Private Highrise Property with GWR Method",
    "section": "2.1 Geospatial Data",
    "text": "2.1 Geospatial Data\n\n\nCode\nmpsz = st_read(dsn = \"data/geospatial\", layer = \"MP14_SUBZONE_WEB_PL\")\n\n\nReading layer `MP14_SUBZONE_WEB_PL' from data source \n  `C:\\EbenezerHo\\IS415-GAA\\In-class_Ex\\In-class_Ex08\\data\\geospatial' \n  using driver `ESRI Shapefile'\nSimple feature collection with 323 features and 15 fields\nGeometry type: MULTIPOLYGON\nDimension:     XY\nBounding box:  xmin: 2667.538 ymin: 15748.72 xmax: 56396.44 ymax: 50256.33\nProjected CRS: SVY21\n\n\n\n\nCode\nmpsz_svy21 &lt;- st_transform(mpsz, 3414)\n\n\n\n\nCode\ncondo_resale = read_csv(\"data/aspatial/Condo_resale_2015.csv\")\n\n\n\n\nCode\ncondo_resale.sf &lt;- st_as_sf(condo_resale,\n                            coords = c(\"LONGITUDE\", \"LATITUDE\"),\n                            crs=4326) %&gt;%\n  st_transform(crs=3414)\n\n\n::: call-out note always read the long then lat. column names in c() should follow the same name as the data."
  },
  {
    "objectID": "In-class_Ex/In-class_Ex08/In-class_Ex08.html#simple-linear-regression-method",
    "href": "In-class_Ex/In-class_Ex08/In-class_Ex08.html#simple-linear-regression-method",
    "title": "In-Class Exercise 8 - Calibrating Hedonic Pricing Model for Private Highrise Property with GWR Method",
    "section": "3.1 Simple Linear Regression Method",
    "text": "3.1 Simple Linear Regression Method\n\n\nCode\ncondo.slr &lt;- lm(formula=SELLING_PRICE ~ AREA_SQM, data = condo_resale.sf)\n\n\nlm() returns an object of class “lm” or for multiple responses of class c(“mlm”, “lm”).\nThe functions summary() and anova() can be used to obtain and print a summary and analysis of variance table of the results. The generic accessor functions coefficients, effects, fitted.values and residuals extract various useful features of the value returned by lm.\n\n\nCode\nsummary(condo.slr)\n\n\n\nCall:\nlm(formula = SELLING_PRICE ~ AREA_SQM, data = condo_resale.sf)\n\nResiduals:\n     Min       1Q   Median       3Q      Max \n-3695815  -391764   -87517   258900 13503875 \n\nCoefficients:\n             Estimate Std. Error t value Pr(&gt;|t|)    \n(Intercept) -258121.1    63517.2  -4.064 5.09e-05 ***\nAREA_SQM      14719.0      428.1  34.381  &lt; 2e-16 ***\n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nResidual standard error: 942700 on 1434 degrees of freedom\nMultiple R-squared:  0.4518,    Adjusted R-squared:  0.4515 \nF-statistic:  1182 on 1 and 1434 DF,  p-value: &lt; 2.2e-16\n\n\nThe output report reveals that the SELLING_PRICE can be explained by using the formula:\n  *y = -258121.1 + 14719x1*\nThe R-squared of 0.4518 reveals that the simple regression model built is able to explain about 45% of the resale prices.\nSince p-value is much smaller than 0.0001, we will reject the null hypothesis that mean is a good estimator of SELLING_PRICE. This will allow us to infer that simple linear regression model above is a good estimator of SELLING_PRICE.\nThe Coefficients: section of the report reveals that the p-values of both the estimates of the Intercept and ARA_SQM are smaller than 0.001. In view of this, the null hypothesis of the B0 and B1 are equal to 0 will be rejected. As a results, we will be able to infer that the B0 and B1 are good parameter estimates.\n\n\nCode\nggplot(data=condo_resale.sf,  \n       aes(x=`AREA_SQM`, y=`SELLING_PRICE`)) +\n  geom_point() +\n  geom_smooth(method = lm)"
  },
  {
    "objectID": "In-class_Ex/In-class_Ex08/In-class_Ex08.html#multiple-linear-regression-method",
    "href": "In-class_Ex/In-class_Ex08/In-class_Ex08.html#multiple-linear-regression-method",
    "title": "In-Class Exercise 8 - Calibrating Hedonic Pricing Model for Private Highrise Property with GWR Method",
    "section": "3.2 Multiple Linear Regression Method",
    "text": "3.2 Multiple Linear Regression Method\n\n\nCode\ncorrplot(cor(condo_resale[, 5:23]), diag = FALSE, order = \"AOE\",\n         tl.pos = \"td\", tl.cex = 0.5, method = \"number\", type = \"upper\")\n\n\n\n\n\nMatrix reorder is very important for mining the hiden structure and patter in the matrix. There are four methods in corrplot (parameter order), named “AOE”, “FPC”, “hclust”, “alphabet”. In the code chunk above, AOE order is used. It orders the variables by using the angular order of the eigenvectors method suggested by Michael Friendly.\nFrom the scatterplot matrix, it is clear that Freehold is highly correlated to LEASE_99YEAR. In view of this, it is wiser to only include either one of them in the subsequent model building. As a result, LEASE_99YEAR is excluded in the subsequent model building."
  },
  {
    "objectID": "In-class_Ex/In-class_Ex08/In-class_Ex08.html#building-a-hedonic-pricing-model-using-multiple-linear-regression-method",
    "href": "In-class_Ex/In-class_Ex08/In-class_Ex08.html#building-a-hedonic-pricing-model-using-multiple-linear-regression-method",
    "title": "In-Class Exercise 8 - Calibrating Hedonic Pricing Model for Private Highrise Property with GWR Method",
    "section": "3.3 Building a hedonic pricing model using multiple linear regression method",
    "text": "3.3 Building a hedonic pricing model using multiple linear regression method\n\n\nCode\ncondo.mlr &lt;- lm(formula = SELLING_PRICE ~ AREA_SQM + AGE    + \n                  PROX_CBD + PROX_CHILDCARE + PROX_ELDERLYCARE +\n                  PROX_URA_GROWTH_AREA + PROX_HAWKER_MARKET + PROX_KINDERGARTEN + \n                  PROX_MRT  + PROX_PARK + PROX_PRIMARY_SCH + \n                  PROX_TOP_PRIMARY_SCH + PROX_SHOPPING_MALL + PROX_SUPERMARKET + \n                  PROX_BUS_STOP + NO_Of_UNITS + FAMILY_FRIENDLY + FREEHOLD, \n                data=condo_resale.sf)\nsummary(condo.mlr)\n\n\n\nCall:\nlm(formula = SELLING_PRICE ~ AREA_SQM + AGE + PROX_CBD + PROX_CHILDCARE + \n    PROX_ELDERLYCARE + PROX_URA_GROWTH_AREA + PROX_HAWKER_MARKET + \n    PROX_KINDERGARTEN + PROX_MRT + PROX_PARK + PROX_PRIMARY_SCH + \n    PROX_TOP_PRIMARY_SCH + PROX_SHOPPING_MALL + PROX_SUPERMARKET + \n    PROX_BUS_STOP + NO_Of_UNITS + FAMILY_FRIENDLY + FREEHOLD, \n    data = condo_resale.sf)\n\nResiduals:\n     Min       1Q   Median       3Q      Max \n-3475964  -293923   -23069   241043 12260381 \n\nCoefficients:\n                       Estimate Std. Error t value Pr(&gt;|t|)    \n(Intercept)           481728.40  121441.01   3.967 7.65e-05 ***\nAREA_SQM               12708.32     369.59  34.385  &lt; 2e-16 ***\nAGE                   -24440.82    2763.16  -8.845  &lt; 2e-16 ***\nPROX_CBD              -78669.78    6768.97 -11.622  &lt; 2e-16 ***\nPROX_CHILDCARE       -351617.91  109467.25  -3.212  0.00135 ** \nPROX_ELDERLYCARE      171029.42   42110.51   4.061 5.14e-05 ***\nPROX_URA_GROWTH_AREA   38474.53   12523.57   3.072  0.00217 ** \nPROX_HAWKER_MARKET     23746.10   29299.76   0.810  0.41782    \nPROX_KINDERGARTEN     147468.99   82668.87   1.784  0.07466 .  \nPROX_MRT             -314599.68   57947.44  -5.429 6.66e-08 ***\nPROX_PARK             563280.50   66551.68   8.464  &lt; 2e-16 ***\nPROX_PRIMARY_SCH      180186.08   65237.95   2.762  0.00582 ** \nPROX_TOP_PRIMARY_SCH    2280.04   20410.43   0.112  0.91107    \nPROX_SHOPPING_MALL   -206604.06   42840.60  -4.823 1.57e-06 ***\nPROX_SUPERMARKET      -44991.80   77082.64  -0.584  0.55953    \nPROX_BUS_STOP         683121.35  138353.28   4.938 8.85e-07 ***\nNO_Of_UNITS             -231.18      89.03  -2.597  0.00951 ** \nFAMILY_FRIENDLY       140340.77   47020.55   2.985  0.00289 ** \nFREEHOLD              359913.01   49220.22   7.312 4.38e-13 ***\n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nResidual standard error: 755800 on 1417 degrees of freedom\nMultiple R-squared:  0.6518,    Adjusted R-squared:  0.6474 \nF-statistic: 147.4 on 18 and 1417 DF,  p-value: &lt; 2.2e-16\n\n\n::: call-out note selling_price is the dependent variable. everything else with + sign is independent variable."
  },
  {
    "objectID": "In-class_Ex/In-class_Ex08/In-class_Ex08.html#preparing-publication-quality-table-olsrr-method",
    "href": "In-class_Ex/In-class_Ex08/In-class_Ex08.html#preparing-publication-quality-table-olsrr-method",
    "title": "In-Class Exercise 8 - Calibrating Hedonic Pricing Model for Private Highrise Property with GWR Method",
    "section": "3.4 Preparing Publication Quality Table: olsrr method",
    "text": "3.4 Preparing Publication Quality Table: olsrr method\n\n\nCode\ncondo.mlr1 &lt;- lm(formula = SELLING_PRICE ~ AREA_SQM + AGE + \n                   PROX_CBD + PROX_CHILDCARE + PROX_ELDERLYCARE +\n                   PROX_URA_GROWTH_AREA + PROX_MRT  + PROX_PARK + \n                   PROX_PRIMARY_SCH + PROX_SHOPPING_MALL    + PROX_BUS_STOP + \n                   NO_Of_UNITS + FAMILY_FRIENDLY + FREEHOLD,\n                 data=condo_resale.sf)\nols_regress(condo.mlr1)\n\n\n                                Model Summary                                 \n-----------------------------------------------------------------------------\nR                            0.807       RMSE                     751998.679 \nR-Squared                    0.651       MSE                571471422208.591 \nAdj. R-Squared               0.647       Coef. Var                    43.168 \nPred R-Squared               0.638       AIC                       42966.758 \nMAE                     414819.628       SBC                       43051.072 \n-----------------------------------------------------------------------------\n RMSE: Root Mean Square Error \n MSE: Mean Square Error \n MAE: Mean Absolute Error \n AIC: Akaike Information Criteria \n SBC: Schwarz Bayesian Criteria \n\n                                     ANOVA                                       \n--------------------------------------------------------------------------------\n                    Sum of                                                      \n                   Squares          DF         Mean Square       F         Sig. \n--------------------------------------------------------------------------------\nRegression    1.512586e+15          14        1.080418e+14    189.059    0.0000 \nResidual      8.120609e+14        1421    571471422208.591                      \nTotal         2.324647e+15        1435                                          \n--------------------------------------------------------------------------------\n\n                                               Parameter Estimates                                                \n-----------------------------------------------------------------------------------------------------------------\n               model           Beta    Std. Error    Std. Beta       t        Sig           lower          upper \n-----------------------------------------------------------------------------------------------------------------\n         (Intercept)     527633.222    108183.223                   4.877    0.000     315417.244     739849.200 \n            AREA_SQM      12777.523       367.479        0.584     34.771    0.000      12056.663      13498.382 \n                 AGE     -24687.739      2754.845       -0.167     -8.962    0.000     -30091.739     -19283.740 \n            PROX_CBD     -77131.323      5763.125       -0.263    -13.384    0.000     -88436.469     -65826.176 \n      PROX_CHILDCARE    -318472.751    107959.512       -0.084     -2.950    0.003    -530249.889    -106695.613 \n    PROX_ELDERLYCARE     185575.623     39901.864        0.090      4.651    0.000     107302.737     263848.510 \nPROX_URA_GROWTH_AREA      39163.254     11754.829        0.060      3.332    0.001      16104.571      62221.936 \n            PROX_MRT    -294745.107     56916.367       -0.112     -5.179    0.000    -406394.234    -183095.980 \n           PROX_PARK     570504.807     65507.029        0.150      8.709    0.000     442003.938     699005.677 \n    PROX_PRIMARY_SCH     159856.136     60234.599        0.062      2.654    0.008      41697.849     278014.424 \n  PROX_SHOPPING_MALL    -220947.251     36561.832       -0.115     -6.043    0.000    -292668.213    -149226.288 \n       PROX_BUS_STOP     682482.221    134513.243        0.134      5.074    0.000     418616.359     946348.082 \n         NO_Of_UNITS       -245.480        87.947       -0.053     -2.791    0.005       -418.000        -72.961 \n     FAMILY_FRIENDLY     146307.576     46893.021        0.057      3.120    0.002      54320.593     238294.560 \n            FREEHOLD     350599.812     48506.485        0.136      7.228    0.000     255447.802     445751.821 \n-----------------------------------------------------------------------------------------------------------------"
  },
  {
    "objectID": "In-class_Ex/In-class_Ex08/In-class_Ex08.html#preparing-publication-quality-table-gtsummary-method",
    "href": "In-class_Ex/In-class_Ex08/In-class_Ex08.html#preparing-publication-quality-table-gtsummary-method",
    "title": "In-Class Exercise 8 - Calibrating Hedonic Pricing Model for Private Highrise Property with GWR Method",
    "section": "3.5 Preparing Publication Quality Table: gtsummary method",
    "text": "3.5 Preparing Publication Quality Table: gtsummary method\n\n\nCode\ntbl_regression(condo.mlr1, intercept = TRUE)\n\n\n\n\n\n\n  \n    \n      Characteristic\n      Beta\n      95% CI1\n      p-value\n    \n  \n  \n    (Intercept)\n527,633\n315,417, 739,849\n&lt;0.001\n    AREA_SQM\n12,778\n12,057, 13,498\n&lt;0.001\n    AGE\n-24,688\n-30,092, -19,284\n&lt;0.001\n    PROX_CBD\n-77,131\n-88,436, -65,826\n&lt;0.001\n    PROX_CHILDCARE\n-318,473\n-530,250, -106,696\n0.003\n    PROX_ELDERLYCARE\n185,576\n107,303, 263,849\n&lt;0.001\n    PROX_URA_GROWTH_AREA\n39,163\n16,105, 62,222\n&lt;0.001\n    PROX_MRT\n-294,745\n-406,394, -183,096\n&lt;0.001\n    PROX_PARK\n570,505\n442,004, 699,006\n&lt;0.001\n    PROX_PRIMARY_SCH\n159,856\n41,698, 278,014\n0.008\n    PROX_SHOPPING_MALL\n-220,947\n-292,668, -149,226\n&lt;0.001\n    PROX_BUS_STOP\n682,482\n418,616, 946,348\n&lt;0.001\n    NO_Of_UNITS\n-245\n-418, -73\n0.005\n    FAMILY_FRIENDLY\n146,308\n54,321, 238,295\n0.002\n    FREEHOLD\n350,600\n255,448, 445,752\n&lt;0.001\n  \n  \n  \n    \n      1 CI = Confidence Interval\n    \n  \n\n\n\n\nWith gtsummary package, model statistics can be included in the report by either appending them to the report table by using add_glance_table() or adding as a table source note by using add_glance_source_note() as shown in the code chunk below.\n\n\nCode\ntbl_regression(condo.mlr1, \n               intercept = TRUE) %&gt;% \n  add_glance_source_note(\n    label = list(sigma ~ \"\\U03C3\"),\n    include = c(r.squared, adj.r.squared, \n                AIC, statistic,\n                p.value, sigma))\n\n\n\n\n\n\n  \n    \n      Characteristic\n      Beta\n      95% CI1\n      p-value\n    \n  \n  \n    (Intercept)\n527,633\n315,417, 739,849\n&lt;0.001\n    AREA_SQM\n12,778\n12,057, 13,498\n&lt;0.001\n    AGE\n-24,688\n-30,092, -19,284\n&lt;0.001\n    PROX_CBD\n-77,131\n-88,436, -65,826\n&lt;0.001\n    PROX_CHILDCARE\n-318,473\n-530,250, -106,696\n0.003\n    PROX_ELDERLYCARE\n185,576\n107,303, 263,849\n&lt;0.001\n    PROX_URA_GROWTH_AREA\n39,163\n16,105, 62,222\n&lt;0.001\n    PROX_MRT\n-294,745\n-406,394, -183,096\n&lt;0.001\n    PROX_PARK\n570,505\n442,004, 699,006\n&lt;0.001\n    PROX_PRIMARY_SCH\n159,856\n41,698, 278,014\n0.008\n    PROX_SHOPPING_MALL\n-220,947\n-292,668, -149,226\n&lt;0.001\n    PROX_BUS_STOP\n682,482\n418,616, 946,348\n&lt;0.001\n    NO_Of_UNITS\n-245\n-418, -73\n0.005\n    FAMILY_FRIENDLY\n146,308\n54,321, 238,295\n0.002\n    FREEHOLD\n350,600\n255,448, 445,752\n&lt;0.001\n  \n  \n    \n      R² = 0.651; Adjusted R² = 0.647; AIC = 42,967; Statistic = 189; p-value = &lt;0.001; σ = 755,957\n    \n  \n  \n    \n      1 CI = Confidence Interval\n    \n  \n\n\n\n\n\n3.5.1 Check for multi colinearity\nIn this section, we would like to introduce you a fantastic R package specially programmed for performing OLS regression. It is called olsrr. It provides a collection of very useful methods for building better multiple linear regression models:\ncomprehensive regression output residual diagnostics measures of influence heteroskedasticity tests collinearity diagnostics model fit assessment variable contribution assessment variable selection procedures\nIn the code chunk below, the ols_vif_tol() of olsrr package is used to test if there are sign of multicollinearity.\n\n\nCode\nols_vif_tol(condo.mlr1)\n\n\n              Variables Tolerance      VIF\n1              AREA_SQM 0.8728554 1.145665\n2                   AGE 0.7071275 1.414172\n3              PROX_CBD 0.6356147 1.573280\n4        PROX_CHILDCARE 0.3066019 3.261559\n5      PROX_ELDERLYCARE 0.6598479 1.515501\n6  PROX_URA_GROWTH_AREA 0.7510311 1.331503\n7              PROX_MRT 0.5236090 1.909822\n8             PROX_PARK 0.8279261 1.207837\n9      PROX_PRIMARY_SCH 0.4524628 2.210126\n10   PROX_SHOPPING_MALL 0.6738795 1.483945\n11        PROX_BUS_STOP 0.3514118 2.845664\n12          NO_Of_UNITS 0.6901036 1.449058\n13      FAMILY_FRIENDLY 0.7244157 1.380423\n14             FREEHOLD 0.6931163 1.442759\n\n\n\n\n3.5.2 Test for Non-Linearity\nIn multiple linear regression, it is important for us to test the assumption that linearity and additivity of the relationship between dependent and independent variables.\nIn the code chunk below, the ols_plot_resid_fit() of olsrr package is used to perform linearity assumption test.\n\n\nCode\nols_plot_resid_fit(condo.mlr1)\n\n\n\n\n\n\n\n3.5.3 Test for Normality Assumption\nLastly, the code chunk below uses ols_plot_resid_hist() of olsrr package to perform normality assumption test.\n\n\nCode\nols_plot_resid_hist(condo.mlr1)\n\n\n\n\n\nThe figure reveals that the residual of the multiple linear regression model (i.e. condo.mlr1) is resemble normal distribution.\nIf you prefer formal statistical test methods, the ols_test_normality() of olsrr package can be used as shown in the code chun below.\n\n\nCode\nols_test_normality(condo.mlr1)\n\n\n-----------------------------------------------\n       Test             Statistic       pvalue  \n-----------------------------------------------\nShapiro-Wilk              0.6856         0.0000 \nKolmogorov-Smirnov        0.1366         0.0000 \nCramer-von Mises         121.0768        0.0000 \nAnderson-Darling         67.9551         0.0000 \n-----------------------------------------------\n\n\nThe summary table above reveals that the p-values of the four tests are way smaller than the alpha value of 0.05. Hence we will reject the null hypothesis and infer that there is statistical evidence that the residual are not normally distributed.\n\n\n3.5.4 Testing for Spatial Autocorrelation\nThe hedonic model we try to build are using geographically referenced attributes, hence it is also important for us to visual the residual of the hedonic pricing model.\nIn order to perform spatial autocorrelation test, we need to convert condo_resale.sf from sf data frame into a SpatialPointsDataFrame.\nFirst, we will export the residual of the hedonic pricing model and save it as a data frame.\n\n\nCode\nmlr.output &lt;- as.data.frame(condo.mlr1$residuals)\n\n\n\n\nCode\ncondo_resale.res.sf &lt;- cbind(condo_resale.sf, \n                        condo.mlr1$residuals) %&gt;%\nrename(`MLR_RES` = `condo.mlr1.residuals`)\n\n\n\n\nCode\ncondo_resale.sp &lt;- as_Spatial(condo_resale.res.sf)\ncondo_resale.sp\n\n\nclass       : SpatialPointsDataFrame \nfeatures    : 1436 \nextent      : 14940.85, 43352.45, 24765.67, 48382.81  (xmin, xmax, ymin, ymax)\ncrs         : +proj=tmerc +lat_0=1.36666666666667 +lon_0=103.833333333333 +k=1 +x_0=28001.642 +y_0=38744.572 +ellps=WGS84 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs \nvariables   : 22\nnames       : POSTCODE, SELLING_PRICE, AREA_SQM, AGE,    PROX_CBD, PROX_CHILDCARE, PROX_ELDERLYCARE, PROX_URA_GROWTH_AREA, PROX_HAWKER_MARKET, PROX_KINDERGARTEN,    PROX_MRT,   PROX_PARK, PROX_PRIMARY_SCH, PROX_TOP_PRIMARY_SCH, PROX_SHOPPING_MALL, ... \nmin values  :    18965,        540000,       34,   0, 0.386916393,    0.004927023,      0.054508623,          0.214539508,        0.051817113,       0.004927023, 0.052779424, 0.029064164,      0.077106132,          0.077106132,                  0, ... \nmax values  :   828833,       1.8e+07,      619,  37, 19.18042832,     3.46572633,      3.949157205,           9.15540001,        5.374348075,       2.229045366,  3.48037319,  2.16104919,      3.928989144,          6.748192062,        3.477433767, ... \n\n\n\n\nCode\ntmap_mode(\"view\")\n\n\n\n\nCode\ntm_shape(mpsz_svy21)+\n  tmap_options(check.and.fix = TRUE) +\n  tm_polygons(alpha = 0.4) +\ntm_shape(condo_resale.res.sf) +  \n  tm_dots(col = \"MLR_RES\",\n          alpha = 0.6,\n          style=\"quantile\") +\n  tm_view(set.zoom.limits = c(11,14))\n\n\n\n\n\n\n\n\n\nCode\ntmap_mode(\"plot\")\n\n\nThe figure above reveal that there is sign of spatial autocorrelation.\nTo proof that our observation is indeed true, the Moran’s I test will be performed\nFirst, we will compute the distance-based weight matrix by using dnearneigh() function of spdep.\n\n\nCode\nnb &lt;- dnearneigh(coordinates(condo_resale.sp), 0, 1500, longlat = FALSE)\nsummary(nb)\n\n\nNeighbour list object:\nNumber of regions: 1436 \nNumber of nonzero links: 66266 \nPercentage nonzero weights: 3.213526 \nAverage number of links: 46.14624 \n10 disjoint connected subgraphs\nLink number distribution:\n\n  1   3   5   7   9  10  11  12  13  14  15  16  17  18  19  20  21  22  23  24 \n  3   3   9   4   3  15  10  19  17  45  19   5  14  29  19   6  35  45  18  47 \n 25  26  27  28  29  30  31  32  33  34  35  36  37  38  39  40  41  42  43  44 \n 16  43  22  26  21  11   9  23  22  13  16  25  21  37  16  18   8  21   4  12 \n 45  46  47  48  49  50  51  52  53  54  55  56  57  58  59  60  61  62  63  64 \n  8  36  18  14  14  43  11  12   8  13  12  13   4   5   6  12  11  20  29  33 \n 65  66  67  68  69  70  71  72  73  74  75  76  77  78  79  80  81  82  83  84 \n 15  20  10  14  15  15  11  16  12  10   8  19  12  14   9   8   4  13  11   6 \n 85  86  87  88  89  90  91  92  93  94  95  96  97  98  99 100 101 102 103 104 \n  4   9   4   4   4   6   2  16   9   4   5   9   3   9   4   2   1   2   1   1 \n105 106 107 108 109 110 112 116 125 \n  1   5   9   2   1   3   1   1   1 \n3 least connected regions:\n193 194 277 with 1 link\n1 most connected region:\n285 with 125 links\n\n\nNext, nb2listw() of spdep packge will be used to convert the output neighbours lists (i.e. nb) into a spatial weights.\n\n\nCode\nnb_lw &lt;- nb2listw(nb, style = 'W')\nsummary(nb_lw)\n\n\nCharacteristics of weights list object:\nNeighbour list object:\nNumber of regions: 1436 \nNumber of nonzero links: 66266 \nPercentage nonzero weights: 3.213526 \nAverage number of links: 46.14624 \n10 disjoint connected subgraphs\nLink number distribution:\n\n  1   3   5   7   9  10  11  12  13  14  15  16  17  18  19  20  21  22  23  24 \n  3   3   9   4   3  15  10  19  17  45  19   5  14  29  19   6  35  45  18  47 \n 25  26  27  28  29  30  31  32  33  34  35  36  37  38  39  40  41  42  43  44 \n 16  43  22  26  21  11   9  23  22  13  16  25  21  37  16  18   8  21   4  12 \n 45  46  47  48  49  50  51  52  53  54  55  56  57  58  59  60  61  62  63  64 \n  8  36  18  14  14  43  11  12   8  13  12  13   4   5   6  12  11  20  29  33 \n 65  66  67  68  69  70  71  72  73  74  75  76  77  78  79  80  81  82  83  84 \n 15  20  10  14  15  15  11  16  12  10   8  19  12  14   9   8   4  13  11   6 \n 85  86  87  88  89  90  91  92  93  94  95  96  97  98  99 100 101 102 103 104 \n  4   9   4   4   4   6   2  16   9   4   5   9   3   9   4   2   1   2   1   1 \n105 106 107 108 109 110 112 116 125 \n  1   5   9   2   1   3   1   1   1 \n3 least connected regions:\n193 194 277 with 1 link\n1 most connected region:\n285 with 125 links\n\nWeights style: W \nWeights constants summary:\n     n      nn   S0       S1       S2\nW 1436 2062096 1436 94.81916 5798.341\n\n\nNext, lm.morantest() of spdep package will be used to perform Moran’s I test for residual spatial autocorrelation\n\n\nCode\nlm.morantest(condo.mlr1, nb_lw)\n\n\n\n    Global Moran I for regression residuals\n\ndata:  \nmodel: lm(formula = SELLING_PRICE ~ AREA_SQM + AGE + PROX_CBD +\nPROX_CHILDCARE + PROX_ELDERLYCARE + PROX_URA_GROWTH_AREA + PROX_MRT +\nPROX_PARK + PROX_PRIMARY_SCH + PROX_SHOPPING_MALL + PROX_BUS_STOP +\nNO_Of_UNITS + FAMILY_FRIENDLY + FREEHOLD, data = condo_resale.sf)\nweights: nb_lw\n\nMoran I statistic standard deviate = 24.366, p-value &lt; 2.2e-16\nalternative hypothesis: greater\nsample estimates:\nObserved Moran I      Expectation         Variance \n    1.438876e-01    -5.487594e-03     3.758259e-05"
  },
  {
    "objectID": "Take-home_Ex/Take-home_Ex03/the03.html",
    "href": "Take-home_Ex/Take-home_Ex03/the03.html",
    "title": "Take-home Exercise 03",
    "section": "",
    "text": "1.0 Data preparation and wrangling\n\n\nCode\npacman::p_load(sf, tmap, tidyverse, corrplot, spdep, ClustGeo, \n               ggpubr, cluster, factoextra, NbClust,\n               heatmaply, psych, GGally, sp)\n\n\n\n\nCode\npci &lt;- read_csv(\"data/pci_2021.csv\")\n\n\n\n\nCode\nvn &lt;- st_read(dsn = \"data/\", \n                   layer = \"vnm_admbnda_adm1_gov_20201027\")\n\n\nReading layer `vnm_admbnda_adm1_gov_20201027' from data source \n  `C:\\EbenezerHo\\IS415-GAA\\Take-home_Ex\\Take-home_Ex03\\data' \n  using driver `ESRI Shapefile'\nSimple feature collection with 63 features and 16 fields\nGeometry type: MULTIPOLYGON\nDimension:     XY\nBounding box:  xmin: 102.144 ymin: 7.180931 xmax: 117.8355 ymax: 23.39221\nGeodetic CRS:  WGS 84\n\n\n\n\nCode\nglimpse(pci)\n\n\nlets rename the columns to make them more readable\n\n\nCode\npci &lt;- pci %&gt;% \n  rename(`overall_index` = `Sub-Index 10: Law & Order`, \n         `security_ind` = `Good security situation in the province (%)`,\n         `theft_ind` = `Victim of theft or break-in last year (%)`,\n         `police_ind` = `Local police handle firm's case effectively (%)`,\n         `gangster_ind` = `Pay money to gangsters groups (%)`)\n\n\n\n\nCode\nunique(pci$Province)\n\n\nWe notice that some province names are not consistent with the map. We need to fix this.\n\n\nCode\nunique(vn$ADM1_EN)\n\n\nshow names that are in pci but not in vn\n\n\nCode\npci %&gt;% \n  filter(!Province %in% vn$ADM1_EN) %&gt;% \n  select(Province)\n\n\nlet’s replace these names in pci with the names in vn for us to be able to join the two datasets\n\n\nCode\npci &lt;- pci %&gt;% \n  mutate(Province = case_when(\n    Province == \"BRVT\" ~ \"Ba Ria - Vung Tau\",\n    Province == \"Can Tho\" ~ \"Can Tho city\",\n    Province == \"Da Nang\" ~ \"Da Nang city\",\n    Province == \"HCMC\" ~ \"Ho Chi Minh city\",\n    Province == \"Hai Phong\" ~ \"Hai Phong city\",\n    Province == \"TT-Hue\" ~ \"Thua Thien Hue\",\n    TRUE ~ Province\n  ))\n\n\nlets check again\n\n\nCode\npci %&gt;% \n  filter(!Province %in% vn$ADM1_EN) %&gt;% \n  select(Province)\n\n\nLooks like we’re good to go!\nwe first need to remove the % sign in the last 4 columns of pci and convert it to integer datatype\n\n\nCode\npci &lt;- pci %&gt;% \n  mutate(across(ends_with(\"ind\"), ~as.integer(str_remove(., \"%\"))))\n\n\n\n\nCode\nglimpse(pci)\n\n\n\n\nCode\nwrite_rds(pci, \"data/rds/pci.rds\")\n\n\n\n\nCode\npci &lt;- read_rds(\"data/rds/pci.rds\")\n\n\n\n\n2.0 Clustering using SKATER method\n\n\nCode\ncluster_vars.cor = cor(pci[,3:7])\ncorrplot.mixed(cluster_vars.cor,\n         lower = \"ellipse\", \n               upper = \"number\",\n               tl.pos = \"lt\",\n               diag = \"l\",\n               tl.col = \"black\")\n\n\n\n\n\n\n\nCode\nvn_pci &lt;- vn %&gt;% \n  left_join(pci, by = c(\"ADM1_EN\" = \"Province\"))\n\n\n\n\nCode\nslt_vn &lt;- select(vn_pci, c(ADM1_EN, overall_index, security_ind, theft_ind, police_ind, gangster_ind))\n\n\n\n\nCode\nslt_vn &lt;- st_drop_geometry(slt_vn)\n\n\ncheck the datatype of vn\n\n\nCode\nvn\n\n\nSimple feature collection with 63 features and 16 fields\nGeometry type: MULTIPOLYGON\nDimension:     XY\nBounding box:  xmin: 102.144 ymin: 7.180931 xmax: 117.8355 ymax: 23.39221\nGeodetic CRS:  WGS 84\nFirst 10 features:\n   Shape_Leng Shape_Area           ADM1_EN           ADM1_VI ADM1_PCODE\n1    2.900742 0.29203991          An Giang          An Giang      VN805\n2    3.419187 0.16303276 Ba Ria - Vung Tau Bà Rịa - Vũng Tàu      VN717\n3    4.514786 0.33874811         Bac Giang         Bắc Giang      VN221\n4    4.207590 0.42559833           Bac Kan           Bắc Kạn      VN207\n5    2.879202 0.20404993          Bac Lieu          Bạc Liêu      VN821\n6    1.685751 0.07149842          Bac Ninh          Bắc Ninh      VN106\n7    2.164654 0.19391967           Ben Tre           Bến Tre      VN811\n8    4.272459 0.50818750         Binh Dinh         Bình Định      VN507\n9    3.869973 0.22299221        Binh Duong        Bình Dương      VN711\n10   5.308304 0.56929781        Binh Phuoc        Bình Phước      VN707\n   ADM1_REF ADM1ALT1EN ADM1ALT2EN ADM1ALT1VI ADM1ALT2VI  ADM0_EN  ADM0_VI\n1      &lt;NA&gt;       &lt;NA&gt;       &lt;NA&gt;       &lt;NA&gt;       &lt;NA&gt; Viet Nam Việt Nam\n2      &lt;NA&gt;       &lt;NA&gt;       &lt;NA&gt;       &lt;NA&gt;       &lt;NA&gt; Viet Nam Việt Nam\n3      &lt;NA&gt;       &lt;NA&gt;       &lt;NA&gt;       &lt;NA&gt;       &lt;NA&gt; Viet Nam Việt Nam\n4      &lt;NA&gt;       &lt;NA&gt;       &lt;NA&gt;       &lt;NA&gt;       &lt;NA&gt; Viet Nam Việt Nam\n5      &lt;NA&gt;       &lt;NA&gt;       &lt;NA&gt;       &lt;NA&gt;       &lt;NA&gt; Viet Nam Việt Nam\n6      &lt;NA&gt;       &lt;NA&gt;       &lt;NA&gt;       &lt;NA&gt;       &lt;NA&gt; Viet Nam Việt Nam\n7      &lt;NA&gt;       &lt;NA&gt;       &lt;NA&gt;       &lt;NA&gt;       &lt;NA&gt; Viet Nam Việt Nam\n8      &lt;NA&gt;       &lt;NA&gt;       &lt;NA&gt;       &lt;NA&gt;       &lt;NA&gt; Viet Nam Việt Nam\n9      &lt;NA&gt;       &lt;NA&gt;       &lt;NA&gt;       &lt;NA&gt;       &lt;NA&gt; Viet Nam Việt Nam\n10     &lt;NA&gt;       &lt;NA&gt;       &lt;NA&gt;       &lt;NA&gt;       &lt;NA&gt; Viet Nam Việt Nam\n   ADM0_PCODE       date    validOn validTo                       geometry\n1          VN 2019-10-01 2020-01-03    &lt;NA&gt; MULTIPOLYGON (((105.1172 10...\n2          VN 2019-10-01 2020-01-03    &lt;NA&gt; MULTIPOLYGON (((106.5574 8....\n3          VN 2019-10-01 2020-01-03    &lt;NA&gt; MULTIPOLYGON (((106.163 21....\n4          VN 2019-10-01 2020-01-03    &lt;NA&gt; MULTIPOLYGON (((105.7415 22...\n5          VN 2019-10-01 2020-01-03    &lt;NA&gt; MULTIPOLYGON (((105.2989 9....\n6          VN 2019-10-01 2020-01-03    &lt;NA&gt; MULTIPOLYGON (((106.0008 21...\n7          VN 2019-10-01 2020-01-03    &lt;NA&gt; MULTIPOLYGON (((106.4089 10...\n8          VN 2019-10-01 2020-01-03    &lt;NA&gt; MULTIPOLYGON (((109.3701 13...\n9          VN 2019-10-01 2020-01-03    &lt;NA&gt; MULTIPOLYGON (((106.4419 11...\n10         VN 2019-10-01 2020-01-03    &lt;NA&gt; MULTIPOLYGON (((107.2064 12...\n\n\n\n\nCode\nvn_sp &lt;- as_Spatial(vn)\n\n\n\n\nCode\nvn.nb &lt;- poly2nb(vn_sp)\nsummary(vn.nb)\n\n\nNeighbour list object:\nNumber of regions: 63 \nNumber of nonzero links: 270 \nPercentage nonzero weights: 6.802721 \nAverage number of links: 4.285714 \nLink number distribution:\n\n 2  3  4  5  6  7  8 \n 7 12 19 11 10  3  1 \n7 least connected regions:\n12 15 18 25 41 46 50 with 2 links\n1 most connected region:\n24 with 8 links\n\n\n\n\nCode\nplot(vn_sp, \n     border=grey(.5))\nplot(vn.nb, \n     coordinates(vn_sp), \n     col=\"blue\", \n     add=TRUE)\n\n\n\n\n\n\n\nCode\nlcosts &lt;- nbcosts(vn.nb, slt_vn)\n\n\n\n\nCode\nvn.w &lt;- nb2listw(vn.nb, \n                   lcosts, \n                   style=\"B\")\nsummary(vn.w)\n\n\nCharacteristics of weights list object:\nNeighbour list object:\nNumber of regions: 63 \nNumber of nonzero links: 270 \nPercentage nonzero weights: 6.802721 \nAverage number of links: 4.285714 \nLink number distribution:\n\n 2  3  4  5  6  7  8 \n 7 12 19 11 10  3  1 \n7 least connected regions:\n12 15 18 25 41 46 50 with 2 links\n1 most connected region:\n24 with 8 links\n\nWeights style: B \nWeights constants summary:\n   n   nn       S0       S1      S2\nB 63 3969 4049.519 158688.5 1235388\n\n\n\n\nCode\nvn.mst &lt;- mstree(vn.w)\n\n\n\n\nCode\nclass(vn.mst)\n\n\n[1] \"mst\"    \"matrix\"\n\n\n\n\nCode\ndim(vn.mst)\n\n\n[1] 62  3\n\n\n\n\nCode\nplot(vn_sp, border=gray(.5))\nplot.mst(vn.mst, \n         coordinates(vn_sp), \n         col=\"blue\", \n         cex.lab=0.7, \n         cex.circles=0.005, \n         add=TRUE)\n\n\n\n\n\n\n\nCode\nrow.names(slt_vn) &lt;- slt_vn$\"ADM1_EN\"\n\n\n\n\nCode\nslt_vn &lt;- select(slt_vn, -ADM1_EN)\n\n\n\n\nCode\nclust6 &lt;- spdep::skater(edges = vn.mst[,1:2], \n                 data = slt_vn, \n                 method = \"euclidean\", \n                 ncuts = 5)\n\n\n\n\nCode\nstr(clust6)\n\n\nList of 8\n $ groups      : num [1:63] 1 1 2 2 1 2 1 1 3 3 ...\n $ edges.groups:List of 6\n  ..$ :List of 3\n  .. ..$ node: num [1:34] 41 46 15 43 20 28 36 25 61 7 ...\n  .. ..$ edge: num [1:33, 1:3] 25 28 8 8 29 58 21 61 20 45 ...\n  .. ..$ ssw : num 343\n  ..$ :List of 3\n  .. ..$ node: num [1:11] 3 6 31 54 55 27 4 40 62 49 ...\n  .. ..$ edge: num [1:10, 1:3] 54 3 3 3 6 54 55 3 55 31 ...\n  .. ..$ ssw : num 70.3\n  ..$ :List of 3\n  .. ..$ node: num [1:2] 9 10\n  .. ..$ edge: num [1, 1:3] 9 10 3.8\n  .. ..$ ssw : num 3.8\n  ..$ :List of 3\n  .. ..$ node: num 39\n  .. ..$ edge: num[0 , 1:3] \n  .. ..$ ssw : num 0\n  ..$ :List of 3\n  .. ..$ node: num 42\n  .. ..$ edge: num[0 , 1:3] \n  .. ..$ ssw : num 0\n  ..$ :List of 3\n  .. ..$ node: num [1:14] 52 63 56 60 44 38 24 14 30 22 ...\n  .. ..$ edge: num [1:13, 1:3] 56 52 63 44 38 24 63 63 52 52 ...\n  .. ..$ ssw : num 91.5\n $ not.prune   : NULL\n $ candidates  : int [1:6] 1 2 3 4 5 6\n $ ssto        : num 672\n $ ssw         : num [1:6] 672 610 571 547 526 ...\n $ crit        : num [1:2] 1 Inf\n $ vec.crit    : num [1:63] 1 1 1 1 1 1 1 1 1 1 ...\n - attr(*, \"class\")= chr \"skater\"\n\n\n\n\nCode\nccs6 &lt;- clust6$groups\nccs6\n\n\n [1] 1 1 2 2 1 2 1 1 3 3 1 1 1 6 1 1 1 6 1 1 1 6 6 6 1 2 2 1 1 6 2 1 1 1 6 1 6 6\n[39] 4 2 1 5 1 6 1 1 1 1 2 1 1 6 1 2 2 6 1 1 1 6 1 2 6\n\n\n\n\nCode\nplot(vn_sp, border=gray(.5))\nplot(clust6, \n     coordinates(vn_sp), \n     cex.lab=.7,\n     groups.colors=c(\"red\",\"green\",\"blue\", \"brown\", \"pink\"),\n     cex.circles=0.005, \n     add=TRUE)\n\n\n\n\n\n\n\nCode\nproxmat &lt;- dist(slt_vn, method = 'euclidean')\n\n\n\n\nCode\nhclust_ward &lt;- hclust(proxmat, method = 'ward.D')\n\n\n\n\nCode\ngroups &lt;- as.factor(cutree(hclust_ward, k=6))\n\n\n\n\nCode\nvn_cluster &lt;- cbind(vn, as.matrix(groups)) %&gt;%\n  rename(`CLUSTER`=`as.matrix.groups.`)\n\n\n\n\nCode\ntmap_mode(\"plot\")\n\n\n\n\nCode\ngroups_mat &lt;- as.matrix(clust6$groups)\nvn_spatialcluster &lt;- cbind(vn_cluster, as.factor(groups_mat)) %&gt;%\n  rename(`SP_CLUSTER`=`as.factor.groups_mat.`)\nqtm(vn_spatialcluster, \"SP_CLUSTER\")\n\n\n\n\n\n\n\nCode\nhclust.map &lt;- qtm(vn_cluster,\n                  \"CLUSTER\") + \n  tm_borders(alpha = 0.5) \n\nshclust.map &lt;- qtm(vn_spatialcluster,\n                   \"SP_CLUSTER\") + \n  tm_borders(alpha = 0.5) \n\ntmap_arrange(hclust.map, shclust.map,\n             asp=NA, ncol=2)\n\n\n\n\n\n\n\n3.0 Storyboard UI\nthe 2 main sources that we will use to create the UI are the shiny and shinydashboard packages. The shiny package is used to create the UI and the shinydashboard package is used to create the dashboard layout.\nWe can find information about shiny UI designing in the following link: https://shiny.rstudio.com/articles/layout-guide.html\nAdditional resources: 1) https://shiny.posit.co/ 2) https://rstudio.github.io/cheatsheets/html/shiny.html?_gl=117a3ps8_gaMTAxMjM5NDEwMS4xNzA0NjM3NDA2_ga_2C0WZ1JHG0*MTcxMDMxNzc1NS43LjEuMTcxMDMxNzg4OS4wLjAuMA.. 3) https://deanattali.com/blog/building-shiny-apps-tutorial/#11-using-uioutput-to-create-ui-elements-dynamically\n\nAs of now, there’ll be 3 parameters that the user can change: 1) The number of clusters 2) The distance metric 3) The agglomeration method. This is to give the user more control over the clustering process.\nThings that we could potentially look into: 1) Adding a map to the UI that shows the clusters 2) Adding a table that shows the provinces and their respective clusters 3) Allow users to change the level of clustering (i.e. from province to district level) 4) Allow users to change the variables that are used for clustering 5) Allow users to change the color of the clusters for better visuals"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex09/Hands-on_Ex09.html",
    "href": "Hands-on_Ex/Hands-on_Ex09/Hands-on_Ex09.html",
    "title": "Hands-on Exercise 8 - Geographically Weighted Predictive Models",
    "section": "",
    "text": "Code\npacman::p_load(sf, spdep, GWmodel, SpatialML, \n               tmap, rsample, Metrics, tidyverse)\n\n\n\n\n\n\n\nCode\nmdata &lt;- read_rds(\"data/aspatial/mdata.rds\")\n\n\n\n\n\n\nCode\nset.seed(1234)\nresale_split &lt;- initial_split(mdata, \n                              prop = 6.5/10,)\ntrain_data &lt;- training(resale_split)\ntest_data &lt;- testing(resale_split)\n\n\n\n\nCode\nwrite_rds(train_data, \"data/rds/train_data.rds\")\nwrite_rds(test_data, \"data/rds/test_data.rds\")"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex09/Hands-on_Ex09.html#installing-and-loading-packages",
    "href": "Hands-on_Ex/Hands-on_Ex09/Hands-on_Ex09.html#installing-and-loading-packages",
    "title": "Hands-on Exercise 8 - Geographically Weighted Predictive Models",
    "section": "",
    "text": "Code\npacman::p_load(sf, spdep, GWmodel, SpatialML, \n               tmap, rsample, Metrics, tidyverse)"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex09/Hands-on_Ex09.html#data",
    "href": "Hands-on_Ex/Hands-on_Ex09/Hands-on_Ex09.html#data",
    "title": "Hands-on Exercise 8 - Geographically Weighted Predictive Models",
    "section": "",
    "text": "Code\nmdata &lt;- read_rds(\"data/aspatial/mdata.rds\")\n\n\n\n\n\n\nCode\nset.seed(1234)\nresale_split &lt;- initial_split(mdata, \n                              prop = 6.5/10,)\ntrain_data &lt;- training(resale_split)\ntest_data &lt;- testing(resale_split)\n\n\n\n\nCode\nwrite_rds(train_data, \"data/rds/train_data.rds\")\nwrite_rds(test_data, \"data/rds/test_data.rds\")"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex09/Hands-on_Ex09.html#computing-adaptive-bandwidth",
    "href": "Hands-on_Ex/Hands-on_Ex09/Hands-on_Ex09.html#computing-adaptive-bandwidth",
    "title": "Hands-on Exercise 8 - Geographically Weighted Predictive Models",
    "section": "4.1 computing adaptive bandwidth",
    "text": "4.1 computing adaptive bandwidth\n\n\nCode\nbw_adaptive &lt;- bw.gwr(resale_price ~ floor_area_sqm +\n                  storey_order + remaining_lease_mths +\n                  PROX_CBD + PROX_ELDERLYCARE + PROX_HAWKER +\n                  PROX_MRT + PROX_PARK + PROX_MALL + \n                  PROX_SUPERMARKET + WITHIN_350M_KINDERGARTEN +\n                  WITHIN_350M_CHILDCARE + WITHIN_350M_BUS +\n                  WITHIN_1KM_PRISCH,\n                  data=train_data_sp,\n                  approach=\"CV\",\n                  kernel=\"gaussian\",\n                  adaptive=TRUE,\n                  longlat=FALSE)\n\n\n\n\nCode\nwrite_rds(bw_adaptive, \"data/rds/bw_adaptive.rds\" ) \n\n\n\n\nCode\nbw_adaptive &lt;- read_rds(\"data/rds/bw_adaptive.rds\" )\n\n\n\n\nCode\nbw_adaptive\n\n\n[1] 40"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex09/Hands-on_Ex09.html#gwr-model",
    "href": "Hands-on_Ex/Hands-on_Ex09/Hands-on_Ex09.html#gwr-model",
    "title": "Hands-on Exercise 8 - Geographically Weighted Predictive Models",
    "section": "4.2 gwr model",
    "text": "4.2 gwr model\n\n\nCode\ngwr_adaptive &lt;- gwr.basic(formula = resale_price ~\n                            floor_area_sqm + storey_order +\n                            remaining_lease_mths + PROX_CBD + \n                            PROX_ELDERLYCARE + PROX_HAWKER +\n                            PROX_MRT + PROX_PARK + PROX_MALL + \n                            PROX_SUPERMARKET + WITHIN_350M_KINDERGARTEN +\n                            WITHIN_350M_CHILDCARE + WITHIN_350M_BUS +\n                            WITHIN_1KM_PRISCH,\n                          data=train_data_sp,\n                          bw=bw_adaptive, \n                          kernel = 'gaussian', \n                          adaptive=TRUE,\n                          longlat = FALSE)\n\n\n\n\nCode\nwrite_rds(gwr_adaptive, \"data/rds/gwr_adaptive.rds\" ) \n\n\n\n\nCode\ngwr_adaptive &lt;- read_rds(\"data/rds/gwr_adaptive.rds\" )\n\n\n\n\nCode\ngwr_adaptive\n\n\n   ***********************************************************************\n   *                       Package   GWmodel                             *\n   ***********************************************************************\n   Program starts at: 2024-03-15 15:58:18.120318 \n   Call:\n   gwr.basic(formula = resale_price ~ floor_area_sqm + storey_order + \n    remaining_lease_mths + PROX_CBD + PROX_ELDERLYCARE + PROX_HAWKER + \n    PROX_MRT + PROX_PARK + PROX_MALL + PROX_SUPERMARKET + WITHIN_350M_KINDERGARTEN + \n    WITHIN_350M_CHILDCARE + WITHIN_350M_BUS + WITHIN_1KM_PRISCH, \n    data = train_data_sp, bw = bw_adaptive, kernel = \"gaussian\", \n    adaptive = TRUE, longlat = FALSE)\n\n   Dependent (y) variable:  resale_price\n   Independent variables:  floor_area_sqm storey_order remaining_lease_mths PROX_CBD PROX_ELDERLYCARE PROX_HAWKER PROX_MRT PROX_PARK PROX_MALL PROX_SUPERMARKET WITHIN_350M_KINDERGARTEN WITHIN_350M_CHILDCARE WITHIN_350M_BUS WITHIN_1KM_PRISCH\n   Number of data points: 10335\n   ***********************************************************************\n   *                    Results of Global Regression                     *\n   ***********************************************************************\n\n   Call:\n    lm(formula = formula, data = data)\n\n   Residuals:\n    Min      1Q  Median      3Q     Max \n-205193  -39120   -1930   36545  472355 \n\n   Coefficients:\n                              Estimate Std. Error t value Pr(&gt;|t|)    \n   (Intercept)              107601.073  10601.261  10.150  &lt; 2e-16 ***\n   floor_area_sqm             2780.698     90.579  30.699  &lt; 2e-16 ***\n   storey_order              14299.298    339.115  42.167  &lt; 2e-16 ***\n   remaining_lease_mths        344.490      4.592  75.027  &lt; 2e-16 ***\n   PROX_CBD                 -16930.196    201.254 -84.124  &lt; 2e-16 ***\n   PROX_ELDERLYCARE         -14441.025    994.867 -14.516  &lt; 2e-16 ***\n   PROX_HAWKER              -19265.648   1273.597 -15.127  &lt; 2e-16 ***\n   PROX_MRT                 -32564.272   1744.232 -18.670  &lt; 2e-16 ***\n   PROX_PARK                 -5712.625   1483.885  -3.850 0.000119 ***\n   PROX_MALL                -14717.388   2007.818  -7.330 2.47e-13 ***\n   PROX_SUPERMARKET         -26881.938   4189.624  -6.416 1.46e-10 ***\n   WITHIN_350M_KINDERGARTEN   8520.472    632.812  13.464  &lt; 2e-16 ***\n   WITHIN_350M_CHILDCARE     -4510.650    354.015 -12.741  &lt; 2e-16 ***\n   WITHIN_350M_BUS             813.493    222.574   3.655 0.000259 ***\n   WITHIN_1KM_PRISCH         -8010.834    491.512 -16.298  &lt; 2e-16 ***\n\n   ---Significance stars\n   Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1 \n   Residual standard error: 61650 on 10320 degrees of freedom\n   Multiple R-squared: 0.7373\n   Adjusted R-squared: 0.737 \n   F-statistic:  2069 on 14 and 10320 DF,  p-value: &lt; 2.2e-16 \n   ***Extra Diagnostic information\n   Residual sum of squares: 3.922202e+13\n   Sigma(hat): 61610.08\n   AIC:  257320.2\n   AICc:  257320.3\n   BIC:  247249\n   ***********************************************************************\n   *          Results of Geographically Weighted Regression              *\n   ***********************************************************************\n\n   *********************Model calibration information*********************\n   Kernel function: gaussian \n   Adaptive bandwidth: 40 (number of nearest neighbours)\n   Regression points: the same locations as observations are used.\n   Distance metric: Euclidean distance metric is used.\n\n   ****************Summary of GWR coefficient estimates:******************\n                                   Min.     1st Qu.      Median     3rd Qu.\n   Intercept                -3.2478e+08 -4.7727e+05 -8.3004e+03  5.5025e+05\n   floor_area_sqm           -2.8714e+04  1.4475e+03  2.3011e+03  3.3900e+03\n   storey_order              3.3186e+03  8.5899e+03  1.0826e+04  1.3397e+04\n   remaining_lease_mths     -1.4431e+03  2.6063e+02  3.9048e+02  5.2865e+02\n   PROX_CBD                 -1.0837e+07 -5.7697e+04 -1.3787e+04  2.6552e+04\n   PROX_ELDERLYCARE         -3.2195e+07 -4.0643e+04  1.0562e+04  6.1054e+04\n   PROX_HAWKER              -2.3985e+08 -5.1365e+04  3.0026e+03  6.4287e+04\n   PROX_MRT                 -1.1632e+07 -1.0488e+05 -4.9373e+04  5.1037e+03\n   PROX_PARK                -6.5961e+06 -4.8671e+04 -8.8128e+02  5.3498e+04\n   PROX_MALL                -1.8112e+07 -7.4238e+04 -1.3982e+04  4.9779e+04\n   PROX_SUPERMARKET         -4.5761e+06 -6.3461e+04 -1.7429e+04  3.5616e+04\n   WITHIN_350M_KINDERGARTEN -4.1823e+05 -6.0040e+03  9.0209e+01  4.7127e+03\n   WITHIN_350M_CHILDCARE    -1.0273e+05 -2.2375e+03  2.6668e+02  2.6388e+03\n   WITHIN_350M_BUS          -1.1757e+05 -1.4719e+03  1.1626e+02  1.7584e+03\n   WITHIN_1KM_PRISCH        -6.6465e+05 -5.5959e+03  2.6916e+02  5.7500e+03\n                                  Max.\n   Intercept                1.6493e+08\n   floor_area_sqm           5.0907e+04\n   storey_order             2.9537e+04\n   remaining_lease_mths     1.8119e+03\n   PROX_CBD                 2.2411e+07\n   PROX_ELDERLYCARE         8.2444e+07\n   PROX_HAWKER              5.9654e+06\n   PROX_MRT                 2.0189e+08\n   PROX_PARK                1.5188e+07\n   PROX_MALL                1.0443e+07\n   PROX_SUPERMARKET         3.8330e+06\n   WITHIN_350M_KINDERGARTEN 6.6799e+05\n   WITHIN_350M_CHILDCARE    1.0802e+05\n   WITHIN_350M_BUS          3.7313e+04\n   WITHIN_1KM_PRISCH        5.0231e+05\n   ************************Diagnostic information*************************\n   Number of data points: 10335 \n   Effective number of parameters (2trace(S) - trace(S'S)): 1730.101 \n   Effective degrees of freedom (n-2trace(S) + trace(S'S)): 8604.899 \n   AICc (GWR book, Fotheringham, et al. 2002, p. 61, eq 2.33): 238871.9 \n   AIC (GWR book, Fotheringham, et al. 2002,GWR p. 96, eq. 4.22): 237036.9 \n   BIC (GWR book, Fotheringham, et al. 2002,GWR p. 61, eq. 2.34): 238209.1 \n   Residual sum of squares: 4.829191e+12 \n   R-square value:  0.967657 \n   Adjusted R-square value:  0.9611534 \n\n   ***********************************************************************\n   Program stops at: 2024-03-15 16:00:43.485072 \n\n\n\n\nCode\ntest_data_sp &lt;- test_data %&gt;%\n  as_Spatial()\ntest_data_sp"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex09/Hands-on_Ex09.html#extracting-coordinates-data",
    "href": "Hands-on_Ex/Hands-on_Ex09/Hands-on_Ex09.html#extracting-coordinates-data",
    "title": "Hands-on Exercise 8 - Geographically Weighted Predictive Models",
    "section": "5.1 extracting coordinates data",
    "text": "5.1 extracting coordinates data\n\n\nCode\ncoords &lt;- st_coordinates(mdata)\ncoords_train &lt;- st_coordinates(train_data)\ncoords_test &lt;- st_coordinates(test_data)\n\n\n\n\nCode\nwrite_rds(coords_train, \"data/rds/coords_train.rds\" )\nwrite_rds(coords_test, \"data/rds/coords_test.rds\" )\n\n\n\n\nCode\ncoords_train &lt;- read_rds(\"data/rds/coords_train.rds\" )\ncoords_test &lt;- read_rds(\"data/rds/coords_test.rds\" )\n\n\n\n\nCode\ncoords_train\n\n\n                X        Y\n    [1,] 39421.99 37094.13\n    [2,] 36395.05 31714.45\n    [3,] 41466.54 38691.58\n    [4,] 35027.93 43052.26\n    [5,] 27363.82 48032.56\n    [6,] 28871.91 46265.93\n    [7,] 28012.41 46015.43\n    [8,] 17935.25 35678.48\n    [9,] 18796.32 38243.67\n   [10,] 39213.48 39908.40\n   [11,] 39586.98 37785.36\n   [12,] 20555.98 32729.69\n   [13,] 21104.11 32515.89\n   [14,] 32435.61 37600.18\n   [15,] 30456.94 36680.90\n   [16,] 32537.89 41573.17\n   [17,] 35787.70 42726.34\n   [18,] 29175.17 35432.24\n   [19,] 34449.87 39938.40\n   [20,] 34505.87 40099.50\n   [21,] 29452.09 44942.83\n   [22,] 24234.02 46379.30\n   [23,] 36536.14 41556.12\n   [24,] 23511.76 45765.64\n   [25,] 37407.38 42437.73\n   [26,] 39642.19 40215.39\n   [27,] 32924.26 41871.99\n   [28,] 30528.83 38874.44\n   [29,] 27195.17 29098.03\n   [30,] 34028.06 40027.76\n   [31,] 26565.77 47509.61\n   [32,] 23985.14 31583.40\n   [33,] 29008.08 45470.67\n   [34,] 32663.68 36774.04\n   [35,] 32588.22 41800.05\n   [36,] 29324.79 44633.09\n   [37,] 34609.76 38025.76\n   [38,] 24048.67 47069.58\n   [39,] 17178.17 40168.16\n   [40,] 24994.67 47144.29\n   [41,] 15867.80 34515.18\n   [42,] 26652.87 48322.43\n   [43,] 12740.84 36712.95\n   [44,] 30550.38 39588.77\n   [45,] 19760.34 40940.87\n   [46,] 39410.72 34355.35\n   [47,] 36400.67 43139.74\n   [48,] 27363.82 48032.56\n   [49,] 35593.41 43605.80\n   [50,] 14210.49 36691.54\n   [51,] 12961.91 35618.04\n   [52,] 29735.14 33207.27\n   [53,] 29231.42 44639.74\n   [54,] 14871.26 36967.45\n   [55,] 29086.28 38257.24\n   [56,] 21752.95 47002.21\n   [57,] 26630.20 47351.29\n   [58,] 23911.18 46959.21\n   [59,] 30207.09 39331.63\n   [60,] 39366.80 33895.96\n   [61,] 13590.28 36327.73\n   [62,] 31756.01 37413.44\n   [63,] 35369.84 40688.02\n   [64,] 34087.15 39457.88\n   [65,] 23430.31 47233.57\n   [66,] 40833.46 36861.06\n   [67,] 39746.65 37995.14\n   [68,] 13702.58 36084.78\n   [69,] 21097.14 40018.14\n   [70,] 36611.14 42695.18\n   [71,] 33666.53 39206.18\n   [72,] 25093.16 47165.81\n   [73,] 29600.33 37890.81\n   [74,] 42009.86 39685.99\n   [75,] 18668.13 40422.19\n   [76,] 33728.01 39056.62\n   [77,] 32848.09 33168.16\n   [78,] 27309.94 46123.17\n   [79,] 32537.89 41573.17\n   [80,] 27250.43 29457.87\n   [81,] 28851.09 28922.88\n   [82,] 29387.90 45956.64\n   [83,] 34036.71 41562.53\n   [84,] 23430.31 47233.57\n   [85,] 36482.52 42857.42\n   [86,] 26747.81 48002.78\n   [87,] 12693.25 36459.79\n   [88,] 25102.19 30014.95\n   [89,] 41429.83 37629.30\n   [90,] 29914.12 33468.51\n   [91,] 28876.22 28717.68\n   [92,] 25420.24 28626.15\n   [93,] 21133.84 41240.77\n   [94,] 34085.33 41868.11\n   [95,] 41078.14 36004.68\n   [96,] 14169.47 36801.47\n   [97,] 36859.47 42540.04\n   [98,] 21408.13 46424.22\n   [99,] 18290.97 37107.07\n  [100,] 37407.38 42437.73\n  [101,] 11980.86 36207.75\n  [102,] 34165.54 41998.48\n  [103,] 28772.63 28489.11\n  [104,] 29731.87 36630.69\n  [105,] 18131.90 42261.14\n  [106,] 42053.07 38130.90\n  [107,] 18587.10 36402.95\n  [108,] 30697.69 35120.96\n  [109,] 18070.36 42619.75\n  [110,] 27697.61 45878.82\n  [111,] 35568.35 43392.61\n  [112,] 24651.29 47679.40\n  [113,] 28251.99 44429.36\n  [114,] 30036.29 38360.76\n  [115,] 35593.41 43605.80\n  [116,] 31349.11 33998.70\n  [117,] 19327.60 36185.04\n  [118,] 35540.50 40671.77\n  [119,] 35021.31 43010.55\n  [120,] 33845.56 39272.01\n  [121,] 18974.36 38264.44\n  [122,] 34044.96 33916.73\n  [123,] 18982.22 38706.05\n  [124,] 39290.77 34160.04\n  [125,] 31308.79 34136.52\n  [126,] 23941.20 46048.66\n  [127,] 36163.75 41149.34\n  [128,] 29266.07 46069.01\n  [129,] 30012.30 32655.67\n  [130,] 11646.69 35854.07\n  [131,] 35255.86 42983.08\n  [132,] 17666.79 40209.58\n  [133,] 21185.33 41020.82\n  [134,] 17785.96 40176.08\n  [135,] 30953.84 34425.57\n  [136,] 26012.73 48560.65\n  [137,] 35299.86 33308.21\n  [138,] 33674.43 33737.19\n  [139,] 24822.58 47056.57\n  [140,] 29584.94 44828.50\n  [141,] 18187.19 41813.01\n  [142,] 41504.36 37962.09\n  [143,] 41174.30 38722.15\n  [144,] 18399.38 38112.34\n  [145,] 28851.09 28922.88\n  [146,] 41690.41 38032.31\n  [147,] 36758.46 43100.55\n  [148,] 32676.45 41702.54\n  [149,] 29555.18 44742.73\n  [150,] 41753.31 36594.40\n  [151,] 38676.79 35018.03\n  [152,] 28749.31 44629.33\n  [153,] 34803.47 40540.80\n  [154,] 36569.24 34706.30\n  [155,] 23612.30 46542.96\n  [156,] 32426.61 32898.13\n  [157,] 31756.01 37413.44\n  [158,] 36537.44 41164.11\n  [159,] 41653.98 38943.63\n  [160,] 21752.95 47002.21\n  [161,] 32359.33 41561.13\n  [162,] 32062.40 37370.53\n  [163,] 15121.58 37004.64\n  [164,] 39473.63 36564.74\n  [165,] 28325.01 44203.02\n  [166,] 25705.97 29944.02\n  [167,] 28883.52 46161.45\n  [168,] 40419.14 37684.03\n  [169,] 36685.93 42525.91\n  [170,] 28380.88 44249.50\n  [171,] 21372.01 45567.44\n  [172,] 17771.70 36462.14\n  [173,] 17935.11 40767.19\n  [174,] 30000.60 34865.99\n  [175,] 31633.40 37363.37\n  [176,] 27306.60 48063.03\n  [177,] 33642.28 39946.02\n  [178,] 29237.28 46110.40\n  [179,] 35955.71 34420.96\n  [180,] 32226.54 33128.13\n  [181,] 24629.97 47757.26\n  [182,] 27381.55 45550.59\n  [183,] 14175.62 36752.99\n  [184,] 31287.69 34108.52\n  [185,] 12757.70 35751.21\n  [186,] 14686.20 36172.54\n  [187,] 18501.00 35913.49\n  [188,] 15452.22 36404.85\n  [189,] 24165.28 46126.52\n  [190,] 35328.74 41519.54\n  [191,] 27354.73 45992.92\n  [192,] 39856.64 34051.13\n  [193,] 28404.62 46697.35\n  [194,] 41491.67 37784.47\n  [195,] 33516.47 37236.38\n  [196,] 18516.88 42055.68\n  [197,] 39846.57 33842.55\n  [198,] 37369.45 42367.78\n  [199,] 35654.91 42683.10\n  [200,] 29120.97 45320.14\n  [201,] 19454.43 36156.82\n  [202,] 17773.53 39688.05\n  [203,] 21366.11 47162.10\n  [204,] 28879.22 45454.97\n  [205,] 38668.12 35062.69\n  [206,] 21857.28 46973.56\n  [207,] 20063.30 31962.44\n  [208,] 21490.49 39869.07\n  [209,] 40999.67 36045.89\n  [210,] 34359.96 41982.62\n  [211,] 21090.97 40468.01\n  [212,] 21408.13 46424.22\n  [213,] 30935.65 33937.15\n  [214,] 13472.92 35679.79\n  [215,] 33117.37 35328.49\n  [216,] 34428.38 41160.88\n  [217,] 22241.94 46462.68\n  [218,] 30496.88 33803.30\n  [219,] 28545.55 39010.84\n  [220,] 18073.49 41770.05\n  [221,] 18205.12 41735.91\n  [222,] 29619.05 38739.19\n  [223,] 39151.37 34121.59\n  [224,] 18899.15 42737.55\n  [225,] 39310.54 37658.48\n  [226,] 13702.58 36084.78\n  [227,] 40701.69 39109.09\n  [228,] 21463.73 35749.72\n  [229,] 28383.02 40062.12\n  [230,] 32503.38 32711.82\n  [231,] 26012.73 48560.65\n  [232,] 35170.47 33252.39\n  [233,] 13541.16 35708.54\n  [234,] 29068.25 28859.83\n  [235,] 12616.74 35422.58\n  [236,] 14100.74 36480.41\n  [237,] 39657.40 34801.89\n  [238,] 24038.01 47679.74\n  [239,] 34096.12 42002.61\n  [240,] 17865.03 40458.67\n  [241,] 35529.25 33696.58\n  [242,] 21177.91 47246.95\n  [243,] 26103.31 30159.16\n  [244,] 18073.49 41770.05\n  [245,] 38552.01 34741.74\n  [246,] 32684.54 38978.71\n  [247,] 29861.37 38417.99\n  [248,] 34522.72 38363.16\n  [249,] 31305.55 35354.54\n  [250,] 35482.12 40902.93\n  [251,] 32435.94 41127.80\n  [252,] 35788.37 34683.76\n  [253,] 24588.33 47679.03\n  [254,] 41203.80 37091.91\n  [255,] 32956.36 41532.05\n  [256,] 32851.48 41722.74\n  [257,] 35958.83 40921.49\n  [258,] 18435.04 33420.05\n  [259,] 18227.23 40634.09\n  [260,] 30697.69 35120.96\n  [261,] 17557.21 40353.89\n  [262,] 20870.29 41152.00\n  [263,] 22816.47 46071.39\n  [264,] 35594.66 34326.76\n  [265,] 13257.17 36725.54\n  [266,] 33129.97 41219.11\n  [267,] 25595.61 29989.53\n  [268,] 32997.30 41756.79\n  [269,] 32588.22 41800.05\n  [270,] 29233.61 44682.73\n  [271,] 33213.52 37146.11\n  [272,] 27377.34 29030.93\n  [273,] 23166.02 46739.85\n  [274,] 35889.58 39923.62\n  [275,] 13335.01 35633.92\n  [276,] 29175.17 35432.24\n  [277,] 39336.50 36628.39\n  [278,] 29548.52 44871.70\n  [279,] 27265.75 47952.87\n  [280,] 11969.02 35939.51\n  [281,] 29248.59 38589.71\n  [282,] 20451.59 33486.83\n  [283,] 41235.94 37826.47\n  [284,] 29193.72 35384.32\n  [285,] 20078.59 40388.92\n  [286,] 15488.83 36506.53\n  [287,] 22637.45 32298.62\n  [288,] 35659.26 43562.75\n  [289,] 39746.35 35346.57\n  [290,] 22241.93 46545.97\n  [291,] 29917.18 39339.98\n  [292,] 34025.67 39498.31\n  [293,] 35891.51 40087.66\n  [294,] 13256.55 35349.69\n  [295,] 29328.33 38742.64\n  [296,] 36117.49 41585.11\n  [297,] 30994.53 33511.15\n  [298,] 25210.47 30633.53\n  [299,] 13228.32 35568.07\n  [300,] 27289.25 28583.13\n  [301,] 33049.47 41677.27\n  [302,] 36684.55 41778.21\n  [303,] 27705.12 45364.64\n  [304,] 29461.54 35205.89\n  [305,] 39729.72 34710.92\n  [306,] 21185.33 41020.82\n  [307,] 35393.49 34287.70\n  [308,] 13497.04 35935.38\n  [309,] 40717.54 39173.75\n  [310,] 40968.60 39239.59\n  [311,] 35221.40 33308.23\n  [312,] 40730.93 39254.96\n  [313,] 24249.76 46150.31\n  [314,] 31756.01 37413.44\n  [315,] 34205.51 42158.32\n  [316,] 34469.95 41889.54\n  [317,] 24442.04 47860.89\n  [318,] 23324.97 46112.92\n  [319,] 35112.00 40504.21\n  [320,] 26085.88 48562.06\n  [321,] 34135.30 37102.52\n  [322,] 23814.61 45826.55\n  [323,] 27718.66 37795.22\n  [324,] 17363.76 39666.07\n  [325,] 39437.03 39747.35\n  [326,] 13256.55 35349.69\n  [327,] 17341.31 40117.99\n  [328,] 36692.37 42718.62\n  [329,] 20855.73 32483.78\n  [330,] 32890.84 40251.77\n  [331,] 27041.16 28330.23\n  [332,] 39384.65 37028.19\n  [333,] 39060.28 37388.80\n  [334,] 39290.77 34160.04\n  [335,] 34218.69 34624.37\n  [336,] 25271.27 30638.55\n  [337,] 28879.22 45454.97\n  [338,] 33966.49 34582.53\n  [339,] 35785.39 34519.69\n  [340,] 21240.52 45414.13\n  [341,] 28963.89 45446.68\n  [342,] 36412.22 42853.42\n  [343,] 39846.57 33842.55\n  [344,] 34886.40 40409.32\n  [345,] 30947.86 33105.27\n  [346,] 20064.27 40534.97\n  [347,] 23616.53 47438.27\n  [348,] 28337.68 44751.35\n  [349,] 25205.95 30711.87\n  [350,] 28315.70 46114.41\n  [351,] 30272.23 36786.74\n  [352,] 34042.95 39419.04\n  [353,] 28651.28 46386.79\n  [354,] 29773.87 35275.80\n  [355,] 35206.53 42464.67\n  [356,] 14246.35 36749.10\n  [357,] 35173.32 33297.57\n  [358,] 42074.60 37028.71\n  [359,] 19676.89 40790.68\n  [360,] 34361.26 39904.38\n  [361,] 17956.14 39976.69\n  [362,] 23461.10 47158.03\n  [363,] 35891.51 40087.66\n  [364,] 40702.58 36850.23\n  [365,] 36975.56 42718.09\n  [366,] 38498.13 34639.49\n  [367,] 33190.98 41392.37\n  [368,] 35848.37 40032.01\n  [369,] 29229.58 45738.69\n  [370,] 20669.35 41279.55\n  [371,] 34540.71 40900.35\n  [372,] 39807.44 37787.05\n  [373,] 26204.19 48675.05\n  [374,] 39589.61 35388.80\n  [375,] 29225.56 45899.52\n  [376,] 32848.09 33168.16\n  [377,] 26793.86 28444.65\n  [378,] 34929.91 40629.78\n  [379,] 34970.94 40746.11\n  [380,] 35306.75 42778.71\n  [381,] 39937.08 40177.91\n  [382,] 23765.14 46425.88\n  [383,] 37674.23 34125.20\n  [384,] 37097.86 31783.94\n  [385,] 19458.09 36969.97\n  [386,] 38972.88 36682.27\n  [387,] 21104.11 32515.89\n  [388,] 12683.42 35713.66\n  [389,] 33863.93 33141.50\n  [390,] 29512.33 38534.41\n  [391,] 20745.95 39762.50\n  [392,] 33971.47 39991.16\n  [393,] 25882.67 48648.61\n  [394,] 34154.34 39254.00\n  [395,] 39138.99 36559.72\n  [396,] 39914.89 37706.46\n  [397,] 17792.65 33667.96\n  [398,] 17599.78 40691.61\n  [399,] 26591.26 28653.83\n  [400,] 37789.67 35424.50\n  [401,] 17295.98 39829.52\n  [402,] 27910.47 45286.02\n  [403,] 28052.58 44886.10\n  [404,] 40710.93 37771.59\n  [405,] 32821.64 41699.95\n  [406,] 21494.36 45448.41\n  [407,] 12524.85 36537.96\n  [408,] 37010.19 41665.68\n  [409,] 35417.00 39751.72\n  [410,] 42370.04 37362.61\n  [411,] 36536.14 41556.12\n  [412,] 18587.10 36402.95\n  [413,] 18402.36 40559.98\n  [414,] 34925.26 42853.27\n  [415,] 21484.89 45622.60\n  [416,] 30743.53 35742.31\n  [417,] 35779.40 34619.10\n  [418,] 27722.43 29885.24\n  [419,] 38318.74 34121.34\n  [420,] 36603.26 34909.11\n  [421,] 18982.22 38706.05\n  [422,] 41049.10 38096.10\n  [423,] 34359.60 38338.14\n  [424,] 39373.51 39707.26\n  [425,] 32112.13 39185.67\n  [426,] 24047.20 46433.08\n  [427,] 30226.17 36452.87\n  [428,] 39332.27 39678.02\n  [429,] 18704.75 42777.20\n  [430,] 22341.29 32045.61\n  [431,] 36143.51 41675.71\n  [432,] 36051.03 42917.24\n  [433,] 35910.45 34472.84\n  [434,] 37728.93 34149.48\n  [435,] 23519.30 47201.67\n  [436,] 23901.62 45980.35\n  [437,] 31986.22 37469.36\n  [438,] 12988.04 36471.81\n  [439,] 21390.12 39492.54\n  [440,] 33006.93 41543.26\n  [441,] 13995.23 36029.67\n  [442,] 28309.87 44705.97\n  [443,] 29352.65 35432.23\n  [444,] 40508.69 33444.94\n  [445,] 25430.50 30891.82\n  [446,] 36495.86 41268.56\n  [447,] 28839.05 40512.13\n  [448,] 20119.82 40327.50\n  [449,] 13471.60 37247.55\n  [450,] 42241.58 37839.11\n  [451,] 29667.65 37732.28\n  [452,] 30038.83 32697.73\n  [453,] 41948.72 38618.67\n  [454,] 34165.54 41998.48\n  [455,] 32275.60 32824.57\n  [456,] 34505.30 41813.00\n  [457,] 24670.48 30188.19\n  [458,] 21152.53 40056.82\n  [459,] 12458.76 35698.80\n  [460,] 31898.90 36933.33\n  [461,] 34093.99 38788.29\n  [462,] 32613.97 41568.03\n  [463,] 16552.78 36679.58\n  [464,] 39773.12 36445.53\n  [465,] 33466.48 32420.06\n  [466,] 34207.04 38747.69\n  [467,] 34153.57 41905.94\n  [468,] 28430.31 37065.18\n  [469,] 18295.67 35932.06\n  [470,] 20781.41 40572.50\n  [471,] 17578.65 36146.17\n  [472,] 33509.70 40096.05\n  [473,] 32219.46 39302.36\n  [474,] 21191.75 40277.85\n  [475,] 32588.22 41800.05\n  [476,] 29429.44 35266.30\n  [477,] 17600.38 33788.50\n  [478,] 29028.99 45961.16\n  [479,] 29807.47 44873.82\n  [480,] 25193.11 33400.14\n  [481,] 20683.62 40423.59\n  [482,] 18482.49 38470.01\n  [483,] 17340.53 40361.38\n  [484,] 39657.40 34801.89\n  [485,] 23917.89 32280.62\n  [486,] 13506.05 37151.40\n  [487,] 23135.77 45925.38\n  [488,] 31916.96 36967.95\n  [489,] 34025.67 39498.31\n  [490,] 30119.21 32393.85\n  [491,] 35176.48 43000.43\n  [492,] 41196.67 37879.41\n  [493,] 29043.74 46064.93\n  [494,] 32666.20 41556.04\n  [495,] 21133.84 41240.77\n  [496,] 41643.85 36309.48\n  [497,] 21495.80 45373.58\n  [498,] 25692.56 30857.69\n  [499,] 18379.99 41507.31\n  [500,] 35619.90 41896.12\n  [501,] 21095.91 40990.18\n  [502,] 36137.23 43102.98\n  [503,] 39846.57 33842.55\n  [504,] 32174.73 37698.46\n  [505,] 21095.91 40990.18\n  [506,] 39266.44 40132.99\n  [507,] 19717.75 36405.57\n  [508,] 34404.52 41842.70\n  [509,] 35825.47 34612.26\n  [510,] 34093.47 34615.13\n  [511,] 37867.37 35441.37\n  [512,] 27553.14 45402.75\n  [513,] 13865.43 36010.85\n  [514,] 20653.16 41226.57\n  [515,] 29008.86 46011.25\n  [516,] 41787.50 36373.76\n  [517,] 39751.23 37892.46\n  [518,] 28246.27 44060.81\n  [519,] 38498.13 34639.49\n  [520,] 34520.18 40803.90\n  [521,] 29408.30 44586.14\n  [522,] 22242.19 46504.58\n  [523,] 34520.18 40803.90\n  [524,] 36735.64 34999.41\n  [525,] 19742.50 41041.11\n  [526,] 34321.85 41951.96\n  [527,] 24593.62 47743.72\n  [528,] 33044.85 41569.84\n  [529,] 40550.35 33618.85\n  [530,] 34781.45 40855.02\n  [531,] 41458.33 36810.69\n  [532,] 12393.82 36589.13\n  [533,] 32472.41 41818.76\n  [534,] 28905.73 45904.29\n  [535,] 20068.30 40701.87\n  [536,] 29181.72 38185.97\n  [537,] 29453.73 46038.03\n  [538,] 36613.65 41218.73\n  [539,] 32397.05 32954.03\n  [540,] 41654.63 39147.39\n  [541,] 32668.37 39329.62\n  [542,] 27646.60 46230.75\n  [543,] 34165.54 41998.48\n  [544,] 18521.48 42882.95\n  [545,] 42171.59 38932.59\n  [546,] 29296.97 45063.20\n  [547,] 41923.79 36467.79\n  [548,] 14175.62 36752.99\n  [549,] 24639.38 46830.05\n  [550,] 39209.86 37467.27\n  [551,] 32890.84 40251.77\n  [552,] 27809.48 46442.49\n  [553,] 17953.91 39878.19\n  [554,] 29258.54 44994.84\n  [555,] 20855.73 32483.78\n  [556,] 13936.21 36509.20\n  [557,] 20514.34 33047.29\n  [558,] 23769.64 47130.66\n  [559,] 41420.87 37679.09\n  [560,] 29508.60 38737.10\n  [561,] 35568.35 43392.61\n  [562,] 30025.60 34493.68\n  [563,] 27581.61 29378.41\n  [564,] 39417.60 37876.33\n  [565,] 42137.29 39592.78\n  [566,] 41175.89 38759.93\n  [567,] 36153.02 41472.97\n  [568,] 23363.43 46371.22\n  [569,] 27550.58 29730.25\n  [570,] 39417.60 37876.33\n  [571,] 27818.18 46097.36\n  [572,] 34276.82 38644.22\n  [573,] 21949.52 46755.33\n  [574,] 24017.18 46940.26\n  [575,] 20112.11 40187.06\n  [576,] 23637.30 46660.83\n  [577,] 30770.07 39578.64\n  [578,] 27865.54 44500.94\n  [579,] 29698.19 35205.51\n  [580,] 29164.47 39971.51\n  [581,] 23941.20 46048.66\n  [582,] 39772.17 36375.77\n  [583,] 36495.86 41268.56\n  [584,] 34103.93 41148.01\n  [585,] 32743.27 41330.52\n  [586,] 26670.30 48200.84\n  [587,] 23136.10 47133.49\n  [588,] 27787.70 46010.43\n  [589,] 35561.22 42685.17\n  [590,] 32782.21 41700.54\n  [591,] 27938.41 44845.27\n  [592,] 33245.62 40170.69\n  [593,] 25532.83 30833.41\n  [594,] 30487.06 33756.56\n  [595,] 36520.56 42844.74\n  [596,] 14175.62 36752.99\n  [597,] 36613.65 41218.73\n  [598,] 27291.25 28647.47\n  [599,] 21464.06 46271.25\n  [600,] 29442.60 35774.38\n  [601,] 21076.57 41233.31\n  [602,] 12798.49 36249.43\n  [603,] 28036.74 45854.84\n  [604,] 29419.80 39109.98\n  [605,] 20870.29 41152.00\n  [606,] 17688.80 40138.59\n  [607,] 21133.84 41240.77\n  [608,] 36744.65 42417.81\n  [609,] 18772.14 40132.33\n  [610,] 29041.45 45519.79\n  [611,] 34705.98 38390.09\n  [612,] 23389.01 32595.76\n  [613,] 17432.30 39816.08\n  [614,] 40663.12 38841.62\n  [615,] 25119.35 47150.42\n  [616,] 20724.24 32936.30\n  [617,] 32921.08 39779.44\n  [618,] 33266.71 41302.53\n  [619,] 35904.47 39992.30\n  [620,] 22241.94 46462.68\n  [621,] 19654.90 41062.14\n  [622,] 24691.93 46853.39\n  [623,] 25927.18 47812.64\n  [624,] 39824.45 36883.33\n  [625,] 18790.80 42868.87\n  [626,] 23430.31 47233.57\n  [627,] 30777.15 33728.61\n  [628,] 17721.37 40468.65\n  [629,] 20908.39 40331.48\n  [630,] 29434.38 44715.69\n  [631,] 21044.95 41025.20\n  [632,] 19654.90 41062.14\n  [633,] 36928.46 35084.96\n  [634,] 29266.07 46069.01\n  [635,] 37867.37 35441.37\n  [636,] 39846.57 33842.55\n  [637,] 33136.84 41278.61\n  [638,] 17207.30 39802.29\n  [639,] 18733.94 36583.55\n  [640,] 35363.35 42475.21\n  [641,] 30224.78 39055.72\n  [642,] 20983.28 40468.85\n  [643,] 38661.18 34863.03\n  [644,] 24369.39 47482.38\n  [645,] 25897.55 48205.37\n  [646,] 23550.99 46495.37\n  [647,] 23624.26 46416.82\n  [648,] 25318.61 29271.93\n  [649,] 35272.33 42811.32\n  [650,] 34529.68 40756.35\n  [651,] 27917.81 45044.25\n  [652,] 29346.24 44872.19\n  [653,] 39353.20 37674.21\n  [654,] 27371.58 29326.08\n  [655,] 35320.59 39346.09\n  [656,] 24129.71 46676.24\n  [657,] 38676.79 35018.03\n  [658,] 35428.81 42207.27\n  [659,] 29181.72 38185.97\n  [660,] 36343.08 43084.21\n  [661,] 33297.94 39784.56\n  [662,] 29225.75 46061.89\n  [663,] 35507.68 40831.53\n  [664,] 41552.46 39487.59\n  [665,] 26693.27 30307.66\n  [666,] 18982.22 38706.05\n  [667,] 41613.96 36697.28\n  [668,] 29071.88 46208.62\n  [669,] 34204.87 42248.94\n  [670,] 28152.37 39135.65\n  [671,] 35712.21 42604.39\n  [672,] 33966.18 39939.21\n  [673,] 35189.88 43046.93\n  [674,] 36540.00 42751.57\n  [675,] 30528.63 35991.98\n  [676,] 35394.28 40719.10\n  [677,] 36607.15 41184.66\n  [678,] 21475.81 45414.05\n  [679,] 36224.86 41599.40\n  [680,] 36696.77 42634.15\n  [681,] 36051.03 42917.24\n  [682,] 25210.62 28870.53\n  [683,] 39523.69 34848.93\n  [684,] 39824.43 36794.41\n  [685,] 18236.98 42767.10\n  [686,] 32990.37 41605.84\n  [687,] 29548.52 44871.70\n  [688,] 35235.79 39077.89\n  [689,] 20844.58 40951.79\n  [690,] 33189.99 40167.97\n  [691,] 28899.78 28918.09\n  [692,] 18317.68 42947.92\n  [693,] 20944.20 32418.61\n  [694,] 36067.37 41745.40\n  [695,] 24162.20 47352.23\n  [696,] 17590.01 33737.08\n  [697,] 29065.93 45407.81\n  [698,] 30333.28 36336.19\n  [699,] 20602.57 40537.72\n  [700,] 20816.74 31875.79\n  [701,] 27515.70 45316.61\n  [702,] 23611.51 47342.52\n  [703,] 37867.37 35441.37\n  [704,] 36540.00 42751.57\n  [705,] 33688.72 41498.46\n  [706,] 33251.74 41378.36\n  [707,] 26599.00 28913.77\n  [708,] 20583.04 32713.09\n  [709,] 21424.62 46347.80\n  [710,] 33513.00 40047.38\n  [711,] 36063.64 43071.01\n  [712,] 15431.55 37048.72\n  [713,] 33322.19 35447.56\n  [714,] 25778.04 29239.05\n  [715,] 23468.56 32476.93\n  [716,] 30759.95 38355.06\n  [717,] 36384.90 42870.98\n  [718,] 26012.73 48560.65\n  [719,] 34469.95 41889.54\n  [720,] 39750.98 37825.31\n  [721,] 27022.60 29406.75\n  [722,] 36613.65 41218.73\n  [723,] 14080.05 36749.21\n  [724,] 26363.14 47691.16\n  [725,] 17834.46 36607.36\n  [726,] 23612.30 46542.96\n  [727,] 39829.60 36455.52\n  [728,] 27234.98 29701.90\n  [729,] 36393.77 41485.17\n  [730,] 23639.55 46602.59\n  [731,] 27117.73 29561.86\n  [732,] 37653.91 34286.77\n  [733,] 24060.51 46703.66\n  [734,] 23648.34 32091.07\n  [735,] 32133.26 32974.19\n  [736,] 23765.14 46425.88\n  [737,] 27638.13 37842.75\n  [738,] 34034.86 39953.95\n  [739,] 20827.23 40696.65\n  [740,] 39157.83 39907.00\n  [741,] 15450.42 37130.20\n  [742,] 28885.04 45546.31\n  [743,] 20564.80 40934.16\n  [744,] 35317.71 43315.87\n  [745,] 36346.22 42778.07\n  [746,] 25943.02 30568.08\n  [747,] 30025.60 34493.68\n  [748,] 30265.47 38397.28\n  [749,] 24196.77 47754.35\n  [750,] 35360.07 42870.54\n  [751,] 14871.26 36967.45\n  [752,] 36227.38 42080.81\n  [753,] 35524.84 42400.71\n  [754,] 27304.32 47968.69\n  [755,] 28876.22 28717.68\n  [756,] 20653.16 41226.57\n  [757,] 36152.92 42063.19\n  [758,] 41361.05 36493.65\n  [759,] 42289.79 39225.47\n  [760,] 36362.59 42820.88\n  [761,] 29532.40 45419.66\n  [762,] 35768.73 42579.08\n  [763,] 41263.37 36412.33\n  [764,] 20219.97 40201.77\n  [765,] 23725.57 47473.18\n  [766,] 29193.72 35384.32\n  [767,] 38498.13 34639.49\n  [768,] 25532.83 30833.41\n  [769,] 34615.43 41214.30\n  [770,] 29089.16 46165.68\n  [771,] 22470.06 32195.25\n  [772,] 39868.02 37588.96\n  [773,] 27697.61 45878.82\n  [774,] 24224.68 47073.43\n  [775,] 32851.48 41722.74\n  [776,] 34895.40 40469.81\n  [777,] 39222.02 37960.74\n  [778,] 32487.30 37446.80\n  [779,] 15504.95 34412.15\n  [780,] 21857.28 46973.56\n  [781,] 14714.39 36117.17\n  [782,] 23803.46 47092.08\n  [783,] 13506.05 37151.40\n  [784,] 21485.89 46231.68\n  [785,] 29225.75 46061.89\n  [786,] 35466.00 39686.32\n  [787,] 21220.29 39828.79\n  [788,] 24336.48 31839.62\n  [789,] 16523.62 37077.85\n  [790,] 41049.10 38096.10\n  [791,] 35913.37 33783.59\n  [792,] 33541.38 32139.12\n  [793,] 32572.57 36769.99\n  [794,] 28906.39 30004.35\n  [795,] 29695.39 45409.00\n  [796,] 36495.86 41268.56\n  [797,] 35887.22 40144.11\n  [798,] 33835.97 39513.04\n  [799,] 30263.23 38499.84\n  [800,] 41096.15 37721.01\n  [801,] 28242.87 46343.90\n  [802,] 35539.98 39998.97\n  [803,] 34291.20 37079.19\n  [804,] 27171.93 28549.92\n  [805,] 32097.20 37323.20\n  [806,] 18961.65 42668.27\n  [807,] 35953.71 40993.85\n  [808,] 26121.13 47963.14\n  [809,] 29296.97 45063.20\n  [810,] 23958.17 46347.67\n  [811,] 29361.72 44631.99\n  [812,] 39789.25 36839.51\n  [813,] 19305.00 39996.48\n  [814,] 29001.49 37633.20\n  [815,] 33629.25 32414.15\n  [816,] 19760.34 40940.87\n  [817,] 27525.53 46208.60\n  [818,] 17990.58 36495.63\n  [819,] 21072.27 41108.45\n  [820,] 32652.57 39646.10\n  [821,] 32125.78 39332.05\n  [822,] 36758.46 43100.55\n  [823,] 24641.52 46936.00\n  [824,] 35561.22 42685.17\n  [825,] 29322.90 45626.57\n  [826,] 24196.77 47754.35\n  [827,] 34349.99 40122.65\n  [828,] 18715.00 36631.86\n  [829,] 28991.85 45431.57\n  [830,] 29008.86 46011.25\n  [831,] 18857.19 37512.05\n  [832,] 15151.44 37259.65\n  [833,] 35127.23 40519.73\n  [834,] 29399.19 35150.94\n  [835,] 32521.31 41455.59\n  [836,] 35955.89 41902.16\n  [837,] 40681.87 38966.20\n  [838,] 21404.67 40329.79\n  [839,] 21475.81 45414.05\n  [840,] 28386.27 45827.11\n  [841,] 21957.47 45954.56\n  [842,] 25227.63 47385.51\n  [843,] 17501.70 35717.19\n  [844,] 28908.95 28820.87\n  [845,] 38071.86 35306.66\n  [846,] 35456.22 42844.66\n  [847,] 36269.12 42953.17\n  [848,] 33586.39 39730.72\n  [849,] 29237.28 46110.40\n  [850,] 38913.38 37146.45\n  [851,] 29041.45 45519.79\n  [852,] 26088.14 48323.87\n  [853,] 22732.47 47039.47\n  [854,] 16743.75 36560.73\n  [855,] 39729.57 36961.63\n  [856,] 33190.98 41392.37\n  [857,] 20343.29 33367.57\n  [858,] 29299.42 38702.53\n  [859,] 23052.12 46215.70\n  [860,] 29623.02 38789.10\n  [861,] 26263.75 48635.08\n  [862,] 26611.18 28728.05\n  [863,] 41904.73 39610.20\n  [864,] 29941.75 38240.88\n  [865,] 24227.09 31453.43\n  [866,] 29390.10 45619.30\n  [867,] 29772.23 44831.65\n  [868,] 21408.13 46424.22\n  [869,] 39584.06 36472.37\n  [870,] 40486.94 36538.83\n  [871,] 36593.84 42468.55\n  [872,] 42066.66 38046.09\n  [873,] 15980.99 36609.24\n  [874,] 32409.22 38910.69\n  [875,] 18036.26 42367.22\n  [876,] 29567.53 45276.80\n  [877,] 39601.48 40244.82\n  [878,] 14080.05 36749.21\n  [879,] 31633.40 37363.37\n  [880,] 35682.49 42733.07\n  [881,] 41701.43 37529.00\n  [882,] 36738.01 42359.71\n  [883,] 34403.15 37450.68\n  [884,] 32650.92 41800.04\n  [885,] 23692.65 46664.52\n  [886,] 33107.05 39180.95\n  [887,] 16496.86 36843.31\n  [888,] 36684.55 41778.21\n  [889,] 34469.95 41889.54\n  [890,] 38585.32 35480.32\n  [891,] 41643.85 36309.48\n  [892,] 33139.01 40081.78\n  [893,] 30429.39 32275.12\n  [894,] 34658.78 40002.70\n  [895,] 26075.49 29921.30\n  [896,] 32906.40 40207.27\n  [897,] 39004.24 37338.14\n  [898,] 28596.41 46470.05\n  [899,] 12790.05 35810.69\n  [900,] 28908.95 28820.87\n  [901,] 36808.08 34690.50\n  [902,] 22242.19 46504.58\n  [903,] 35392.69 42133.20\n  [904,] 27222.64 29401.30\n  [905,] 35026.78 39561.04\n  [906,] 28086.24 38333.00\n  [907,] 35655.75 42267.15\n  [908,] 29111.95 40346.36\n  [909,] 39741.35 34650.83\n  [910,] 42009.86 39685.99\n  [911,] 35865.87 34348.01\n  [912,] 27291.25 28647.47\n  [913,] 17609.19 39842.80\n  [914,] 36635.36 42503.75\n  [915,] 30091.23 32740.48\n  [916,] 30809.73 34182.37\n  [917,] 34457.79 41639.25\n  [918,] 20119.82 40327.50\n  [919,] 40419.14 37684.03\n  [920,] 29554.62 44598.43\n  [921,] 18745.73 42929.37\n  [922,] 22241.80 46587.82\n  [923,] 35530.79 40100.79\n  [924,] 28707.35 45751.47\n  [925,] 35178.28 38936.98\n  [926,] 34799.24 40773.24\n  [927,] 38916.04 36837.21\n  [928,] 18857.19 37512.05\n  [929,] 24662.07 46778.75\n  [930,] 18437.30 40238.13\n  [931,] 25406.61 30116.06\n  [932,] 29772.23 44831.65\n  [933,] 32650.92 41800.04\n  [934,] 35277.79 43057.12\n  [935,] 19654.90 41062.14\n  [936,] 18437.03 36353.45\n  [937,] 29457.93 44982.57\n  [938,] 35252.90 40712.57\n  [939,] 35316.77 34238.83\n  [940,] 36569.24 34706.30\n  [941,] 39410.72 34355.35\n  [942,] 36406.82 35104.44\n  [943,] 34733.15 40691.51\n  [944,] 20779.84 41082.98\n  [945,] 17432.30 39816.08\n  [946,] 41263.37 36412.33\n  [947,] 30840.38 35490.01\n  [948,] 30264.97 39315.69\n  [949,] 20158.23 40884.80\n  [950,] 17851.53 35841.09\n  [951,] 35973.59 42952.49\n  [952,] 39691.33 37992.92\n  [953,] 35057.98 40935.60\n  [954,] 40664.43 37412.28\n  [955,] 21857.28 46973.56\n  [956,] 34313.52 38405.98\n  [957,] 23721.40 32407.14\n  [958,] 34777.47 38534.34\n  [959,] 17529.62 40278.31\n  [960,] 33274.04 40272.76\n  [961,] 39232.69 37332.30\n  [962,] 31329.09 33440.50\n  [963,] 30574.82 36085.27\n  [964,] 36741.21 33892.54\n  [965,] 30292.01 38439.17\n  [966,] 18284.70 38462.94\n  [967,] 29275.95 38055.81\n  [968,] 36613.65 41218.73\n  [969,] 19586.86 36299.52\n  [970,] 39746.65 37995.14\n  [971,] 32472.41 41818.76\n  [972,] 29237.28 46110.40\n  [973,] 34143.71 37846.81\n  [974,] 36525.05 34788.98\n  [975,] 32785.76 41808.31\n  [976,] 41256.54 36653.64\n  [977,] 18660.11 38392.70\n  [978,] 21255.27 39573.79\n  [979,] 29870.55 35921.75\n  [980,] 27140.14 29503.32\n  [981,] 23695.71 47495.33\n  [982,] 39875.94 33952.51\n  [983,] 18660.11 38392.70\n  [984,] 20770.26 32379.02\n  [985,] 27515.70 45316.61\n  [986,] 28083.29 45403.61\n  [987,] 29917.18 39339.98\n  [988,] 20657.13 32817.91\n  [989,] 18497.74 37771.05\n  [990,] 18971.81 38331.83\n  [991,] 28643.40 44523.62\n  [992,] 20773.83 41290.92\n  [993,] 41298.74 36903.17\n  [994,] 35889.58 39923.62\n  [995,] 24481.40 47738.04\n  [996,] 28597.81 46605.58\n  [997,] 35897.33 34558.17\n  [998,] 29510.05 38880.94\n  [999,] 20460.64 33596.21\n [1000,] 30288.60 39307.11\n [1001,] 33918.10 39220.19\n [1002,] 22726.24 46182.11\n [1003,] 35393.49 34287.70\n [1004,] 37005.35 41832.26\n [1005,] 21133.84 41240.77\n [1006,] 18651.99 41796.72\n [1007,] 38383.19 34988.15\n [1008,] 24994.67 47144.29\n [1009,] 28834.27 45921.82\n [1010,] 13989.08 36079.69\n [1011,] 29924.80 36550.02\n [1012,] 41829.84 39534.96\n [1013,] 42329.49 38258.35\n [1014,] 38327.79 34398.61\n [1015,] 29141.23 46198.19\n [1016,] 17842.91 41195.57\n [1017,] 41919.64 37077.83\n [1018,] 21341.36 47400.41\n [1019,] 41501.76 37924.17\n [1020,] 29231.42 44639.74\n [1021,] 15699.37 35541.83\n [1022,] 27554.05 29417.25\n [1023,] 18869.24 40173.63\n [1024,] 39750.98 37825.31\n [1025,] 29623.02 38789.10\n [1026,] 18422.44 36790.70\n [1027,] 24442.04 47860.89\n [1028,] 35485.64 34228.98\n [1029,] 39610.51 37923.73\n [1030,] 39589.61 35388.80\n [1031,] 27705.12 45364.64\n [1032,] 41439.47 37826.96\n [1033,] 23538.62 32394.00\n [1034,] 32941.30 41628.25\n [1035,] 20593.11 40211.20\n [1036,] 19753.52 40742.58\n [1037,] 29109.09 38999.35\n [1038,] 35131.26 42885.13\n [1039,] 24010.69 47246.71\n [1040,] 29007.62 46373.56\n [1041,] 37784.98 35386.28\n [1042,] 30655.46 34229.44\n [1043,] 19247.46 40292.28\n [1044,] 33513.51 33797.32\n [1045,] 19026.85 38717.79\n [1046,] 29461.54 35205.89\n [1047,] 26650.52 47262.39\n [1048,] 27415.98 48063.02\n [1049,] 18881.03 42505.55\n [1050,] 32676.45 41702.54\n [1051,] 19391.25 36828.42\n [1052,] 39591.97 37584.43\n [1053,] 21702.95 47038.04\n [1054,] 17395.08 39834.34\n [1055,] 40497.28 39502.69\n [1056,] 41030.90 36660.15\n [1057,] 27624.34 29285.24\n [1058,] 29436.31 37817.98\n [1059,] 41657.67 36078.46\n [1060,] 41044.90 37883.40\n [1061,] 32521.47 36731.11\n [1062,] 18969.28 38392.75\n [1063,] 41687.64 36634.42\n [1064,] 32650.92 41800.04\n [1065,] 17834.46 36607.36\n [1066,] 35237.34 39036.21\n [1067,] 19585.79 40949.14\n [1068,] 42254.10 39487.27\n [1069,] 15504.95 34412.15\n [1070,] 32666.20 41556.04\n [1071,] 35271.89 43005.46\n [1072,] 29519.15 44638.48\n [1073,] 26436.21 48219.52\n [1074,] 32588.22 41800.05\n [1075,] 39439.62 39675.40\n [1076,] 18219.46 41813.23\n [1077,] 21088.66 40111.17\n [1078,] 28613.17 46820.07\n [1079,] 18651.99 41796.72\n [1080,] 41552.46 39487.59\n [1081,] 36603.26 34909.11\n [1082,] 18693.93 41722.33\n [1083,] 32639.36 38940.10\n [1084,] 27890.86 45963.29\n [1085,] 34540.71 40900.35\n [1086,] 35191.31 42814.66\n [1087,] 32984.54 39861.00\n [1088,] 30038.83 32697.73\n [1089,] 24172.23 46283.89\n [1090,] 21057.25 33353.23\n [1091,] 39751.23 37892.46\n [1092,] 37939.87 35343.54\n [1093,] 40786.80 39222.41\n [1094,] 24075.75 46127.70\n [1095,] 35178.28 38936.98\n [1096,] 34838.95 40981.86\n [1097,] 36495.86 41268.56\n [1098,] 33514.12 39517.21\n [1099,] 27286.91 45348.38\n [1100,] 35871.57 39860.80\n [1101,] 39398.43 34419.31\n [1102,] 39741.35 34650.83\n [1103,] 36082.36 42203.43\n [1104,] 34514.86 40852.39\n [1105,] 29328.33 38742.64\n [1106,] 12757.70 35751.21\n [1107,] 20112.11 40187.06\n [1108,] 33566.50 32417.14\n [1109,] 17899.08 41409.86\n [1110,] 29969.53 36449.29\n [1111,] 18417.42 40459.35\n [1112,] 34557.61 41791.91\n [1113,] 18583.08 37066.62\n [1114,] 29836.77 35212.87\n [1115,] 31678.09 34080.63\n [1116,] 17600.38 33788.50\n [1117,] 34890.87 42859.34\n [1118,] 27381.55 45550.59\n [1119,] 34295.75 40166.94\n [1120,] 25513.79 30760.40\n [1121,] 16641.57 36814.27\n [1122,] 12886.36 35298.85\n [1123,] 39974.55 40196.33\n [1124,] 40681.87 38966.20\n [1125,] 41566.37 38659.39\n [1126,] 29043.74 46064.93\n [1127,] 41127.03 35874.78\n [1128,] 40786.80 39222.41\n [1129,] 30038.83 32697.73\n [1130,] 39829.51 36502.93\n [1131,] 41829.84 39534.96\n [1132,] 20870.29 41152.00\n [1133,] 34520.18 40803.90\n [1134,] 13668.25 36455.00\n [1135,] 25532.83 30833.41\n [1136,] 23923.45 46828.94\n [1137,] 34520.18 40803.90\n [1138,] 21461.89 35631.46\n [1139,] 20550.02 40105.07\n [1140,] 17578.65 36146.17\n [1141,] 30288.60 39307.11\n [1142,] 12622.73 35332.11\n [1143,] 39196.99 39740.37\n [1144,] 25777.83 30099.89\n [1145,] 41284.29 37512.03\n [1146,] 12445.20 35823.05\n [1147,] 25210.47 30633.53\n [1148,] 25198.78 28815.09\n [1149,] 41302.91 36750.45\n [1150,] 33161.15 39550.89\n [1151,] 32949.02 40144.66\n [1152,] 26708.79 48146.48\n [1153,] 21095.91 40990.18\n [1154,] 27542.17 29862.11\n [1155,] 39904.78 36750.55\n [1156,] 35032.14 43095.64\n [1157,] 17870.32 39880.43\n [1158,] 30721.96 32054.47\n [1159,] 29071.88 46208.62\n [1160,] 19534.59 40043.26\n [1161,] 12818.53 35577.25\n [1162,] 23781.85 47443.33\n [1163,] 40059.06 33708.03\n [1164,] 33044.85 41569.84\n [1165,] 42440.27 38909.48\n [1166,] 18561.35 42946.38\n [1167,] 27343.20 45474.32\n [1168,] 35958.83 40921.49\n [1169,] 23637.30 46660.83\n [1170,] 36536.14 41556.12\n [1171,] 28107.30 45524.10\n [1172,] 13019.32 36404.06\n [1173,] 36695.92 42389.95\n [1174,] 24267.54 47020.21\n [1175,] 24442.04 47860.89\n [1176,] 35456.22 42844.66\n [1177,] 28467.89 46337.84\n [1178,] 33644.73 40005.08\n [1179,] 24547.79 47397.60\n [1180,] 24692.13 47138.10\n [1181,] 12886.36 35298.85\n [1182,] 12790.82 36586.36\n [1183,] 28883.52 46161.45\n [1184,] 39237.87 39771.77\n [1185,] 17036.79 35663.21\n [1186,] 39653.37 34419.99\n [1187,] 41627.06 38898.46\n [1188,] 30786.14 35482.04\n [1189,] 29518.30 45253.55\n [1190,] 19963.52 31908.68\n [1191,] 39764.88 35172.07\n [1192,] 12674.98 35407.94\n [1193,] 20612.12 40742.27\n [1194,] 32760.65 41301.41\n [1195,] 24508.71 47751.29\n [1196,] 21319.36 41091.34\n [1197,] 32153.95 39528.08\n [1198,] 25882.67 48648.61\n [1199,] 32440.30 39656.62\n [1200,] 33262.36 39726.30\n [1201,] 36635.36 42503.75\n [1202,] 35455.56 40605.17\n [1203,] 27697.61 45878.82\n [1204,] 29696.57 44798.01\n [1205,] 19585.79 40949.14\n [1206,] 39526.42 37747.57\n [1207,] 32815.04 41834.40\n [1208,] 23873.28 46917.64\n [1209,] 39433.68 37175.66\n [1210,] 28727.35 44401.13\n [1211,] 28636.69 46572.39\n [1212,] 35530.79 40100.79\n [1213,] 29670.16 44909.77\n [1214,] 15816.75 35515.42\n [1215,] 34834.19 39712.94\n [1216,] 35044.72 38640.92\n [1217,] 32676.45 41702.54\n [1218,] 40983.75 37469.85\n [1219,] 17149.94 35708.75\n [1220,] 24256.71 47326.31\n [1221,] 39190.95 36539.70\n [1222,] 29670.16 44909.77\n [1223,] 41439.47 37826.96\n [1224,] 29696.57 44798.01\n [1225,] 29548.52 44871.70\n [1226,] 32533.29 41805.60\n [1227,] 29612.54 37529.87\n [1228,] 33339.86 39348.43\n [1229,] 33030.01 41752.64\n [1230,] 13506.05 37151.40\n [1231,] 30613.60 38603.54\n [1232,] 24079.62 46363.07\n [1233,] 39610.51 37923.73\n [1234,] 39203.78 36978.12\n [1235,] 35231.73 42964.14\n [1236,] 35270.50 33315.95\n [1237,] 33917.37 37043.26\n [1238,] 21853.72 46229.60\n [1239,] 19655.94 40836.75\n [1240,] 32112.13 39185.67\n [1241,] 39846.57 33842.55\n [1242,] 24140.15 47136.74\n [1243,] 31605.54 37302.30\n [1244,] 32990.37 41605.84\n [1245,] 28651.28 46386.79\n [1246,] 18633.83 38317.68\n [1247,] 36143.51 41675.71\n [1248,] 12550.33 35766.85\n [1249,] 41423.30 37432.23\n [1250,] 21133.84 41240.77\n [1251,] 29623.02 38789.10\n [1252,] 28632.87 46911.40\n [1253,] 34844.24 39755.20\n [1254,] 31080.43 33697.22\n [1255,] 36653.96 42664.67\n [1256,] 39086.64 37107.14\n [1257,] 29531.91 45474.13\n [1258,] 34975.22 39655.54\n [1259,] 17818.89 40732.63\n [1260,] 39878.17 37723.89\n [1261,] 18339.96 38161.84\n [1262,] 23468.56 32476.93\n [1263,] 30618.32 38345.09\n [1264,] 28003.10 44038.25\n [1265,] 28832.02 46308.79\n [1266,] 19280.71 40192.75\n [1267,] 29346.24 44872.19\n [1268,] 34526.12 41877.85\n [1269,] 19149.75 37202.05\n [1270,] 41724.54 39637.46\n [1271,] 33495.00 32270.02\n [1272,] 20769.96 41218.47\n [1273,] 29369.71 35382.81\n [1274,] 38507.50 34591.83\n [1275,] 34526.12 41877.85\n [1276,] 12836.20 35733.87\n [1277,] 24369.39 47482.38\n [1278,] 41305.12 37690.98\n [1279,] 27527.42 46004.58\n [1280,] 40143.01 34063.12\n [1281,] 32803.26 41317.97\n [1282,] 27689.33 45282.09\n [1283,] 19260.43 36177.91\n [1284,] 20541.92 40242.83\n [1285,] 20918.96 32638.12\n [1286,] 24629.97 47757.26\n [1287,] 25778.04 29239.05\n [1288,] 36022.14 41497.27\n [1289,] 42074.60 37028.71\n [1290,] 25970.80 47918.47\n [1291,] 29298.53 45962.12\n [1292,] 27977.48 29782.32\n [1293,] 27634.65 29329.80\n [1294,] 23142.98 46586.92\n [1295,] 31866.75 36860.37\n [1296,] 24178.01 31430.11\n [1297,] 29427.62 44862.31\n [1298,] 21853.72 46229.60\n [1299,] 18338.01 36902.88\n [1300,] 32650.92 41800.04\n [1301,] 39336.50 36628.39\n [1302,] 19654.58 40895.74\n [1303,] 19031.29 38654.83\n [1304,] 30809.73 34182.37\n [1305,] 35317.71 43315.87\n [1306,] 42009.86 39685.99\n [1307,] 35206.53 42464.67\n [1308,] 36382.68 34805.05\n [1309,] 19827.29 40824.41\n [1310,] 29010.23 45755.52\n [1311,] 32890.84 40251.77\n [1312,] 24662.07 46778.75\n [1313,] 20967.15 39800.71\n [1314,] 24423.51 46133.07\n [1315,] 30988.75 33837.76\n [1316,] 29467.40 44663.71\n [1317,] 27876.01 44638.09\n [1318,] 29280.45 44514.15\n [1319,] 40611.62 36592.98\n [1320,] 31369.95 35359.81\n [1321,] 18904.46 37346.06\n [1322,] 29060.49 38651.05\n [1323,] 19731.52 37002.69\n [1324,] 32122.36 39227.78\n [1325,] 39060.28 37388.80\n [1326,] 19123.41 39901.79\n [1327,] 14871.26 36967.45\n [1328,] 29337.06 45027.82\n [1329,] 27289.25 28583.13\n [1330,] 20669.35 41279.55\n [1331,] 17785.96 40176.08\n [1332,] 18516.88 42055.68\n [1333,] 13746.27 36931.54\n [1334,] 33249.15 40084.65\n [1335,] 29130.00 46070.87\n [1336,] 39425.43 39987.76\n [1337,] 40864.25 38975.18\n [1338,] 36536.14 41556.12\n [1339,] 30038.83 32697.73\n [1340,] 32407.76 38821.36\n [1341,] 32676.45 41702.54\n [1342,] 32205.23 33917.22\n [1343,] 23446.08 46209.24\n [1344,] 35032.14 43095.64\n [1345,] 29298.53 45962.12\n [1346,] 28242.87 46343.90\n [1347,] 33748.47 33327.88\n [1348,] 13874.84 36230.08\n [1349,] 33555.28 32503.11\n [1350,] 23928.59 46309.61\n [1351,] 21099.53 41178.93\n [1352,] 34565.39 41492.94\n [1353,] 34465.31 40170.23\n [1354,] 21554.59 46149.49\n [1355,] 20794.73 41260.70\n [1356,] 13641.77 35319.89\n [1357,] 36104.48 42262.98\n [1358,] 29408.30 44586.14\n [1359,] 18410.08 42409.02\n [1360,] 39625.87 37108.11\n [1361,] 35027.93 43052.26\n [1362,] 41935.69 36070.17\n [1363,] 33249.23 37083.08\n [1364,] 39640.10 35329.44\n [1365,] 28685.95 38712.81\n [1366,] 20204.13 32756.53\n [1367,] 24508.71 47751.29\n [1368,] 33343.93 42143.21\n [1369,] 34807.64 40822.23\n [1370,] 34466.52 41831.05\n [1371,] 39175.67 37404.64\n [1372,] 29600.33 37890.81\n [1373,] 29263.83 45891.33\n [1374,] 20857.50 33547.40\n [1375,] 21328.27 47196.51\n [1376,] 19074.03 38725.55\n [1377,] 28491.97 44464.63\n [1378,] 35096.86 33371.41\n [1379,] 40833.46 36861.06\n [1380,] 26057.71 47926.89\n [1381,] 23901.62 45980.35\n [1382,] 34274.93 42145.44\n [1383,] 18070.36 42619.75\n [1384,] 18869.25 42453.70\n [1385,] 27870.31 45761.32\n [1386,] 21375.06 40991.07\n [1387,] 15746.09 36915.86\n [1388,] 19734.37 36308.68\n [1389,] 20724.24 32936.30\n [1390,] 28991.85 45431.57\n [1391,] 26123.12 48520.66\n [1392,] 29548.52 44871.70\n [1393,] 35465.18 42438.06\n [1394,] 32641.92 41715.31\n [1395,] 17964.73 40328.18\n [1396,] 35338.15 40733.81\n [1397,] 27542.17 29862.11\n [1398,] 13678.13 37003.18\n [1399,] 29103.59 38953.94\n [1400,] 34282.70 41941.51\n [1401,] 32161.99 39437.89\n [1402,] 29917.16 34548.05\n [1403,] 36846.09 42609.05\n [1404,] 34071.63 37207.49\n [1405,] 37291.13 35094.75\n [1406,] 24362.04 32238.15\n [1407,] 27306.60 48063.03\n [1408,] 35655.75 42267.15\n [1409,] 35159.00 41588.61\n [1410,] 23612.30 46542.96\n [1411,] 36710.06 34618.31\n [1412,] 29763.58 36810.11\n [1413,] 42137.29 39592.78\n [1414,] 34232.78 42158.91\n [1415,] 41855.07 37958.26\n [1416,] 35047.75 40679.95\n [1417,] 20237.12 33168.41\n [1418,] 36210.42 42581.79\n [1419,] 30920.40 34483.81\n [1420,] 41458.33 36810.69\n [1421,] 14246.35 36749.10\n [1422,] 27304.32 47968.69\n [1423,] 41829.76 39500.50\n [1424,] 35573.74 33706.98\n [1425,] 40420.08 36708.32\n [1426,] 36730.60 34950.97\n [1427,] 18693.28 38044.36\n [1428,] 40684.58 39024.98\n [1429,] 34042.24 39379.32\n [1430,] 13292.18 36542.25\n [1431,] 15707.05 37209.32\n [1432,] 28879.22 45454.97\n [1433,] 29181.37 37605.60\n [1434,] 14885.10 36901.30\n [1435,] 32347.25 32901.99\n [1436,] 28820.27 46224.93\n [1437,] 30333.69 35346.85\n [1438,] 29433.32 45978.74\n [1439,] 32890.84 40251.77\n [1440,] 13423.41 35668.52\n [1441,] 28459.41 44749.17\n [1442,] 35507.68 40831.53\n [1443,] 14175.62 36752.99\n [1444,] 22677.10 32407.59\n [1445,] 17153.78 39877.90\n [1446,] 32420.66 38867.87\n [1447,] 35377.25 43293.29\n [1448,] 12769.24 35689.66\n [1449,] 25430.50 30891.82\n [1450,] 28545.55 39010.84\n [1451,] 35539.98 39998.97\n [1452,] 18833.13 38400.38\n [1453,] 23396.35 45872.66\n [1454,] 25024.14 28462.79\n [1455,] 24422.78 47391.68\n [1456,] 31741.67 33590.85\n [1457,] 40701.69 39109.09\n [1458,] 21312.16 47070.56\n [1459,] 17836.96 35553.25\n [1460,] 40655.03 38880.45\n [1461,] 32521.31 41455.59\n [1462,] 33139.01 40081.78\n [1463,] 20794.73 41260.70\n [1464,] 35445.39 39809.70\n [1465,] 41829.84 39534.96\n [1466,] 30528.63 35991.98\n [1467,] 36051.03 42917.24\n [1468,] 20393.57 39934.02\n [1469,] 39220.16 37614.10\n [1470,] 18336.27 38328.57\n [1471,] 20941.42 41191.45\n [1472,] 17911.43 35623.20\n [1473,] 21144.59 41060.65\n [1474,] 21970.16 45719.72\n [1475,] 40988.63 37172.19\n [1476,] 38286.08 35423.87\n [1477,] 40702.12 39068.18\n [1478,] 34086.95 41912.07\n [1479,] 18706.36 42558.76\n [1480,] 17011.93 36604.20\n [1481,] 41690.76 36256.97\n [1482,] 17879.86 40419.21\n [1483,] 32676.45 41702.54\n [1484,] 12757.70 35751.21\n [1485,] 35300.57 42496.68\n [1486,] 21030.40 41123.11\n [1487,] 36019.59 40915.01\n [1488,] 35608.64 42765.97\n [1489,] 17688.80 40138.59\n [1490,] 41860.52 37447.61\n [1491,] 30510.01 36101.59\n [1492,] 21316.66 41149.63\n [1493,] 23230.19 29227.46\n [1494,] 36435.41 42891.01\n [1495,] 13151.87 35964.09\n [1496,] 16187.16 36965.14\n [1497,] 35848.37 40032.01\n [1498,] 36279.54 41619.55\n [1499,] 29462.65 44542.38\n [1500,] 12908.86 36399.30\n [1501,] 19526.02 36169.54\n [1502,] 39506.34 34441.93\n [1503,] 20460.64 33596.21\n [1504,] 39615.24 36370.93\n [1505,] 34215.52 37027.38\n [1506,] 18766.97 41859.86\n [1507,] 23961.13 47321.02\n [1508,] 42161.82 38494.04\n [1509,] 27910.47 45286.02\n [1510,] 22241.94 46462.68\n [1511,] 42523.18 38908.24\n [1512,] 25257.47 47286.92\n [1513,] 28872.26 28787.86\n [1514,] 41203.80 37091.91\n [1515,] 39838.19 37647.38\n [1516,] 41136.19 35945.20\n [1517,] 35521.57 43287.94\n [1518,] 41610.75 39294.47\n [1519,] 23971.76 31497.79\n [1520,] 31655.48 34952.60\n [1521,] 17395.08 39834.34\n [1522,] 23678.36 45945.14\n [1523,] 27902.73 45634.32\n [1524,] 20905.68 32575.97\n [1525,] 41537.39 38942.17\n [1526,] 27754.92 45565.05\n [1527,] 35505.43 42592.31\n [1528,] 34802.40 40676.88\n [1529,] 13110.25 35900.96\n [1530,] 36379.22 41429.66\n [1531,] 25648.08 30864.46\n [1532,] 16078.39 36800.41\n [1533,] 21337.82 39707.27\n [1534,] 28214.27 46147.57\n [1535,] 29468.80 46014.66\n [1536,] 29281.98 45774.85\n [1537,] 31725.65 33643.33\n [1538,] 12510.70 36503.99\n [1539,] 32588.22 41800.05\n [1540,] 28584.00 44670.55\n [1541,] 17343.10 39900.47\n [1542,] 41942.14 37686.09\n [1543,] 39488.95 36601.54\n [1544,] 29263.83 44869.00\n [1545,] 41846.81 38218.60\n [1546,] 39948.73 39999.07\n [1547,] 32876.22 41763.94\n [1548,] 35889.58 39923.62\n [1549,] 40450.94 33589.20\n [1550,] 18580.57 42816.95\n [1551,] 36599.45 43229.07\n [1552,] 34704.60 40653.66\n [1553,] 36735.64 34999.41\n [1554,] 36061.99 42848.27\n [1555,] 34799.24 40773.24\n [1556,] 40331.42 36651.14\n [1557,] 22130.91 45717.33\n [1558,] 18699.72 41625.96\n [1559,] 17610.96 33639.64\n [1560,] 32924.26 41871.99\n [1561,] 29229.60 44394.57\n [1562,] 41475.52 37392.30\n [1563,] 17698.01 40415.81\n [1564,] 21186.67 40627.75\n [1565,] 41475.52 37392.30\n [1566,] 35953.13 42914.28\n [1567,] 29110.88 46009.43\n [1568,] 36803.89 41716.49\n [1569,] 12153.04 36175.23\n [1570,] 23612.30 46542.96\n [1571,] 26707.21 28914.60\n [1572,] 39599.04 35075.49\n [1573,] 29289.71 35382.82\n [1574,] 36232.02 41088.17\n [1575,] 19586.86 36299.52\n [1576,] 22341.29 32045.61\n [1577,] 39190.95 36539.70\n [1578,] 40701.69 39109.09\n [1579,] 27405.19 46252.41\n [1580,] 32650.92 41800.04\n [1581,] 26123.12 48520.66\n [1582,] 39338.80 36965.68\n [1583,] 39017.45 37456.75\n [1584,] 20550.02 40105.07\n [1585,] 29434.38 44715.69\n [1586,] 17462.23 36295.69\n [1587,] 15567.01 35501.20\n [1588,] 39764.88 35172.07\n [1589,] 34733.15 40691.51\n [1590,] 41816.59 38154.09\n [1591,] 32196.50 36226.93\n [1592,] 21243.03 35575.13\n [1593,] 33971.47 39991.16\n [1594,] 34153.57 41905.94\n [1595,] 17578.65 36146.17\n [1596,] 29263.83 45891.33\n [1597,] 35833.84 42356.60\n [1598,] 29462.65 44542.38\n [1599,] 39483.24 37419.93\n [1600,] 27427.95 29454.52\n [1601,] 32275.60 32824.57\n [1602,] 36189.66 41439.32\n [1603,] 28943.03 38726.96\n [1604,] 32133.26 32974.19\n [1605,] 36553.75 41583.03\n [1606,] 32153.95 39528.08\n [1607,] 15889.36 37114.80\n [1608,] 35288.36 40721.83\n [1609,] 36341.93 42903.48\n [1610,] 23971.76 31497.79\n [1611,] 35667.15 41935.32\n [1612,] 34781.45 40855.02\n [1613,] 13029.18 35964.41\n [1614,] 16487.20 36755.65\n [1615,] 29109.89 46245.90\n [1616,] 26324.96 47646.87\n [1617,] 30632.34 36085.83\n [1618,] 23003.20 32384.04\n [1619,] 39260.03 37079.83\n [1620,] 12686.88 36316.70\n [1621,] 24177.30 47447.50\n [1622,] 29507.16 38473.85\n [1623,] 28545.55 39010.84\n [1624,] 18872.93 37388.97\n [1625,] 23958.17 46347.67\n [1626,] 36685.93 42525.91\n [1627,] 32890.85 40160.08\n [1628,] 27839.01 45032.17\n [1629,] 18368.00 42873.55\n [1630,] 24423.51 46133.07\n [1631,] 42350.50 37114.21\n [1632,] 29181.72 38185.97\n [1633,] 29193.72 35384.32\n [1634,] 36379.22 41429.66\n [1635,] 32876.22 41763.94\n [1636,] 18561.35 42946.38\n [1637,] 34304.46 42260.38\n [1638,] 22241.94 46462.68\n [1639,] 29008.86 46011.25\n [1640,] 36971.31 43021.34\n [1641,] 23621.43 46465.74\n [1642,] 32582.98 36879.20\n [1643,] 31722.51 33765.39\n [1644,] 27019.51 28398.64\n [1645,] 20395.31 33687.82\n [1646,] 21240.52 45414.13\n [1647,] 27376.54 45629.88\n [1648,] 32972.82 41858.42\n [1649,] 29727.93 37727.55\n [1650,] 21421.95 39831.44\n [1651,] 39235.36 40035.58\n [1652,] 30025.60 34493.68\n [1653,] 35206.53 42464.67\n [1654,] 18437.03 36353.45\n [1655,] 20469.09 33523.33\n [1656,] 41034.07 36221.83\n [1657,] 29533.95 44678.75\n [1658,] 35300.57 42496.68\n [1659,] 28612.75 46522.06\n [1660,] 33299.72 40273.50\n [1661,] 21365.06 40291.42\n [1662,] 32415.85 41649.39\n [1663,] 23984.74 45878.96\n [1664,] 40655.03 38880.45\n [1665,] 35009.93 40052.19\n [1666,] 34155.79 41949.13\n [1667,] 15611.86 35485.51\n [1668,] 26246.39 47739.77\n [1669,] 28404.93 44429.38\n [1670,] 40717.45 38939.07\n [1671,] 15867.80 34515.18\n [1672,] 18173.38 40001.86\n [1673,] 39017.45 37456.75\n [1674,] 30844.65 33947.18\n [1675,] 28069.18 45124.18\n [1676,] 24267.54 47020.21\n [1677,] 31107.88 32141.73\n [1678,] 38005.50 34727.56\n [1679,] 21341.36 47400.41\n [1680,] 28929.08 28879.35\n [1681,] 36994.45 42656.19\n [1682,] 24369.39 47482.38\n [1683,] 29749.74 36548.96\n [1684,] 12489.99 35993.51\n [1685,] 33880.58 37315.72\n [1686,] 26219.18 47985.88\n [1687,] 24442.04 47860.89\n [1688,] 34514.86 40852.39\n [1689,] 33049.47 41677.27\n [1690,] 34890.87 42859.34\n [1691,] 34742.99 40421.72\n [1692,] 33568.22 33686.50\n [1693,] 29720.49 38693.02\n [1694,] 24419.00 47031.17\n [1695,] 28929.08 28879.35\n [1696,] 35501.05 41318.22\n [1697,] 18435.04 33420.05\n [1698,] 32641.92 41715.31\n [1699,] 18175.02 36002.48\n [1700,] 37915.61 34613.41\n [1701,] 28152.37 39135.65\n [1702,] 29263.83 44869.00\n [1703,] 41655.97 36447.40\n [1704,] 20045.08 40909.39\n [1705,] 25788.86 30139.71\n [1706,] 26793.86 28444.65\n [1707,] 35642.76 43519.88\n [1708,] 27216.24 29777.37\n [1709,] 29289.71 35382.82\n [1710,] 18766.97 41859.86\n [1711,] 29723.91 36595.57\n [1712,] 35475.73 34303.98\n [1713,] 29352.65 35432.23\n [1714,] 39967.02 34387.45\n [1715,] 36245.65 42907.08\n [1716,] 36550.68 42824.06\n [1717,] 29181.37 37605.60\n [1718,] 17701.78 39933.33\n [1719,] 18424.20 41659.55\n [1720,] 34700.54 40123.15\n [1721,] 35338.15 40733.81\n [1722,] 30166.50 39342.82\n [1723,] 34292.91 42057.54\n [1724,] 29426.06 44899.70\n [1725,] 29467.40 44663.71\n [1726,] 33317.91 42073.50\n [1727,] 39591.97 37584.43\n [1728,] 30292.01 38439.17\n [1729,] 18290.97 37107.07\n [1730,] 39526.58 37785.62\n [1731,] 12557.27 36844.97\n [1732,] 21312.16 47070.56\n [1733,] 37003.67 41725.21\n [1734,] 32521.31 41455.59\n [1735,] 20673.69 33049.58\n [1736,] 28431.52 38930.27\n [1737,] 30347.48 38995.85\n [1738,] 29041.45 45519.79\n [1739,] 18187.19 41813.01\n [1740,] 33349.26 40483.93\n [1741,] 13418.56 35923.28\n [1742,] 37101.96 41756.97\n [1743,] 28879.22 45454.97\n [1744,] 35307.63 42426.14\n [1745,] 29281.98 45774.85\n [1746,] 20495.11 40135.56\n [1747,] 36024.97 42922.38\n [1748,] 36593.84 42468.55\n [1749,] 25210.47 30633.53\n [1750,] 25198.73 29324.68\n [1751,] 26859.77 47407.70\n [1752,] 39066.80 39829.05\n [1753,] 21099.53 41178.93\n [1754,] 29907.77 36513.24\n [1755,] 35173.32 33297.57\n [1756,] 20954.52 41110.65\n [1757,] 39937.08 40177.91\n [1758,] 35667.15 41935.32\n [1759,] 29044.58 46118.67\n [1760,] 25158.81 30687.65\n [1761,] 32113.06 37563.15\n [1762,] 23674.06 47353.23\n [1763,] 39638.31 35405.00\n [1764,] 29769.97 44954.80\n [1765,] 34520.18 40803.90\n [1766,] 21053.60 32503.70\n [1767,] 42350.50 37114.21\n [1768,] 29968.62 35980.90\n [1769,] 24036.90 47133.55\n [1770,] 23626.27 46793.57\n [1771,] 36223.01 41402.04\n [1772,] 24593.62 47743.72\n [1773,] 22327.22 32002.06\n [1774,] 23984.74 45878.96\n [1775,] 33015.31 40206.54\n [1776,] 36714.08 33989.79\n [1777,] 42444.75 37109.97\n [1778,] 27265.75 47952.87\n [1779,] 36758.46 43100.55\n [1780,] 29527.40 44565.31\n [1781,] 41654.63 39147.39\n [1782,] 35120.27 42848.74\n [1783,] 29935.53 36802.28\n [1784,] 33676.35 41463.15\n [1785,] 32987.92 41688.56\n [1786,] 13225.54 35898.66\n [1787,] 29127.34 29422.87\n [1788,] 32572.91 41570.18\n [1789,] 29933.30 38362.35\n [1790,] 39770.57 37766.92\n [1791,] 29065.93 45407.81\n [1792,] 40078.56 34296.43\n [1793,] 35320.59 39346.09\n [1794,] 19251.78 36620.55\n [1795,] 29807.47 44873.82\n [1796,] 34147.49 37390.67\n [1797,] 32921.08 39779.44\n [1798,] 34334.65 42049.85\n [1799,] 32906.40 40207.27\n [1800,] 29795.74 33066.48\n [1801,] 35533.40 42462.21\n [1802,] 26373.85 47351.52\n [1803,] 25622.61 30681.95\n [1804,] 36061.99 42848.27\n [1805,] 38181.36 34389.11\n [1806,] 31988.65 35169.99\n [1807,] 21044.95 41025.20\n [1808,] 32890.85 40160.08\n [1809,] 30528.63 35991.98\n [1810,] 39281.60 37109.69\n [1811,] 29951.95 32001.02\n [1812,] 20552.54 32600.30\n [1813,] 41341.94 37497.37\n [1814,] 40988.63 37172.19\n [1815,] 20855.73 32483.78\n [1816,] 27847.72 29889.97\n [1817,] 40892.80 39075.11\n [1818,] 37005.35 41832.26\n [1819,] 29225.56 45899.52\n [1820,] 36395.05 31714.45\n [1821,] 18147.67 36414.46\n [1822,] 35300.57 42496.68\n [1823,] 18498.13 40495.05\n [1824,] 39222.02 37960.74\n [1825,] 32588.22 41800.05\n [1826,] 23938.60 47260.17\n [1827,] 30747.14 39099.03\n [1828,] 30342.88 35998.68\n [1829,] 32760.65 41301.41\n [1830,] 27460.07 30213.84\n [1831,] 30833.55 35701.80\n [1832,] 26394.43 47966.45\n [1833,] 19796.36 40728.99\n [1834,] 12760.82 35621.80\n [1835,] 32956.36 41532.05\n [1836,] 36495.86 41268.56\n [1837,] 29652.96 44954.66\n [1838,] 13551.01 37062.42\n [1839,] 32314.90 37745.94\n [1840,] 33107.05 39180.95\n [1841,] 32657.10 41446.09\n [1842,] 41078.14 36004.68\n [1843,] 18516.88 42055.68\n [1844,] 34243.98 42252.05\n [1845,] 28991.85 45431.57\n [1846,] 31866.75 36860.37\n [1847,] 18881.03 42505.55\n [1848,] 34526.12 41877.85\n [1849,] 41966.70 39239.79\n [1850,] 24369.39 47482.38\n [1851,] 19752.02 36261.59\n [1852,] 18773.19 37597.25\n [1853,] 34520.35 37964.60\n [1854,] 34042.95 39419.04\n [1855,] 34704.60 40653.66\n [1856,] 41011.79 37119.33\n [1857,] 35535.84 42866.36\n [1858,] 24593.62 47743.72\n [1859,] 27768.70 45328.59\n [1860,] 18036.26 42367.22\n [1861,] 29552.94 45327.90\n [1862,] 12219.23 36082.72\n [1863,] 26150.55 29905.19\n [1864,] 33513.00 40047.38\n [1865,] 17590.01 33737.08\n [1866,] 34248.55 41961.95\n [1867,] 35820.97 34499.34\n [1868,] 41780.74 39687.97\n [1869,] 26193.08 48058.38\n [1870,] 29359.94 44686.60\n [1871,] 35712.21 42604.39\n [1872,] 29089.16 46165.68\n [1873,] 17379.11 33971.22\n [1874,] 12994.10 35302.85\n [1875,] 12274.79 36427.56\n [1876,] 16874.45 36587.25\n [1877,] 36427.15 31668.30\n [1878,] 11597.97 35821.60\n [1879,] 19283.43 36649.18\n [1880,] 35644.27 42790.82\n [1881,] 26878.90 28287.80\n [1882,] 29772.23 44831.65\n [1883,] 31952.62 37222.57\n [1884,] 32850.99 41385.31\n [1885,] 25595.61 29989.53\n [1886,] 29772.23 44831.65\n [1887,] 36494.87 41211.26\n [1888,] 39513.90 35337.40\n [1889,] 36384.90 42870.98\n [1890,] 28099.72 38389.24\n [1891,] 41487.95 39514.62\n [1892,] 31582.96 34979.91\n [1893,] 41506.64 38280.36\n [1894,] 32016.40 37030.90\n [1895,] 14080.05 36749.21\n [1896,] 34877.36 40120.80\n [1897,] 25205.95 30711.87\n [1898,] 28663.03 46353.33\n [1899,] 29365.53 34999.36\n [1900,] 34205.51 42158.32\n [1901,] 32657.10 41446.09\n [1902,] 29128.45 44417.05\n [1903,] 41780.74 39687.97\n [1904,] 21099.53 41178.93\n [1905,] 20344.07 33415.35\n [1906,] 39746.65 37995.14\n [1907,] 29181.37 37605.60\n [1908,] 23911.52 31600.59\n [1909,] 19655.94 40836.75\n [1910,] 30840.38 35490.01\n [1911,] 37534.91 35424.19\n [1912,] 32226.54 33128.13\n [1913,] 34938.36 42931.85\n [1914,] 29774.63 38889.47\n [1915,] 29090.57 28842.98\n [1916,] 11672.86 35698.70\n [1917,] 32435.94 41127.80\n [1918,] 37091.95 31959.36\n [1919,] 20823.45 40920.64\n [1920,] 15678.23 35424.05\n [1921,] 21857.28 46973.56\n [1922,] 29831.63 35350.27\n [1923,] 29187.77 35340.82\n [1924,] 35769.87 33787.35\n [1925,] 29408.30 44586.14\n [1926,] 14246.35 36749.10\n [1927,] 12893.55 36276.17\n [1928,] 21493.31 39523.14\n [1929,] 34514.86 40852.39\n [1930,] 27415.98 48063.02\n [1931,] 19443.40 36859.79\n [1932,] 29001.49 37633.20\n [1933,] 17491.15 40233.45\n [1934,] 20769.96 41218.47\n [1935,] 32650.92 41800.04\n [1936,] 23724.28 32123.95\n [1937,] 24279.23 47795.02\n [1938,] 15534.46 35057.60\n [1939,] 34077.58 41708.00\n [1940,] 32803.26 41317.97\n [1941,] 34477.19 39035.88\n [1942,] 23523.53 45594.99\n [1943,] 32480.52 41577.30\n [1944,] 35409.40 43504.30\n [1945,] 17836.96 35553.25\n [1946,] 39258.06 39904.41\n [1947,] 32650.92 41800.04\n [1948,] 23200.62 46549.26\n [1949,] 34196.63 41693.34\n [1950,] 17964.73 40328.18\n [1951,] 21026.94 39949.93\n [1952,] 26878.90 28287.80\n [1953,] 18458.37 42458.56\n [1954,] 21461.89 35631.46\n [1955,] 35617.49 40013.95\n [1956,] 17316.22 39704.72\n [1957,] 34864.55 40721.42\n [1958,] 31953.63 37040.01\n [1959,] 36611.14 42695.18\n [1960,] 15707.05 37209.32\n [1961,] 35816.59 42712.59\n [1962,] 24165.28 46126.52\n [1963,] 32760.65 41301.41\n [1964,] 39526.58 37785.62\n [1965,] 39017.45 37456.75\n [1966,] 18279.96 38403.01\n [1967,] 35499.58 42535.17\n [1968,] 18697.55 42055.74\n [1969,] 40680.99 38924.85\n [1970,] 21819.55 46973.55\n [1971,] 21475.81 45414.05\n [1972,] 36209.95 35113.90\n [1973,] 40014.13 34323.98\n [1974,] 29111.95 40346.36\n [1975,] 35255.86 42983.08\n [1976,] 24442.04 47860.89\n [1977,] 17698.01 40415.81\n [1978,] 31296.89 35194.57\n [1979,] 32867.43 41342.68\n [1980,] 32867.43 41342.68\n [1981,] 29554.62 44598.43\n [1982,] 28963.89 45446.68\n [1983,] 20770.26 32379.02\n [1984,] 21072.27 41108.45\n [1985,] 33266.71 41302.53\n [1986,] 34195.53 40007.99\n [1987,] 21030.40 41123.11\n [1988,] 25603.53 30871.26\n [1989,] 28908.95 28820.87\n [1990,] 17379.11 33971.22\n [1991,] 39699.12 33765.23\n [1992,] 25464.33 30116.01\n [1993,] 14689.89 36250.27\n [1994,] 31088.97 33638.12\n [1995,] 35202.25 42976.70\n [1996,] 21418.06 40252.21\n [1997,] 21058.30 40383.48\n [1998,] 25962.94 47645.51\n [1999,] 19753.52 40742.58\n [2000,] 37201.42 41902.60\n [2001,] 34983.59 32884.54\n [2002,] 32848.09 33168.16\n [2003,] 35428.21 42746.43\n [2004,] 17897.18 41211.94\n [2005,] 26575.72 48237.12\n [2006,] 15704.55 37046.95\n [2007,] 35498.36 41859.50\n [2008,] 31915.37 33828.89\n [2009,] 21240.52 45414.13\n [2010,] 39048.88 35019.97\n [2011,] 42163.75 39659.91\n [2012,] 34205.51 42158.32\n [2013,] 35568.35 43392.61\n [2014,] 39397.56 37461.83\n [2015,] 29426.06 44899.70\n [2016,] 30615.82 34239.58\n [2017,] 27397.84 48130.23\n [2018,] 35519.81 42819.11\n [2019,] 28073.44 44759.65\n [2020,] 41307.15 38109.64\n [2021,] 30000.60 34865.99\n [2022,] 20393.57 39934.02\n [2023,] 27304.32 47968.69\n [2024,] 27808.76 28869.57\n [2025,] 39506.07 35418.23\n [2026,] 29651.92 45623.02\n [2027,] 21495.80 45373.58\n [2028,] 35561.22 42685.17\n [2029,] 17902.67 41730.97\n [2030,] 36058.37 42092.31\n [2031,] 25198.73 29324.68\n [2032,] 19742.50 41041.11\n [2033,] 14941.86 37017.30\n [2034,] 12027.89 35745.12\n [2035,] 25648.08 30864.46\n [2036,] 19753.52 40742.58\n [2037,] 36249.10 31746.04\n [2038,] 20182.34 31585.09\n [2039,] 34026.96 39725.85\n [2040,] 29519.15 44638.48\n [2041,] 28463.79 39326.97\n [2042,] 28423.42 39745.94\n [2043,] 40663.57 37113.17\n [2044,] 32641.92 41715.31\n [2045,] 17773.53 39688.05\n [2046,] 41594.95 37273.94\n [2047,] 33030.01 41752.64\n [2048,] 25777.63 47767.66\n [2049,] 18520.65 42140.82\n [2050,] 20454.88 31825.53\n [2051,] 28596.41 46470.05\n [2052,] 29871.45 32114.99\n [2053,] 27542.17 29862.11\n [2054,] 42240.21 37114.15\n [2055,] 34925.26 42853.27\n [2056,] 29510.05 38880.94\n [2057,] 29083.36 45815.45\n [2058,] 25581.12 30694.10\n [2059,] 18660.35 42567.99\n [2060,] 20992.74 41161.79\n [2061,] 39746.65 37995.14\n [2062,] 35848.37 40032.01\n [2063,] 42280.55 37552.40\n [2064,] 30601.23 38459.25\n [2065,] 26688.93 30197.43\n [2066,] 30291.33 31018.52\n [2067,] 17270.16 40430.10\n [2068,] 22241.94 46462.68\n [2069,] 27917.81 45044.25\n [2070,] 41983.18 37346.38\n [2071,] 18733.94 36583.55\n [2072,] 40559.88 36512.56\n [2073,] 32972.82 41858.42\n [2074,] 23639.36 46382.83\n [2075,] 33049.47 41677.27\n [2076,] 13763.44 36144.91\n [2077,] 21089.52 40146.58\n [2078,] 32438.34 36488.81\n [2079,] 38668.12 35062.69\n [2080,] 33624.15 40101.47\n [2081,] 29399.19 35150.94\n [2082,] 17602.15 33598.57\n [2083,] 24227.83 46947.12\n [2084,] 28332.38 44923.56\n [2085,] 36116.34 43022.32\n [2086,] 32521.31 41455.59\n [2087,] 13483.67 35998.81\n [2088,] 34899.18 39565.95\n [2089,] 30416.59 36528.49\n [2090,] 21002.69 41053.33\n [2091,] 35813.88 42655.99\n [2092,] 25847.01 48622.47\n [2093,] 30474.74 36269.11\n [2094,] 25897.24 30605.04\n [2095,] 27634.65 29329.80\n [2096,] 21888.98 46999.13\n [2097,] 32803.26 41317.97\n [2098,] 35552.70 43636.58\n [2099,] 32916.21 41754.72\n [2100,] 35189.88 43046.93\n [2101,] 22241.93 46545.97\n [2102,] 38830.62 35225.59\n [2103,] 14080.05 36749.21\n [2104,] 35973.59 42952.49\n [2105,] 29289.71 35382.82\n [2106,] 35509.95 43461.37\n [2107,] 29008.86 46011.25\n [2108,] 41127.03 35874.78\n [2109,] 25210.47 30633.53\n [2110,] 12581.68 35274.15\n [2111,] 30186.63 38602.78\n [2112,] 13497.04 35935.38\n [2113,] 29041.45 45519.79\n [2114,] 29229.60 44394.57\n [2115,] 36232.02 41088.17\n [2116,] 29008.86 46011.25\n [2117,] 13178.40 35758.91\n [2118,] 21144.59 41060.65\n [2119,] 34809.92 40477.37\n [2120,] 32161.99 39437.89\n [2121,] 18982.22 38706.05\n [2122,] 40713.98 39216.49\n [2123,] 25777.63 47767.66\n [2124,] 18660.11 38392.70\n [2125,] 26707.84 47347.92\n [2126,] 32666.20 41556.04\n [2127,] 34085.33 41868.11\n [2128,] 24651.86 46591.71\n [2129,] 34201.39 39416.91\n [2130,] 32637.29 38903.28\n [2131,] 36537.44 41164.11\n [2132,] 34529.68 40756.35\n [2133,] 12258.27 36390.32\n [2134,] 34123.89 37885.84\n [2135,] 32366.74 39588.73\n [2136,] 39967.02 34387.45\n [2137,] 13788.21 35353.25\n [2138,] 41111.85 36546.34\n [2139,] 17432.30 39816.08\n [2140,] 32102.83 37014.16\n [2141,] 15465.94 36893.03\n [2142,] 25622.61 30681.95\n [2143,] 21238.39 45620.85\n [2144,] 20514.34 33047.29\n [2145,] 13658.16 37196.60\n [2146,] 21264.98 46385.07\n [2147,] 17813.11 35981.95\n [2148,] 19676.89 40790.68\n [2149,] 26246.39 47739.77\n [2150,] 36636.36 43269.84\n [2151,] 33015.31 40206.54\n [2152,] 39914.89 37706.46\n [2153,] 29258.54 44994.84\n [2154,] 36451.70 42826.86\n [2155,] 37912.95 35388.27\n [2156,] 27415.98 48063.02\n [2157,] 18660.11 38392.70\n [2158,] 17368.74 33925.11\n [2159,] 30038.83 32697.73\n [2160,] 35389.59 41038.66\n [2161,] 21044.95 41025.20\n [2162,] 39042.69 37504.16\n [2163,] 34974.26 42850.60\n [2164,] 28949.69 46327.14\n [2165,] 29419.80 39109.98\n [2166,] 18676.55 38355.00\n [2167,] 27458.54 30282.49\n [2168,] 35272.33 42811.32\n [2169,] 18697.55 42055.74\n [2170,] 22470.06 32195.25\n [2171,] 30514.79 35190.65\n [2172,] 39964.67 34274.35\n [2173,] 21552.66 46823.29\n [2174,] 27624.34 29285.24\n [2175,] 29836.77 35212.87\n [2176,] 32480.52 41577.30\n [2177,] 20695.00 40477.19\n [2178,] 39964.67 34274.35\n [2179,] 35007.25 39741.94\n [2180,] 28150.86 44522.87\n [2181,] 24227.09 31453.43\n [2182,] 21853.72 46229.60\n [2183,] 20624.25 41031.95\n [2184,] 28069.18 45124.18\n [2185,] 35712.21 42604.39\n [2186,] 36722.70 43115.14\n [2187,] 17582.77 33891.16\n [2188,] 36142.50 42582.24\n [2189,] 27458.54 30282.49\n [2190,] 35618.28 33714.07\n [2191,] 29553.82 44789.22\n [2192,] 38246.21 35153.85\n [2193,] 39237.87 39771.77\n [2194,] 39138.99 36559.72\n [2195,] 24422.78 47391.68\n [2196,] 35164.67 41324.67\n [2197,] 42400.49 38894.71\n [2198,] 29296.97 45063.20\n [2199,] 17929.81 36649.40\n [2200,] 22637.45 32298.62\n [2201,] 39353.20 37674.21\n [2202,] 34857.71 41937.48\n [2203,] 34469.95 41889.54\n [2204,] 29280.45 44514.15\n [2205,] 15487.37 35822.35\n [2206,] 21312.16 47070.56\n [2207,] 37812.84 35371.67\n [2208,] 17836.96 35553.25\n [2209,] 20387.04 33825.18\n [2210,] 30018.34 32908.99\n [2211,] 28899.78 28918.09\n [2212,] 28899.78 28918.09\n [2213,] 29107.86 40393.84\n [2214,] 37769.74 34632.66\n [2215,] 28369.63 38801.65\n [2216,] 28742.85 44576.45\n [2217,] 42160.18 39511.98\n [2218,] 23639.36 46382.83\n [2219,] 30038.83 32697.73\n [2220,] 21888.98 46999.13\n [2221,] 28223.70 44564.99\n [2222,] 20794.73 41260.70\n [2223,] 20816.74 31875.79\n [2224,] 37087.54 41792.23\n [2225,] 32487.30 37446.80\n [2226,] 34205.51 42158.32\n [2227,] 24508.71 47751.29\n [2228,] 29298.53 45962.12\n [2229,] 27146.02 29318.47\n [2230,] 29836.77 35212.87\n [2231,] 19031.29 38654.83\n [2232,] 24172.23 46283.89\n [2233,] 29318.87 38622.32\n [2234,] 34469.95 41889.54\n [2235,] 20870.29 41152.00\n [2236,] 29109.89 46245.90\n [2237,] 36510.96 41631.21\n [2238,] 28597.81 46605.58\n [2239,] 33129.97 41219.11\n [2240,] 36744.65 42417.81\n [2241,] 29042.23 38153.20\n [2242,] 35813.88 42655.99\n [2243,] 36695.92 42389.95\n [2244,] 16672.31 36850.20\n [2245,] 41136.19 35945.20\n [2246,] 29968.62 35980.90\n [2247,] 41118.18 36601.01\n [2248,] 24060.51 46703.66\n [2249,] 27260.25 28266.69\n [2250,] 29263.83 44869.00\n [2251,] 29600.33 37890.81\n [2252,] 27397.84 48130.23\n [2253,] 18112.72 42705.14\n [2254,] 35593.41 43605.80\n [2255,] 24062.08 46879.95\n [2256,] 36328.51 42976.62\n [2257,] 42385.13 37568.79\n [2258,] 32585.58 38957.75\n [2259,] 34107.16 37031.73\n [2260,] 27697.61 45878.82\n [2261,] 36978.96 41739.11\n [2262,] 39457.91 35353.74\n [2263,] 32924.26 41871.99\n [2264,] 34877.36 40120.80\n [2265,] 36730.60 34950.97\n [2266,] 24762.67 30499.05\n [2267,] 11863.05 35775.41\n [2268,] 36495.86 41268.56\n [2269,] 27542.17 29862.11\n [2270,] 25799.80 48617.40\n [2271,] 24631.86 47206.72\n [2272,] 24481.40 47738.04\n [2273,] 39746.65 37995.14\n [2274,] 28785.17 46608.65\n [2275,] 32883.68 41849.98\n [2276,] 28459.41 44749.17\n [2277,] 31775.42 34889.31\n [2278,] 21262.30 45797.34\n [2279,] 12798.49 36249.43\n [2280,] 34553.58 38054.84\n [2281,] 32499.31 37078.72\n [2282,] 28456.36 39163.95\n [2283,] 34058.79 33333.38\n [2284,] 26227.41 30088.16\n [2285,] 39957.35 36624.94\n [2286,] 24002.71 46664.72\n [2287,] 36028.27 41826.86\n [2288,] 27808.56 45289.08\n [2289,] 29077.11 38219.23\n [2290,] 24822.58 47056.57\n [2291,] 27553.14 45402.75\n [2292,] 27991.62 45368.24\n [2293,] 34049.38 37925.31\n [2294,] 25464.33 30116.01\n [2295,] 39529.80 37048.48\n [2296,] 41305.12 37690.98\n [2297,] 29420.41 45054.67\n [2298,] 41275.94 37432.67\n [2299,] 32259.00 38945.95\n [2300,] 32990.37 41605.84\n [2301,] 38668.12 35062.69\n [2302,] 28839.05 40512.13\n [2303,] 36447.09 34675.95\n [2304,] 17395.08 39834.34\n [2305,] 29687.49 33118.89\n [2306,] 13195.23 35289.12\n [2307,] 34292.91 42057.54\n [2308,] 27847.72 29889.97\n [2309,] 17706.54 36471.16\n [2310,] 20665.45 39987.02\n [2311,] 24588.33 47679.03\n [2312,] 38001.58 34366.79\n [2313,] 29723.91 36595.57\n [2314,] 28460.74 37492.11\n [2315,] 13932.29 36360.25\n [2316,] 18692.15 41979.83\n [2317,] 24354.26 46128.76\n [2318,] 32524.59 41721.90\n [2319,] 34447.91 40013.43\n [2320,] 35687.87 41637.05\n [2321,] 29968.62 35980.90\n [2322,] 32981.70 41976.55\n [2323,] 35389.59 41038.66\n [2324,] 36063.64 43071.01\n [2325,] 17396.63 35792.53\n [2326,] 32657.10 41446.09\n [2327,] 38636.54 34545.43\n [2328,] 19097.47 38656.20\n [2329,] 38668.12 35062.69\n [2330,] 28929.08 28879.35\n [2331,] 21133.84 41240.77\n [2332,] 34304.46 42260.38\n [2333,] 36685.93 42525.91\n [2334,] 25897.55 48205.37\n [2335,] 40663.12 38841.62\n [2336,] 32668.88 41133.24\n [2337,] 33136.84 41278.61\n [2338,] 28973.82 46300.29\n [2339,] 28906.39 30004.35\n [2340,] 21752.95 47002.21\n [2341,] 28440.17 44925.43\n [2342,] 36979.63 31972.78\n [2343,] 42074.60 37028.71\n [2344,] 40701.25 37554.92\n [2345,] 17872.76 36081.98\n [2346,] 40101.43 35118.35\n [2347,] 19880.76 40842.02\n [2348,] 37867.37 35441.37\n [2349,] 12757.70 35751.21\n [2350,] 35519.81 42819.11\n [2351,] 35552.70 43636.58\n [2352,] 39729.57 36961.63\n [2353,] 29129.76 37573.18\n [2354,] 33717.79 39018.13\n [2355,] 35659.26 43562.75\n [2356,] 33303.15 40222.47\n [2357,] 30292.01 38439.17\n [2358,] 20064.27 40534.97\n [2359,] 23612.30 46542.96\n [2360,] 18278.79 40349.84\n [2361,] 39190.95 36539.70\n [2362,] 27709.70 45411.08\n [2363,] 14210.49 36691.54\n [2364,] 18187.19 41813.01\n [2365,] 41305.10 37826.46\n [2366,] 36713.12 43168.83\n [2367,] 29933.30 38362.35\n [2368,] 30504.33 34674.52\n [2369,] 32585.58 38957.75\n [2370,] 34356.75 40213.43\n [2371,] 29138.30 39205.16\n [2372,] 18257.42 38249.64\n [2373,] 14901.40 37078.94\n [2374,] 34557.61 41791.91\n [2375,] 17292.88 40017.60\n [2376,] 34529.68 40756.35\n [2377,] 21275.62 41135.84\n [2378,] 19482.53 40129.24\n [2379,] 25492.64 30608.30\n [2380,] 32916.21 41754.72\n [2381,] 34781.45 40855.02\n [2382,] 29623.02 38789.10\n [2383,] 26052.69 47663.73\n [2384,] 35358.29 41378.62\n [2385,] 23543.19 47439.45\n [2386,] 24677.26 47703.11\n [2387,] 30492.80 38779.24\n [2388,] 24382.48 47357.88\n [2389,] 19717.75 36405.57\n [2390,] 29670.16 44909.77\n [2391,] 15650.24 36974.88\n [2392,] 32435.94 41127.80\n [2393,] 32435.94 41127.80\n [2394,] 34763.22 38463.43\n [2395,] 35459.55 42502.79\n [2396,] 29313.48 45702.53\n [2397,] 17736.18 40652.34\n [2398,] 36494.87 41211.26\n [2399,] 18205.12 41735.91\n [2400,] 24481.40 47738.04\n [2401,] 35026.93 42837.67\n [2402,] 32201.80 39668.84\n [2403,] 32641.92 41715.31\n [2404,] 34359.81 41479.23\n [2405,] 39378.69 39920.11\n [2406,] 35524.84 42400.71\n [2407,] 42126.50 37863.94\n [2408,] 32668.88 41133.24\n [2409,] 23663.50 46544.11\n [2410,] 13626.89 36078.76\n [2411,] 28885.44 28667.40\n [2412,] 35306.75 42778.71\n [2413,] 29203.53 45951.17\n [2414,] 29548.52 44871.70\n [2415,] 29399.19 35150.94\n [2416,] 34540.71 40900.35\n [2417,] 28771.12 45867.62\n [2418,] 33274.04 40272.76\n [2419,] 20669.35 41279.55\n [2420,] 15343.39 36657.88\n [2421,] 34520.35 37964.60\n [2422,] 30291.20 38778.21\n [2423,] 15071.17 36872.15\n [2424,] 28406.43 43928.15\n [2425,] 42385.13 37568.79\n [2426,] 24442.04 47860.89\n [2427,] 33243.46 39587.40\n [2428,] 27112.69 28426.90\n [2429,] 18269.27 42244.84\n [2430,] 40601.29 37986.91\n [2431,] 32283.75 37913.02\n [2432,] 41935.69 36070.17\n [2433,] 13257.17 36725.54\n [2434,] 32987.92 41688.56\n [2435,] 13610.02 35517.73\n [2436,] 40780.88 39182.39\n [2437,] 39202.43 37430.01\n [2438,] 25813.88 47950.37\n [2439,] 19742.50 41041.11\n [2440,] 19585.79 40949.14\n [2441,] 29548.52 44871.70\n [2442,] 40681.87 38966.20\n [2443,] 36077.08 41548.51\n [2444,] 24844.20 30862.37\n [2445,] 39693.46 37760.98\n [2446,] 26436.21 48219.52\n [2447,] 30073.38 39457.71\n [2448,] 32949.02 40144.66\n [2449,] 33190.98 41392.37\n [2450,] 28678.74 28487.07\n [2451,] 20612.15 32606.08\n [2452,] 29702.01 44751.06\n [2453,] 17790.44 40546.95\n [2454,] 35115.59 41118.21\n [2455,] 17935.11 40767.19\n [2456,] 18545.73 38552.59\n [2457,] 32451.97 41520.06\n [2458,] 29585.55 35191.21\n [2459,] 22359.63 31821.92\n [2460,] 15110.93 37053.53\n [2461,] 40938.38 36880.77\n [2462,] 18971.81 38331.83\n [2463,] 23612.30 46542.96\n [2464,] 18825.29 37467.42\n [2465,] 17084.99 36397.28\n [2466,] 18982.22 38706.05\n [2467,] 29552.05 45366.14\n [2468,] 28973.90 37860.15\n [2469,] 36137.23 43102.98\n [2470,] 39914.89 37706.46\n [2471,] 41196.67 37879.41\n [2472,] 23390.64 45907.92\n [2473,] 39741.35 34650.83\n [2474,] 33266.71 41302.53\n [2475,] 35221.40 33308.23\n [2476,] 39307.85 37143.23\n [2477,] 29533.95 44678.75\n [2478,] 24762.67 30499.05\n [2479,] 36116.34 43022.32\n [2480,] 41627.06 38898.46\n [2481,] 29554.62 44598.43\n [2482,] 29008.08 45470.67\n [2483,] 36569.24 34706.30\n [2484,] 27830.66 46253.27\n [2485,] 13678.13 37003.18\n [2486,] 29225.56 45899.52\n [2487,] 35889.58 39923.62\n [2488,] 33362.41 41982.95\n [2489,] 34274.93 42145.44\n [2490,] 25257.47 47286.92\n [2491,] 13483.67 35998.81\n [2492,] 13195.23 35289.12\n [2493,] 18668.13 40422.19\n [2494,] 25581.12 30694.10\n [2495,] 27205.91 29544.71\n [2496,] 34285.59 39183.36\n [2497,] 20954.52 41110.65\n [2498,] 22630.14 46012.17\n [2499,] 40938.38 36880.77\n [2500,] 23300.77 45766.53\n [2501,] 18168.61 36574.17\n [2502,] 29438.41 35703.32\n [2503,] 18254.08 41373.85\n [2504,] 32463.36 37771.40\n [2505,] 41780.74 39687.97\n [2506,] 24593.62 47743.72\n [2507,] 39138.99 36559.72\n [2508,] 35221.40 33308.23\n [2509,] 24138.53 46229.37\n [2510,] 40765.47 37554.81\n [2511,] 27150.28 28217.39\n [2512,] 18476.24 38153.20\n [2513,] 39855.59 33795.49\n [2514,] 33202.43 40351.12\n [2515,] 36167.01 42992.15\n [2516,] 30102.06 36322.61\n [2517,] 20680.84 40289.64\n [2518,] 30641.17 35742.37\n [2519,] 39824.45 36883.33\n [2520,] 30840.38 35490.01\n [2521,] 29130.00 46070.87\n [2522,] 41832.92 37585.59\n [2523,] 28150.86 44522.87\n [2524,] 30416.59 36528.49\n [2525,] 29280.45 44514.15\n [2526,] 15811.24 34517.71\n [2527,] 40053.42 39739.63\n [2528,] 31576.84 35084.07\n [2529,] 35194.89 43089.61\n [2530,] 21398.30 45428.53\n [2531,] 29434.38 44715.69\n [2532,] 35485.64 34228.98\n [2533,] 39746.65 37995.14\n [2534,] 40266.27 39572.22\n [2535,] 30994.53 33511.15\n [2536,] 20770.26 32379.02\n [2537,] 39230.92 34137.42\n [2538,] 24459.20 46256.03\n [2539,] 32929.70 40067.96\n [2540,] 12970.93 36199.41\n [2541,] 19283.43 36649.18\n [2542,] 41542.07 37422.58\n [2543,] 12953.79 36615.10\n [2544,] 18465.57 38406.96\n [2545,] 32105.85 36862.83\n [2546,] 36807.22 31876.19\n [2547,] 24593.62 47743.72\n [2548,] 30856.13 33696.49\n [2549,] 37080.75 42663.95\n [2550,] 17465.23 33889.27\n [2551,] 29352.65 35432.23\n [2552,] 18899.56 37684.55\n [2553,] 28577.02 46397.19\n [2554,] 28510.79 45515.37\n [2555,] 17600.38 33788.50\n [2556,] 33317.93 35378.21\n [2557,] 19796.36 40728.99\n [2558,] 20259.60 40766.99\n [2559,] 34520.18 40803.90\n [2560,] 28978.82 46249.91\n [2561,] 24528.26 46812.80\n [2562,] 23612.30 46542.96\n [2563,] 20992.74 41161.79\n [2564,] 36245.65 42907.08\n [2565,] 36036.29 42863.63\n [2566,] 24399.26 46735.77\n [2567,] 35377.25 43293.29\n [2568,] 23374.97 47050.51\n [2569,] 34700.54 40123.15\n [2570,] 33150.04 37181.11\n [2571,] 12968.01 35832.54\n [2572,] 17729.11 40101.77\n [2573,] 19827.29 40824.41\n [2574,] 39865.79 34003.09\n [2575,] 30626.71 38751.45\n [2576,] 17639.86 39764.42\n [2577,] 26127.08 48230.31\n [2578,] 25808.96 48085.38\n [2579,] 30272.23 36786.74\n [2580,] 28233.11 44682.23\n [2581,] 18175.02 36002.48\n [2582,] 11980.86 36207.75\n [2583,] 25882.67 48648.61\n [2584,] 36391.03 43056.63\n [2585,] 23430.31 47233.57\n [2586,] 32226.54 33128.13\n [2587,] 23817.06 46178.64\n [2588,] 29103.59 38953.94\n [2589,] 22289.35 45798.53\n [2590,] 18111.79 41789.39\n [2591,] 40938.38 36880.77\n [2592,] 35462.07 43626.85\n [2593,] 27846.49 46565.40\n [2594,] 29191.75 35281.82\n [2595,] 34143.71 37846.81\n [2596,] 21493.31 39523.14\n [2597,] 35502.57 42466.51\n [2598,] 39466.57 39642.88\n [2599,] 39138.99 36559.72\n [2600,] 19047.12 39896.36\n [2601,] 36109.15 42891.87\n [2602,] 29521.18 38787.28\n [2603,] 36607.48 41763.84\n [2604,] 27634.65 29329.80\n [2605,] 27419.73 45277.97\n [2606,] 20816.74 31875.79\n [2607,] 40018.30 35009.87\n [2608,] 27481.48 29916.33\n [2609,] 34534.47 40148.36\n [2610,] 35114.36 39527.84\n [2611,] 24508.71 47751.29\n [2612,] 20460.64 33596.21\n [2613,] 12156.89 36283.81\n [2614,] 12914.05 36880.51\n [2615,] 39917.80 34639.20\n [2616,] 36183.18 35061.69\n [2617,] 18168.61 36574.17\n [2618,] 41734.30 39121.66\n [2619,] 18685.83 42187.58\n [2620,] 28749.37 46047.08\n [2621,] 18722.67 36402.03\n [2622,] 38190.16 35350.79\n [2623,] 35216.02 41471.83\n [2624,] 32990.37 41605.84\n [2625,] 42254.10 39487.27\n [2626,] 19585.79 40949.14\n [2627,] 27427.95 29454.52\n [2628,] 34785.22 40122.03\n [2629,] 29769.97 44954.80\n [2630,] 34155.79 41949.13\n [2631,] 39298.05 37590.30\n [2632,] 24670.48 30188.19\n [2633,] 39190.95 36539.70\n [2634,] 23881.71 47265.68\n [2635,] 32867.43 41342.68\n [2636,] 25265.01 47327.23\n [2637,] 39264.33 37035.21\n [2638,] 29523.32 37897.38\n [2639,] 42103.21 39558.51\n [2640,] 27525.46 29330.00\n [2641,] 34591.51 40782.49\n [2642,] 29141.23 46198.19\n [2643,] 15163.91 36358.68\n [2644,] 33324.93 42023.05\n [2645,] 40503.84 39456.37\n [2646,] 21144.59 41060.65\n [2647,] 26390.82 47565.27\n [2648,] 32883.68 41849.98\n [2649,] 35472.31 42732.76\n [2650,] 21012.93 40953.28\n [2651,] 34786.95 41711.64\n [2652,] 23764.95 32159.76\n [2653,] 29696.57 44798.01\n [2654,] 39732.47 36881.63\n [2655,] 28670.25 44329.60\n [2656,] 28643.78 45014.00\n [2657,] 29836.77 35212.87\n [2658,] 30512.05 34338.68\n [2659,] 24079.62 46363.07\n [2660,] 29293.48 44558.05\n [2661,] 39751.23 37892.46\n [2662,] 36928.46 35084.96\n [2663,] 33466.48 32420.06\n [2664,] 22341.29 32045.61\n [2665,] 30320.30 39561.93\n [2666,] 27822.11 37864.92\n [2667,] 26353.60 47525.72\n [2668,] 29036.48 37924.35\n [2669,] 20941.42 41191.45\n [2670,] 11863.05 35775.41\n [2671,] 13521.39 35395.21\n [2672,] 23468.56 32476.93\n [2673,] 32033.59 36894.72\n [2674,] 28943.92 39225.43\n [2675,] 25603.53 30871.26\n [2676,] 20335.89 39805.82\n [2677,] 35999.27 42937.43\n [2678,] 27419.73 45277.97\n [2679,] 16628.86 36534.77\n [2680,] 35328.82 40660.61\n [2681,] 25631.35 30735.62\n [2682,] 26608.73 47554.75\n [2683,] 17721.84 40064.78\n [2684,] 30288.60 39307.11\n [2685,] 32987.92 41688.56\n [2686,] 25648.08 30864.46\n [2687,] 18338.06 40323.70\n [2688,] 29028.99 45961.16\n [2689,] 33863.93 33141.50\n [2690,] 31264.70 35296.29\n [2691,] 28992.73 37963.50\n [2692,] 20507.76 41032.52\n [2693,] 34096.12 42002.61\n [2694,] 27371.58 29326.08\n [2695,] 29263.83 45891.33\n [2696,] 37301.60 35139.33\n [2697,] 27695.04 37908.17\n [2698,] 35546.87 40971.18\n [2699,] 22470.77 32239.42\n [2700,] 34806.66 40425.07\n [2701,] 14754.68 36104.58\n [2702,] 21495.80 45373.58\n [2703,] 21058.30 40383.48\n [2704,] 28943.03 38726.96\n [2705,] 29008.86 46011.25\n [2706,] 17518.83 39833.52\n [2707,] 28214.27 46147.57\n [2708,] 39761.91 34440.54\n [2709,] 36607.15 41184.66\n [2710,] 32676.45 41702.54\n [2711,] 40641.62 37154.17\n [2712,] 17976.31 41280.06\n [2713,] 27286.91 45348.38\n [2714,] 31915.37 33828.89\n [2715,] 32397.05 32954.03\n [2716,] 21224.71 35657.32\n [2717,] 40713.98 39216.49\n [2718,] 23538.62 32394.00\n [2719,] 29965.54 38418.56\n [2720,] 40439.50 33627.69\n [2721,] 35887.22 40144.11\n [2722,] 32228.06 33877.80\n [2723,] 20332.59 33020.16\n [2724,] 34085.33 41868.11\n [2725,] 28876.22 28717.68\n [2726,] 18034.65 41735.22\n [2727,] 29258.54 44994.84\n [2728,] 34147.46 37453.03\n [2729,] 29280.45 44514.15\n [2730,] 36998.70 31789.68\n [2731,] 23524.41 46789.75\n [2732,] 21025.48 40060.60\n [2733,] 28061.11 43878.83\n [2734,] 36769.75 42592.63\n [2735,] 32906.40 40207.27\n [2736,] 21484.89 45622.60\n [2737,] 32890.85 40160.08\n [2738,] 35417.00 39751.72\n [2739,] 34520.18 40803.90\n [2740,] 19813.15 36470.57\n [2741,] 29890.68 38485.50\n [2742,] 42058.91 37114.14\n [2743,] 35465.18 42438.06\n [2744,] 36013.36 41798.33\n [2745,] 17568.56 39747.66\n [2746,] 34150.21 42180.99\n [2747,] 17405.09 40176.90\n [2748,] 41822.02 38838.14\n [2749,] 29191.75 35281.82\n [2750,] 32415.85 41649.39\n [2751,] 36224.86 41599.40\n [2752,] 35027.93 43052.26\n [2753,] 33592.13 39944.62\n [2754,] 19012.08 38443.16\n [2755,] 18477.72 42759.86\n [2756,] 17552.28 40130.93\n [2757,] 36343.08 43084.21\n [2758,] 23663.50 46544.11\n [2759,] 24177.30 47447.50\n [2760,] 29555.18 44742.73\n [2761,] 38585.32 35480.32\n [2762,] 34640.23 40817.82\n [2763,] 18817.17 38361.18\n [2764,] 11655.33 35926.34\n [2765,] 20773.83 41290.92\n [2766,] 26553.19 48343.33\n [2767,] 19654.90 41062.14\n [2768,] 21456.64 35597.21\n [2769,] 20927.48 40381.14\n [2770,] 30200.71 36327.95\n [2771,] 12100.48 36260.80\n [2772,] 40675.06 37509.07\n [2773,] 32177.60 37656.09\n [2774,] 28992.73 37963.50\n [2775,] 35027.93 43052.26\n [2776,] 27059.52 29483.04\n [2777,] 18545.73 38552.59\n [2778,] 39519.20 34376.53\n [2779,] 30475.14 36352.81\n [2780,] 30637.92 39516.90\n [2781,] 36975.56 42718.09\n [2782,] 33049.47 41677.27\n [2783,] 29216.25 44929.65\n [2784,] 42070.92 39527.54\n [2785,] 42251.63 39352.70\n [2786,] 39468.47 40489.30\n [2787,] 20794.73 41260.70\n [2788,] 27265.75 47952.87\n [2789,] 41035.46 36756.80\n [2790,] 24354.26 46128.76\n [2791,] 12764.23 36386.16\n [2792,] 15643.52 35057.70\n [2793,] 29043.74 46064.93\n [2794,] 35016.05 42888.49\n [2795,] 35229.21 38792.73\n [2796,] 28502.94 46612.67\n [2797,] 39886.07 36385.99\n [2798,] 31337.32 35439.32\n [2799,] 20764.86 40378.86\n [2800,] 12266.15 36507.50\n [2801,] 19813.76 40958.28\n [2802,] 28521.55 43968.06\n [2803,] 33934.10 36797.03\n [2804,] 35561.22 42685.17\n [2805,] 41112.83 37212.12\n [2806,] 36636.36 43269.84\n [2807,] 28275.70 45826.46\n [2808,] 37827.54 35426.78\n [2809,] 23372.57 32513.67\n [2810,] 28617.56 45894.25\n [2811,] 12327.42 35944.73\n [2812,] 27867.95 46512.41\n [2813,] 29225.75 46061.89\n [2814,] 35712.21 42604.39\n [2815,] 20118.77 40430.88\n [2816,] 24279.23 47795.02\n [2817,] 20386.83 33776.77\n [2818,] 35044.14 42960.94\n [2819,] 37135.73 42084.11\n [2820,] 28430.31 37065.18\n [2821,] 27159.64 47926.16\n [2822,] 26056.87 48669.59\n [2823,] 18772.14 40132.33\n [2824,] 27917.81 45044.25\n [2825,] 34243.98 42252.05\n [2826,] 35489.11 43685.88\n [2827,] 20436.46 40261.82\n [2828,] 32440.30 39656.62\n [2829,] 17610.96 33639.64\n [2830,] 33015.31 40206.54\n [2831,] 32218.44 37833.78\n [2832,] 18587.10 36402.95\n [2833,] 39878.17 37723.89\n [2834,] 17593.22 39783.09\n [2835,] 33136.84 41278.61\n [2836,] 28593.92 44540.97\n [2837,] 28087.45 44039.09\n [2838,] 18633.30 38166.64\n [2839,] 29702.01 44751.06\n [2840,] 35255.86 42983.08\n [2841,] 28706.46 44982.45\n [2842,] 17721.84 40064.78\n [2843,] 34505.30 41813.00\n [2844,] 15071.17 36872.15\n [2845,] 14080.05 36749.21\n [2846,] 28479.16 46847.37\n [2847,] 37812.84 35371.67\n [2848,] 24629.97 47757.26\n [2849,] 27127.40 47923.62\n [2850,] 20231.99 31917.85\n [2851,] 18338.01 36902.88\n [2852,] 36391.03 43056.63\n [2853,] 39017.45 37456.75\n [2854,] 33469.31 33872.00\n [2855,] 11980.86 36207.75\n [2856,] 30613.60 38603.54\n [2857,] 26303.63 47416.37\n [2858,] 29899.74 33089.86\n [2859,] 34111.56 42183.78\n [2860,] 21857.28 46973.56\n [2861,] 30443.29 35223.30\n [2862,] 32426.61 32898.13\n [2863,] 39859.03 39849.85\n [2864,] 26181.00 48280.93\n [2865,] 31725.65 33643.33\n [2866,] 20251.31 40647.00\n [2867,] 34330.82 40189.65\n [2868,] 24090.21 47653.30\n [2869,] 19620.64 40088.33\n [2870,] 29026.28 34720.01\n [2871,] 17432.30 39816.08\n [2872,] 29008.86 46011.25\n [2873,] 29110.88 46009.43\n [2874,] 36292.32 42667.94\n [2875,] 29175.17 35432.24\n [2876,] 30777.15 33728.61\n [2877,] 28584.00 44670.55\n [2878,] 24175.40 47659.60\n [2879,] 18817.17 38361.18\n [2880,] 36731.81 35230.12\n [2881,] 11672.86 35698.70\n [2882,] 18043.98 36822.22\n [2883,] 33918.10 39220.19\n [2884,] 34102.60 42258.98\n [2885,] 32159.15 32778.05\n [2886,] 32275.60 32824.57\n [2887,] 15504.93 35003.77\n [2888,] 35787.70 42726.34\n [2889,] 22677.10 32407.59\n [2890,] 35176.48 43000.43\n [2891,] 32785.76 41808.31\n [2892,] 36807.22 31876.19\n [2893,] 27117.73 29561.86\n [2894,] 34521.82 38301.36\n [2895,] 34389.13 39717.96\n [2896,] 32709.01 39245.83\n [2897,] 40444.49 37914.35\n [2898,] 36611.14 42695.18\n [2899,] 29427.62 44862.31\n [2900,] 28294.81 39181.18\n [2901,] 29378.50 37811.75\n [2902,] 41429.83 37629.30\n [2903,] 15364.62 35863.65\n [2904,] 33190.98 41392.37\n [2905,] 36328.51 42976.62\n [2906,] 13302.14 36267.93\n [2907,] 29807.47 44873.82\n [2908,] 27695.04 37908.17\n [2909,] 28603.82 46857.61\n [2910,] 37098.71 42600.44\n [2911,] 30879.43 39203.43\n [2912,] 23524.41 46789.75\n [2913,] 18846.94 38010.82\n [2914,] 41332.27 38822.66\n [2915,] 34864.55 40721.42\n [2916,] 29632.79 36542.36\n [2917,] 35654.91 42683.10\n [2918,] 40663.57 37113.17\n [2919,] 36097.50 42583.89\n [2920,] 24692.13 47138.10\n [2921,] 29266.07 46069.01\n [2922,] 26210.79 48545.18\n [2923,] 24131.67 46487.49\n [2924,] 16072.26 37261.40\n [2925,] 29346.24 44872.19\n [2926,] 36116.34 43022.32\n [2927,] 34890.87 42859.34\n [2928,] 19031.29 38654.83\n [2929,] 20106.86 32068.26\n [2930,] 29769.97 44954.80\n [2931,] 27127.40 47923.62\n [2932,] 42161.82 38494.04\n [2933,] 36613.65 41218.73\n [2934,] 36649.56 42749.14\n [2935,] 28900.17 45686.07\n [2936,] 29043.74 46064.93\n [2937,] 39499.12 40467.14\n [2938,] 33541.38 32139.12\n [2939,] 34111.56 42183.78\n [2940,] 39290.77 34160.04\n [2941,] 19401.04 36201.60\n [2942,] 23892.90 46240.34\n [2943,] 18515.40 38510.68\n [2944,] 29971.11 39320.09\n [2945,] 31107.88 32141.73\n [2946,] 38763.72 34531.61\n [2947,] 36745.84 35280.87\n [2948,] 35655.75 42267.15\n [2949,] 28255.46 44591.15\n [2950,] 22034.44 45884.67\n [2951,] 17590.01 33737.08\n [2952,] 20927.48 40381.14\n [2953,] 28496.97 44422.87\n [2954,] 35485.40 42891.67\n [2955,] 17588.50 40316.88\n [2956,] 17649.40 40442.93\n [2957,] 32929.70 40067.96\n [2958,] 38132.57 33745.54\n [2959,] 35206.53 42464.67\n [2960,] 36494.87 41211.26\n [2961,] 29001.49 37633.20\n [2962,] 40497.28 39502.69\n [2963,] 32102.83 37014.16\n [2964,] 36636.36 43269.84\n [2965,] 36550.68 42824.06\n [2966,] 29258.54 44994.84\n [2967,] 28820.35 44701.54\n [2968,] 33724.07 33386.71\n [2969,] 32734.35 36813.45\n [2970,] 17785.96 40176.08\n [2971,] 27625.96 45873.42\n [2972,] 21558.63 47152.06\n [2973,] 20259.79 40685.85\n [2974,] 15504.95 34412.15\n [2975,] 36256.31 41559.84\n [2976,] 41131.78 36303.27\n [2977,] 29696.57 44798.01\n [2978,] 34806.66 40425.07\n [2979,] 32760.65 41301.41\n [2980,] 28643.78 45014.00\n [2981,] 13548.67 36396.25\n [2982,] 25882.67 48648.61\n [2983,] 18591.19 37650.35\n [2984,] 30947.86 33105.27\n [2985,] 24151.68 47568.11\n [2986,] 39060.28 37388.80\n [2987,] 28584.00 44670.55\n [2988,] 29527.40 44565.31\n [2989,] 15504.93 35003.77\n [2990,] 33030.01 41752.64\n [2991,] 29965.54 38418.56\n [2992,] 39157.83 39907.00\n [2993,] 11909.70 36043.85\n [2994,] 41780.74 39687.97\n [2995,] 32876.22 41763.94\n [2996,] 27755.41 46528.01\n [2997,] 21185.33 41020.82\n [2998,] 18062.83 42548.94\n [2999,] 28521.55 43968.06\n [3000,] 17462.83 36214.79\n [3001,] 33190.98 41392.37\n [3002,] 32465.81 37209.61\n [3003,] 35723.57 41114.28\n [3004,] 17639.86 39764.42\n [3005,] 35255.86 42983.08\n [3006,] 12315.32 36342.41\n [3007,] 25158.81 30687.65\n [3008,] 30770.07 39578.64\n [3009,] 37369.45 42367.78\n [3010,] 28342.74 45998.73\n [3011,] 14714.39 36117.17\n [3012,] 30292.01 38439.17\n [3013,] 20840.28 41058.15\n [3014,] 19607.12 36774.67\n [3015,] 40730.93 39254.96\n [3016,] 31655.48 34952.60\n [3017,] 29434.38 44715.69\n [3018,] 18833.13 38400.38\n [3019,] 36649.48 43202.10\n [3020,] 36780.35 34784.15\n [3021,] 40765.48 36984.38\n [3022,] 17625.96 36521.02\n [3023,] 39398.03 37419.94\n [3024,] 35507.68 40831.53\n [3025,] 16494.74 36917.37\n [3026,] 37634.82 35482.61\n [3027,] 20118.77 40430.88\n [3028,] 34742.99 40421.72\n [3029,] 35723.75 33837.35\n [3030,] 29533.95 44678.75\n [3031,] 32308.11 37468.51\n [3032,] 18549.86 36869.24\n [3033,] 40702.12 39068.18\n [3034,] 16580.66 36764.55\n [3035,] 25119.35 47150.42\n [3036,] 42254.10 39487.27\n [3037,] 23904.58 46704.19\n [3038,] 15811.24 34517.71\n [3039,] 42199.75 39005.48\n [3040,] 29420.41 45054.67\n [3041,] 27790.00 37831.17\n [3042,] 29140.70 45577.30\n [3043,] 12902.55 36435.51\n [3044,] 25657.71 30003.28\n [3045,] 42384.31 37038.92\n [3046,] 13472.92 35679.79\n [3047,] 32159.15 32778.05\n [3048,] 33266.71 41302.53\n [3049,] 36137.23 43102.98\n [3050,] 23136.10 47133.49\n [3051,] 35576.07 41273.14\n [3052,] 17600.38 33788.50\n [3053,] 17638.14 40260.45\n [3054,] 39750.97 37936.73\n [3055,] 13302.14 36267.93\n [3056,] 38643.94 35459.35\n [3057,] 35498.36 41859.50\n [3058,] 27363.82 48032.56\n [3059,] 27920.86 45079.77\n [3060,] 34165.54 41998.48\n [3061,] 15854.55 36691.51\n [3062,] 36683.42 35060.29\n [3063,] 19585.79 40949.14\n [3064,] 12994.10 35302.85\n [3065,] 36613.65 41218.73\n [3066,] 18501.00 35913.49\n [3067,] 23901.62 45980.35\n [3068,] 35472.31 42732.76\n [3069,] 31080.43 33697.22\n [3070,] 24294.88 30717.60\n [3071,] 27558.11 46280.78\n [3072,] 11916.12 36225.49\n [3073,] 29961.64 36412.45\n [3074,] 30412.22 34452.80\n [3075,] 25512.07 29966.12\n [3076,] 40713.98 39216.49\n [3077,] 38876.41 37001.78\n [3078,] 30416.59 36528.49\n [3079,] 34243.98 42252.05\n [3080,] 41504.35 38042.19\n [3081,] 34135.30 37102.52\n [3082,] 18686.74 40230.68\n [3083,] 25603.53 30871.26\n [3084,] 34157.34 38666.54\n [3085,] 35417.00 39751.72\n [3086,] 34730.86 40482.14\n [3087,] 18203.74 42708.19\n [3088,] 24079.62 46363.07\n [3089,] 13195.23 35289.12\n [3090,] 41448.97 36355.66\n [3091,] 36636.36 43269.84\n [3092,] 35519.81 42819.11\n [3093,] 27515.70 45316.61\n [3094,] 18361.43 36028.10\n [3095,] 36849.74 35008.60\n [3096,] 39526.42 37747.57\n [3097,] 32581.39 41716.94\n [3098,] 39235.36 40035.58\n [3099,] 14175.62 36752.99\n [3100,] 21239.26 35695.04\n [3101,] 18881.03 42505.55\n [3102,] 35288.10 40640.60\n [3103,] 29196.58 45579.13\n [3104,] 21495.80 45373.58\n [3105,] 27306.29 29006.69\n [3106,] 21144.59 41060.65\n [3107,] 32987.92 41688.56\n [3108,] 25813.88 47950.37\n [3109,] 18982.22 38706.05\n [3110,] 32603.98 41458.53\n [3111,] 29676.91 38625.80\n [3112,] 35475.73 34303.98\n [3113,] 28570.97 44703.85\n [3114,] 30035.87 38457.24\n [3115,] 34510.00 41430.02\n [3116,] 37534.91 35424.19\n [3117,] 30429.39 32275.12\n [3118,] 39621.66 40283.92\n [3119,] 32821.64 41699.95\n [3120,] 39875.94 33952.51\n [3121,] 24677.26 47703.11\n [3122,] 18281.19 38365.11\n [3123,] 40663.12 38841.62\n [3124,] 16072.26 37261.40\n [3125,] 36137.23 43102.98\n [3126,] 12535.11 36210.34\n [3127,] 18159.06 42530.00\n [3128,] 26370.69 47634.96\n [3129,] 29193.72 35384.32\n [3130,] 41832.92 37585.59\n [3131,] 29293.48 44558.05\n [3132,] 18219.46 41813.23\n [3133,] 29324.79 44633.09\n [3134,] 20870.29 41152.00\n [3135,] 31859.20 33819.53\n [3136,] 13038.60 35853.06\n [3137,] 26283.30 47686.47\n [3138,] 35812.20 41327.98\n [3139,] 30229.05 31024.96\n [3140,] 32439.13 41597.41\n [3141,] 20591.86 40630.04\n [3142,] 30576.62 39551.00\n [3143,] 36412.22 42853.42\n [3144,] 27846.49 46565.40\n [3145,] 28370.15 46308.24\n [3146,] 40718.39 37684.02\n [3147,] 15754.69 34520.18\n [3148,] 33672.31 33469.99\n [3149,] 26127.08 48230.31\n [3150,] 35635.35 40114.50\n [3151,] 35768.73 42579.08\n [3152,] 24647.43 46490.45\n [3153,] 19705.13 36353.62\n [3154,] 35510.31 40049.49\n [3155,] 36537.44 41164.11\n [3156,] 41170.19 37722.58\n [3157,] 20673.42 40679.27\n [3158,] 27881.24 45137.97\n [3159,] 26181.00 48280.93\n [3160,] 21572.84 39455.10\n [3161,] 27625.98 28861.63\n [3162,] 29032.17 37885.81\n [3163,] 29965.54 38418.56\n [3164,] 20891.56 39893.31\n [3165,] 26210.79 48545.18\n [3166,] 20778.83 33052.09\n [3167,] 17638.14 40260.45\n [3168,] 29238.24 38668.87\n [3169,] 20056.62 31721.74\n [3170,] 30091.23 32740.48\n [3171,] 19796.36 40728.99\n [3172,] 38668.12 35062.69\n [3173,] 30601.23 38459.25\n [3174,] 29649.88 45369.14\n [3175,] 29752.71 35960.02\n [3176,] 36685.93 42525.91\n [3177,] 35521.57 43287.94\n [3178,] 15339.46 37146.96\n [3179,] 18187.19 41813.01\n [3180,] 33250.81 41249.50\n [3181,] 34825.93 40877.56\n [3182,] 38982.86 37198.80\n [3183,] 18982.22 38706.05\n [3184,] 20631.14 33741.07\n [3185,] 35687.87 41637.05\n [3186,] 36223.84 31782.73\n [3187,] 23691.07 47540.12\n [3188,] 36019.59 40915.01\n [3189,] 34540.71 40900.35\n [3190,] 34969.24 40617.19\n [3191,] 34197.35 40052.13\n [3192,] 18467.66 42848.66\n [3193,] 41092.77 37377.83\n [3194,] 39875.94 33952.51\n [3195,] 39240.34 37737.70\n [3196,] 18303.74 40264.67\n [3197,] 32789.43 33305.36\n [3198,] 15504.95 34412.15\n [3199,] 21484.89 45622.60\n [3200,] 27806.35 44254.75\n [3201,] 32676.45 41702.54\n [3202,] 13178.40 35758.91\n [3203,] 29417.95 39047.97\n [3204,] 21365.06 40291.42\n [3205,] 29599.54 35297.37\n [3206,] 37382.94 42470.99\n [3207,] 26130.85 48106.92\n [3208,] 29890.68 38485.50\n [3209,] 36225.85 42393.03\n [3210,] 37448.90 34998.53\n [3211,] 14210.49 36691.54\n [3212,] 29623.02 38789.10\n [3213,] 36696.77 42634.15\n [3214,] 17582.77 33891.16\n [3215,] 32107.82 39616.22\n [3216,] 19074.03 38725.55\n [3217,] 35255.86 42983.08\n [3218,] 20583.04 32713.09\n [3219,] 38008.30 34468.96\n [3220,] 40717.54 39173.75\n [3221,] 42111.72 36387.98\n [3222,] 42113.72 37698.48\n [3223,] 23893.10 46585.04\n [3224,] 11955.17 35812.96\n [3225,] 20794.73 41260.70\n [3226,] 32581.39 41716.94\n [3227,] 29547.14 45620.43\n [3228,] 38645.44 34497.87\n [3229,] 27939.37 44026.95\n [3230,] 19233.32 37000.79\n [3231,] 22241.80 46587.82\n [3232,] 12693.04 35325.73\n [3233,] 28751.02 45777.36\n [3234,] 30443.27 38382.85\n [3235,] 18651.99 41796.72\n [3236,] 30482.03 39546.88\n [3237,] 13715.09 36388.16\n [3238,] 36994.45 42656.19\n [3239,] 18825.29 37467.42\n [3240,] 26047.02 48389.35\n [3241,] 33251.74 41378.36\n [3242,] 31728.91 35112.08\n [3243,] 29533.95 44678.75\n [3244,] 35617.49 40013.95\n [3245,] 35143.21 41752.81\n [3246,] 29650.89 37695.40\n [3247,] 33362.41 41982.95\n [3248,] 41541.74 36988.30\n [3249,] 33194.17 42009.61\n [3250,] 31264.70 35296.29\n [3251,] 12769.24 35689.66\n [3252,] 39017.45 37456.75\n [3253,] 20946.99 32733.05\n [3254,] 29127.34 29422.87\n [3255,] 33266.71 41302.53\n [3256,] 38585.32 35480.32\n [3257,] 37321.52 42457.49\n [3258,] 29532.40 45419.66\n [3259,] 24508.71 47751.29\n [3260,] 21484.89 45622.60\n [3261,] 35389.59 41038.66\n [3262,] 34093.47 34615.13\n [3263,] 34026.96 39725.85\n [3264,] 32760.65 41301.41\n [3265,] 30444.94 38433.70\n [3266,] 26688.93 30197.43\n [3267,] 19016.68 36734.41\n [3268,] 34356.75 40213.43\n [3269,] 18417.09 41366.75\n [3270,] 36495.86 41268.56\n [3271,] 30362.87 39037.07\n [3272,] 27250.43 29457.87\n [3273,] 17438.75 39918.25\n [3274,] 35889.58 39923.62\n [3275,] 40776.01 37206.64\n [3276,] 30288.60 39307.11\n [3277,] 30333.69 35346.85\n [3278,] 30747.14 39099.03\n [3279,] 27939.79 46532.25\n [3280,] 17827.30 39894.64\n [3281,] 39584.06 36472.37\n [3282,] 25565.20 30032.44\n [3283,] 15391.40 36976.67\n [3284,] 25430.50 30891.82\n [3285,] 35417.00 39751.72\n [3286,] 33517.23 39790.91\n [3287,] 29696.57 44798.01\n [3288,] 34925.26 42853.27\n [3289,] 20905.68 32575.97\n [3290,] 31724.69 33708.31\n [3291,] 33250.81 41249.50\n [3292,] 34943.36 39611.03\n [3293,] 26711.98 47553.01\n [3294,] 27176.96 29783.36\n [3295,] 34536.80 41708.05\n [3296,] 32511.04 32677.50\n [3297,] 31728.83 35208.85\n [3298,] 36495.86 41268.56\n [3299,] 35428.81 42207.27\n [3300,] 34102.60 42258.98\n [3301,] 27363.82 48032.56\n [3302,] 17529.62 40278.31\n [3303,] 34276.93 42009.52\n [3304,] 34969.35 40389.84\n [3305,] 32588.22 41800.05\n [3306,] 24436.06 46851.62\n [3307,] 29836.77 35212.87\n [3308,] 34802.40 40676.88\n [3309,] 36451.70 42826.86\n [3310,] 18240.43 41523.86\n [3311,] 28073.76 45235.22\n [3312,] 39746.65 37995.14\n [3313,] 27754.37 44334.68\n [3314,] 39048.88 35019.97\n [3315,] 14754.68 36104.58\n [3316,] 30264.97 39315.69\n [3317,] 20514.34 33047.29\n [3318,] 34178.72 36915.51\n [3319,] 20773.83 41290.92\n [3320,] 41016.68 36809.02\n [3321,] 29917.16 34548.05\n [3322,] 36635.36 42503.75\n [3323,] 12027.89 35745.12\n [3324,] 23985.14 31583.40\n [3325,] 41111.85 36546.34\n [3326,] 34204.87 42248.94\n [3327,] 12836.20 35733.87\n [3328,] 28707.03 28545.08\n [3329,] 38636.54 34545.43\n [3330,] 29632.80 35203.32\n [3331,] 35635.35 40114.50\n [3332,] 36265.40 34944.87\n [3333,] 17625.96 36521.02\n [3334,] 39589.61 35388.80\n [3335,] 22892.48 46127.66\n [3336,] 29323.14 36005.30\n [3337,] 34844.24 39755.20\n [3338,] 36735.18 42688.11\n [3339,] 32016.40 37030.90\n [3340,] 25365.21 30116.09\n [3341,] 23892.90 46240.34\n [3342,] 35252.11 42510.08\n [3343,] 35206.53 42464.67\n [3344,] 39945.72 39950.65\n [3345,] 39548.28 39616.44\n [3346,] 29140.92 40269.45\n [3347,] 23918.98 46921.66\n [3348,] 21099.53 41178.93\n [3349,] 41118.18 36601.01\n [3350,] 18240.43 41523.86\n [3351,] 36613.65 41218.73\n [3352,] 25430.50 30891.82\n [3353,] 35016.05 42888.49\n [3354,] 14175.62 36752.99\n [3355,] 29971.11 39320.09\n [3356,] 25648.08 30864.46\n [3357,] 41886.32 39277.70\n [3358,] 39855.59 33795.49\n [3359,] 21009.85 39910.08\n [3360,] 30012.30 32655.67\n [3361,] 29135.27 37646.42\n [3362,] 17229.61 39920.13\n [3363,] 38109.26 34000.68\n [3364,] 21393.74 47085.59\n [3365,] 35502.21 42400.73\n [3366,] 24244.52 46667.89\n [3367,] 40524.49 37058.36\n [3368,] 39506.34 34441.93\n [3369,] 36696.77 42634.15\n [3370,] 27458.54 30282.49\n [3371,] 42091.02 36428.69\n [3372,] 36173.81 42550.33\n [3373,] 19742.50 41041.11\n [3374,] 16100.11 36930.05\n [3375,] 42298.81 38910.38\n [3376,] 26324.96 47646.87\n [3377,] 21053.09 33228.13\n [3378,] 36607.48 41763.84\n [3379,] 34321.85 41951.96\n [3380,] 20227.76 40490.10\n [3381,] 41466.54 38691.58\n [3382,] 36371.52 31748.51\n [3383,] 23397.71 46255.07\n [3384,] 20870.29 41152.00\n [3385,] 39610.29 37888.71\n [3386,] 18170.05 38540.53\n [3387,] 24172.23 46283.89\n [3388,] 36788.90 41836.85\n [3389,] 36222.76 42860.59\n [3390,] 39138.99 36559.72\n [3391,] 28260.58 44869.34\n [3392,] 35277.79 43057.12\n [3393,] 29636.10 45700.11\n [3394,] 35272.09 41373.41\n [3395,] 42009.29 36460.28\n [3396,] 32766.50 39269.11\n [3397,] 35127.82 41222.45\n [3398,] 34096.43 39994.70\n [3399,] 42400.49 38894.71\n [3400,] 39827.17 39822.99\n [3401,] 39178.84 36604.84\n [3402,] 29616.87 36470.50\n [3403,] 17860.64 36438.79\n [3404,] 27806.35 44254.75\n [3405,] 40482.67 33395.24\n [3406,] 22630.14 46012.17\n [3407,] 24227.09 31453.43\n [3408,] 23639.36 46382.83\n [3409,] 24508.71 47751.29\n [3410,] 35466.00 39686.32\n [3411,] 32890.84 40251.77\n [3412,] 32438.34 36488.81\n [3413,] 24677.26 47703.11\n [3414,] 13370.41 35398.04\n [3415,] 28611.87 40270.61\n [3416,] 17149.94 35708.75\n [3417,] 34857.65 40669.57\n [3418,] 27363.82 48032.56\n [3419,] 40713.98 39216.49\n [3420,] 36028.27 41826.86\n [3421,] 20730.85 40943.90\n [3422,] 41984.35 36099.10\n [3423,] 41661.41 37063.55\n [3424,] 35530.79 40100.79\n [3425,] 36264.53 42703.48\n [3426,] 35833.14 41255.73\n [3427,] 40588.42 36771.58\n [3428,] 30362.87 39037.07\n [3429,] 28678.74 28487.07\n [3430,] 18425.38 42932.99\n [3431,] 32147.19 39007.84\n [3432,] 35456.22 42844.66\n [3433,] 26056.87 48669.59\n [3434,] 39741.35 34650.83\n [3435,] 36412.22 42853.42\n [3436,] 30082.21 38436.17\n [3437,] 41501.70 38097.89\n [3438,] 39548.28 39616.44\n [3439,] 35564.95 42709.51\n [3440,] 35499.58 42535.17\n [3441,] 35048.69 40430.10\n [3442,] 13243.45 36827.61\n [3443,] 19750.32 36820.26\n [3444,] 35445.39 39809.70\n [3445,] 40078.56 34296.43\n [3446,] 29525.93 35282.29\n [3447,] 15667.78 37335.71\n [3448,] 28876.22 28717.68\n [3449,] 22309.64 31916.55\n [3450,] 16641.57 36814.27\n [3451,] 35189.88 43046.93\n [3452,] 41628.11 36922.30\n [3453,] 29129.33 45799.39\n [3454,] 35271.89 43005.46\n [3455,] 23534.67 47486.09\n [3456,] 29807.47 44873.82\n [3457,] 35299.86 33308.21\n [3458,] 39077.51 34527.09\n [3459,] 32472.41 41818.76\n [3460,] 25622.61 30681.95\n [3461,] 29774.63 38889.47\n [3462,] 37757.27 35400.12\n [3463,] 42350.50 37114.21\n [3464,] 12473.36 35797.61\n [3465,] 40780.88 39182.39\n [3466,] 29468.80 46014.66\n [3467,] 39751.23 37892.46\n [3468,] 36849.74 35008.60\n [3469,] 35498.36 41859.50\n [3470,] 28460.74 37492.11\n [3471,] 19654.90 41062.14\n [3472,] 18660.11 38392.70\n [3473,] 35462.07 43626.85\n [3474,] 33516.47 37236.38\n [3475,] 30045.48 38155.87\n [3476,] 18266.55 37019.18\n [3477,] 38970.61 36953.20\n [3478,] 29010.23 45755.52\n [3479,] 35785.39 34519.69\n [3480,] 32581.39 41716.94\n [3481,] 13038.60 35853.06\n [3482,] 24497.10 46389.48\n [3483,] 39948.73 39999.07\n [3484,] 17295.01 40063.52\n [3485,] 28496.97 44422.87\n [3486,] 35451.12 40551.29\n [3487,] 39940.62 34522.49\n [3488,] 34322.83 39825.59\n [3489,] 29731.87 36630.69\n [3490,] 40550.35 33618.85\n [3491,] 39868.02 37588.96\n [3492,] 18105.21 42501.28\n [3493,] 29461.54 35205.89\n [3494,] 35064.39 38974.33\n [3495,] 34825.93 40877.56\n [3496,] 20460.64 33596.21\n [3497,] 35552.70 43636.58\n [3498,] 32294.11 32892.07\n [3499,] 32684.54 38978.71\n [3500,] 41118.18 36601.01\n [3501,] 36408.33 34961.19\n [3502,] 18406.05 35752.49\n [3503,] 32851.48 41722.74\n [3504,] 42435.26 37401.04\n [3505,] 39249.28 33826.97\n [3506,] 33449.82 32310.48\n [3507,] 37949.03 34465.74\n [3508,] 19327.60 36185.04\n [3509,] 34200.90 39378.09\n [3510,] 19998.72 40875.01\n [3511,] 36284.30 42992.00\n [3512,] 35635.35 40114.50\n [3513,] 33812.69 39794.56\n [3514,] 29780.35 36658.48\n [3515,] 27982.70 29883.43\n [3516,] 27917.81 45044.25\n [3517,] 40899.85 36613.22\n [3518,] 30546.31 33826.82\n [3519,] 34195.53 40007.99\n [3520,] 29467.40 44663.71\n [3521,] 29378.49 46027.74\n [3522,] 35252.54 41164.30\n [3523,] 28991.85 45431.57\n [3524,] 20840.28 41058.15\n [3525,] 33181.47 39618.55\n [3526,] 18634.97 38271.60\n [3527,] 40730.93 39254.96\n [3528,] 29369.71 35382.81\n [3529,] 28367.49 46253.67\n [3530,] 39759.53 36776.88\n [3531,] 14175.62 36752.99\n [3532,] 38318.74 34121.34\n [3533,] 25210.47 30633.53\n [3534,] 40776.01 37206.64\n [3535,] 15754.69 34520.18\n [3536,] 29240.41 45813.68\n [3537,] 38286.08 35423.87\n [3538,] 24140.15 47136.74\n [3539,] 13664.20 36396.43\n [3540,] 24227.09 31453.43\n [3541,] 34514.86 40852.39\n [3542,] 33591.39 38990.09\n [3543,] 29175.17 35432.24\n [3544,] 16093.65 36761.00\n [3545,] 28820.35 44701.54\n [3546,] 30809.73 34182.37\n [3547,] 28076.68 45270.79\n [3548,] 29198.15 38613.74\n [3549,] 39693.46 37760.98\n [3550,] 35608.64 42765.97\n [3551,] 32806.30 41626.16\n [3552,] 27546.74 30274.56\n [3553,] 20451.59 33486.83\n [3554,] 40786.80 39222.41\n [3555,] 31851.71 35212.10\n [3556,] 33249.15 40084.65\n [3557,] 23611.51 47342.52\n [3558,] 35514.03 41386.23\n [3559,] 17755.06 40336.29\n [3560,] 23520.66 46830.54\n [3561,] 39772.17 36375.77\n [3562,] 35190.64 42920.65\n [3563,] 40684.58 39024.98\n [3564,] 17582.77 33891.16\n [3565,] 28681.74 46252.65\n [3566,] 37074.56 41718.56\n [3567,] 35535.84 42866.36\n [3568,] 17292.88 40017.60\n [3569,] 34520.18 40803.90\n [3570,] 34807.64 40822.23\n [3571,] 30833.55 35701.80\n [3572,] 34529.68 40756.35\n [3573,] 40076.54 34344.32\n [3574,] 29279.39 36000.86\n [3575,] 12816.32 35873.26\n [3576,] 21133.84 41240.77\n [3577,] 26130.85 48106.92\n [3578,] 22341.29 32045.61\n [3579,] 32588.22 41800.05\n [3580,] 36692.37 42718.62\n [3581,] 19734.37 36308.68\n [3582,] 33845.56 39272.01\n [3583,] 17668.11 36422.96\n [3584,] 23637.30 46660.83\n [3585,] 30434.82 38555.82\n [3586,] 12740.84 36712.95\n [3587,] 39526.58 37785.62\n [3588,] 21218.19 41290.74\n [3589,] 29769.97 44954.80\n [3590,] 34096.12 42002.61\n [3591,] 18704.75 42777.20\n [3592,] 13668.25 36455.00\n [3593,] 34514.86 40852.39\n [3594,] 20387.04 33825.18\n [3595,] 32460.38 39404.53\n [3596,] 27574.62 29477.28\n [3597,] 34520.18 40803.90\n [3598,] 38969.30 37407.03\n [3599,] 36973.61 42458.67\n [3600,] 36004.97 42262.53\n [3601,] 29107.86 40393.84\n [3602,] 34595.95 37937.86\n [3603,] 28975.95 37778.52\n [3604,] 35156.98 40695.52\n [3605,] 15611.86 35485.51\n [3606,] 19936.87 32757.09\n [3607,] 29193.72 35384.32\n [3608,] 35299.86 33308.21\n [3609,] 39806.47 36923.74\n [3610,] 23637.30 46660.83\n [3611,] 32283.75 37913.02\n [3612,] 26085.88 48562.06\n [3613,] 18658.80 36487.01\n [3614,] 27097.09 29466.38\n [3615,] 32639.36 38940.10\n [3616,] 34145.44 41751.80\n [3617,] 30591.83 34809.31\n [3618,] 29547.14 45620.43\n [3619,] 35255.86 42983.08\n [3620,] 18465.57 38406.96\n [3621,] 29419.40 37742.30\n [3622,] 13420.75 36289.61\n [3623,] 20393.57 39934.02\n [3624,] 32651.70 36807.61\n [3625,] 19654.90 41062.14\n [3626,] 27265.75 47952.87\n [3627,] 29712.08 45334.81\n [3628,] 17934.34 40186.89\n [3629,] 34013.23 33937.73\n [3630,] 15838.70 36553.36\n [3631,] 40440.33 37543.65\n [3632,] 17082.27 40110.96\n [3633,] 39878.17 37723.89\n [3634,] 39479.99 36472.97\n [3635,] 29032.17 37885.81\n [3636,] 27589.06 29864.50\n [3637,] 27917.81 45044.25\n [3638,] 27780.65 29917.22\n [3639,] 41486.57 38767.35\n [3640,] 23942.92 47580.54\n [3641,] 19366.47 39956.00\n [3642,] 39040.02 35066.35\n [3643,] 34344.58 39196.11\n [3644,] 40702.12 39068.18\n [3645,] 34085.33 41868.11\n [3646,] 18903.33 42610.44\n [3647,] 39971.86 34327.01\n [3648,] 35206.53 42464.67\n [3649,] 32397.05 32954.03\n [3650,] 12473.36 35797.61\n [3651,] 28805.86 45883.64\n [3652,] 34260.43 38429.96\n [3653,] 29172.47 37879.24\n [3654,] 39287.75 39854.50\n [3655,] 23678.36 45945.14\n [3656,] 29213.82 44512.85\n [3657,] 22274.14 31974.94\n [3658,] 30717.37 39292.93\n [3659,] 27860.22 44756.47\n [3660,] 25240.70 28802.78\n [3661,] 40717.45 38939.07\n [3662,] 27363.82 48032.56\n [3663,] 35258.92 38900.96\n [3664,] 40717.45 38939.07\n [3665,] 36841.01 35241.41\n [3666,] 20436.46 40261.82\n [3667,] 27717.95 46030.43\n [3668,] 20111.33 33701.73\n [3669,] 35431.54 42451.10\n [3670,] 25631.35 30735.62\n [3671,] 27343.20 45474.32\n [3672,] 41181.23 36130.78\n [3673,] 30978.35 34449.97\n [3674,] 27632.02 46135.67\n [3675,] 39964.67 34274.35\n [3676,] 19248.49 36711.23\n [3677,] 40078.56 34296.43\n [3678,] 39554.44 38013.39\n [3679,] 28872.26 28787.86\n [3680,] 41035.46 36756.80\n [3681,] 28588.05 40098.15\n [3682,] 23637.30 46660.83\n [3683,] 32850.99 41385.31\n [3684,] 29408.30 44586.14\n [3685,] 39601.48 40244.82\n [3686,] 35057.98 40935.60\n [3687,] 32651.70 36807.61\n [3688,] 18838.09 42783.03\n [3689,] 29163.41 38144.62\n [3690,] 23911.52 31600.59\n [3691,] 41527.28 38994.80\n [3692,] 29071.88 46208.62\n [3693,] 24227.09 31453.43\n [3694,] 35723.75 33837.35\n [3695,] 36910.69 35231.01\n [3696,] 18567.39 40321.55\n [3697,] 21819.55 46973.55\n [3698,] 20927.48 40381.14\n [3699,] 34207.04 38747.69\n [3700,] 27022.60 29406.75\n [3701,] 33147.66 41326.87\n [3702,] 42251.66 37744.35\n [3703,] 32443.06 39484.26\n [3704,] 36722.70 43115.14\n [3705,] 40730.93 39254.96\n [3706,] 17520.66 33991.60\n [3707,] 20941.42 41191.45\n [3708,] 31281.70 35494.06\n [3709,] 19654.90 41062.14\n [3710,] 40394.49 33658.68\n [3711,] 13692.88 36293.29\n [3712,] 35561.22 42685.17\n [3713,] 36387.94 34846.56\n [3714,] 20219.97 40201.77\n [3715,] 31953.63 37040.01\n [3716,] 30574.82 36085.27\n [3717,] 19753.52 40742.58\n [3718,] 39961.98 33700.85\n [3719,] 19669.66 36917.89\n [3720,] 29807.47 44873.82\n [3721,] 29452.09 44942.83\n [3722,] 35258.70 43091.42\n [3723,] 39472.77 39952.66\n [3724,] 27754.37 44334.68\n [3725,] 20009.27 32068.45\n [3726,] 20823.45 40920.64\n [3727,] 38668.12 35062.69\n [3728,] 34710.69 39529.41\n [3729,] 27846.49 46565.40\n [3730,] 39017.45 37456.75\n [3731,] 13668.25 36455.00\n [3732,] 42199.75 39005.48\n [3733,] 29008.08 45470.67\n [3734,] 20541.92 40242.83\n [3735,] 35456.22 42844.66\n [3736,] 24017.18 46940.26\n [3737,] 35252.11 42510.08\n [3738,] 26188.96 47594.40\n [3739,] 39914.89 37706.46\n [3740,] 39691.33 37992.92\n [3741,] 29452.09 44942.83\n [3742,] 13195.23 35289.12\n [3743,] 14210.49 36691.54\n [3744,] 22327.22 32002.06\n [3745,] 32207.62 37617.22\n [3746,] 25180.09 47183.19\n [3747,] 28872.26 28787.86\n [3748,] 35317.71 43315.87\n [3749,] 25100.24 33339.65\n [3750,] 33624.15 40101.47\n [3751,] 33787.05 39328.88\n [3752,] 23901.62 45980.35\n [3753,] 35833.14 41255.73\n [3754,] 28663.03 46353.33\n [3755,] 39196.99 39740.37\n [3756,] 26166.21 48326.93\n [3757,] 25622.61 30681.95\n [3758,] 34802.40 40676.88\n [3759,] 24459.20 46256.03\n [3760,] 37448.90 34998.53\n [3761,] 34656.10 39804.05\n [3762,] 27787.70 46010.43\n [3763,] 36295.55 42919.33\n [3764,] 34344.58 39196.11\n [3765,] 40221.70 39622.22\n [3766,] 35237.34 39036.21\n [3767,] 24481.40 47738.04\n [3768,] 23511.76 45765.64\n [3769,] 41273.29 36589.83\n [3770,] 35635.35 40114.50\n [3771,] 35485.64 34228.98\n [3772,] 40497.43 37515.47\n [3773,] 18722.67 36402.03\n [3774,] 28820.35 44701.54\n [3775,] 12622.73 35332.11\n [3776,] 20393.57 39934.02\n [3777,] 23300.77 45766.53\n [3778,] 27272.90 29059.53\n [3779,] 24651.29 47679.40\n [3780,] 19676.89 40790.68\n [3781,] 21027.30 40196.31\n [3782,] 32821.64 41699.95\n [3783,] 29836.77 35212.87\n [3784,] 18982.22 38706.05\n [3785,] 23612.30 46542.96\n [3786,] 35715.80 41310.25\n [3787,] 23971.76 31497.79\n [3788,] 23971.29 47528.84\n [3789,] 34834.18 38793.27\n [3790,] 28899.78 28918.09\n [3791,] 29625.06 36505.54\n [3792,] 33204.33 41196.88\n [3793,] 11942.10 36122.84\n [3794,] 29164.84 37756.46\n [3795,] 38001.84 35081.91\n [3796,] 41555.98 36387.80\n [3797,] 32821.64 41699.95\n [3798,] 14246.35 36749.10\n [3799,] 25532.83 30833.41\n [3800,] 35521.57 43287.94\n [3801,] 19260.43 36177.91\n [3802,] 25257.47 47286.92\n [3803,] 21552.66 46823.29\n [3804,] 32666.20 41556.04\n [3805,] 29296.97 45063.20\n [3806,] 25544.25 30619.87\n [3807,] 17670.96 39823.49\n [3808,] 39967.02 34387.45\n [3809,] 23648.34 32091.07\n [3810,] 17518.83 39833.52\n [3811,] 34811.18 40588.20\n [3812,] 41016.68 36809.02\n [3813,] 41669.64 39383.93\n [3814,] 18982.22 38706.05\n [3815,] 39240.34 37737.70\n [3816,] 29585.55 35191.21\n [3817,] 29111.95 40346.36\n [3818,] 39366.80 33895.96\n [3819,] 27757.48 46255.22\n [3820,] 34178.72 36915.51\n [3821,] 24639.38 46830.05\n [3822,] 32451.97 41520.06\n [3823,] 20624.25 41031.95\n [3824,] 27377.34 29030.93\n [3825,] 35396.63 40529.91\n [3826,] 42053.07 38130.90\n [3827,] 35346.30 42102.69\n [3828,] 18128.20 36516.31\n [3829,] 40684.58 39024.98\n [3830,] 32997.30 41756.79\n [3831,] 28083.29 45403.61\n [3832,] 39489.34 37282.64\n [3833,] 34039.69 34012.35\n [3834,] 18441.05 38295.25\n [3835,] 39042.69 37504.16\n [3836,] 39957.55 34435.21\n [3837,] 36474.37 34808.57\n [3838,] 15456.56 35774.53\n [3839,] 19654.90 41062.14\n [3840,] 28404.62 46697.35\n [3841,] 28410.26 44388.03\n [3842,] 37029.84 42595.50\n [3843,] 36400.67 43139.74\n [3844,] 34292.91 42057.54\n [3845,] 29229.58 45738.69\n [3846,] 25631.35 30735.62\n [3847,] 23430.31 47233.57\n [3848,] 19654.90 41062.14\n [3849,] 32415.85 41649.39\n [3850,] 31935.66 37005.36\n [3851,] 40991.97 36713.98\n [3852,] 29849.12 39746.17\n [3853,] 39878.17 37723.89\n [3854,] 40899.85 36613.22\n [3855,] 19283.98 36592.99\n [3856,] 40684.58 39024.98\n [3857,] 17914.52 41768.33\n [3858,] 35817.33 41613.06\n [3859,] 30770.07 39578.64\n [3860,] 12764.53 36210.39\n [3861,] 33274.04 40272.76\n [3862,] 23691.07 47540.12\n [3863,] 30412.22 34452.80\n [3864,] 31935.66 37005.36\n [3865,] 35056.58 41996.91\n [3866,] 32876.22 41763.94\n [3867,] 36112.20 41521.41\n [3868,] 37537.31 35376.65\n [3869,] 35904.47 39992.30\n [3870,] 15955.05 36691.62\n [3871,] 35593.41 43605.80\n [3872,] 39957.55 34435.21\n [3873,] 39397.56 37461.83\n [3874,] 23721.40 32407.14\n [3875,] 27112.69 28426.90\n [3876,] 39570.23 37420.13\n [3877,] 21262.33 45501.68\n [3878,] 19654.90 41062.14\n [3879,] 36461.74 42100.26\n [3880,] 18375.27 38071.34\n [3881,] 30176.80 36806.36\n [3882,] 22203.22 46633.87\n [3883,] 28632.87 46911.40\n [3884,] 29043.74 46064.93\n [3885,] 28991.85 45431.57\n [3886,] 20507.76 41032.52\n [3887,] 35281.10 41921.70\n [3888,] 20111.33 33701.73\n [3889,] 40663.12 38841.62\n [3890,] 30869.26 33741.48\n [3891,] 28105.70 45483.59\n [3892,] 28491.09 45490.53\n [3893,] 29600.33 37890.81\n [3894,] 34339.98 39749.67\n [3895,] 36986.31 41681.37\n [3896,] 24481.40 47738.04\n [3897,] 33115.18 39220.24\n [3898,] 15409.40 35544.74\n [3899,] 27304.32 47968.69\n [3900,] 39215.74 37676.66\n [3901,] 23624.26 46416.82\n [3902,] 28275.70 45826.46\n [3903,] 36975.56 42718.09\n [3904,] 35178.28 38936.98\n [3905,] 23465.17 46513.36\n [3906,] 29074.12 37582.85\n [3907,] 27867.95 46512.41\n [3908,] 28906.39 30004.35\n [3909,] 34514.86 40852.39\n [3910,] 36692.37 42718.62\n [3911,] 30340.45 33670.61\n [3912,] 39281.60 37109.69\n [3913,] 27205.91 29544.71\n [3914,] 28725.17 44951.11\n [3915,] 21404.67 40329.79\n [3916,] 17552.28 40130.93\n [3917,] 14175.62 36752.99\n [3918,] 42298.81 38910.38\n [3919,] 41471.18 39390.19\n [3920,] 33245.62 40170.69\n [3921,] 24010.69 47246.71\n [3922,] 37216.46 35127.69\n [3923,] 29600.33 37890.81\n [3924,] 20158.23 40884.80\n [3925,] 32987.92 41688.56\n [3926,] 27634.65 29329.80\n [3927,] 39948.73 39999.07\n [3928,] 35913.37 33783.59\n [3929,] 25492.64 30608.30\n [3930,] 24294.88 30717.60\n [3931,] 19953.58 32606.80\n [3932,] 29028.99 45961.16\n [3933,] 31936.64 37254.53\n [3934,] 32803.26 41317.97\n [3935,] 29130.00 46070.87\n [3936,] 27982.70 29883.43\n [3937,] 28476.59 39368.95\n [3938,] 20443.49 33415.37\n [3939,] 34886.40 40409.32\n [3940,] 39914.89 37706.46\n [3941,] 13506.05 37151.40\n [3942,] 36423.77 42426.99\n [3943,] 28643.40 44523.62\n [3944,] 28534.68 39758.72\n [3945,] 34139.85 42273.13\n [3946,] 29465.62 39051.41\n [3947,] 30456.94 36680.90\n [3948,] 30250.84 36623.37\n [3949,] 32111.14 37605.39\n [3950,] 34717.48 38456.78\n [3951,] 19654.90 41062.14\n [3952,] 40476.76 33683.85\n [3953,] 29695.39 45409.00\n [3954,] 21246.95 41208.22\n [3955,] 42066.66 38046.09\n [3956,] 17865.03 40458.67\n [3957,] 17578.65 36146.17\n [3958,] 39309.39 37227.95\n [3959,] 20376.33 33731.52\n [3960,] 29873.96 39603.16\n [3961,] 23128.76 47176.38\n [3962,] 30443.29 32890.09\n [3963,] 17557.21 40353.89\n [3964,] 29248.59 38589.71\n [3965,] 32112.13 39185.67\n [3966,] 41794.23 39574.12\n [3967,] 35530.79 40100.79\n [3968,] 33140.95 37061.28\n [3969,] 29229.60 44394.57\n [3970,] 35035.51 39685.48\n [3971,] 29359.94 44686.60\n [3972,] 15666.80 34524.06\n [3973,] 30442.63 34807.68\n [3974,] 21526.24 39906.87\n [3975,] 21163.74 34128.30\n [3976,] 21819.55 46973.55\n [3977,] 18686.57 42716.93\n [3978,] 24171.96 31505.67\n [3979,] 18264.95 40532.89\n [3980,] 41518.69 37029.15\n [3981,] 40486.94 36538.83\n [3982,] 27905.40 45858.42\n [3983,] 35485.64 34228.98\n [3984,] 20855.73 32483.78\n [3985,] 17323.12 39975.28\n [3986,] 34469.95 41889.54\n [3987,] 35687.87 41637.05\n [3988,] 18190.42 36773.17\n [3989,] 36635.36 42503.75\n [3990,] 39775.03 34562.50\n [3991,] 21239.26 35695.04\n [3992,] 28107.30 45524.10\n [3993,] 32521.31 41455.59\n [3994,] 30333.28 36336.19\n [3995,] 34748.54 40800.81\n [3996,] 28706.46 44982.45\n [3997,] 18903.33 42610.44\n [3998,] 35635.35 40114.50\n [3999,] 29128.45 44417.05\n [4000,] 28913.65 45623.77\n [4001,] 18437.30 40238.13\n [4002,] 40681.87 38966.20\n [4003,] 39309.39 37227.95\n [4004,] 34356.75 40213.43\n [4005,] 24038.01 47679.74\n [4006,] 29533.95 44678.75\n [4007,] 39535.54 39707.84\n [4008,] 39247.34 37901.67\n [4009,] 36193.86 35019.60\n [4010,] 20954.52 41110.65\n [4011,] 25992.13 30051.90\n [4012,] 25210.62 28870.53\n [4013,] 15488.83 36506.53\n [4014,] 17639.86 39764.42\n [4015,] 35341.91 40787.90\n [4016,] 34595.95 37937.86\n [4017,] 19742.50 41041.11\n [4018,] 27265.75 47952.87\n [4019,] 27503.37 29288.91\n [4020,] 18561.35 42946.38\n [4021,] 40266.27 39572.22\n [4022,] 19742.50 41041.11\n [4023,] 36730.60 34950.97\n [4024,] 32094.88 37646.39\n [4025,] 21888.98 46999.13\n [4026,] 30086.33 32348.27\n [4027,] 35176.48 43000.43\n [4028,] 28589.31 46228.50\n [4029,] 29298.53 45962.12\n [4030,] 33964.96 39249.56\n [4031,] 34102.60 42258.98\n [4032,] 30166.50 39342.82\n [4033,] 36537.44 41164.11\n [4034,] 32218.44 37833.78\n [4035,] 30978.35 34449.97\n [4036,] 34781.45 40855.02\n [4037,] 19585.79 40949.14\n [4038,] 30597.33 34835.66\n [4039,] 33797.02 34655.09\n [4040,] 40718.39 37684.02\n [4041,] 26591.26 28653.83\n [4042,] 25882.67 48648.61\n [4043,] 18869.25 42453.70\n [4044,] 17960.35 39926.20\n [4045,] 18186.00 42799.48\n [4046,] 33030.01 41752.64\n [4047,] 34549.25 37718.77\n [4048,] 23699.57 46341.72\n [4049,] 23663.50 46544.11\n [4050,] 36010.57 42878.58\n [4051,] 35723.75 33837.35\n [4052,] 40988.63 37172.19\n [4053,] 36859.47 42540.04\n [4054,] 33136.84 41278.61\n [4055,] 32876.22 41763.94\n [4056,] 42374.42 38345.48\n [4057,] 33339.86 39348.43\n [4058,] 39931.40 34570.51\n [4059,] 41526.58 39065.94\n [4060,] 35667.15 41935.32\n [4061,] 35112.00 40504.21\n [4062,] 35317.71 43315.87\n [4063,] 28404.15 44055.28\n [4064,] 32560.15 41105.64\n [4065,] 39048.88 35019.97\n [4066,] 15504.93 35003.77\n [4067,] 21239.26 35695.04\n [4068,] 17879.86 40419.21\n [4069,] 17621.02 35992.55\n [4070,] 39868.02 37588.96\n [4071,] 29028.99 45961.16\n [4072,] 35120.27 42848.74\n [4073,] 21857.28 46973.56\n [4074,] 23961.13 47321.02\n [4075,] 26047.02 48389.35\n [4076,] 40588.42 36771.58\n [4077,] 11597.97 35821.60\n [4078,] 35667.11 41390.40\n [4079,] 41302.91 36750.45\n [4080,] 22735.85 46957.43\n [4081,] 32890.84 40251.77\n [4082,] 28963.89 45446.68\n [4083,] 38251.29 34726.97\n [4084,] 28643.33 36831.04\n [4085,] 34434.40 41913.17\n [4086,] 21255.27 39573.79\n [4087,] 18660.11 38392.70\n [4088,] 39042.69 37504.16\n [4089,] 18941.49 39941.01\n [4090,] 34092.60 41956.90\n [4091,] 31150.87 33960.67\n [4092,] 29337.06 45027.82\n [4093,] 32443.06 39484.26\n [4094,] 35003.78 40711.67\n [4095,] 18817.17 38361.18\n [4096,] 27722.43 29885.24\n [4097,] 31741.67 33590.85\n [4098,] 33313.51 39144.78\n [4099,] 13392.37 36363.96\n [4100,] 34205.51 42158.32\n [4101,] 27479.51 46409.67\n [4102,] 39190.95 36539.70\n [4103,] 35231.73 42964.14\n [4104,] 29129.76 37573.18\n [4105,] 29695.39 45409.00\n [4106,] 21099.53 41178.93\n [4107,] 35524.84 42400.71\n [4108,] 17295.98 39829.52\n [4109,] 36245.65 42907.08\n [4110,] 35328.74 41519.54\n [4111,] 33989.29 39188.29\n [4112,] 37812.84 35371.67\n [4113,] 23648.34 32091.07\n [4114,] 38078.00 34457.37\n [4115,] 35485.64 34228.98\n [4116,] 19585.79 40949.14\n [4117,] 29043.74 46064.93\n [4118,] 17229.61 39920.13\n [4119,] 19758.10 36437.70\n [4120,] 39846.57 33842.55\n [4121,] 22241.93 46545.97\n [4122,] 20770.26 32379.02\n [4123,] 29266.07 46069.01\n [4124,] 36998.70 31789.68\n [4125,] 20442.81 33367.51\n [4126,] 32538.72 39294.73\n [4127,] 34334.65 42049.85\n [4128,] 32883.68 41849.98\n [4129,] 36465.01 34554.31\n [4130,] 21144.59 41060.65\n [4131,] 37369.45 42367.78\n [4132,] 29043.01 46310.57\n [4133,] 29763.58 36810.11\n [4134,] 33249.23 37083.08\n [4135,] 21072.27 41108.45\n [4136,] 29924.80 36550.02\n [4137,] 12937.24 36653.77\n [4138,] 23937.62 47167.21\n [4139,] 21070.60 33137.62\n [4140,] 12445.20 35823.05\n [4141,] 42444.75 37109.97\n [4142,] 20312.04 40832.78\n [4143,] 19654.90 41062.14\n [4144,] 26012.73 48560.65\n [4145,] 17736.08 40710.81\n [4146,] 32987.92 41688.56\n [4147,] 32480.52 41577.30\n [4148,] 33718.35 41530.04\n [4149,] 31294.56 33397.29\n [4150,] 12994.10 35302.85\n [4151,] 30947.86 33105.27\n [4152,] 23637.30 46660.83\n [4153,] 30041.30 32594.05\n [4154,] 14706.60 36195.17\n [4155,] 25753.81 29242.91\n [4156,] 36611.14 42695.18\n [4157,] 32883.68 41849.98\n [4158,] 13541.90 35943.67\n [4159,] 36540.00 42751.57\n [4160,] 18528.44 40198.71\n [4161,] 35309.54 39305.63\n [4162,] 29135.27 37646.42\n [4163,] 28963.89 45446.68\n [4164,] 35189.88 43046.93\n [4165,] 32581.39 41716.94\n [4166,] 27462.75 29460.27\n [4167,] 21095.91 40990.18\n [4168,] 17649.40 40442.93\n [4169,] 36495.86 41268.56\n [4170,] 38636.54 34545.43\n [4171,] 19247.46 40292.28\n [4172,] 32521.31 41455.59\n [4173,] 41096.49 37780.45\n [4174,] 31756.01 37413.44\n [4175,] 29308.67 35192.93\n [4176,] 34514.86 40852.39\n [4177,] 24196.77 47754.35\n [4178,] 32448.24 37130.48\n [4179,] 29836.77 35212.87\n [4180,] 41686.40 38978.13\n [4181,] 28742.85 44576.45\n [4182,] 28322.68 39876.58\n [4183,] 36818.63 41606.67\n [4184,] 13975.40 36327.18\n [4185,] 29519.15 44638.48\n [4186,] 35485.40 42891.67\n [4187,] 28679.65 45843.47\n [4188,] 35255.86 42983.08\n [4189,] 23012.05 46053.00\n [4190,] 39589.61 35388.80\n [4191,] 18148.32 37040.31\n [4192,] 24369.39 47482.38\n [4193,] 34292.91 42057.54\n [4194,] 25158.81 30687.65\n [4195,] 28623.21 46129.59\n [4196,] 20851.34 32875.25\n [4197,] 34968.20 41995.91\n [4198,] 33202.43 40351.12\n [4199,] 21752.95 47002.21\n [4200,] 30574.82 36085.27\n [4201,] 34526.12 41877.85\n [4202,] 20727.38 40086.76\n [4203,] 37029.84 42595.50\n [4204,] 24165.28 46126.52\n [4205,] 29623.02 38789.10\n [4206,] 39196.68 34621.27\n [4207,] 42369.14 37456.88\n [4208,] 27979.34 46055.74\n [4209,] 35524.84 42400.71\n [4210,] 31756.01 37413.44\n [4211,] 36427.15 31668.30\n [4212,] 21252.22 35619.38\n [4213,] 36395.53 34920.19\n [4214,] 35191.31 42814.66\n [4215,] 34519.13 40047.58\n [4216,] 28460.74 37492.11\n [4217,] 18657.75 36993.77\n [4218,] 30487.06 33756.56\n [4219,] 19869.13 40935.34\n [4220,] 29810.74 35965.00\n [4221,] 42202.97 37041.89\n [4222,] 27509.84 30281.49\n [4223,] 42440.27 38909.48\n [4224,] 18292.20 42201.71\n [4225,] 29632.80 35203.32\n [4226,] 24629.97 47757.26\n [4227,] 41935.69 36070.17\n [4228,] 30312.77 39607.85\n [4229,] 21493.31 39523.14\n [4230,] 29434.38 44715.69\n [4231,] 23678.36 45945.14\n [4232,] 27326.46 29289.20\n [4233,] 29008.86 46011.25\n [4234,] 33712.10 39353.48\n [4235,] 28797.61 28575.31\n [4236,] 23344.95 46419.29\n [4237,] 18561.35 42946.38\n [4238,] 32962.01 41239.69\n [4239,] 38916.04 36837.21\n [4240,] 18872.93 37388.97\n [4241,] 39775.03 34562.50\n [4242,] 26181.00 48280.93\n [4243,] 14686.20 36172.54\n [4244,] 29135.03 46121.71\n [4245,] 41734.30 39121.66\n [4246,] 36695.92 42389.95\n [4247,] 13328.93 35990.76\n [4248,] 27377.34 29030.93\n [4249,] 17260.67 39852.53\n [4250,] 34825.93 40877.56\n [4251,] 41305.10 37826.46\n [4252,] 35642.76 43519.88\n [4253,] 21339.31 41046.38\n [4254,] 25330.36 30641.25\n [4255,] 36494.87 41211.26\n [4256,] 39260.03 37079.83\n [4257,] 35904.47 39992.30\n [4258,] 32572.57 36769.99\n [4259,] 29266.07 46069.01\n [4260,] 38866.78 36759.24\n [4261,] 34093.99 38788.29\n [4262,] 25100.24 33339.65\n [4263,] 35617.49 40013.95\n [4264,] 28879.22 45454.97\n [4265,] 28459.41 44749.17\n [4266,] 29296.97 45063.20\n [4267,] 38916.04 36837.21\n [4268,] 35524.84 42400.71\n [4269,] 30012.30 32655.67\n [4270,] 15481.86 35638.46\n [4271,] 32122.36 39227.78\n [4272,] 35191.31 42814.66\n [4273,] 41886.32 39277.70\n [4274,] 23273.41 45812.21\n [4275,] 36971.31 43021.34\n [4276,] 21604.19 45910.99\n [4277,] 32294.11 32892.07\n [4278,] 32921.08 39779.44\n [4279,] 34640.23 40817.82\n [4280,] 12254.94 36302.40\n [4281,] 14689.89 36250.27\n [4282,] 17724.40 33760.13\n [4283,] 36692.37 42718.62\n [4284,] 20644.85 39953.28\n [4285,] 39330.95 37376.40\n [4286,] 40938.38 36880.77\n [4287,] 36611.14 42695.18\n [4288,] 28386.97 44206.19\n [4289,] 30021.00 32211.22\n [4290,] 20905.68 32575.97\n [4291,] 26278.30 47358.84\n [4292,] 30036.65 38972.99\n [4293,] 33129.97 41219.11\n [4294,] 35127.82 41222.45\n [4295,] 29625.06 36505.54\n [4296,] 35519.81 42819.11\n [4297,] 18173.93 36699.87\n [4298,] 24423.51 46133.07\n [4299,] 32560.15 41105.64\n [4300,] 33723.18 39110.10\n [4301,] 22192.72 45876.45\n [4302,] 25024.14 28462.79\n [4303,] 33250.81 41249.50\n [4304,] 36398.25 42243.73\n [4305,] 39151.37 34121.59\n [4306,] 41339.28 36383.96\n [4307,] 29632.80 35203.32\n [4308,] 17568.56 39747.66\n [4309,] 39237.87 39771.77\n [4310,] 29298.53 45962.12\n [4311,] 32243.24 37465.86\n [4312,] 25604.79 30819.19\n [4313,] 39506.07 35418.23\n [4314,] 26282.03 47739.71\n [4315,] 34526.57 40993.79\n [4316,] 30520.72 39141.74\n [4317,] 22241.94 46462.68\n [4318,] 26650.52 47262.39\n [4319,] 29453.73 46038.03\n [4320,] 22600.66 32354.85\n [4321,] 29696.57 44798.01\n [4322,] 35431.54 42451.10\n [4323,] 30601.23 38459.25\n [4324,] 15521.17 35595.02\n [4325,] 29288.62 37580.35\n [4326,] 15955.03 36649.38\n [4327,] 35016.05 42888.49\n [4328,] 14859.90 37155.25\n [4329,] 34232.78 42158.91\n [4330,] 34304.46 42260.38\n [4331,] 29289.71 35382.82\n [4332,] 25995.77 48741.06\n [4333,] 19733.64 36891.86\n [4334,] 18307.14 41507.72\n [4335,] 36807.67 42555.10\n [4336,] 20840.28 41058.15\n [4337,] 17340.53 40361.38\n [4338,] 40810.70 36717.21\n [4339,] 35206.53 42464.67\n [4340,] 34481.65 40892.63\n [4341,] 39506.07 35418.23\n [4342,] 36953.94 41756.40\n [4343,] 34748.54 40800.81\n [4344,] 21133.84 41240.77\n [4345,] 39209.86 37467.27\n [4346,] 25024.14 28462.79\n [4347,] 33513.51 33797.32\n [4348,] 32111.14 37605.39\n [4349,] 15604.15 35098.69\n [4350,] 29670.16 44909.77\n [4351,] 21354.75 39607.06\n [4352,] 28992.73 37963.50\n [4353,] 34127.72 33997.87\n [4354,] 41054.10 36619.32\n [4355,] 34247.94 38619.06\n [4356,] 32409.22 38910.69\n [4357,] 40492.81 37947.88\n [4358,] 33030.76 40076.67\n [4359,] 33136.84 41278.61\n [4360,] 29599.54 35297.37\n [4361,] 34098.05 34678.29\n [4362,] 25532.83 30833.41\n [4363,] 36495.86 41268.56\n [4364,] 29696.57 44798.01\n [4365,] 27398.19 29376.59\n [4366,] 38884.13 36816.18\n [4367,] 35394.28 40719.10\n [4368,] 24033.07 46633.70\n [4369,] 17812.15 40665.58\n [4370,] 39517.31 36724.59\n [4371,] 26210.79 48545.18\n [4372,] 21572.84 39455.10\n [4373,] 20870.29 41152.00\n [4374,] 18203.74 42708.19\n [4375,] 35644.27 42790.82\n [4376,] 18128.20 36516.31\n [4377,] 37087.54 41792.23\n [4378,] 12028.90 36028.99\n [4379,] 39519.20 34376.53\n [4380,] 20440.51 39940.74\n [4381,] 32465.81 37209.61\n [4382,] 24171.96 31505.67\n [4383,] 21224.07 40719.72\n [4384,] 28991.85 45431.57\n [4385,] 28031.77 38324.79\n [4386,] 20814.38 32744.84\n [4387,] 36482.52 42857.42\n [4388,] 29907.77 36513.24\n [4389,] 32618.48 36924.43\n [4390,] 26160.60 30039.12\n [4391,] 12153.04 36175.23\n [4392,] 36602.65 41637.89\n [4393,] 17721.84 40064.78\n [4394,] 15854.55 36691.51\n [4395,] 17544.47 40600.96\n [4396,] 29365.53 34999.36\n [4397,] 29509.14 38928.93\n [4398,] 30721.96 32054.47\n [4399,] 39042.69 37504.16\n [4400,] 41039.91 36035.19\n [4401,] 35164.67 41324.67\n [4402,] 12935.14 36571.88\n [4403,] 32563.10 41455.24\n [4404,] 39750.98 37825.31\n [4405,] 18128.20 36516.31\n [4406,] 12764.53 36210.39\n [4407,] 26619.07 48249.43\n [4408,] 30900.68 33763.45\n [4409,] 25439.77 28673.07\n [4410,] 36971.31 43021.34\n [4411,] 18832.68 38088.69\n [4412,] 40938.38 36880.77\n [4413,] 14754.68 36104.58\n [4414,] 24188.18 46410.91\n [4415,] 24273.92 47260.21\n [4416,] 17625.93 36047.46\n [4417,] 34786.95 41711.64\n [4418,] 35862.43 41299.99\n [4419,] 18128.20 36516.31\n [4420,] 35887.22 40144.11\n [4421,] 29951.95 32001.02\n [4422,] 36044.24 42719.93\n [4423,] 35682.49 42733.07\n [4424,] 17292.88 40017.60\n [4425,] 31725.65 33643.33\n [4426,] 25024.14 28462.79\n [4427,] 29231.42 44639.74\n [4428,] 31633.40 37363.37\n [4429,] 35307.63 42426.14\n [4430,] 17316.22 39704.72\n [4431,] 27890.86 45963.29\n [4432,] 34127.72 33997.87\n [4433,] 29118.23 38080.50\n [4434,] 22917.56 35326.81\n [4435,] 32650.92 41800.04\n [4436,] 29196.58 45579.13\n [4437,] 17865.03 40458.67\n [4438,] 29970.59 34899.52\n [4439,] 39418.77 37140.45\n [4440,] 29032.17 37885.81\n [4441,] 21393.74 47085.59\n [4442,] 35989.67 40958.87\n [4443,] 16743.75 36560.73\n [4444,] 23829.68 46225.67\n [4445,] 23465.17 46513.36\n [4446,] 30844.65 33947.18\n [4447,] 20251.31 40647.00\n [4448,] 21237.79 35770.45\n [4449,] 34698.27 41073.20\n [4450,] 28260.58 44869.34\n [4451,] 27323.46 28541.89\n [4452,] 32521.31 41455.59\n [4453,] 29717.36 36671.49\n [4454,] 28659.23 44273.97\n [4455,] 35617.49 40013.95\n [4456,] 17499.73 39688.26\n [4457,] 34514.86 40852.39\n [4458,] 36076.73 42902.18\n [4459,] 39433.68 37175.66\n [4460,] 18336.27 38328.57\n [4461,] 13249.27 36866.35\n [4462,] 35743.58 40887.07\n [4463,] 23401.56 47454.15\n [4464,] 27371.58 29326.08\n [4465,] 29468.80 46014.66\n [4466,] 35530.79 40100.79\n [4467,] 28707.35 45751.47\n [4468,] 41836.43 36027.25\n [4469,] 35593.41 43605.80\n [4470,] 38318.74 34121.34\n [4471,] 24079.62 46363.07\n [4472,] 17824.75 36645.40\n [4473,] 29162.40 40152.03\n [4474,] 32533.29 41805.60\n [4475,] 30038.83 32697.73\n [4476,] 27939.37 44026.95\n [4477,] 20033.94 40866.51\n [4478,] 18254.08 41373.85\n [4479,] 35571.89 33616.86\n [4480,] 27509.84 30281.49\n [4481,] 34434.40 41913.17\n [4482,] 20844.58 40951.79\n [4483,] 29068.25 28859.83\n [4484,] 18284.82 36773.19\n [4485,] 26057.71 47926.89\n [4486,] 26479.00 48031.59\n [4487,] 17900.65 40365.93\n [4488,] 20602.57 40537.72\n [4489,] 20617.73 32691.96\n [4490,] 20953.60 32498.18\n [4491,] 11916.12 36225.49\n [4492,] 18802.22 42917.72\n [4493,] 40884.21 37050.76\n [4494,] 26630.20 47351.29\n [4495,] 36328.51 42976.62\n [4496,] 28223.70 44564.99\n [4497,] 18722.67 36402.03\n [4498,] 21237.79 35770.45\n [4499,] 34469.95 41889.54\n [4500,] 33220.91 35298.52\n [4501,] 17823.72 40344.01\n [4502,] 21888.98 46999.13\n [4503,] 36412.22 42853.42\n [4504,] 30292.01 38439.17\n [4505,] 27146.02 29318.47\n [4506,] 27888.19 37772.05\n [4507,] 39489.34 37282.64\n [4508,] 30038.83 32697.73\n [4509,] 29299.42 38702.53\n [4510,] 26085.88 48562.06\n [4511,] 38668.12 35062.69\n [4512,] 21076.57 41233.31\n [4513,] 39339.64 37876.30\n [4514,] 34313.52 38405.98\n [4515,] 37448.90 34998.53\n [4516,] 15456.56 35774.53\n [4517,] 40526.29 39543.43\n [4518,] 27972.72 44570.78\n [4519,] 29318.16 35335.67\n [4520,] 18616.72 42948.47\n [4521,] 12729.27 36604.82\n [4522,] 19707.63 36960.30\n [4523,] 29727.93 37727.55\n [4524,] 27589.06 29864.50\n [4525,] 23612.30 46542.96\n [4526,] 14754.68 36104.58\n [4527,] 40717.54 39173.75\n [4528,] 31741.67 33590.85\n [4529,] 32400.12 39411.20\n [4530,] 20332.59 33020.16\n [4531,] 27780.65 29917.22\n [4532,] 26370.75 48443.33\n [4533,] 38008.30 34468.96\n [4534,] 27303.21 28476.31\n [4535,] 34419.50 41361.63\n [4536,] 28261.73 45927.56\n [4537,] 20247.11 40950.19\n [4538,] 29468.80 46014.66\n [4539,] 26604.85 48154.78\n [4540,] 35561.22 42685.17\n [4541,] 39940.62 34522.49\n [4542,] 23911.52 31600.59\n [4543,] 28991.85 45431.57\n [4544,] 29807.47 44873.82\n [4545,] 20145.94 31859.60\n [4546,] 28352.65 40182.59\n [4547,] 35682.49 42733.07\n [4548,] 35510.57 33604.78\n [4549,] 33343.93 42143.21\n [4550,] 19753.52 40742.58\n [4551,] 29962.07 39381.89\n [4552,] 28666.20 39225.56\n [4553,] 30318.49 38598.63\n [4554,] 32851.48 41722.74\n [4555,] 41829.76 39500.50\n [4556,] 29836.77 35212.87\n [4557,] 30435.60 32229.97\n [4558,] 19742.50 41041.11\n [4559,] 33015.31 40206.54\n [4560,] 30362.87 39037.07\n [4561,] 42284.16 39635.56\n [4562,] 35317.71 43315.87\n [4563,] 29135.03 46121.71\n [4564,] 16093.65 36761.00\n [4565,] 35533.40 42462.21\n [4566,] 18869.25 42453.70\n [4567,] 30792.23 35324.75\n [4568,] 23520.66 46830.54\n [4569,] 21155.90 40320.68\n [4570,] 29533.95 44678.75\n [4571,] 17659.30 36293.22\n [4572,] 18695.53 37593.48\n [4573,] 40221.70 39622.22\n [4574,] 24557.74 46640.90\n [4575,] 25847.01 48622.47\n [4576,] 40152.07 34016.35\n [4577,] 32347.18 32819.19\n [4578,] 30265.47 38397.28\n [4579,] 33313.51 39144.78\n [4580,] 29298.53 45962.12\n [4581,] 28710.67 44821.79\n [4582,] 27140.14 29503.32\n [4583,] 20587.03 39859.17\n [4584,] 32862.03 36808.49\n [4585,] 36024.97 42922.38\n [4586,] 36807.22 31876.19\n [4587,] 19972.11 40752.23\n [4588,] 26087.20 48392.31\n [4589,] 15571.34 34998.71\n [4590,] 37448.90 34998.53\n [4591,] 24140.15 47136.74\n [4592,] 28968.13 39865.82\n [4593,] 27546.74 30274.56\n [4594,] 36176.47 43075.41\n [4595,] 21231.20 45448.64\n [4596,] 17721.84 40064.78\n [4597,] 24171.96 31505.67\n [4598,] 30000.60 34865.99\n [4599,] 33917.37 37043.26\n [4600,] 30667.42 35580.71\n [4601,] 35889.58 39923.62\n [4602,] 17268.87 40297.96\n [4603,] 29468.80 46014.66\n [4604,] 29135.03 46121.71\n [4605,] 18269.27 42244.84\n [4606,] 19654.90 41062.14\n [4607,] 23817.06 46178.64\n [4608,] 30637.92 39516.90\n [4609,] 28871.91 46265.93\n [4610,] 18203.83 40347.35\n [4611,] 24168.39 47171.91\n [4612,] 21030.06 39585.82\n [4613,] 18861.88 42838.10\n [4614,] 39838.19 37647.38\n [4615,] 35127.82 41222.45\n [4616,] 18971.81 38331.83\n [4617,] 39281.60 37109.69\n [4618,] 23709.41 32086.87\n [4619,] 35041.64 32765.05\n [4620,] 37769.74 34632.66\n [4621,] 20954.52 41110.65\n [4622,] 18011.13 40511.61\n [4623,] 35456.22 42844.66\n [4624,] 31281.70 35494.06\n [4625,] 13335.01 35633.92\n [4626,] 39729.72 34710.92\n [4627,] 20647.21 32677.74\n [4628,] 17764.00 39735.13\n [4629,] 20591.86 40630.04\n [4630,] 15504.93 35003.77\n [4631,] 33591.39 38990.09\n [4632,] 33244.80 42043.31\n [4633,] 23840.01 47166.84\n [4634,] 37369.45 42367.78\n [4635,] 36607.15 41184.66\n [4636,] 35848.37 40032.01\n [4637,] 27505.30 46315.54\n [4638,] 39846.57 33842.55\n [4639,] 21702.06 46594.26\n [4640,] 32848.09 33168.16\n [4641,] 35306.75 42778.71\n [4642,] 36260.18 35100.08\n [4643,] 38763.72 34531.61\n [4644,] 29325.97 35100.82\n [4645,] 25996.63 47491.95\n [4646,] 21819.55 46973.55\n [4647,] 21267.62 45542.08\n [4648,] 21467.91 45501.63\n [4649,] 33159.29 39587.32\n [4650,] 29120.97 45320.14\n [4651,] 27634.65 29329.80\n [4652,] 15456.56 35774.53\n [4653,] 27363.65 30513.91\n [4654,] 35661.01 41061.56\n [4655,] 27839.01 45032.17\n [4656,] 27479.51 46409.67\n [4657,] 38286.08 35423.87\n [4658,] 34253.33 41671.99\n [4659,] 41491.67 37784.47\n [4660,] 24692.13 47138.10\n [4661,] 41517.36 38839.81\n [4662,] 39307.85 37143.23\n [4663,] 29632.80 35203.32\n [4664,] 32050.07 37199.79\n [4665,] 37091.95 31959.36\n [4666,] 28385.51 45884.94\n [4667,] 35618.69 42647.25\n [4668,] 40514.94 37768.02\n [4669,] 23520.66 46830.54\n [4670,] 27146.02 29318.47\n [4671,] 17582.77 33891.16\n [4672,] 21144.59 41060.65\n [4673,] 24168.39 47171.91\n [4674,] 41654.63 39147.39\n [4675,] 21337.82 39707.27\n [4676,] 14714.39 36117.17\n [4677,] 14921.35 37108.00\n [4678,] 25089.17 47061.90\n [4679,] 19502.59 40218.55\n [4680,] 40014.13 34323.98\n [4681,] 39138.99 36559.72\n [4682,] 36650.11 42422.56\n [4683,] 33443.27 39132.61\n [4684,] 20591.86 40630.04\n [4685,] 28632.87 46911.40\n [4686,] 32867.43 41342.68\n [4687,] 14668.98 36214.38\n [4688,] 36143.51 41675.71\n [4689,] 25318.61 29271.93\n [4690,] 34042.24 39379.32\n [4691,] 21095.91 40990.18\n [4692,] 25657.71 30003.28\n [4693,] 24012.11 46989.61\n [4694,] 28808.52 46258.39\n [4695,] 39237.87 39771.77\n [4696,] 21512.98 39553.42\n [4697,] 28588.05 40098.15\n [4698,] 18686.57 42716.93\n [4699,] 13302.14 36267.93\n [4700,] 16757.74 36437.16\n [4701,] 39504.72 36640.40\n [4702,] 19880.76 40842.02\n [4703,] 28150.86 44522.87\n [4704,] 31367.32 31780.90\n [4705,] 30860.13 39133.23\n [4706,] 15533.63 35407.07\n [4707,] 32506.71 41142.05\n [4708,] 13723.77 36418.87\n [4709,] 32650.92 41800.04\n [4710,] 18695.53 37593.48\n [4711,] 23663.50 46544.11\n [4712,] 35392.69 42133.20\n [4713,] 16487.20 36755.65\n [4714,] 18039.96 36411.33\n [4715,] 37172.14 42093.65\n [4716,] 30288.60 39307.11\n [4717,] 39281.60 37109.69\n [4718,] 39952.84 33748.15\n [4719,] 41458.73 36575.48\n [4720,] 34459.41 37447.70\n [4721,] 15551.63 35558.97\n [4722,] 39190.95 36539.70\n [4723,] 36247.42 41447.38\n [4724,] 32773.47 41188.06\n [4725,] 22203.22 46633.87\n [4726,] 13423.41 35668.52\n [4727,] 19458.09 36969.97\n [4728,] 18706.36 42558.76\n [4729,] 30487.06 33756.56\n [4730,] 20509.67 33812.42\n [4731,] 34733.15 40691.51\n [4732,] 28566.91 44459.80\n [4733,] 20182.34 31585.09\n [4734,] 32666.08 39280.31\n [4735,] 36117.49 41585.11\n [4736,] 36105.99 41379.68\n [4737,] 33251.74 41378.36\n [4738,] 40983.75 37469.85\n [4739,] 18474.44 38191.95\n [4740,] 30165.93 34396.20\n [4741,] 15392.46 36925.25\n [4742,] 36341.93 42903.48\n [4743,] 25158.81 30687.65\n [4744,] 14689.89 36250.27\n [4745,] 29752.71 35960.02\n [4746,] 34086.95 41912.07\n [4747,] 11966.14 35898.01\n [4748,] 23696.09 45489.69\n [4749,] 28929.78 46359.20\n [4750,] 29763.60 35203.33\n [4751,] 36738.01 42359.71\n [4752,] 21076.57 41233.31\n [4753,] 29174.35 46154.39\n [4754,] 15957.77 37264.15\n [4755,] 21853.72 46229.60\n [4756,] 34071.09 41230.34\n [4757,] 32538.72 39294.73\n [4758,] 33655.50 39063.25\n [4759,] 41464.72 38651.32\n [4760,] 34096.12 42002.61\n [4761,] 40717.54 39173.75\n [4762,] 18463.66 38246.94\n [4763,] 35221.40 33308.23\n [4764,] 33330.56 40438.20\n [4765,] 27161.33 29723.86\n [4766,] 29632.79 36542.36\n [4767,] 20015.44 40362.30\n [4768,] 29848.35 35275.79\n [4769,] 39807.44 37787.05\n [4770,] 19585.79 40949.14\n [4771,] 21501.29 46116.31\n [4772,] 35623.78 34217.03\n [4773,] 14081.50 36439.84\n [4774,] 18666.11 38119.74\n [4775,] 27893.28 44883.62\n [4776,] 21668.18 46077.49\n [4777,] 21157.50 40226.96\n [4778,] 20794.73 41260.70\n [4779,] 39751.23 37892.46\n [4780,] 17899.08 41409.86\n [4781,] 20992.74 41161.79\n [4782,] 15685.84 35327.68\n [4783,] 23872.77 46483.55\n [4784,] 20427.21 40740.42\n [4785,] 24508.71 47751.29\n [4786,] 42193.94 37512.48\n [4787,] 23844.35 47448.77\n [4788,] 27755.87 46300.26\n [4789,] 39066.80 39829.05\n [4790,] 32743.27 41330.52\n [4791,] 33049.47 41677.27\n [4792,] 16788.76 36643.87\n [4793,] 21552.66 46823.29\n [4794,] 20332.59 33020.16\n [4795,] 33257.69 39541.09\n [4796,] 39551.01 37131.54\n [4797,] 29438.41 35703.32\n [4798,] 34553.58 38054.84\n [4799,] 40283.23 36769.45\n [4800,] 18713.57 42479.88\n [4801,] 21488.78 39464.33\n [4802,] 20944.20 32418.61\n [4803,] 36080.74 41232.97\n [4804,] 36898.69 43019.28\n [4805,] 37037.68 41827.75\n [4806,] 23588.77 46040.46\n [4807,] 19307.62 40271.08\n [4808,] 35768.73 42579.08\n [4809,] 29346.24 44872.19\n [4810,] 36072.05 41098.90\n [4811,] 18811.14 38163.72\n [4812,] 38286.08 35423.87\n [4813,] 35758.99 42693.46\n [4814,] 11780.51 36005.55\n [4815,] 35528.14 41848.56\n [4816,] 24516.42 46844.96\n [4817,] 18580.57 42816.95\n [4818,] 21348.25 39656.03\n [4819,] 39699.12 33765.23\n [4820,] 21702.95 47038.04\n [4821,] 39699.12 33765.23\n [4822,] 29698.19 35205.51\n [4823,] 22130.91 45717.33\n [4824,] 17642.90 40016.81\n [4825,] 26163.95 48506.64\n [4826,] 28521.55 43968.06\n [4827,] 29275.95 38055.81\n [4828,] 35377.73 42514.60\n [4829,] 17731.69 40787.32\n [4830,] 21495.80 45373.58\n [4831,] 29074.12 37582.85\n [4832,] 18266.55 37019.18\n [4833,] 28324.84 46075.36\n [4834,] 34673.87 39909.91\n [4835,] 12836.20 35733.87\n [4836,] 27780.65 29917.22\n [4837,] 29378.49 46027.74\n [4838,] 35202.25 42976.70\n [4839,] 32815.04 41834.40\n [4840,] 36685.93 42525.91\n [4841,] 34802.40 40676.88\n [4842,] 21044.95 41025.20\n [4843,] 34811.18 40588.20\n [4844,] 29216.54 38521.26\n [4845,] 33797.02 34655.09\n [4846,] 19753.52 40742.58\n [4847,] 15229.46 37343.46\n [4848,] 27768.70 45328.59\n [4849,] 28968.13 39865.82\n [4850,] 32850.99 41385.31\n [4851,] 35539.98 39998.97\n [4852,] 28943.92 39225.43\n [4853,] 36670.56 33913.30\n [4854,] 34710.69 39529.41\n [4855,] 28263.09 39636.50\n [4856,] 29702.01 44751.06\n [4857,] 39961.98 33700.85\n [4858,] 25492.64 30608.30\n [4859,] 18406.05 35752.49\n [4860,] 41940.14 37824.74\n [4861,] 41096.14 38144.49\n [4862,] 35456.22 42844.66\n [4863,] 24273.92 47260.21\n [4864,] 24012.11 46989.61\n [4865,] 42111.72 36387.98\n [4866,] 33759.61 39801.60\n [4867,] 35502.21 42400.73\n [4868,] 13110.25 35900.96\n [4869,] 21475.81 45414.05\n [4870,] 40702.12 39068.18\n [4871,] 37006.61 42028.75\n [4872,] 35048.69 40430.10\n [4873,] 30948.51 34492.43\n [4874,] 35494.85 42778.30\n [4875,] 42284.16 39635.56\n [4876,] 19869.13 40935.34\n [4877,] 35617.49 40013.95\n [4878,] 32290.85 38677.33\n [4879,] 17149.94 35708.75\n [4880,] 25604.79 30819.19\n [4881,] 19585.79 40949.14\n [4882,] 23594.88 45561.36\n [4883,] 39751.23 37892.46\n [4884,] 24184.47 46641.28\n [4885,] 34334.65 42049.85\n [4886,] 27870.31 45761.32\n [4887,] 34394.32 41001.73\n [4888,] 28325.75 39700.70\n [4889,] 12654.70 35329.27\n [4890,] 39574.45 35316.74\n [4891,] 14668.98 36214.38\n [4892,] 30920.40 34483.81\n [4893,] 29110.88 46009.43\n [4894,] 36057.68 41003.68\n [4895,] 15557.30 34906.31\n [4896,] 15686.16 36885.19\n [4897,] 26282.03 47739.71\n [4898,] 39472.77 39952.66\n [4899,] 28242.87 46343.90\n [4900,] 34026.96 39725.85\n [4901,] 39138.99 36559.72\n [4902,] 25430.50 30891.82\n [4903,] 37351.42 42515.85\n [4904,] 40101.43 35118.35\n [4905,] 21076.57 41233.31\n [4906,] 34201.39 39416.91\n [4907,] 24078.48 46202.36\n [4908,] 25847.01 48622.47\n [4909,] 39303.48 36549.51\n [4910,] 38488.68 34466.57\n [4911,] 20344.07 33415.35\n [4912,] 33251.74 41378.36\n [4913,] 34529.68 40756.35\n [4914,] 32435.61 37600.18\n [4915,] 29191.04 44868.07\n [4916,] 35889.58 39923.62\n [4917,] 17432.83 39624.01\n [4918,] 19012.08 38443.16\n [4919,] 17593.37 40542.25\n [4920,] 35654.91 42683.10\n [4921,] 36724.28 35035.52\n [4922,] 39886.07 36385.99\n [4923,] 28706.46 44982.45\n [4924,] 18369.32 35876.67\n [4925,] 35272.09 41373.41\n [4926,] 13673.07 35414.73\n [4927,] 29008.86 46011.25\n [4928,] 32743.27 41330.52\n [4929,] 19585.79 40949.14\n [4930,] 28991.85 45431.57\n [4931,] 35904.47 39992.30\n [4932,] 39190.95 36539.70\n [4933,] 37056.78 41693.88\n [4934,] 30237.21 39012.48\n [4935,] 41504.35 38042.19\n [4936,] 29008.86 46011.25\n [4937,] 25842.25 48181.45\n [4938,] 36898.69 43019.28\n [4939,] 40125.14 33963.93\n [4940,] 25882.67 48648.61\n [4941,] 27545.35 30190.75\n [4942,] 35763.71 41252.26\n [4943,] 30444.94 38433.70\n [4944,] 32463.36 37771.40\n [4945,] 34359.96 41982.62\n [4946,] 34153.57 41905.94\n [4947,] 18137.96 35874.39\n [4948,] 30088.36 36489.72\n [4949,] 40588.42 36771.58\n [4950,] 24714.73 46801.84\n [4951,] 34200.90 39378.09\n [4952,] 17568.56 39747.66\n [4953,] 18284.82 36773.19\n [4954,] 26688.93 30197.43\n [4955,] 26708.79 48146.48\n [4956,] 28003.10 44038.25\n [4957,] 18722.67 36402.03\n [4958,] 29427.62 44862.31\n [4959,] 36185.22 41183.27\n [4960,] 31337.32 35439.32\n [4961,] 23229.73 46265.89\n [4962,] 39967.02 34387.45\n [4963,] 24588.33 47679.03\n [4964,] 36953.94 41756.40\n [4965,] 21492.94 39355.58\n [4966,] 39805.39 36969.62\n [4967,] 40655.03 38880.45\n [4968,] 24090.21 47653.30\n [4969,] 23692.65 46664.52\n [4970,] 29263.83 44869.00\n [4971,] 34377.73 39639.92\n [4972,] 21186.67 40627.75\n [4973,] 42199.75 39005.48\n [4974,] 18524.90 42832.78\n [4975,] 38585.32 35480.32\n [4976,] 29196.58 45579.13\n [4977,] 17292.88 40017.60\n [4978,] 17536.14 39884.51\n [4979,] 18422.44 36790.70\n [4980,] 36695.92 42389.95\n [4981,] 24651.29 47679.40\n [4982,] 29077.11 38219.23\n [4983,] 41562.04 36904.48\n [4984,] 28706.46 44982.45\n [4985,] 40696.14 37914.26\n [4986,] 25257.47 47286.92\n [4987,] 25971.91 48288.26\n [4988,] 18516.88 42055.68\n [4989,] 29263.83 44869.00\n [4990,] 35669.93 40491.07\n [4991,] 36537.44 41164.11\n [4992,] 14859.90 37155.25\n [4993,] 32949.02 40144.66\n [4994,] 32760.65 41301.41\n [4995,] 24481.40 47738.04\n [4996,] 33190.98 41392.37\n [4997,] 29468.80 46014.66\n [4998,] 31936.64 37254.53\n [4999,] 18173.93 36699.87\n [5000,] 40655.03 38880.45\n [5001,] 32324.79 39270.04\n [5002,] 42370.04 37362.61\n [5003,] 28883.28 38866.52\n [5004,] 27910.47 45286.02\n [5005,] 41953.75 38887.15\n [5006,] 18660.35 42567.99\n [5007,] 34520.18 40803.90\n [5008,] 37039.59 41668.46\n [5009,] 20440.51 39940.74\n [5010,] 39271.87 34214.11\n [5011,] 24168.39 47171.91\n [5012,] 23461.10 47158.03\n [5013,] 39414.73 37674.20\n [5014,] 40701.69 39109.09\n [5015,] 32139.11 39050.55\n [5016,] 28597.81 46605.58\n [5017,] 32116.08 33037.56\n [5018,] 28309.87 44705.97\n [5019,] 33266.71 41302.53\n [5020,] 28872.26 28787.86\n [5021,] 31970.53 36941.11\n [5022,] 29169.15 44391.25\n [5023,] 39264.33 37035.21\n [5024,] 12764.53 36210.39\n [5025,] 29008.08 45470.67\n [5026,] 15571.34 34998.71\n [5027,] 18205.12 41735.91\n [5028,] 28446.78 45821.26\n [5029,] 21341.36 47400.41\n [5030,] 36975.56 42718.09\n [5031,] 17453.83 35673.92\n [5032,] 32440.30 39656.62\n [5033,] 36002.74 42118.19\n [5034,] 34886.40 40409.32\n [5035,] 36692.37 42718.62\n [5036,] 17568.56 39747.66\n [5037,] 29229.56 46022.74\n [5038,] 35552.70 43636.58\n [5039,] 14080.05 36749.21\n [5040,] 39691.33 37992.92\n [5041,] 24265.75 47745.73\n [5042,] 22677.10 32407.59\n [5043,] 22677.10 32407.59\n [5044,] 20953.60 32498.18\n [5045,] 35534.38 40881.71\n [5046,] 33343.93 42143.21\n [5047,] 27370.58 45417.75\n [5048,] 23089.53 47277.71\n [5049,] 13692.88 36293.29\n [5050,] 39701.24 35345.57\n [5051,] 29810.74 35965.00\n [5052,] 29263.83 45891.33\n [5053,] 28380.88 44249.50\n [5054,] 41527.28 38994.80\n [5055,] 34481.65 40892.63\n [5056,] 17462.23 36295.69\n [5057,] 16072.26 37261.40\n [5058,] 33081.22 40161.35\n [5059,] 19047.12 39896.36\n [5060,] 34332.43 41059.12\n [5061,] 15655.57 37379.00\n [5062,] 29169.15 44391.25\n [5063,] 29599.54 35297.37\n [5064,] 32972.82 41858.42\n [5065,] 17887.05 40522.75\n [5066,] 36427.15 31668.30\n [5067,] 32537.89 41573.17\n [5068,] 17870.44 39841.44\n [5069,] 19955.67 40663.65\n [5070,] 29727.93 37727.55\n [5071,] 27391.92 29520.40\n [5072,] 40076.54 34344.32\n [5073,] 23166.02 46739.85\n [5074,] 21099.53 41178.93\n [5075,] 21030.40 41123.11\n [5076,] 18477.72 42759.86\n [5077,] 19359.40 36134.89\n [5078,] 19654.90 41062.14\n [5079,] 12489.99 35993.51\n [5080,] 23911.18 46959.21\n [5081,] 21224.71 35657.32\n [5082,] 20739.05 40253.53\n [5083,] 36495.86 41268.56\n [5084,] 30196.95 39688.16\n [5085,] 29381.39 35335.66\n [5086,] 39824.43 36794.41\n [5087,] 34730.86 40482.14\n [5088,] 20617.73 32691.96\n [5089,] 28991.85 45431.57\n [5090,] 13114.57 35625.80\n [5091,] 13692.88 36293.29\n [5092,] 35594.66 34326.76\n [5093,] 28260.58 44869.34\n [5094,] 32641.92 41715.31\n [5095,] 35280.24 40781.52\n [5096,] 39257.77 37371.90\n [5097,] 33762.62 33630.70\n [5098,] 34238.92 38551.86\n [5099,] 13195.23 35289.12\n [5100,] 32395.12 36648.47\n [5101,] 35183.76 40805.83\n [5102,] 30038.83 32697.73\n [5103,] 18426.40 35847.48\n [5104,] 29213.82 44512.85\n [5105,] 18797.22 38125.55\n [5106,] 29352.65 35432.23\n [5107,] 35675.29 42775.10\n [5108,] 29248.59 38589.71\n [5109,] 15292.60 35649.19\n [5110,] 36482.52 42857.42\n [5111,] 36653.96 42664.67\n [5112,] 19983.91 40801.33\n [5113,] 17588.50 40316.88\n [5114,] 14080.05 36749.21\n [5115,] 29612.54 37529.87\n [5116,] 36540.00 42751.57\n [5117,] 27282.96 29686.46\n [5118,] 30528.63 35991.98\n [5119,] 32924.26 41871.99\n [5120,] 25513.79 30760.40\n [5121,] 33055.04 40220.61\n [5122,] 33339.86 39348.43\n [5123,] 19515.53 37018.50\n [5124,] 41770.14 36979.61\n [5125,] 19585.79 40949.14\n [5126,] 32541.45 39651.56\n [5127,] 30086.33 32348.27\n [5128,] 24555.62 46365.59\n [5129,] 21557.88 46266.02\n [5130,] 35662.96 41118.33\n [5131,] 34170.66 37219.50\n [5132,] 11969.02 35939.51\n [5133,] 28404.15 44055.28\n [5134,] 34540.71 40900.35\n [5135,] 21044.95 41025.20\n [5136,] 36083.79 43138.63\n [5137,] 18393.12 42469.29\n [5138,] 24425.79 46203.96\n [5139,] 41817.07 37476.19\n [5140,] 25804.38 48534.26\n [5141,] 33303.15 40222.47\n [5142,] 26133.21 48037.90\n [5143,] 12683.42 35713.66\n [5144,] 18266.55 37019.18\n [5145,] 35593.41 43605.80\n [5146,] 30935.65 33937.15\n [5147,] 21105.49 40377.54\n [5148,] 20436.46 40261.82\n [5149,] 16548.55 36993.29\n [5150,] 17625.93 36047.46\n [5151,] 39886.07 36385.99\n [5152,] 21185.33 41020.82\n [5153,] 18190.42 36773.17\n [5154,] 42103.21 39558.51\n [5155,] 32924.26 41871.99\n [5156,] 29965.20 36754.12\n [5157,] 17609.19 39842.80\n [5158,] 15409.37 35726.07\n [5159,] 34514.86 40852.39\n [5160,] 14080.05 36749.21\n [5161,] 17930.84 36410.66\n [5162,] 35617.49 40013.95\n [5163,] 20582.52 40157.67\n [5164,] 38428.02 35100.96\n [5165,] 15410.94 35851.40\n [5166,] 40664.25 37323.07\n [5167,] 34864.55 40721.42\n [5168,] 29836.77 35212.87\n [5169,] 30333.69 35346.85\n [5170,] 27589.06 29864.50\n [5171,] 20497.66 32600.26\n [5172,] 33251.74 41378.36\n [5173,] 19012.08 38443.16\n [5174,] 34224.81 41482.47\n [5175,] 39691.97 37938.11\n [5176,] 39855.59 33795.49\n [5177,] 29817.68 38835.29\n [5178,] 36540.00 42751.57\n [5179,] 32709.01 39245.83\n [5180,] 38286.08 35423.87\n [5181,] 27574.62 29477.28\n [5182,] 13521.39 35395.21\n [5183,] 21275.62 41135.84\n [5184,] 23888.43 46536.67\n [5185,] 25406.61 30116.06\n [5186,] 33509.70 40096.05\n [5187,] 25330.36 30641.25\n [5188,] 15631.98 35554.58\n [5189,] 37537.31 35376.65\n [5190,] 33586.75 39817.71\n [5191,] 33107.05 39180.95\n [5192,] 25096.47 28442.07\n [5193,] 32641.92 41715.31\n [5194,] 35499.58 42535.17\n [5195,] 35183.76 40805.83\n [5196,] 28879.22 45454.97\n [5197,] 17201.82 36080.82\n [5198,] 29924.80 36550.02\n [5199,] 34314.85 39456.49\n [5200,] 35431.54 42451.10\n [5201,] 32850.99 41385.31\n [5202,] 17824.03 40232.22\n [5203,] 28491.97 44464.63\n [5204,] 31281.70 35494.06\n [5205,] 29762.36 45002.24\n [5206,] 40708.23 36492.62\n [5207,] 38010.02 34414.55\n [5208,] 35451.12 40551.29\n [5209,] 40440.33 37543.65\n [5210,] 17365.22 39759.29\n [5211,] 18714.49 38005.80\n [5212,] 13471.60 37247.55\n [5213,] 32524.59 41721.90\n [5214,] 32131.22 36956.69\n [5215,] 13019.32 36404.06\n [5216,] 41096.15 37721.01\n [5217,] 20781.41 40572.50\n [5218,] 35317.71 43315.87\n [5219,] 29090.57 28842.98\n [5220,] 29652.96 44954.66\n [5221,] 13335.01 35633.92\n [5222,] 40983.75 37469.85\n [5223,] 15611.86 35485.51\n [5224,] 35598.00 41613.32\n [5225,] 42241.58 37839.11\n [5226,] 35514.03 41386.23\n [5227,] 40680.99 38924.85\n [5228,] 34285.59 39183.36\n [5229,] 20992.74 41161.79\n [5230,] 13600.14 36238.41\n [5231,] 41824.22 38940.79\n [5232,] 31953.63 37040.01\n [5233,] 32641.92 41715.31\n [5234,] 21076.57 41233.31\n [5235,] 36882.45 42523.80\n [5236,] 39017.45 37456.75\n [5237,] 35173.32 33297.57\n [5238,] 16194.61 36810.65\n [5239,] 39556.45 37890.97\n [5240,] 30759.95 38355.06\n [5241,] 17501.44 39893.97\n [5242,] 15364.62 35863.65\n [5243,] 32400.12 39411.20\n [5244,] 30239.70 36404.29\n [5245,] 25675.16 28525.92\n [5246,] 35320.59 39346.09\n [5247,] 35472.31 42732.76\n [5248,] 29866.80 35121.52\n [5249,] 15163.91 36358.68\n [5250,] 29769.97 44954.80\n [5251,] 19779.44 36764.43\n [5252,] 35687.87 41637.05\n [5253,] 35431.54 42451.10\n [5254,] 20855.73 32483.78\n [5255,] 16743.75 36560.73\n [5256,] 32862.51 41269.21\n [5257,] 28643.40 44523.62\n [5258,] 34505.30 41813.00\n [5259,] 29361.72 44631.99\n [5260,] 12926.70 35883.06\n [5261,] 20541.92 40242.83\n [5262,] 36807.67 42555.10\n [5263,] 34034.29 39853.85\n [5264,] 23918.69 46150.28\n [5265,] 17992.92 40455.40\n [5266,] 39017.45 37456.75\n [5267,] 39904.78 36750.55\n [5268,] 34736.13 40161.81\n [5269,] 27161.33 29723.86\n [5270,] 21484.89 45622.60\n [5271,] 41517.82 39131.90\n [5272,] 25323.02 30907.84\n [5273,] 40524.49 37058.36\n [5274,] 34339.98 39749.67\n [5275,] 40663.57 37113.17\n [5276,] 36263.85 34896.84\n [5277,] 37097.86 31783.94\n [5278,] 23519.14 45528.65\n [5279,] 32603.98 41458.53\n [5280,] 41302.91 36750.45\n [5281,] 29359.94 44686.60\n [5282,] 34304.46 42260.38\n [5283,] 39807.44 37787.05\n [5284,] 31649.37 35052.48\n [5285,] 23177.28 45910.55\n [5286,] 17544.47 40600.96\n [5287,] 23229.82 45865.34\n [5288,] 38181.36 34389.11\n [5289,] 34165.54 41998.48\n [5290,] 19031.29 38654.83\n [5291,] 26103.31 30159.16\n [5292,] 34865.48 38743.92\n [5293,] 41753.66 36195.39\n [5294,] 33956.76 41239.30\n [5295,] 35047.75 40679.95\n [5296,] 21095.91 40990.18\n [5297,] 36911.65 42565.65\n [5298,] 13077.35 36637.87\n [5299,] 34808.92 40728.39\n [5300,] 35189.88 43046.93\n [5301,] 29008.86 46011.25\n [5302,] 32116.08 33037.56\n [5303,] 30340.45 33670.61\n [5304,] 41426.11 36403.83\n [5305,] 26051.36 48229.21\n [5306,] 26163.95 48506.64\n [5307,] 39693.46 37760.98\n [5308,] 33244.80 42043.31\n [5309,] 36153.02 41472.97\n [5310,] 29263.83 45891.33\n [5311,] 34748.54 40800.81\n [5312,] 29442.60 35774.38\n [5313,] 37757.27 35400.12\n [5314,] 29135.03 46121.71\n [5315,] 24140.15 47136.74\n [5316,] 41904.73 39610.20\n [5317,] 12683.42 35713.66\n [5318,] 31167.69 33229.40\n [5319,] 20935.66 39981.88\n [5320,] 41935.69 36070.17\n [5321,] 25992.13 30051.90\n [5322,] 30748.46 38312.37\n [5323,] 18219.46 41813.23\n [5324,] 19654.90 41062.14\n [5325,] 18128.20 36516.31\n [5326,] 32161.99 39437.89\n [5327,] 19026.85 38717.79\n [5328,] 38318.74 34121.34\n [5329,] 23487.35 46067.93\n [5330,] 33907.24 32524.22\n [5331,] 35396.63 40529.91\n [5332,] 26917.55 47972.37\n [5333,] 18224.96 42597.58\n [5334,] 32428.92 39127.55\n [5335,] 29426.06 44899.70\n [5336,] 34433.17 39784.24\n [5337,] 36451.70 42826.86\n [5338,] 36758.46 43100.55\n [5339,] 21026.94 39949.93\n [5340,] 17765.31 40481.50\n [5341,] 41317.90 36850.75\n [5342,] 35255.86 42983.08\n [5343,] 35339.78 40524.67\n [5344,] 18111.79 41789.39\n [5345,] 27867.95 46512.41\n [5346,] 31678.09 34080.63\n [5347,] 37184.16 42297.60\n [5348,] 36611.37 41664.20\n [5349,] 24079.62 46363.07\n [5350,] 25420.80 28397.40\n [5351,] 41390.63 37771.85\n [5352,] 17528.41 33802.31\n [5353,] 20764.86 40378.86\n [5354,] 29870.55 35921.75\n [5355,] 27503.37 29288.91\n [5356,] 39741.35 34650.83\n [5357,] 32666.08 39280.31\n [5358,] 25675.16 28525.92\n [5359,] 28251.99 44429.36\n [5360,] 17827.30 39894.64\n [5361,] 28107.30 45524.10\n [5362,] 17738.46 36252.46\n [5363,] 35617.49 40013.95\n [5364,] 17331.24 40397.98\n [5365,] 33343.93 42143.21\n [5366,] 24547.79 47397.60\n [5367,] 32581.39 41716.94\n [5368,] 18982.22 38706.05\n [5369,] 20910.46 40655.23\n [5370,] 35156.98 40695.52\n [5371,] 35779.40 34619.10\n [5372,] 16091.73 36856.20\n [5373,] 29512.33 38534.41\n [5374,] 35112.00 40504.21\n [5375,] 19298.21 36771.90\n [5376,] 28027.73 45956.37\n [5377,] 20602.57 40537.72\n [5378,] 42472.92 37181.31\n [5379,] 35252.90 40712.57\n [5380,] 20823.45 40920.64\n [5381,] 25263.27 30692.38\n [5382,] 39750.97 37936.73\n [5383,] 19031.29 38654.83\n [5384,] 15322.25 37193.05\n [5385,] 42062.20 36367.99\n [5386,] 20469.09 33523.33\n [5387,] 39358.29 36996.24\n [5388,] 35046.77 33013.52\n [5389,] 29780.35 36658.48\n [5390,] 32147.19 39007.84\n [5391,] 36685.93 42525.91\n [5392,] 21485.54 46193.59\n [5393,] 19585.79 40949.14\n [5394,] 18266.55 37019.18\n [5395,] 29521.18 38787.28\n [5396,] 39878.17 37723.89\n [5397,] 12024.87 36114.50\n [5398,] 29110.88 46009.43\n [5399,] 29531.91 45474.13\n [5400,] 35521.57 43287.94\n [5401,] 37291.13 35094.75\n [5402,] 15385.33 36620.82\n [5403,] 41335.33 38916.07\n [5404,] 29041.45 45519.79\n [5405,] 29130.00 46070.87\n [5406,] 33728.01 39056.62\n [5407,] 35056.58 41996.91\n [5408,] 23612.30 46542.96\n [5409,] 32472.41 41818.76\n [5410,] 20078.59 40388.92\n [5411,] 41787.50 36373.76\n [5412,] 35655.75 42267.15\n [5413,] 29288.19 45582.74\n [5414,] 28991.85 45431.57\n [5415,] 22770.83 32327.85\n [5416,] 17767.06 39779.97\n [5417,] 20844.58 40951.79\n [5418,] 38554.70 35122.88\n [5419,] 32666.20 41556.04\n [5420,] 20794.73 41260.70\n [5421,] 20229.67 40395.54\n [5422,] 20770.26 32379.02\n [5423,] 29074.12 37582.85\n [5424,] 35194.89 43089.61\n [5425,] 20182.34 31585.09\n [5426,] 36349.34 42055.12\n [5427,] 25897.55 48205.37\n [5428,] 42385.13 37568.79\n [5429,] 33317.93 35378.21\n [5430,] 39699.12 33765.23\n [5431,] 39955.34 36713.02\n [5432,] 15409.37 35726.07\n [5433,] 23588.77 46040.46\n [5434,] 35202.25 42976.70\n [5435,] 29533.95 44678.75\n [5436,] 32460.27 37019.78\n [5437,] 39640.10 35329.44\n [5438,] 40550.35 33618.85\n [5439,] 39855.59 33795.49\n [5440,] 29279.39 36000.86\n [5441,] 36859.47 42540.04\n [5442,] 28589.31 46228.50\n [5443,] 35216.02 41471.83\n [5444,] 36735.64 34999.41\n [5445,] 39971.86 34327.01\n [5446,] 40780.88 39182.39\n [5447,] 20078.59 40388.92\n [5448,] 27354.73 45992.92\n [5449,] 19529.88 40944.66\n [5450,] 39484.99 35102.05\n [5451,] 36298.73 41113.21\n [5452,] 18520.34 42577.42\n [5453,] 42007.01 38444.37\n [5454,] 21888.98 46999.13\n [5455,] 21076.57 41233.31\n [5456,] 21076.57 41233.31\n [5457,] 25430.50 30891.82\n [5458,] 36536.14 41556.12\n [5459,] 36999.53 42502.91\n [5460,] 25365.21 30116.09\n [5461,] 26370.69 47634.96\n [5462,] 37101.96 41756.97\n [5463,] 28105.44 45308.62\n [5464,] 36494.87 41211.26\n [5465,] 13142.56 36233.87\n [5466,] 29378.49 46027.74\n [5467,] 41554.11 37898.63\n [5468,] 29008.08 45470.67\n [5469,] 33050.73 37182.40\n [5470,] 35307.63 42426.14\n [5471,] 29712.24 38575.91\n [5472,] 34825.93 40877.56\n [5473,] 25842.25 48181.45\n [5474,] 27709.70 45411.08\n [5475,] 20905.68 32575.97\n [5476,] 28545.55 39010.84\n [5477,] 36636.36 43269.84\n [5478,] 18361.43 36028.10\n [5479,] 29752.71 35960.02\n [5480,] 29696.57 44798.01\n [5481,] 38190.16 35350.79\n [5482,] 23928.59 46309.61\n [5483,] 28447.41 44059.42\n [5484,] 36569.24 34706.30\n [5485,] 36607.15 41184.66\n [5486,] 28617.56 45894.25\n [5487,] 30689.08 34182.86\n [5488,] 35431.54 42451.10\n [5489,] 33509.70 40096.05\n [5490,] 19742.50 41041.11\n [5491,] 12064.67 36265.13\n [5492,] 21199.05 39795.11\n [5493,] 30237.21 39012.48\n [5494,] 30263.23 38499.84\n [5495,] 28710.67 44821.79\n [5496,] 14210.49 36691.54\n [5497,] 23639.55 46602.59\n [5498,] 24012.81 47300.89\n [5499,] 36814.61 31745.73\n [5500,] 35280.24 40781.52\n [5501,] 29036.48 37924.35\n [5502,] 29584.94 44828.50\n [5503,] 23621.43 46465.74\n [5504,] 39190.95 36539.70\n [5505,] 32972.82 41858.42\n [5506,] 41789.32 38127.82\n [5507,] 34561.49 40900.31\n [5508,] 29174.35 46154.39\n [5509,] 23918.98 46921.66\n [5510,] 18498.13 40495.05\n [5511,] 34416.06 39489.59\n [5512,] 15786.16 37185.42\n [5513,] 35564.95 42709.51\n [5514,] 29470.92 37851.27\n [5515,] 36692.37 42718.62\n [5516,] 18236.98 42767.10\n [5517,] 28325.01 44203.02\n [5518,] 42190.73 38363.77\n [5519,] 35064.39 38974.33\n [5520,] 29130.00 46070.87\n [5521,] 39435.14 37940.08\n [5522,] 28593.92 44540.97\n [5523,] 34092.60 41956.90\n [5524,] 18417.09 41366.75\n [5525,] 14080.05 36749.21\n [5526,] 24178.01 31430.11\n [5527,] 15322.25 37193.05\n [5528,] 28679.65 45843.47\n [5529,] 28086.00 45992.90\n [5530,] 37570.16 35247.23\n [5531,] 21133.84 41240.77\n [5532,] 35712.21 42604.39\n [5533,] 39691.33 37992.92\n [5534,] 34404.52 41842.70\n [5535,] 23250.78 45762.25\n [5536,] 23519.30 47201.67\n [5537,] 15488.83 36506.53\n [5538,] 29548.52 44871.70\n [5539,] 39155.77 34184.36\n [5540,] 35133.53 38837.32\n [5541,] 15066.83 36787.82\n [5542,] 25614.62 30608.39\n [5543,] 38913.38 37146.45\n [5544,] 17738.40 40027.47\n [5545,] 27326.46 29289.20\n [5546,] 26114.30 29937.27\n [5547,] 27644.56 29882.96\n [5548,] 18378.77 41365.56\n [5549,] 26274.32 47605.88\n [5550,] 34809.92 40477.37\n [5551,] 39772.17 36375.77\n [5552,] 40708.23 36492.62\n [5553,] 26124.93 48353.52\n [5554,] 36482.52 42857.42\n [5555,] 18036.26 42367.22\n [5556,] 19074.03 38725.55\n [5557,] 21528.39 47201.93\n [5558,] 12489.99 35993.51\n [5559,] 34349.99 40122.65\n [5560,] 29289.18 44916.43\n [5561,] 21752.95 47002.21\n [5562,] 18903.33 42610.44\n [5563,] 28876.22 28717.68\n [5564,] 32495.95 37356.27\n [5565,] 39691.97 37938.11\n [5566,] 13865.43 36010.85\n [5567,] 26083.87 48625.64\n [5568,] 26055.85 47871.06\n [5569,] 32906.40 40207.27\n [5570,] 24382.48 47357.88\n [5571,] 33541.38 32139.12\n [5572,] 29111.95 40346.36\n [5573,] 41715.57 36535.28\n [5574,] 18384.86 36537.63\n [5575,] 27905.72 45677.91\n [5576,] 27625.96 45873.42\n [5577,] 40601.29 37986.91\n [5578,] 32153.95 39528.08\n [5579,] 29176.07 37834.64\n [5580,] 23341.42 46782.39\n [5581,] 28570.97 44703.85\n [5582,] 26353.60 47525.72\n [5583,] 36247.42 41447.38\n [5584,] 18309.71 35982.07\n [5585,] 18441.19 41576.17\n [5586,] 26479.00 48031.59\n [5587,] 34972.07 40449.94\n [5588,] 21275.62 41135.84\n [5589,] 25330.36 30641.25\n [5590,] 24234.02 46379.30\n [5591,] 35256.10 41310.14\n [5592,] 39202.43 37430.01\n [5593,] 18371.85 36948.49\n [5594,] 29426.06 44899.70\n [5595,] 33513.51 33797.32\n [5596,] 29065.93 45407.81\n [5597,] 39437.72 36444.81\n [5598,] 35252.11 42510.08\n [5599,] 32587.13 39507.43\n [5600,] 13627.94 35376.72\n [5601,] 28780.16 46535.54\n [5602,] 19963.60 32176.57\n [5603,] 35417.00 39751.72\n [5604,] 35053.39 39604.02\n [5605,] 17800.86 33706.51\n [5606,] 19654.90 41062.14\n [5607,] 38988.49 37017.83\n [5608,] 14668.98 36214.38\n [5609,] 36359.00 42364.92\n [5610,] 35405.91 40829.57\n [5611,] 19584.08 36184.87\n [5612,] 40899.85 36613.22\n [5613,] 36306.08 42109.26\n [5614,] 23273.41 45812.21\n [5615,] 40685.82 37816.66\n [5616,] 34469.95 41889.54\n [5617,] 19880.76 40842.02\n [5618,] 21640.48 45836.62\n [5619,] 41338.19 36269.05\n [5620,] 30597.33 34835.66\n [5621,] 28070.24 45161.87\n [5622,] 20106.86 32068.26\n [5623,] 22637.45 32298.62\n [5624,] 24629.97 47757.26\n [5625,] 21133.84 41240.77\n [5626,] 35499.58 42535.17\n [5627,] 17229.61 39920.13\n [5628,] 36023.29 40859.83\n [5629,] 41458.33 36810.69\n [5630,] 36427.15 31668.30\n [5631,] 39964.67 34274.35\n [5632,] 35466.00 39686.32\n [5633,] 32997.30 41756.79\n [5634,] 20495.11 40135.56\n [5635,] 35848.37 40032.01\n [5636,] 28386.97 44206.19\n [5637,] 28938.60 45939.10\n [5638,] 29127.34 29422.87\n [5639,] 25622.61 30681.95\n [5640,] 12156.89 36283.81\n [5641,] 29380.57 35084.98\n [5642,] 20992.74 41161.79\n [5643,] 12219.23 36082.72\n [5644,] 15811.24 34517.71\n [5645,] 15957.77 37264.15\n [5646,] 18140.10 42353.15\n [5647,] 28707.59 46597.46\n [5648,] 15567.01 35501.20\n [5649,] 29225.75 46061.89\n [5650,] 34276.93 42009.52\n [5651,] 34811.18 40588.20\n [5652,] 41102.65 37678.68\n [5653,] 24629.97 47757.26\n [5654,] 28330.35 44062.84\n [5655,] 27527.42 46004.58\n [5656,] 26083.87 48625.64\n [5657,] 34877.36 40120.80\n [5658,] 41753.00 37072.07\n [5659,] 24273.92 47260.21\n [5660,] 26361.53 29807.27\n [5661,] 40018.30 35009.87\n [5662,] 30362.87 39037.07\n [5663,] 13110.25 35900.96\n [5664,] 39215.74 37676.66\n [5665,] 34972.07 40449.94\n [5666,] 28786.70 32887.03\n [5667,] 31204.28 32179.87\n [5668,] 33179.38 42084.48\n [5669,] 15551.63 35558.97\n [5670,] 28380.83 38842.16\n [5671,] 36362.59 42820.88\n [5672,] 40701.69 39109.09\n [5673,] 29640.96 36577.40\n [5674,] 30173.40 32372.19\n [5675,] 27542.17 29862.11\n [5676,] 21099.53 41178.93\n [5677,] 34477.19 39035.88\n [5678,] 40125.14 33963.93\n [5679,] 30443.29 32890.09\n [5680,] 28404.93 44429.38\n [5681,] 36695.92 42389.95\n [5682,] 29008.86 46011.25\n [5683,] 41078.14 36004.68\n [5684,] 17842.91 36732.57\n [5685,] 37029.84 42595.50\n [5686,] 36127.57 41752.37\n [5687,] 35036.12 40361.23\n [5688,] 36247.42 41447.38\n [5689,] 29399.19 35150.94\n [5690,] 33829.07 39879.73\n [5691,] 33233.65 35406.42\n [5692,] 12798.49 36249.43\n [5693,] 34609.76 38025.76\n [5694,] 27117.73 29561.86\n [5695,] 30219.53 34447.45\n [5696,] 25240.70 28802.78\n [5697,] 27096.78 29393.50\n [5698,] 40419.14 37684.03\n [5699,] 20649.18 41126.40\n [5700,] 34806.66 40425.07\n [5701,] 35317.71 43315.87\n [5702,] 12816.32 35873.26\n [5703,] 35617.49 40013.95\n [5704,] 28496.97 44422.87\n [5705,] 37156.99 35128.40\n [5706,] 20332.59 33020.16\n [5707,] 30786.13 35427.59\n [5708,] 19654.58 40895.74\n [5709,] 36724.74 42512.33\n [5710,] 21221.32 47136.46\n [5711,] 32782.21 41700.54\n [5712,] 15567.01 35501.20\n [5713,] 40049.91 33755.10\n [5714,] 15521.17 35595.02\n [5715,] 28851.09 28922.88\n [5716,] 41886.32 39277.70\n [5717,] 41643.85 36309.48\n [5718,] 23124.53 46411.14\n [5719,] 36346.22 42778.07\n [5720,] 27265.75 47952.87\n [5721,] 20410.76 39870.81\n [5722,] 14686.20 36172.54\n [5723,] 32997.30 41756.79\n [5724,] 17518.83 39833.52\n [5725,] 11863.05 35775.41\n [5726,] 26630.20 47351.29\n [5727,] 18567.17 41639.80\n [5728,] 41603.45 36332.35\n [5729,] 23709.41 32086.87\n [5730,] 19813.76 40958.28\n [5731,] 37534.91 35424.19\n [5732,] 35889.58 39923.62\n [5733,] 29277.41 34530.68\n [5734,] 29969.53 36449.29\n [5735,] 33317.91 42073.50\n [5736,] 35306.75 42778.71\n [5737,] 35782.98 40767.88\n [5738,] 19752.02 36261.59\n [5739,] 35642.76 43519.88\n [5740,] 39331.40 37506.07\n [5741,] 33971.47 39991.16\n [5742,] 12627.62 36496.54\n [5743,] 26121.13 47963.14\n [5744,] 18666.11 38119.74\n [5745,] 32466.52 36597.32\n [5746,] 18545.73 38552.59\n [5747,] 27146.02 29318.47\n [5748,] 21131.93 40570.65\n [5749,] 35021.31 43010.55\n [5750,] 31167.69 33229.40\n [5751,] 12542.36 36465.27\n [5752,] 38012.27 35467.75\n [5753,] 41797.65 37882.17\n [5754,] 24284.79 30571.28\n [5755,] 18187.19 41813.01\n [5756,] 36807.22 31876.19\n [5757,] 26250.67 47940.29\n [5758,] 27161.33 29723.86\n [5759,] 32308.11 37468.51\n [5760,] 18165.24 38285.96\n [5761,] 41572.13 38614.57\n [5762,] 22726.24 46182.11\n [5763,] 35539.98 39998.97\n [5764,] 36569.24 34706.30\n [5765,] 31756.01 37413.44\n [5766,] 24098.25 46567.49\n [5767,] 29238.24 38668.87\n [5768,] 30399.59 39119.25\n [5769,] 21421.95 39831.44\n [5770,] 41273.18 35997.61\n [5771,] 18561.35 42946.38\n [5772,] 39775.15 33898.37\n [5773,] 13073.37 36602.78\n [5774,] 20582.52 40157.67\n [5775,] 23648.34 32091.07\n [5776,] 36758.46 43100.55\n [5777,] 15693.18 36772.76\n [5778,] 33606.42 31464.62\n [5779,] 33220.91 35298.52\n [5780,] 17363.76 39666.07\n [5781,] 32760.65 41301.41\n [5782,] 24256.71 47326.31\n [5783,] 34348.08 37485.81\n [5784,] 29365.53 34999.36\n [5785,] 39190.67 37767.09\n [5786,] 29836.77 35212.87\n [5787,] 21219.09 40680.20\n [5788,] 25024.14 28462.79\n [5789,] 28261.73 45927.56\n [5790,] 35871.64 34303.97\n [5791,] 22470.06 32195.25\n [5792,] 30509.77 34841.36\n [5793,] 26436.21 48219.52\n [5794,] 32666.20 41556.04\n [5795,] 39961.98 33700.85\n [5796,] 39570.25 37688.75\n [5797,] 31741.67 33590.85\n [5798,] 24323.57 47684.08\n [5799,] 33213.52 37146.11\n [5800,] 15448.48 34379.43\n [5801,] 35598.00 41613.32\n [5802,] 35044.14 42960.94\n [5803,] 34465.31 40170.23\n [5804,] 40652.00 37710.73\n [5805,] 34096.12 42002.61\n [5806,] 20384.11 39828.87\n [5807,] 21185.33 41020.82\n [5808,] 13989.08 36079.69\n [5809,] 37062.51 41810.12\n [5810,] 14856.64 37200.55\n [5811,] 35411.93 42559.87\n [5812,] 26026.63 48628.51\n [5813,] 39699.12 33765.23\n [5814,] 15433.37 37176.31\n [5815,] 15551.63 35558.97\n [5816,] 41829.84 39534.96\n [5817,] 16091.73 36856.20\n [5818,] 35253.52 42077.04\n [5819,] 30229.05 31024.96\n [5820,] 35238.10 42796.92\n [5821,] 35546.87 40971.18\n [5822,] 30546.31 33826.82\n [5823,] 28991.85 45431.57\n [5824,] 29585.55 35191.21\n [5825,] 29086.28 38257.24\n [5826,] 18615.20 36606.87\n [5827,] 26599.00 28913.77\n [5828,] 20514.34 33047.29\n [5829,] 25882.67 48648.61\n [5830,] 29455.68 45198.72\n [5831,] 20612.12 40742.27\n [5832,] 13195.23 35289.12\n [5833,] 27822.11 37864.92\n [5834,] 29914.12 33468.51\n [5835,] 33672.31 33469.99\n [5836,] 40718.39 37684.02\n [5837,] 25777.83 30099.89\n [5838,] 21133.84 41240.77\n [5839,] 28099.72 38389.24\n [5840,] 40713.98 39216.49\n [5841,] 15082.57 36525.19\n [5842,] 40125.14 33963.93\n [5843,] 20460.64 33596.21\n [5844,] 29068.25 28859.83\n [5845,] 17830.74 35485.55\n [5846,] 36713.12 43168.83\n [5847,] 30156.07 36376.10\n [5848,] 39584.06 36472.37\n [5849,] 32426.61 32898.13\n [5850,] 32862.51 41269.21\n [5851,] 26808.50 29468.20\n [5852,] 35346.30 42102.69\n [5853,] 19585.79 40949.14\n [5854,] 33107.05 39180.95\n [5855,] 24610.13 47162.66\n [5856,] 18969.28 38392.75\n [5857,] 21528.39 47201.93\n [5858,] 23769.64 47130.66\n [5859,] 39040.02 35066.35\n [5860,] 24064.01 47283.79\n [5861,] 14210.49 36691.54\n [5862,] 29661.55 37837.34\n [5863,] 18205.70 36090.43\n [5864,] 18307.58 35739.43\n [5865,] 23948.75 47505.80\n [5866,] 40440.33 37543.65\n [5867,] 30477.30 38737.26\n [5868,] 29872.38 39327.20\n [5869,] 35502.21 42400.73\n [5870,] 39133.56 37962.16\n [5871,] 28710.67 44821.79\n [5872,] 39190.95 36539.70\n [5873,] 22637.45 32298.62\n [5874,] 22770.83 32327.85\n [5875,] 19753.52 40742.58\n [5876,] 28447.34 43958.92\n [5877,] 38005.50 34727.56\n [5878,] 28521.55 43968.06\n [5879,] 27458.54 30282.49\n [5880,] 36843.18 35328.24\n [5881,] 17395.08 39834.34\n [5882,] 41661.41 37063.55\n [5883,] 41527.28 38994.80\n [5884,] 35502.57 42466.51\n [5885,] 29661.55 37837.34\n [5886,] 34469.95 41889.54\n [5887,] 33748.47 33327.88\n [5888,] 14175.62 36752.99\n [5889,] 29174.35 46154.39\n [5890,] 14754.68 36104.58\n [5891,] 39750.97 37936.73\n [5892,] 35263.78 39162.51\n [5893,] 30667.42 35580.71\n [5894,] 35064.88 40490.91\n [5895,] 36393.77 41485.17\n [5896,] 18821.46 38322.57\n [5897,] 17661.21 40092.42\n [5898,] 20376.33 33731.52\n [5899,] 13678.13 37003.18\n [5900,] 35360.07 42870.54\n [5901,] 20602.57 40537.72\n [5902,] 15448.48 34379.43\n [5903,] 36027.46 42672.82\n [5904,] 17719.78 39903.03\n [5905,] 36684.55 41778.21\n [5906,] 39751.23 37892.46\n [5907,] 29001.49 37633.20\n [5908,] 24593.62 47743.72\n [5909,] 32815.04 41834.40\n [5910,] 40540.27 36860.10\n [5911,] 29333.46 38563.53\n [5912,] 30025.60 34493.68\n [5913,] 26026.63 48628.51\n [5914,] 21398.30 45428.53\n [5915,] 28707.35 45751.47\n [5916,] 15867.80 34515.18\n [5917,] 28908.95 28820.87\n [5918,] 20145.94 31859.60\n [5919,] 22637.45 32298.62\n [5920,] 36986.31 41681.37\n [5921,] 30055.03 38404.80\n [5922,] 20844.58 40951.79\n [5923,] 29214.05 44557.60\n [5924,] 18685.83 42187.58\n [5925,] 24714.73 46801.84\n [5926,] 32782.21 41700.54\n [5927,] 15409.37 35726.07\n [5928,] 33755.23 32341.70\n [5929,] 24481.40 47738.04\n [5930,] 38005.50 34727.56\n [5931,] 39855.59 33795.49\n [5932,] 41058.57 37820.01\n [5933,] 37074.56 41718.56\n [5934,] 15391.62 36342.03\n [5935,] 41341.94 37497.37\n [5936,] 29553.82 44789.22\n [5937,] 28336.71 43962.89\n [5938,] 29157.71 44457.65\n [5939,] 25406.61 30116.06\n [5940,] 41235.94 37826.47\n [5941,] 21131.93 40570.65\n [5942,] 39689.49 33812.06\n [5943,] 37534.91 35424.19\n [5944,] 36343.08 43084.21\n [5945,] 19534.59 40043.26\n [5946,] 34039.69 34012.35\n [5947,] 35533.40 42462.21\n [5948,] 17536.14 39884.51\n [5949,] 12524.85 36537.96\n [5950,] 18520.34 42577.42\n [5951,] 39546.43 37080.67\n [5952,] 23135.77 45925.38\n [5953,] 32420.66 38867.87\n [5954,] 29157.71 44457.65\n [5955,] 24593.62 47743.72\n [5956,] 29157.71 44457.65\n [5957,] 28651.28 46386.79\n [5958,] 33513.00 40047.38\n [5959,] 34514.86 40852.39\n [5960,] 29229.60 44394.57\n [5961,] 41536.76 38335.33\n [5962,] 32660.77 36657.12\n [5963,] 34103.93 41148.01\n [5964,] 35127.23 40519.73\n [5965,] 33049.47 41677.27\n [5966,] 12100.48 36260.80\n [5967,] 22139.70 45940.75\n [5968,] 35466.00 39686.32\n [5969,] 17900.65 40365.93\n [5970,] 30018.34 32908.99\n [5971,] 34232.78 42158.91\n [5972,] 34502.54 39881.92\n [5973,] 17666.79 40209.58\n [5974,] 21097.13 40276.58\n [5975,] 19012.08 38443.16\n [5976,] 33251.74 41378.36\n [5977,] 36653.96 42664.67\n [5978,] 33096.72 39136.68\n [5979,] 39584.06 36472.37\n [5980,] 20761.49 40539.41\n [5981,] 27837.18 45840.60\n [5982,] 29216.54 38521.26\n [5983,] 39060.28 37388.80\n [5984,] 36212.80 42815.39\n [5985,] 32641.92 41715.31\n [5986,] 35485.40 42891.67\n [5987,] 31900.57 37456.51\n [5988,] 35505.43 42592.31\n [5989,] 30759.95 38355.06\n [5990,] 40440.33 37543.65\n [5991,] 34260.43 38429.96\n [5992,] 24508.71 47751.29\n [5993,] 18440.33 38353.27\n [5994,] 21072.27 41108.45\n [5995,] 36897.68 35313.56\n [5996,] 21281.71 45373.65\n [5997,] 40419.14 37684.03\n [5998,] 17879.86 40419.21\n [5999,] 21354.75 39607.06\n [6000,] 35598.00 41613.32\n [6001,] 27644.56 29882.96\n [6002,] 25420.80 28397.40\n [6003,] 36738.01 42359.71\n [6004,] 32676.45 41702.54\n [6005,] 20063.30 31962.44\n [6006,] 29359.94 44686.60\n [6007,] 36539.79 41675.65\n [6008,] 34561.49 40900.31\n [6009,] 40565.79 36647.25\n [6010,] 35499.58 42535.17\n [6011,] 30025.60 34493.68\n [6012,] 32159.15 32778.05\n [6013,] 30562.28 33470.30\n [6014,] 23639.55 46602.59\n [6015,] 26059.10 30099.20\n [6016,] 25430.50 30891.82\n [6017,] 30777.15 33728.61\n [6018,] 32650.92 41800.04\n [6019,] 33755.23 32341.70\n [6020,] 33989.29 39188.29\n [6021,] 19585.79 40949.14\n [6022,] 34557.61 41791.91\n [6023,] 33566.50 32417.14\n [6024,] 12219.23 36082.72\n [6025,] 28546.22 46666.99\n [6026,] 19733.64 36891.86\n [6027,] 35668.08 40927.64\n [6028,] 21857.28 46973.56\n [6029,] 29696.57 44798.01\n [6030,] 23324.97 46112.92\n [6031,] 33938.12 33406.30\n [6032,] 21002.69 41053.33\n [6033,] 27291.25 28647.47\n [6034,] 18426.40 35847.48\n [6035,] 30340.45 33670.61\n [6036,] 32807.53 41638.03\n [6037,] 32981.70 41976.55\n [6038,] 35999.27 42937.43\n [6039,] 29623.02 38789.10\n [6040,] 28706.46 44982.45\n [6041,] 24677.26 47703.11\n [6042,] 39878.17 37723.89\n [6043,] 27375.19 45328.68\n [6044,] 34321.85 41951.96\n [6045,] 33136.84 41278.61\n [6046,] 32883.68 41849.98\n [6047,] 35887.22 40144.11\n [6048,] 29467.40 44663.71\n [6049,] 36190.96 41644.13\n [6050,] 22470.06 32195.25\n [6051,] 32867.43 41342.68\n [6052,] 14668.98 36214.38\n [6053,] 24171.96 31505.67\n [6054,] 32848.09 33168.16\n [6055,] 41302.91 36750.45\n [6056,] 23769.76 45953.01\n [6057,] 29452.09 44942.83\n [6058,] 19585.79 40949.14\n [6059,] 35206.53 42464.67\n [6060,] 29325.35 45281.69\n [6061,] 20899.73 40733.17\n [6062,] 32177.60 37656.09\n [6063,] 18567.17 41639.80\n [6064,] 21532.37 46862.86\n [6065,] 29585.55 35191.21\n [6066,] 35307.63 42426.14\n [6067,] 11655.33 35926.34\n [6068,] 35498.36 41859.50\n [6069,] 38551.64 34356.38\n [6070,] 30029.32 36583.10\n [6071,] 42512.91 38839.83\n [6072,] 20475.02 40990.27\n [6073,] 34520.18 40803.90\n [6074,] 29346.24 44872.19\n [6075,] 30073.38 39457.71\n [6076,] 26370.75 48443.33\n [6077,] 27343.20 45474.32\n [6078,] 36613.65 41218.73\n [6079,] 32760.65 41301.41\n [6080,] 34011.67 39667.62\n [6081,] 28780.16 46535.54\n [6082,] 41092.77 37377.83\n [6083,] 39153.59 39822.15\n [6084,] 32438.34 36488.81\n [6085,] 15385.33 36620.82\n [6086,] 41789.32 38127.82\n [6087,] 32676.45 41702.54\n [6088,] 37291.13 35094.75\n [6089,] 30935.65 33937.15\n [6090,] 27140.14 29503.32\n [6091,] 36412.22 42853.42\n [6092,] 21095.91 40990.18\n [6093,] 29258.92 38653.10\n [6094,] 41940.14 37824.74\n [6095,] 41542.07 37422.58\n [6096,] 11942.10 36122.84\n [6097,] 33362.41 41982.95\n [6098,] 36391.03 43056.63\n [6099,] 29128.45 44417.05\n [6100,] 31296.89 35194.57\n [6101,] 18186.00 42799.48\n [6102,] 29229.58 45738.69\n [6103,] 29028.99 45961.16\n [6104,] 26121.13 47963.14\n [6105,] 35524.84 42400.71\n [6106,] 12962.10 36285.84\n [6107,] 34852.23 41692.13\n [6108,] 28628.33 46298.32\n [6109,] 26591.26 28653.83\n [6110,] 29417.95 39047.97\n [6111,] 37012.58 31727.85\n [6112,] 35507.68 40831.53\n [6113,] 15571.34 34998.71\n [6114,] 21418.06 40252.21\n [6115,] 33030.01 41752.64\n [6116,] 34540.71 40900.35\n [6117,] 36814.69 35037.62\n [6118,] 21323.77 45650.54\n [6119,] 41613.96 36697.28\n [6120,] 20068.30 40701.87\n [6121,] 35889.58 39923.62\n [6122,] 35654.91 42683.10\n [6123,] 30494.97 36300.12\n [6124,] 41829.84 39534.96\n [6125,] 22770.83 32327.85\n [6126,] 33665.06 39282.98\n [6127,] 39750.97 37936.73\n [6128,] 41829.76 39500.50\n [6129,] 28322.98 39398.40\n [6130,] 18633.30 38166.64\n [6131,] 28797.61 28575.31\n [6132,] 25603.53 30871.26\n [6133,] 33028.10 42151.70\n [6134,] 17915.85 40797.88\n [6135,] 18219.46 41813.23\n [6136,] 12699.24 35976.61\n [6137,] 19359.40 36134.89\n [6138,] 23639.55 46602.59\n [6139,] 27397.84 48130.23\n [6140,] 34710.69 39529.41\n [6141,] 34996.56 39515.68\n [6142,] 19654.90 41062.14\n [6143,] 35147.84 40972.93\n [6144,] 17082.27 40110.96\n [6145,] 23003.20 32384.04\n [6146,] 23907.36 47607.91\n [6147,] 28452.45 46673.45\n [6148,] 32876.22 41763.94\n [6149,] 19301.59 36127.53\n [6150,] 35848.37 40032.01\n [6151,] 14175.62 36752.99\n [6152,] 34514.86 40852.39\n [6153,] 41975.93 38389.54\n [6154,] 29103.59 38953.94\n [6155,] 33667.83 39656.39\n [6156,] 29625.06 36505.54\n [6157,] 35307.63 42426.14\n [6158,] 11909.70 36043.85\n [6159,] 18284.70 38462.94\n [6160,] 34356.75 40213.43\n [6161,] 26394.21 48255.47\n [6162,] 13641.77 35319.89\n [6163,] 29049.95 38191.46\n [6164,] 30045.07 36467.76\n [6165,] 28991.85 45431.57\n [6166,] 32972.82 41858.42\n [6167,] 29380.57 35084.98\n [6168,] 39610.51 37923.73\n [6169,] 34705.98 38390.09\n [6170,] 35252.90 40712.57\n [6171,] 30035.87 38457.24\n [6172,] 29436.31 37817.98\n [6173,] 25388.93 30638.79\n [6174,] 27022.60 29406.75\n [6175,] 21337.82 39707.27\n [6176,] 35446.93 42794.93\n [6177,] 24177.30 47447.50\n [6178,] 30018.34 32908.99\n [6179,] 39017.45 37456.75\n [6180,] 39398.43 34419.31\n [6181,] 17783.98 40288.54\n [6182,] 20182.34 31585.09\n [6183,] 36735.18 42688.11\n [6184,] 34640.23 40817.82\n [6185,] 40684.58 39024.98\n [6186,] 18399.38 38112.34\n [6187,] 17379.11 33971.22\n [6188,] 41526.58 39065.94\n [6189,] 33586.39 39730.72\n [6190,] 35384.62 34245.93\n [6191,] 18971.81 38331.83\n [6192,] 28468.15 38954.04\n [6193,] 28725.17 44951.11\n [6194,] 39865.79 34003.09\n [6195,] 37223.96 42275.84\n [6196,] 29216.54 38521.26\n [6197,] 25882.67 48648.61\n [6198,] 16096.44 36703.87\n [6199,] 15071.17 36872.15\n [6200,] 27304.32 47968.69\n [6201,] 28076.68 45270.79\n [6202,] 35428.21 42746.43\n [6203,] 19031.29 38654.83\n [6204,] 24508.71 47751.29\n [6205,] 27830.66 46253.27\n [6206,] 42441.24 37327.88\n [6207,] 28342.74 45998.73\n [6208,] 32347.18 32819.19\n [6209,] 41011.79 37119.33\n [6210,] 20713.11 41295.70\n [6211,] 32785.76 41808.31\n [6212,] 29519.15 44638.48\n [6213,] 35312.99 42884.75\n [6214,] 17431.12 39715.98\n [6215,] 35312.99 42884.75\n [6216,] 19813.88 36996.72\n [6217,] 40125.14 33963.93\n [6218,] 41948.72 38618.67\n [6219,] 23300.77 45766.53\n [6220,] 21337.82 39707.27\n [6221,] 25631.35 30735.62\n [6222,] 23696.09 45489.69\n [6223,] 34925.26 42853.27\n [6224,] 13615.21 36999.51\n [6225,] 15431.55 37048.72\n [6226,] 34217.81 34683.60\n [6227,] 26181.00 48280.93\n [6228,] 13539.91 36009.43\n [6229,] 21057.25 33353.23\n [6230,] 18671.70 42623.05\n [6231,] 33507.13 39558.35\n [6232,] 23920.72 46199.02\n [6233,] 33509.70 40096.05\n [6234,] 32987.92 41688.56\n [6235,] 18615.20 36606.87\n [6236,] 34818.09 38949.40\n [6237,] 39155.77 34184.36\n [6238,] 36269.12 42953.17\n [6239,] 35568.35 43392.61\n [6240,] 24227.09 31453.43\n [6241,] 28479.16 46847.37\n [6242,] 34540.71 40900.35\n [6243,] 40555.29 39584.14\n [6244,] 34103.93 41148.01\n [6245,] 24249.76 46150.31\n [6246,] 25201.15 47217.82\n [6247,] 36117.49 41585.11\n [6248,] 16642.09 36926.28\n [6249,] 31258.64 31935.14\n [6250,] 36435.41 42891.01\n [6251,] 27146.02 29318.47\n [6252,] 41118.18 36601.01\n [6253,] 25638.63 29215.77\n [6254,] 16060.53 37213.74\n [6255,] 30642.32 38650.92\n [6256,] 32588.22 41800.05\n [6257,] 32650.92 41800.04\n [6258,] 40235.26 37006.55\n [6259,] 28820.27 46224.93\n [6260,] 19796.36 40728.99\n [6261,] 34322.83 39825.59\n [6262,] 41290.98 37557.96\n [6263,] 26146.26 47685.96\n [6264,] 21133.84 41240.77\n [6265,] 20941.42 41191.45\n [6266,] 28070.24 45161.87\n [6267,] 35675.29 42775.10\n [6268,] 11597.31 35922.48\n [6269,] 32451.97 41520.06\n [6270,] 30257.11 38926.29\n [6271,] 32588.22 41800.05\n [6272,] 28725.17 44951.11\n [6273,] 40717.54 39173.75\n [6274,] 40681.87 38966.20\n [6275,] 32641.92 41715.31\n [6276,] 35887.22 40144.11\n [6277,] 31935.66 37005.36\n [6278,] 23911.52 31600.59\n [6279,] 29518.50 44942.28\n [6280,] 36758.46 43100.55\n [6281,] 18165.25 38246.09\n [6282,] 36635.36 42503.75\n [6283,] 30948.51 34492.43\n [6284,] 35360.07 42870.54\n [6285,] 29003.56 29339.05\n [6286,] 20712.63 31786.28\n [6287,] 34260.43 38429.96\n [6288,] 33624.15 40101.47\n [6289,] 25943.02 30568.08\n [6290,] 15504.93 35003.77\n [6291,] 24047.20 46433.08\n [6292,] 25897.24 30605.04\n [6293,] 32883.68 41849.98\n [6294,] 42623.63 38522.77\n [6295,] 24481.40 47738.04\n [6296,] 29289.18 44916.43\n [6297,] 41475.48 38729.62\n [6298,] 35887.22 40144.11\n [6299,] 29231.42 44639.74\n [6300,] 32811.80 41241.18\n [6301,] 15772.20 35395.86\n [6302,] 24481.40 47738.04\n [6303,] 34106.46 39357.73\n [6304,] 15026.18 37212.12\n [6305,] 18284.82 36773.19\n [6306,] 21072.27 41108.45\n [6307,] 29723.91 36595.57\n [6308,] 18766.97 41859.86\n [6309,] 37867.37 35441.37\n [6310,] 35712.21 42604.39\n [6311,] 15868.25 36717.64\n [6312,] 32511.63 41194.54\n [6313,] 34927.69 41672.07\n [6314,] 35533.40 42462.21\n [6315,] 37570.16 35247.23\n [6316,] 33588.07 32362.01\n [6317,] 37534.91 35424.19\n [6318,] 29890.68 38485.50\n [6319,] 36540.00 42751.57\n [6320,] 35833.84 42356.60\n [6321,] 36171.24 35176.07\n [6322,] 30528.63 35991.98\n [6323,] 28647.09 44649.54\n [6324,] 33120.85 40268.97\n [6325,] 29836.77 35212.87\n [6326,] 23864.51 46826.47\n [6327,] 24265.75 47745.73\n [6328,] 29103.59 38953.94\n [6329,] 20744.31 40996.73\n [6330,] 33204.33 41196.88\n [6331,] 28105.70 45483.59\n [6332,] 29408.30 44586.14\n [6333,] 39691.97 37938.11\n [6334,] 25777.83 30099.89\n [6335,] 28005.53 43731.97\n [6336,] 42301.76 39477.11\n [6337,] 35221.40 33308.23\n [6338,] 23937.62 47167.21\n [6339,] 27146.02 29318.47\n [6340,] 19295.24 36928.24\n [6341,] 33138.70 42041.06\n [6342,] 27097.09 29466.38\n [6343,] 17666.79 40209.58\n [6344,] 12510.70 36503.99\n [6345,] 28069.61 44924.90\n [6346,] 28588.05 40098.15\n [6347,] 34520.18 40803.90\n [6348,] 32161.99 39437.89\n [6349,] 17915.85 40797.88\n [6350,] 38246.21 35153.85\n [6351,] 42385.13 37568.79\n [6352,] 17432.30 39816.08\n [6353,] 20870.29 41152.00\n [6354,] 20421.36 40822.60\n [6355,] 36953.94 41756.40\n [6356,] 29225.75 46061.89\n [6357,] 28879.22 45454.97\n [6358,] 15448.48 34379.43\n [6359,] 27520.09 46163.59\n [6360,] 18833.13 38400.38\n [6361,] 24481.40 47738.04\n [6362,] 30120.81 36692.22\n [6363,] 29298.53 45962.12\n [6364,] 20704.52 40032.40\n [6365,] 29351.87 38100.47\n [6366,] 30012.30 32655.67\n [6367,] 23864.51 46826.47\n [6368,] 18937.83 40434.29\n [6369,] 26707.21 28914.60\n [6370,] 28994.82 38003.54\n [6371,] 19529.88 40944.66\n [6372,] 34087.15 39457.88\n [6373,] 30660.95 35482.47\n [6374,] 39520.59 36677.69\n [6375,] 36222.76 42860.59\n [6376,] 39358.29 36996.24\n [6377,] 27397.84 48130.23\n [6378,] 12695.29 36423.01\n [6379,] 18350.16 36659.77\n [6380,] 12988.04 36471.81\n [6381,] 29229.56 46022.74\n [6382,] 24131.67 46487.49\n [6383,] 31756.01 37413.44\n [6384,] 35530.79 40100.79\n [6385,] 40713.98 39216.49\n [6386,] 41821.75 36979.29\n [6387,] 32605.50 41178.63\n [6388,] 36863.08 43025.82\n [6389,] 39083.65 37556.97\n [6390,] 27304.32 47968.69\n [6391,] 41737.59 39498.95\n [6392,] 38671.12 34810.79\n [6393,] 33115.18 39220.24\n [6394,] 32803.26 41317.97\n [6395,] 33927.36 34743.41\n [6396,] 24098.25 46567.49\n [6397,] 31668.99 35184.99\n [6398,] 29164.47 39971.51\n [6399,] 15488.83 36506.53\n [6400,] 39576.44 36521.72\n [6401,] 34591.51 40782.49\n [6402,] 36938.43 42682.97\n [6403,] 14175.62 36752.99\n [6404,] 35568.35 43392.61\n [6405,] 40702.12 39068.18\n [6406,] 39526.58 37785.62\n [6407,] 36536.14 41556.12\n [6408,] 39770.57 37766.92\n [6409,] 18205.12 41735.91\n [6410,] 42276.86 37346.90\n [6411,] 36537.44 41164.11\n [6412,] 21144.59 41060.65\n [6413,] 29891.20 36699.09\n [6414,] 34274.93 42145.44\n [6415,] 27304.32 47968.69\n [6416,] 24075.75 46127.70\n [6417,] 35539.98 39998.97\n [6418,] 36807.00 42645.69\n [6419,] 30833.55 35701.80\n [6420,] 33150.04 37181.11\n [6421,] 28010.22 44168.13\n [6422,] 21044.95 41025.20\n [6423,] 24369.39 47482.38\n [6424,] 20451.59 33486.83\n [6425,] 34383.06 41646.34\n [6426,] 35446.93 42794.93\n [6427,] 24227.83 46947.12\n [6428,] 35958.92 34459.49\n [6429,] 18044.66 42402.07\n [6430,] 25544.25 30619.87\n [6431,] 13256.55 35349.69\n [6432,] 13471.60 37247.55\n [6433,] 18674.01 33668.10\n [6434,] 29225.56 45899.52\n [6435,] 35312.99 42884.75\n [6436,] 39868.02 37588.96\n [6437,] 36247.42 41447.38\n [6438,] 24614.05 46864.25\n [6439,] 19515.53 37018.50\n [6440,] 21053.09 33228.13\n [6441,] 35156.98 40695.52\n [6442,] 36611.14 42695.18\n [6443,] 22274.14 31974.94\n [6444,] 35317.71 43315.87\n [6445,] 19585.79 40949.14\n [6446,] 32990.37 41605.84\n [6447,] 33466.48 32420.06\n [6448,] 24508.71 47751.29\n [6449,] 36705.86 35306.88\n [6450,] 27265.75 47952.87\n [6451,] 36354.80 41087.62\n [6452,] 29213.82 44512.85\n [6453,] 35047.75 40679.95\n [6454,] 21186.67 40627.75\n [6455,] 33147.66 41326.87\n [6456,] 26059.10 30099.20\n [6457,] 25258.81 29285.57\n [6458,] 31204.28 32179.87\n [6459,] 29652.96 44954.66\n [6460,] 35785.39 34519.69\n [6461,] 21201.18 41264.64\n [6462,] 35509.95 43461.37\n [6463,] 17824.03 40232.22\n [6464,] 30474.74 36269.11\n [6465,] 19654.90 41062.14\n [6466,] 34514.86 40852.39\n [6467,] 39516.17 37584.35\n [6468,] 29968.62 35980.90\n [6469,] 29109.09 38999.35\n [6470,] 35414.54 42625.10\n [6471,] 18768.48 36459.61\n [6472,] 32878.47 41215.94\n [6473,] 33513.51 33797.32\n [6474,] 39914.89 37706.46\n [6475,] 33324.93 42023.05\n [6476,] 19009.03 40492.90\n [6477,] 35618.28 33714.07\n [6478,] 39358.29 36996.24\n [6479,] 30869.26 33741.48\n [6480,] 36520.56 42844.74\n [6481,] 35594.66 34326.76\n [6482,] 36117.49 41585.11\n [6483,] 29324.06 45320.53\n [6484,] 13335.01 35633.92\n [6485,] 34349.51 40086.66\n [6486,] 38078.00 34457.37\n [6487,] 29175.17 35432.24\n [6488,] 14080.05 36749.21\n [6489,] 36998.70 31789.68\n [6490,] 28651.28 46386.79\n [6491,] 36146.21 35083.09\n [6492,] 25258.81 29285.57\n [6493,] 35978.83 42899.21\n [6494,] 29298.53 45962.12\n [6495,] 25174.14 47338.43\n [6496,] 33797.02 34655.09\n [6497,] 12906.73 36470.75\n [6498,] 17343.10 39900.47\n [6499,] 33049.47 41677.27\n [6500,] 34802.40 40676.88\n [6501,] 36227.14 42730.56\n [6502,] 21702.95 47038.04\n [6503,] 29346.24 44872.19\n [6504,] 39576.44 36521.72\n [6505,] 29417.95 39047.97\n [6506,] 31678.09 34080.63\n [6507,] 18290.97 37107.07\n [6508,] 20118.77 40430.88\n [6509,] 29071.88 46208.62\n [6510,] 28659.23 44273.97\n [6511,] 29135.03 46121.71\n [6512,] 39414.73 37674.20\n [6513,] 24227.09 31453.43\n [6514,] 39060.28 37388.80\n [6515,] 28322.68 39876.58\n [6516,] 29731.87 36630.69\n [6517,] 28404.62 46697.35\n [6518,] 39729.72 34710.92\n [6519,] 23177.28 45910.55\n [6520,] 32734.35 36813.45\n [6521,] 32570.89 39211.62\n [6522,] 40018.30 35009.87\n [6523,] 34085.33 41868.11\n [6524,] 23296.00 46266.90\n [6525,] 39805.39 36969.62\n [6526,] 18676.55 38355.00\n [6527,] 35446.93 42794.93\n [6528,] 24407.14 47097.81\n [6529,] 36295.55 42919.33\n [6530,] 38636.54 34545.43\n [6531,] 28491.97 44464.63\n [6532,] 25631.35 30735.62\n [6533,] 36494.87 41211.26\n [6534,] 32503.38 32711.82\n [6535,] 24442.04 47860.89\n [6536,] 21058.30 40383.48\n [6537,] 31549.60 37322.49\n [6538,] 38830.62 35225.59\n [6539,] 39077.51 34527.09\n [6540,] 41490.49 37747.74\n [6541,] 41455.51 39436.06\n [6542,] 34361.20 37562.21\n [6543,] 20386.83 33776.77\n [6544,] 30138.57 36909.09\n [6545,] 40641.62 37154.17\n [6546,] 34972.07 40449.94\n [6547,] 39042.69 37504.16\n [6548,] 26575.72 48237.12\n [6549,] 25420.80 28397.40\n [6550,] 29519.15 44638.48\n [6551,] 36247.42 41447.38\n [6552,] 21201.18 41264.64\n [6553,] 21408.13 46424.22\n [6554,] 41654.63 39147.39\n [6555,] 26808.50 29468.20\n [6556,] 38861.12 36955.50\n [6557,] 26210.79 48545.18\n [6558,] 12364.93 36619.72\n [6559,] 36998.70 31789.68\n [6560,] 23918.98 46921.66\n [6561,] 27664.43 29937.31\n [6562,] 31281.70 35494.06\n [6563,] 18350.16 36659.77\n [6564,] 36975.56 42718.09\n [6565,] 29361.72 44631.99\n [6566,] 40498.55 33479.16\n [6567,] 39488.95 36601.54\n [6568,] 39339.64 37876.30\n [6569,] 17083.67 39944.17\n [6570,] 34034.29 39853.85\n [6571,] 34404.52 41842.70\n [6572,] 36021.15 43104.21\n [6573,] 34975.51 39884.43\n [6574,] 29319.59 37668.94\n [6575,] 34187.24 41748.06\n [6576,] 29533.95 44678.75\n [6577,] 17638.14 40260.45\n [6578,] 12886.36 35298.85\n [6579,] 29181.37 37605.60\n [6580,] 30955.71 33979.82\n [6581,] 35189.88 43046.93\n [6582,] 35272.33 42811.32\n [6583,] 20387.04 33825.18\n [6584,] 35253.56 41968.84\n [6585,] 26693.27 30307.66\n [6586,] 21089.52 40146.58\n [6587,] 29572.09 44921.42\n [6588,] 23892.90 46240.34\n [6589,] 31655.89 35011.69\n [6590,] 34330.82 40189.65\n [6591,] 41486.57 38767.35\n [6592,] 26278.30 47358.84\n [6593,] 40655.03 38880.45\n [6594,] 13187.45 35713.75\n [6595,] 36362.59 42820.88\n [6596,] 29008.08 45470.67\n [6597,] 35133.53 38837.32\n [6598,] 20770.26 32379.02\n [6599,] 33963.43 39423.57\n [6600,] 35026.93 42837.67\n [6601,] 29636.10 45700.11\n [6602,] 18660.11 38392.70\n [6603,] 32867.43 41342.68\n [6604,] 15364.62 35863.65\n [6605,] 13874.84 36230.08\n [6606,] 36146.21 35083.09\n [6607,] 23200.62 46549.26\n [6608,] 27306.60 48063.03\n [6609,] 32147.19 39007.84\n [6610,] 36635.36 42503.75\n [6611,] 17295.98 39829.52\n [6612,] 36797.03 34893.67\n [6613,] 29263.83 44869.00\n [6614,] 29296.97 45063.20\n [6615,] 18400.12 35694.91\n [6616,] 41039.91 36035.19\n [6617,] 39435.14 37940.08\n [6618,] 36602.65 41637.89\n [6619,] 32815.04 41834.40\n [6620,] 34505.30 41813.00\n [6621,] 33606.42 31464.62\n [6622,] 28975.96 37820.80\n [6623,] 39691.97 37938.11\n [6624,] 35339.78 40524.67\n [6625,] 35955.71 34420.96\n [6626,] 29696.57 44798.01\n [6627,] 32814.90 33270.48\n [6628,] 37827.54 35426.78\n [6629,] 37037.68 41827.75\n [6630,] 42115.73 38343.47\n [6631,] 29752.71 35960.02\n [6632,] 35642.76 43519.88\n [6633,] 28938.60 45939.10\n [6634,] 29065.93 45407.81\n [6635,] 20992.74 41161.79\n [6636,] 32359.79 36512.83\n [6637,] 19585.79 40949.14\n [6638,] 23918.98 46921.66\n [6639,] 35871.57 39860.80\n [6640,] 35255.86 42983.08\n [6641,] 23266.43 46774.38\n [6642,] 21131.93 40570.65\n [6643,] 35206.53 42464.67\n [6644,] 36788.90 41836.85\n [6645,] 18414.68 36705.26\n [6646,] 27717.95 46030.43\n [6647,] 25527.99 28635.69\n [6648,] 21133.84 41240.77\n [6649,] 27514.73 45351.85\n [6650,] 34334.65 42049.85\n [6651,] 29308.67 35192.93\n [6652,] 18516.88 42055.68\n [6653,] 32676.45 41702.54\n [6654,] 34520.18 40803.90\n [6655,] 21532.37 46862.86\n [6656,] 25388.93 30638.79\n [6657,] 29723.91 36595.57\n [6658,] 18371.67 42947.87\n [6659,] 34615.43 41214.30\n [6660,] 14901.40 37078.94\n [6661,] 36171.24 35176.07\n [6662,] 35833.14 41255.73\n [6663,] 20814.19 40059.29\n [6664,] 38970.61 36953.20\n [6665,] 34529.68 40756.35\n [6666,] 32743.27 41330.52\n [6667,] 41780.74 39687.97\n [6668,] 17736.08 40710.81\n [6669,] 22241.80 46587.82\n [6670,] 15497.96 35332.11\n [6671,] 30920.40 34483.81\n [6672,] 27509.28 45622.36\n [6673,] 25813.88 47950.37\n [6674,] 14754.68 36104.58\n [6675,] 25847.01 48622.47\n [6676,] 34238.92 38551.86\n [6677,] 41829.76 39500.50\n [6678,] 16093.65 36761.00\n [6679,] 36116.34 43022.32\n [6680,] 27146.02 29318.47\n [6681,] 14210.49 36691.54\n [6682,] 30641.17 35742.37\n [6683,] 35271.89 43005.46\n [6684,] 29378.49 46027.74\n [6685,] 37029.84 42595.50\n [6686,] 35270.50 33315.95\n [6687,] 17808.54 36497.59\n [6688,] 34514.86 40852.39\n [6689,] 29434.38 44715.69\n [6690,] 35568.35 43392.61\n [6691,] 36051.03 42917.24\n [6692,] 33508.81 33592.08\n [6693,] 35519.81 42819.11\n [6694,] 17792.57 36409.68\n [6695,] 39526.58 37785.62\n [6696,] 30579.35 32233.25\n [6697,] 30546.31 33826.82\n [6698,] 21185.33 41020.82\n [6699,] 41049.10 38096.10\n [6700,] 19233.32 37000.79\n [6701,] 39190.95 36539.70\n [6702,] 34356.75 40213.43\n [6703,] 32666.20 41556.04\n [6704,] 17520.66 33991.60\n [6705,] 35231.73 42964.14\n [6706,] 33249.23 37083.08\n [6707,] 15895.90 35450.83\n [6708,] 24157.40 47080.03\n [6709,] 34044.96 33916.73\n [6710,] 25882.67 48648.61\n [6711,] 21044.95 41025.20\n [6712,] 32460.38 39404.53\n [6713,] 35176.48 43000.43\n [6714,] 39526.42 37747.57\n [6715,] 28929.78 46359.20\n [6716,] 17773.53 39688.05\n [6717,] 28710.67 44821.79\n [6718,] 35524.84 42400.71\n [6719,] 40641.62 37154.17\n [6720,] 35363.35 42475.21\n [6721,] 34026.96 39725.85\n [6722,] 35787.70 42726.34\n [6723,] 18423.88 41845.33\n [6724,] 32876.22 41763.94\n [6725,] 24188.18 46410.91\n [6726,] 25804.38 48534.26\n [6727,] 22241.80 46587.82\n [6728,] 35189.88 43046.93\n [6729,] 34733.15 40691.51\n [6730,] 14100.74 36480.41\n [6731,] 41486.57 38767.35\n [6732,] 36731.81 35230.12\n [6733,] 35619.90 41896.12\n [6734,] 21009.67 40822.65\n [6735,] 23827.88 47341.28\n [6736,] 32533.29 41805.60\n [6737,] 36788.90 41836.85\n [6738,] 24910.74 30751.74\n [6739,] 24588.33 47679.03\n [6740,] 28456.59 43881.65\n [6741,] 13928.71 36130.85\n [6742,] 36741.21 33892.54\n [6743,] 35530.79 40100.79\n [6744,] 28073.76 45235.22\n [6745,] 18833.13 38400.38\n [6746,] 20145.42 40375.84\n [6747,] 40685.82 37816.66\n [6748,] 35888.87 34501.67\n [6749,] 41256.54 36653.64\n [6750,] 31936.64 37254.53\n [6751,] 25995.77 48741.06\n [6752,] 36328.51 42976.62\n [6753,] 21276.85 41202.55\n [6754,] 21027.30 40196.31\n [6755,] 20941.42 41191.45\n [6756,] 32472.41 41818.76\n [6757,] 29695.39 45409.00\n [6758,] 23540.98 46004.53\n [6759,] 18311.50 36982.92\n [6760,] 32650.92 41800.04\n [6761,] 27363.65 30513.91\n [6762,] 30207.09 39331.63\n [6763,] 42087.96 37968.94\n [6764,] 29162.40 40152.03\n [6765,] 19750.32 36820.26\n [6766,] 28502.94 46612.67\n [6767,] 20954.52 41110.65\n [6768,] 32226.54 33128.13\n [6769,] 29717.36 36671.49\n [6770,] 34096.12 42002.61\n [6771,] 15504.93 35003.77\n [6772,] 32984.54 39861.00\n [6773,] 36653.96 42664.67\n [6774,] 21369.88 46336.67\n [6775,] 24481.40 47738.04\n [6776,] 29866.80 35121.52\n [6777,] 35662.96 41118.33\n [6778,] 25430.50 30891.82\n [6779,] 23128.76 47176.38\n [6780,] 26708.58 28524.10\n [6781,] 39066.80 39829.05\n [6782,] 35529.25 33696.58\n [6783,] 14941.86 37017.30\n [6784,] 41804.67 39610.12\n [6785,] 27510.51 30193.82\n [6786,] 20769.96 41218.47\n [6787,] 28649.77 40151.98\n [6788,] 35552.70 43636.58\n [6789,] 27022.60 29406.75\n [6790,] 35817.33 41613.06\n [6791,] 30618.32 38345.09\n [6792,] 34291.08 41039.86\n [6793,] 32668.88 41133.24\n [6794,] 34458.24 41681.86\n [6795,] 21679.93 46187.26\n [6796,] 32821.64 41699.95\n [6797,] 26150.55 29905.19\n [6798,] 36245.65 42907.08\n [6799,] 17823.72 40344.01\n [6800,] 39773.12 36445.53\n [6801,] 30840.38 35490.01\n [6802,] 18426.40 35847.48\n [6803,] 36284.30 42992.00\n [6804,] 42199.75 39005.48\n [6805,] 34529.68 40756.35\n [6806,] 32650.92 41800.04\n [6807,] 29010.23 45755.52\n [6808,] 18463.66 38246.94\n [6809,] 34148.60 32242.78\n [6810,] 19255.04 40123.24\n [6811,] 28105.67 45836.81\n [6812,] 25777.63 47767.66\n [6813,] 25365.21 30116.09\n [6814,] 15322.25 37193.05\n [6815,] 34848.50 39827.47\n [6816,] 13794.07 35965.73\n [6817,] 24651.29 47679.40\n [6818,] 14754.68 36104.58\n [6819,] 39066.80 39829.05\n [6820,] 41781.11 38063.08\n [6821,] 24609.27 47118.15\n [6822,] 24629.97 47757.26\n [6823,] 18159.06 42530.00\n [6824,] 21603.38 39573.42\n [6825,] 29328.33 38742.64\n [6826,] 29652.73 45295.09\n [6827,] 34361.26 39904.38\n [6828,] 28777.71 45804.64\n [6829,] 18686.57 42716.93\n [6830,] 28014.68 45473.31\n [6831,] 39017.45 37456.75\n [6832,] 35277.79 43057.12\n [6833,] 40730.93 39254.96\n [6834,] 24064.01 47283.79\n [6835,] 15828.73 36609.26\n [6836,] 22199.95 46420.34\n [6837,] 27326.46 29289.20\n [6838,] 29772.23 44831.65\n [6839,] 21208.52 41231.97\n [6840,] 40143.01 34063.12\n [6841,] 32851.48 41722.74\n [6842,] 22406.38 32266.79\n [6843,] 42160.18 39511.98\n [6844,] 35913.37 33783.59\n [6845,] 18476.24 38153.20\n [6846,] 35485.40 42891.67\n [6847,] 23855.26 47052.15\n [6848,] 34404.52 41842.70\n [6849,] 23901.62 45980.35\n [6850,] 31264.70 35296.29\n [6851,] 18266.55 37019.18\n [6852,] 15225.07 37019.78\n [6853,] 20769.96 41218.47\n [6854,] 21163.74 34128.30\n [6855,] 28899.78 28918.09\n [6856,] 32990.37 41605.84\n [6857,] 35255.86 42983.08\n [6858,] 17518.83 39833.52\n [6859,] 29523.81 45655.15\n [6860,] 35021.31 43010.55\n [6861,] 29650.89 37695.40\n [6862,] 34282.70 41941.51\n [6863,] 33449.82 32310.48\n [6864,] 24651.29 47679.40\n [6865,] 28820.27 46224.93\n [6866,] 19533.21 36811.42\n [6867,] 12790.82 36586.36\n [6868,] 21177.26 47294.45\n [6869,] 29433.32 45978.74\n [6870,] 26324.96 47646.87\n [6871,] 17384.05 35832.87\n [6872,] 29140.92 40269.45\n [6873,] 39904.78 36750.55\n [6874,] 23893.10 46585.04\n [6875,] 33049.47 41677.27\n [6876,] 32226.54 33128.13\n [6877,] 28073.76 45235.22\n [6878,] 30342.88 35998.68\n [6879,] 35524.84 42400.71\n [6880,] 41821.75 36979.29\n [6881,] 35617.49 40013.95\n [6882,] 35317.71 43315.87\n [6883,] 23888.43 46536.67\n [6884,] 27554.05 29417.25\n [6885,] 35999.00 41409.05\n [6886,] 20744.31 40996.73\n [6887,] 32438.34 36488.81\n [6888,] 29237.28 46110.40\n [6889,] 32407.76 38821.36\n [6890,] 33715.84 32484.03\n [6891,] 15557.30 34906.31\n [6892,] 15364.62 35863.65\n [6893,] 28963.89 45446.68\n [6894,] 15215.13 37161.59\n [6895,] 21933.27 45787.67\n [6896,] 39957.55 34435.21\n [6897,] 28617.56 45894.25\n [6898,] 31553.53 37259.87\n [6899,] 32179.25 37461.42\n [6900,] 16194.61 36810.65\n [6901,] 19585.79 40949.14\n [6902,] 35202.25 42976.70\n [6903,] 30601.23 38459.25\n [6904,] 34469.95 41889.54\n [6905,] 26167.70 30125.23\n [6906,] 29585.55 35191.21\n [6907,] 32929.70 40067.96\n [6908,] 31756.01 37413.44\n [6909,] 18165.25 38246.09\n [6910,] 13225.54 35898.66\n [6911,] 26354.58 48289.84\n [6912,] 21354.75 39607.06\n [6913,] 34111.56 42183.78\n [6914,] 28534.68 39758.72\n [6915,] 36451.70 42826.86\n [6916,] 26085.88 48562.06\n [6917,] 17582.77 33891.16\n [6918,] 34520.18 40803.90\n [6919,] 41508.92 36775.14\n [6920,] 39554.44 38013.39\n [6921,] 18616.19 42190.27\n [6922,] 30347.53 35907.04\n [6923,] 25804.38 48534.26\n [6924,] 41131.78 36303.27\n [6925,] 29572.89 37403.31\n [6926,] 37448.90 34998.53\n [6927,] 29176.07 37834.64\n [6928,] 29181.72 38185.97\n [6929,] 17251.08 35985.65\n [6930,] 33797.02 34655.09\n [6931,] 27140.14 29503.32\n [6932,] 20941.42 41191.45\n [6933,] 21133.84 41240.77\n [6934,] 34165.54 41998.48\n [6935,] 39190.67 37767.09\n [6936,] 34026.78 39811.49\n [6937,] 29998.21 36512.00\n [6938,] 33006.93 41543.26\n [6939,] 12984.45 36911.17\n [6940,] 23341.42 46782.39\n [6941,] 35576.07 41273.14\n [6942,] 21461.89 35631.46\n [6943,] 23850.54 47287.02\n [6944,] 35307.63 42426.14\n [6945,] 36540.00 42751.57\n [6946,] 36482.52 42857.42\n [6947,] 29670.16 44909.77\n [6948,] 29696.57 44798.01\n [6949,] 17201.82 36080.82\n [6950,] 14210.49 36691.54\n [6951,] 32890.84 40251.77\n [6952,] 36367.69 42271.02\n [6953,] 30091.23 32740.48\n [6954,] 21201.18 41264.64\n [6955,] 24064.01 47283.79\n [6956,] 40497.28 39502.69\n [6957,] 33343.93 42143.21\n [6958,] 33006.93 41543.26\n [6959,] 18212.10 40497.22\n [6960,] 30393.19 39175.25\n [6961,] 31935.66 37005.36\n [6962,] 19739.24 36934.02\n [6963,] 29434.38 44715.69\n [6964,] 34540.71 40900.35\n [6965,] 32858.46 41642.97\n [6966,] 28447.34 43958.92\n [6967,] 27146.02 29318.47\n [6968,] 28991.85 45431.57\n [6969,] 28885.44 28667.40\n [6970,] 19582.79 40314.74\n [6971,] 29452.09 44942.83\n [6972,] 16072.26 37261.40\n [6973,] 34909.73 40934.33\n [6974,] 17260.67 39852.53\n [6975,] 25263.27 30692.38\n [6976,] 27479.64 45700.19\n [6977,] 25210.47 30633.53\n [6978,] 41451.10 38258.92\n [6979,] 39750.97 37936.73\n [6980,] 26575.72 48237.12\n [6981,] 22637.45 32298.62\n [6982,] 18616.72 42948.47\n [6983,] 34721.19 40540.21\n [6984,] 35472.31 42732.76\n [6985,] 18338.06 40323.70\n [6986,] 21072.27 41108.45\n [6987,] 30373.00 36421.46\n [6988,] 20656.99 33528.13\n [6989,] 40813.72 37158.34\n [6990,] 29763.60 35203.33\n [6991,] 29365.53 34999.36\n [6992,] 35862.43 41299.99\n [6993,] 23409.18 46998.36\n [6994,] 26103.31 30159.16\n [6995,] 31936.94 35178.33\n [6996,] 21235.14 47600.28\n [6997,] 18375.27 38071.34\n [6998,] 21281.71 45373.65\n [6999,] 28885.44 28667.40\n [7000,] 36190.96 41644.13\n [7001,] 32916.21 41754.72\n [7002,] 16206.75 36923.77\n [7003,] 32666.20 41556.04\n [7004,] 18080.32 42321.85\n [7005,] 27265.75 47952.87\n [7006,] 35910.45 34472.84\n [7007,] 34526.12 41877.85\n [7008,] 32428.92 39127.55\n [7009,] 42298.34 37028.72\n [7010,] 36938.43 42682.97\n [7011,] 39750.97 37936.73\n [7012,] 27022.60 29406.75\n [7013,] 27216.24 29777.37\n [7014,] 37728.93 34149.48\n [7015,] 29109.09 38999.35\n [7016,] 33799.58 39206.57\n [7017,] 35561.22 42685.17\n [7018,] 30250.84 36623.37\n [7019,] 41161.99 38004.00\n [7020,] 18411.09 36744.00\n [7021,] 18338.06 40323.70\n [7022,] 35411.93 42559.87\n [7023,] 35723.75 33837.35\n [7024,] 25158.81 30687.65\n [7025,] 13897.52 36424.28\n [7026,] 21294.54 41240.64\n [7027,] 25180.09 47183.19\n [7028,] 20469.09 33523.33\n [7029,] 33513.51 33797.32\n [7030,] 28881.79 45954.29\n [7031,] 21144.59 41060.65\n [7032,] 26167.70 30125.23\n [7033,] 28332.38 44923.56\n [7034,] 34609.76 38025.76\n [7035,] 29961.64 36412.45\n [7036,] 29429.44 35266.30\n [7037,] 33586.39 39730.72\n [7038,] 16078.39 36800.41\n [7039,] 40497.28 39502.69\n [7040,] 35156.98 40695.52\n [7041,] 30509.77 34841.36\n [7042,] 42175.60 38227.17\n [7043,] 27881.24 45137.97\n [7044,] 36814.69 35037.62\n [7045,] 32641.92 41715.31\n [7046,] 36171.24 35176.07\n [7047,] 34384.72 40015.73\n [7048,] 35416.34 40926.49\n [7049,] 25420.80 28397.40\n [7050,] 38643.94 35459.35\n [7051,] 34540.71 40900.35\n [7052,] 35411.93 42559.87\n [7053,] 34150.21 42180.99\n [7054,] 19758.10 36437.70\n [7055,] 38585.32 35480.32\n [7056,] 38668.12 35062.69\n [7057,] 34021.22 39772.75\n [7058,] 34512.83 37621.43\n [7059,] 28628.33 46298.32\n [7060,] 13302.14 36267.93\n [7061,] 40537.78 36902.04\n [7062,] 27624.34 29285.24\n [7063,] 40684.58 39024.98\n [7064,] 32426.61 32898.13\n [7065,] 32782.21 41700.54\n [7066,] 29043.74 46064.93\n [7067,] 22532.51 45969.63\n [7068,] 15678.23 35424.05\n [7069,] 34802.40 40676.88\n [7070,] 36807.00 42645.69\n [7071,] 18961.65 42668.27\n [7072,] 26103.31 30159.16\n [7073,] 16743.75 36560.73\n [7074,] 41780.74 39687.97\n [7075,] 38036.27 34041.67\n [7076,] 12550.33 35766.85\n [7077,] 32806.30 41626.16\n [7078,] 29795.74 33066.48\n [7079,] 33116.84 39637.87\n [7080,] 17334.42 33696.28\n [7081,] 28148.05 44062.45\n [7082,] 12028.90 36028.99\n [7083,] 31281.70 35494.06\n [7084,] 17394.19 35882.01\n [7085,] 28509.46 38986.49\n [7086,] 25675.16 28525.92\n [7087,] 24692.13 47138.10\n [7088,] 28534.08 44014.31\n [7089,] 32440.30 39656.62\n [7090,] 27679.64 46184.50\n [7091,] 34361.26 39904.38\n [7092,] 27323.46 28541.89\n [7093,] 34150.21 42180.99\n [7094,] 29043.01 46310.57\n [7095,] 21076.57 41233.31\n [7096,] 35405.91 40829.57\n [7097,] 34519.13 40047.58\n [7098,] 30088.36 36489.72\n [7099,] 39373.96 37215.96\n [7100,] 18040.26 36485.83\n [7101,] 17382.54 39925.74\n [7102,] 29008.86 46011.25\n [7103,] 32524.59 41721.90\n [7104,] 29584.94 44828.50\n [7105,] 22289.35 45798.53\n [7106,] 27096.78 29393.50\n [7107,] 33190.98 41392.37\n [7108,] 21053.09 33228.13\n [7109,] 41175.89 38759.93\n [7110,] 23543.19 47439.45\n [7111,] 14133.61 36727.94\n [7112,] 29555.18 44742.73\n [7113,] 24002.71 46664.72\n [7114,] 20898.88 39665.08\n [7115,] 29519.15 44638.48\n [7116,] 28468.15 38954.04\n [7117,] 24662.07 46778.75\n [7118,] 18811.14 38163.72\n [7119,] 41189.84 38282.47\n [7120,] 29519.15 44638.48\n [7121,] 40049.91 33755.10\n [7122,] 17030.45 36365.00\n [7123,] 29229.60 44394.57\n [7124,] 39271.87 34214.11\n [7125,] 18435.04 33420.05\n [7126,] 27363.82 48032.56\n [7127,] 34809.92 40477.37\n [7128,] 21312.16 47070.56\n [7129,] 28322.68 39876.58\n [7130,] 34404.52 41842.70\n [7131,] 33049.47 41677.27\n [7132,] 19813.15 36470.57\n [7133,] 21393.74 47085.59\n [7134,] 21341.36 47400.41\n [7135,] 28521.55 43968.06\n [7136,] 20673.69 33049.58\n [7137,] 17934.34 40186.89\n [7138,] 21177.26 47294.45\n [7139,] 28643.78 45014.00\n [7140,] 19654.90 41062.14\n [7141,] 42226.52 39433.51\n [7142,] 23807.44 32254.03\n [7143,] 35346.30 42102.69\n [7144,] 32785.76 41808.31\n [7145,] 37291.13 35094.75\n [7146,] 32821.21 33232.70\n [7147,] 34951.07 41098.09\n [7148,] 34561.49 40900.31\n [7149,] 12769.24 35689.66\n [7150,] 20376.47 40244.87\n [7151,] 39479.99 36472.97\n [7152,] 35176.48 43000.43\n [7153,] 25897.55 48205.37\n [7154,] 29032.17 37885.81\n [7155,] 21099.53 41178.93\n [7156,] 26630.20 47351.29\n [7157,] 41093.32 37317.37\n [7158,] 29632.80 35203.32\n [7159,] 17536.14 39884.51\n [7160,] 12970.93 36199.41\n [7161,] 25488.40 29233.25\n [7162,] 21053.09 33228.13\n [7163,] 18165.40 36958.47\n [7164,] 22274.14 31974.94\n [7165,] 22623.63 45943.54\n [7166,] 27108.79 28490.16\n [7167,] 36210.42 42581.79\n [7168,] 29317.76 44977.20\n [7169,] 25100.24 33339.65\n [7170,] 24279.23 47795.02\n [7171,] 21369.88 46336.67\n [7172,] 34844.24 39755.20\n [7173,] 41919.64 37077.83\n [7174,] 28545.55 39010.84\n [7175,] 38286.08 35423.87\n [7176,] 29518.30 45253.55\n [7177,] 18456.51 42726.80\n [7178,] 42209.96 37396.80\n [7179,] 34085.33 41868.11\n [7180,] 35064.88 40490.91\n [7181,] 35505.43 42592.31\n [7182,] 36540.00 42751.57\n [7183,] 36859.47 42540.04\n [7184,] 30879.43 39203.43\n [7185,] 26130.85 48106.92\n [7186,] 18034.92 40564.55\n [7187,] 30425.04 32043.05\n [7188,] 34927.69 41672.07\n [7189,] 18034.92 40564.55\n [7190,] 29359.94 44686.60\n [7191,] 34834.19 39712.94\n [7192,] 26059.10 30099.20\n [7193,] 39940.62 34522.49\n [7194,] 41764.02 36327.78\n [7195,] 19582.79 40314.74\n [7196,] 23920.72 46199.02\n [7197,] 28632.87 46911.40\n [7198,] 20761.49 40539.41\n [7199,] 17438.75 39918.25\n [7200,] 34035.13 36986.06\n [7201,] 35312.99 42884.75\n [7202,] 27905.40 45858.42\n [7203,] 29169.15 44391.25\n [7204,] 37653.91 34286.77\n [7205,] 29039.49 34765.94\n [7206,] 18303.74 40264.67\n [7207,] 39083.65 37556.97\n [7208,] 32603.98 41458.53\n [7209,] 20188.66 40630.51\n [7210,] 24002.71 46664.72\n [7211,] 28240.06 39477.60\n [7212,] 34110.19 41707.31\n [7213,] 29298.53 45962.12\n [7214,] 29008.08 45470.67\n [7215,] 18420.21 42861.77\n [7216,] 18371.85 36948.49\n [7217,] 21310.93 40054.09\n [7218,] 15749.40 36965.17\n [7219,] 26103.31 30159.16\n [7220,] 29378.49 46027.74\n [7221,] 35299.86 33308.21\n [7222,] 28973.82 46300.29\n [7223,] 34031.90 41500.04\n [7224,] 26693.27 30307.66\n [7225,] 31125.61 33382.79\n [7226,] 35341.91 40787.90\n [7227,] 29172.47 37879.24\n [7228,] 42280.55 37552.40\n [7229,] 40979.39 37259.76\n [7230,] 28076.68 45270.79\n [7231,] 13641.77 35319.89\n [7232,] 34974.31 38926.02\n [7233,] 29533.95 44678.75\n [7234,] 36116.34 43022.32\n [7235,] 25198.78 28815.09\n [7236,] 23034.63 46768.60\n [7237,] 34025.67 39498.31\n [7238,] 36189.66 41439.32\n [7239,] 36602.65 41637.89\n [7240,] 14210.49 36691.54\n [7241,] 25513.79 30760.40\n [7242,] 29172.47 37879.24\n [7243,] 18278.79 40349.84\n [7244,] 33953.01 36874.99\n [7245,] 29461.54 35205.89\n [7246,] 34733.29 39828.90\n [7247,] 29065.93 45407.81\n [7248,] 36494.87 41211.26\n [7249,] 35598.00 41613.32\n [7250,] 35389.59 41038.66\n [7251,] 28593.92 44540.97\n [7252,] 16924.61 36703.77\n [7253,] 34799.24 40773.24\n [7254,] 39260.03 37079.83\n [7255,] 24994.67 47144.29\n [7256,] 34153.57 41905.94\n [7257,] 23519.30 47201.67\n [7258,] 17516.17 39763.27\n [7259,] 39591.97 37584.43\n [7260,] 36653.96 42664.67\n [7261,] 28430.31 37065.18\n [7262,] 39257.33 39805.18\n [7263,] 18695.53 37593.48\n [7264,] 31990.69 37171.58\n [7265,] 35027.93 43052.26\n [7266,] 33030.01 41752.64\n [7267,] 18520.65 42140.82\n [7268,] 18421.11 33593.77\n [7269,] 23034.63 46768.60\n [7270,] 34322.83 39825.59\n [7271,] 35763.71 41252.26\n [7272,] 29130.00 46070.87\n [7273,] 21846.76 46663.50\n [7274,] 38428.02 35100.96\n [7275,] 35494.85 42778.30\n [7276,] 41935.69 36070.17\n [7277,] 28380.88 44249.50\n [7278,] 30318.49 38598.63\n [7279,] 29548.52 44871.70\n [7280,] 35280.24 40781.52\n [7281,] 29772.23 44831.65\n [7282,] 34510.00 41430.02\n [7283,] 20312.04 40832.78\n [7284,] 25882.67 48648.61\n [7285,] 41466.54 38691.58\n [7286,] 30443.29 32890.09\n [7287,] 32588.22 41800.05\n [7288,] 18292.20 42201.71\n [7289,] 30456.94 36680.90\n [7290,] 24369.39 47482.38\n [7291,] 20669.35 41279.55\n [7292,] 18160.26 40616.05\n [7293,] 29998.21 36512.00\n [7294,] 29702.01 44751.06\n [7295,] 30655.46 34229.44\n [7296,] 36520.56 42844.74\n [7297,] 26210.79 48545.18\n [7298,] 22242.19 46504.58\n [7299,] 18790.80 42868.87\n [7300,] 36494.87 41211.26\n [7301,] 39190.95 36539.70\n [7302,] 23764.95 32159.76\n [7303,] 29161.74 38232.97\n [7304,] 38292.78 34466.85\n [7305,] 27990.53 45332.55\n [7306,] 37029.84 42595.50\n [7307,] 39689.49 33812.06\n [7308,] 26210.79 48545.18\n [7309,] 29111.95 40346.36\n [7310,] 29298.53 45962.12\n [7311,] 32451.97 41520.06\n [7312,] 39940.62 34522.49\n [7313,] 41566.37 38659.39\n [7314,] 23443.40 45836.16\n [7315,] 41686.40 38978.13\n [7316,] 31724.69 33708.31\n [7317,] 17365.22 39759.29\n [7318,] 17798.75 36219.46\n [7319,] 35341.91 40787.90\n [7320,] 21133.84 41240.77\n [7321,] 14884.55 36739.75\n [7322,] 35675.29 42775.10\n [7323,] 36193.86 35019.60\n [7324,] 40684.58 39024.98\n [7325,] 29056.65 37745.86\n [7326,] 25492.64 30608.30\n [7327,] 29462.65 44542.38\n [7328,] 35377.25 43293.29\n [7329,] 34529.68 40756.35\n [7330,] 36494.87 41211.26\n [7331,] 17450.77 35507.23\n [7332,] 20086.59 31907.87\n [7333,] 29374.36 37567.03\n [7334,] 17897.18 41211.94\n [7335,] 26878.90 28287.80\n [7336,] 33460.86 39486.89\n [7337,] 23344.95 46419.29\n [7338,] 36976.44 41821.96\n [7339,] 29762.36 45002.24\n [7340,] 19566.61 36563.83\n [7341,] 39042.69 37504.16\n [7342,] 30444.94 38433.70\n [7343,] 18937.83 40434.29\n [7344,] 34920.56 40402.46\n [7345,] 24171.96 31505.67\n [7346,] 36494.87 41211.26\n [7347,] 28464.37 44875.44\n [7348,] 25603.53 30871.26\n [7349,] 34549.25 37718.77\n [7350,] 21152.53 40056.82\n [7351,] 35539.98 39998.97\n [7352,] 34520.18 40803.90\n [7353,] 29240.41 45813.68\n [7354,] 21070.60 33137.62\n [7355,] 17405.09 40176.90\n [7356,] 29410.98 45315.50\n [7357,] 21163.74 34128.30\n [7358,] 25258.81 29285.57\n [7359,] 32480.52 41577.30\n [7360,] 27705.12 45364.64\n [7361,] 41164.63 38097.93\n [7362,] 30272.23 36786.74\n [7363,] 24338.68 47544.49\n [7364,] 40486.94 36538.83\n [7365,] 32460.38 39404.53\n [7366,] 14080.05 36749.21\n [7367,] 32613.97 41568.03\n [7368,] 18666.11 38119.74\n [7369,] 18881.03 42505.55\n [7370,] 33274.04 40272.76\n [7371,] 36280.93 41076.93\n [7372,] 29924.80 36550.02\n [7373,] 27632.02 46135.67\n [7374,] 29043.74 46064.93\n [7375,] 20992.74 41161.79\n [7376,] 18422.44 36790.70\n [7377,] 13541.90 35943.67\n [7378,] 30416.59 36528.49\n [7379,] 17153.78 39877.90\n [7380,] 23639.55 46602.59\n [7381,] 15487.37 35822.35\n [7382,] 27782.60 45860.85\n [7383,] 20145.42 40375.84\n [7384,] 36212.71 41692.15\n [7385,] 40514.94 37768.02\n [7386,] 28623.21 46129.59\n [7387,] 29378.49 46027.74\n [7388,] 30435.60 32229.97\n [7389,] 26051.87 48431.33\n [7390,] 12954.10 35571.49\n [7391,] 39213.48 39908.40\n [7392,] 34505.87 40099.50\n [7393,] 18444.16 35902.29\n [7394,] 28644.62 46429.12\n [7395,] 18422.44 36790.70\n [7396,] 11955.56 36080.32\n [7397,] 32987.92 41688.56\n [7398,] 26677.20 48277.88\n [7399,] 23911.52 31600.59\n [7400,] 11980.86 36207.75\n [7401,] 32480.52 41577.30\n [7402,] 28539.45 44732.23\n [7403,] 36482.52 42857.42\n [7404,] 36282.07 31697.73\n [7405,] 36897.68 35313.56\n [7406,] 12968.01 35832.54\n [7407,] 15567.01 35501.20\n [7408,] 29225.56 45899.52\n [7409,] 21099.53 41178.93\n [7410,] 29179.92 38822.08\n [7411,] 25631.35 30735.62\n [7412,] 21526.24 39906.87\n [7413,] 32962.01 41239.69\n [7414,] 25271.27 30638.55\n [7415,] 39875.94 33952.51\n [7416,] 29644.04 44870.69\n [7417,] 35281.10 41921.70\n [7418,] 24793.85 47003.57\n [7419,] 18787.33 41790.25\n [7420,] 35016.05 42888.49\n [7421,] 29169.15 44391.25\n [7422,] 33541.38 32139.12\n [7423,] 36245.65 42907.08\n [7424,] 23827.88 47341.28\n [7425,] 35865.87 34348.01\n [7426,] 36349.34 42055.12\n [7427,] 26591.26 28653.83\n [7428,] 25581.12 30694.10\n [7429,] 25532.83 30833.41\n [7430,] 35593.41 43605.80\n [7431,] 39338.80 36965.68\n [7432,] 39235.36 40035.58\n [7433,] 41649.18 36489.22\n [7434,] 33330.62 39108.14\n [7435,] 36537.44 41164.11\n [7436,] 36713.12 43168.83\n [7437,] 34704.60 40653.66\n [7438,] 21362.46 46116.49\n [7439,] 32858.46 41642.97\n [7440,] 11924.80 36162.15\n [7441,] 39439.62 39675.40\n [7442,] 27809.48 46442.49\n [7443,] 20975.30 40886.84\n [7444,] 26575.72 48237.12\n [7445,] 36897.68 35313.56\n [7446,] 18645.41 42513.96\n [7447,] 12695.29 36423.01\n [7448,] 34983.59 32884.54\n [7449,] 25943.02 30568.08\n [7450,] 33129.97 41219.11\n [7451,] 34276.93 42009.52\n [7452,] 32785.76 41808.31\n [7453,] 30514.79 35190.65\n [7454,] 35642.76 43519.88\n [7455,] 33755.23 32341.70\n [7456,] 40476.76 33683.85\n [7457,] 26698.63 30346.56\n [7458,] 39732.47 36881.63\n [7459,] 39260.23 34137.56\n [7460,] 30207.09 39331.63\n [7461,] 14706.60 36195.17\n [7462,] 17365.22 39759.29\n [7463,] 33220.91 35298.52\n [7464,] 39917.80 34639.20\n [7465,] 18170.05 38540.53\n [7466,] 32666.20 41556.04\n [7467,] 37140.49 42216.39\n [7468,] 20673.42 40679.27\n [7469,] 36461.74 42100.26\n [7470,] 12549.42 35309.51\n [7471,] 29426.06 44899.70\n [7472,] 19654.90 41062.14\n [7473,] 15754.69 34520.18\n [7474,] 17365.22 39759.29\n [7475,] 26056.87 48669.59\n [7476,] 24224.68 47073.43\n [7477,] 18768.48 36459.61\n [7478,] 35889.58 39923.62\n [7479,] 29229.60 44394.57\n [7480,] 37101.96 41756.97\n [7481,] 35411.93 42559.87\n [7482,] 35189.88 43046.93\n [7483,] 36602.65 41637.89\n [7484,] 34111.56 42183.78\n [7485,] 27722.43 29885.24\n [7486,] 29041.45 45519.79\n [7487,] 29238.24 38668.87\n [7488,] 33955.15 40097.62\n [7489,] 28105.70 45483.59\n [7490,] 33190.98 41392.37\n [7491,] 28678.74 28487.07\n [7492,] 29749.74 36548.96\n [7493,] 40552.70 33664.32\n [7494,] 12962.10 36285.84\n [7495,] 41475.48 38729.62\n [7496,] 34848.50 39827.47\n [7497,] 14668.98 36214.38\n [7498,] 34013.23 33937.73\n [7499,] 18821.46 38322.57\n [7500,] 19983.91 40801.33\n [7501,] 18007.15 41429.98\n [7502,] 34260.43 38429.96\n [7503,] 31125.61 33382.79\n [7504,] 39886.07 36385.99\n [7505,] 21224.71 35657.32\n [7506,] 24442.04 47860.89\n [7507,] 17767.06 39779.97\n [7508,] 39526.58 37785.62\n [7509,] 27700.33 45833.64\n [7510,] 30909.56 33567.20\n [7511,] 31799.04 35139.03\n [7512,] 30581.59 38301.88\n [7513,] 17251.08 35985.65\n [7514,] 41162.33 37962.36\n [7515,] 15955.05 36691.62\n [7516,] 29216.54 38521.26\n [7517,] 24651.29 47679.40\n [7518,] 20669.35 41279.55\n [7519,] 17491.15 40233.45\n [7520,] 36537.44 41164.11\n [7521,] 34092.60 41956.90\n [7522,] 22195.68 45830.28\n [7523,] 17721.37 40468.65\n [7524,] 38866.78 36759.24\n [7525,] 20387.04 33825.18\n [7526,] 25193.11 33400.14\n [7527,] 39310.54 37658.48\n [7528,] 32581.39 41716.94\n [7529,] 37176.95 42225.87\n [7530,] 28087.45 44039.09\n [7531,] 32111.14 37605.39\n [7532,] 36735.18 42688.11\n [7533,] 35887.22 40144.11\n [7534,] 35224.91 39320.67\n [7535,] 35414.54 42625.10\n [7536,] 36613.65 41218.73\n [7537,] 28900.17 45686.07\n [7538,] 36256.31 41559.84\n [7539,] 19003.30 40310.58\n [7540,] 36104.48 42262.98\n [7541,] 32420.66 38867.87\n [7542,] 35170.47 33252.39\n [7543,] 20460.64 33596.21\n [7544,] 32207.62 37617.22\n [7545,] 20925.51 39779.80\n [7546,] 41923.79 36467.79\n [7547,] 40508.69 33444.94\n [7548,] 36247.42 41447.38\n [7549,] 36495.86 41268.56\n [7550,] 36362.59 42820.88\n [7551,] 32113.06 37563.15\n [7552,] 26012.73 48560.65\n [7553,] 41164.81 37923.90\n [7554,] 23464.01 45912.37\n [7555,] 18787.33 41790.25\n [7556,] 29577.99 44987.12\n [7557,] 32398.10 32843.35\n [7558,] 41146.38 37502.13\n [7559,] 40497.43 37515.47\n [7560,] 33460.86 39486.89\n [7561,] 35146.41 42100.77\n [7562,] 27780.65 29917.22\n [7563,] 24610.13 47162.66\n [7564,] 35189.88 43046.93\n [7565,] 17649.40 40442.93\n [7566,] 17449.68 34002.98\n [7567,] 36889.56 34893.90\n [7568,] 27625.96 45873.42\n [7569,] 28078.98 46056.46\n [7570,] 34520.18 40803.90\n [7571,] 32219.46 39302.36\n [7572,] 36322.84 42726.76\n [7573,] 34529.68 40756.35\n [7574,] 36184.55 42763.67\n [7575,] 41302.91 36750.45\n [7576,] 17520.66 33991.60\n [7577,] 25186.96 47092.87\n [7578,] 16819.01 36463.38\n [7579,] 30616.74 32921.62\n [7580,] 30416.59 36528.49\n [7581,] 39492.33 37236.59\n [7582,] 36741.21 33892.54\n [7583,] 35036.12 40361.23\n [7584,] 31722.51 33765.39\n [7585,] 25263.27 30692.38\n [7586,] 20567.41 32919.21\n [7587,] 24481.40 47738.04\n [7588,] 35202.25 42976.70\n [7589,] 21561.87 39600.05\n [7590,] 35384.62 34245.93\n [7591,] 40780.88 39182.39\n [7592,] 18105.21 42501.28\n [7593,] 35529.25 33696.58\n [7594,] 39190.95 36539.70\n [7595,] 15631.98 35554.58\n [7596,] 32972.82 41858.42\n [7597,] 21702.95 47038.04\n [7598,] 28772.63 28489.11\n [7599,] 36738.01 42359.71\n [7600,] 30196.95 39688.16\n [7601,] 21144.59 41060.65\n [7602,] 32815.04 41834.40\n [7603,] 24528.26 46812.80\n [7604,] 32650.92 41800.04\n [7605,] 35785.39 34519.69\n [7606,] 22242.19 46504.58\n [7607,] 30833.55 35701.80\n [7608,] 41490.49 37747.74\n [7609,] 36435.41 42891.01\n [7610,] 11611.80 35765.16\n [7611,] 27574.62 29477.28\n [7612,] 17846.67 40588.47\n [7613,] 29468.80 46014.66\n [7614,] 23714.32 45698.74\n [7615,] 32949.02 40144.66\n [7616,] 19462.61 36930.41\n [7617,] 33988.01 32332.98\n [7618,] 18739.71 40031.48\n [7619,] 28596.41 46470.05\n [7620,] 23468.56 32476.93\n [7621,] 26862.20 29745.50\n [7622,] 29723.91 36595.57\n [7623,] 28659.23 44273.97\n [7624,] 27415.98 48063.02\n [7625,] 35855.11 41836.87\n [7626,] 41781.85 36262.08\n [7627,] 40717.54 39173.75\n [7628,] 24157.40 47080.03\n [7629,] 30264.97 39315.69\n [7630,] 18974.36 38264.44\n [7631,] 27826.92 44480.34\n [7632,] 22572.83 46062.51\n [7633,] 36495.86 41268.56\n [7634,] 33620.96 39035.58\n [7635,] 20823.45 40920.64\n [7636,] 25330.36 30641.25\n [7637,] 23929.02 32338.14\n [7638,] 12729.27 36604.82\n [7639,] 33478.75 39604.91\n [7640,] 32405.49 36532.18\n [7641,] 32400.12 39411.20\n [7642,] 25847.01 48622.47\n [7643,] 27415.98 48063.02\n [7644,] 35183.76 40805.83\n [7645,] 29308.67 35192.93\n [7646,] 30038.83 32697.73\n [7647,] 34060.37 38708.37\n [7648,] 30091.23 32740.48\n [7649,] 34834.19 39712.94\n [7650,] 26012.73 48560.65\n [7651,] 25603.53 30871.26\n [7652,] 28645.96 45982.09\n [7653,] 19654.90 41062.14\n [7654,] 32867.43 41342.68\n [7655,] 36986.31 41681.37\n [7656,] 15450.42 37130.20\n [7657,] 27545.35 30190.75\n [7658,] 34549.25 37718.77\n [7659,] 36684.55 41778.21\n [7660,] 25692.69 28568.01\n [7661,] 26514.82 48054.34\n [7662,] 29111.95 40346.36\n [7663,] 20702.98 40344.01\n [7664,] 32477.58 41459.33\n [7665,] 21027.17 32579.22\n [7666,] 36104.48 42262.98\n [7667,] 24294.88 30717.60\n [7668,] 29175.17 35432.24\n [7669,] 35521.57 43287.94\n [7670,] 31673.40 37317.76\n [7671,] 29533.95 44678.75\n [7672,] 27415.98 48063.02\n [7673,] 33927.36 34743.41\n [7674,] 17640.22 36470.64\n [7675,] 28319.59 44439.95\n [7676,] 41527.96 39235.71\n [7677,] 39247.34 37901.67\n [7678,] 27589.06 29864.50\n [7679,] 35768.73 42579.08\n [7680,] 41982.17 39610.42\n [7681,] 18501.00 35913.49\n [7682,] 35280.24 40781.52\n [7683,] 34466.52 41831.05\n [7684,] 28543.46 39220.01\n [7685,] 42444.75 37109.97\n [7686,] 23520.66 46830.54\n [7687,] 17316.22 39704.72\n [7688,] 21095.91 40990.18\n [7689,] 28447.34 43958.92\n [7690,] 30528.63 35991.98\n [7691,] 18363.15 35941.92\n [7692,] 40508.69 33444.94\n [7693,] 28899.78 28918.09\n [7694,] 18706.36 42558.76\n [7695,] 30045.07 36467.76\n [7696,] 15026.18 37212.12\n [7697,] 32962.01 41239.69\n [7698,] 30207.09 39331.63\n [7699,] 24670.48 30188.19\n [7700,] 14870.61 36800.72\n [7701,] 26287.76 48202.14\n [7702,] 24188.18 46410.91\n [7703,] 36788.90 41836.85\n [7704,] 36189.66 41439.32\n [7705,] 18580.57 42816.95\n [7706,] 34403.15 37450.68\n [7707,] 20644.85 39953.28\n [7708,] 39128.87 39867.98\n [7709,] 36223.01 41402.04\n [7710,] 13114.57 35625.80\n [7711,] 21133.84 41240.77\n [7712,] 16628.86 36534.77\n [7713,] 42027.13 39644.39\n [7714,] 30860.13 39133.23\n [7715,] 29873.59 39507.67\n [7716,] 39423.46 37238.45\n [7717,] 20514.34 33047.29\n [7718,] 30263.23 38499.84\n [7719,] 17343.10 33865.73\n [7720,] 30833.55 35701.80\n [7721,] 40588.42 36771.58\n [7722,] 35785.39 34519.69\n [7723,] 35472.31 42732.76\n [7724,] 33904.52 33301.83\n [7725,] 41110.89 36192.58\n [7726,] 39384.65 37028.19\n [7727,] 26616.19 48358.21\n [7728,] 18494.49 36444.32\n [7729,] 21070.60 33137.62\n [7730,] 29140.70 45577.30\n [7731,] 26575.72 48237.12\n [7732,] 36537.44 41164.11\n [7733,] 39071.77 37071.37\n [7734,] 35360.07 42870.54\n [7735,] 32973.60 42149.01\n [7736,] 34080.67 41758.88\n [7737,] 33588.07 32362.01\n [7738,] 33129.97 41219.11\n [7739,] 19585.79 40949.14\n [7740,] 32294.11 32892.07\n [7741,] 35462.07 43626.85\n [7742,] 33723.09 39275.04\n [7743,] 35176.48 43000.43\n [7744,] 35552.70 43636.58\n [7745,] 29281.98 45774.85\n [7746,] 42009.86 39685.99\n [7747,] 24399.26 46735.77\n [7748,] 32521.47 36731.11\n [7749,] 26263.75 48635.08\n [7750,] 35502.21 42400.73\n [7751,] 41690.76 36256.97\n [7752,] 36613.65 41218.73\n [7753,] 20145.42 40375.84\n [7754,] 39209.86 37467.27\n [7755,] 12872.38 35808.63\n [7756,] 11979.77 35707.72\n [7757,] 32585.58 38957.75\n [7758,] 32325.05 37825.97\n [7759,] 23736.65 47204.27\n [7760,] 35485.40 42891.67\n [7761,] 13302.14 36267.93\n [7762,] 30166.50 39342.82\n [7763,] 35608.16 40642.23\n [7764,] 39948.73 39999.07\n [7765,] 20801.12 31753.63\n [7766,] 19254.88 36883.25\n [7767,] 36846.09 42609.05\n [7768,] 33964.96 39249.56\n [7769,] 33755.23 32341.70\n [7770,] 20027.64 31849.01\n [7771,] 39203.78 36978.12\n [7772,] 12524.85 36537.96\n [7773,] 14686.20 36172.54\n [7774,] 34609.76 38025.76\n [7775,] 35465.18 42438.06\n [7776,] 36685.93 42525.91\n [7777,] 31160.25 32139.25\n [7778,] 20673.42 40679.27\n [7779,] 18128.20 36516.31\n [7780,] 19534.59 40043.26\n [7781,] 41466.54 38691.58\n [7782,] 21281.71 45373.65\n [7783,] 24481.40 47738.04\n [7784,] 26163.95 48506.64\n [7785,] 35593.41 43605.80\n [7786,] 33723.18 39110.10\n [7787,] 14754.68 36104.58\n [7788,] 15707.05 37209.32\n [7789,] 25581.12 30694.10\n [7790,] 23938.60 47260.17\n [7791,] 34808.92 40728.39\n [7792,] 30673.06 34277.02\n [7793,] 35625.98 33627.57\n [7794,] 23128.76 47176.38\n [7795,] 22770.83 32327.85\n [7796,] 26652.87 48322.43\n [7797,] 29810.74 35965.00\n [7798,] 25799.80 48617.40\n [7799,] 27306.60 48063.03\n [7800,] 35909.81 40860.16\n [7801,] 38866.78 36759.24\n [7802,] 30496.88 33803.30\n [7803,] 18441.05 38295.25\n [7804,] 24171.96 31505.67\n [7805,] 20992.74 41161.79\n [7806,] 34384.72 40015.73\n [7807,] 39556.61 40262.46\n [7808,] 29548.52 44871.70\n [7809,] 29528.59 35065.72\n [7810,] 35021.31 43010.55\n [7811,] 29584.94 44828.50\n [7812,] 34351.52 38304.04\n [7813,] 27876.01 44638.09\n [7814,] 26434.74 47544.70\n [7815,] 20425.01 31900.97\n [7816,] 20770.26 32379.02\n [7817,] 34844.24 39755.20\n [7818,] 19264.40 37206.06\n [7819,] 40565.79 36647.25\n [7820,] 33266.71 41302.53\n [7821,] 15364.62 35863.65\n [7822,] 34609.76 38025.76\n [7823,] 36537.44 41164.11\n [7824,] 34334.65 42049.85\n [7825,] 29872.38 39327.20\n [7826,] 39914.89 37706.46\n [7827,] 40765.47 37554.81\n [7828,] 20611.18 40996.66\n [7829,] 23344.95 46419.29\n [7830,] 19742.50 41041.11\n [7831,] 29533.95 44678.75\n [7832,] 30583.55 34716.77\n [7833,] 37098.71 42600.44\n [7834,] 35642.76 43519.88\n [7835,] 32247.90 38986.28\n [7836,] 30357.48 32043.67\n [7837,] 25089.17 47061.90\n [7838,] 42082.86 36327.23\n [7839,] 23695.71 47495.33\n [7840,] 41239.75 37392.44\n [7841,] 35540.50 40671.77\n [7842,] 34781.45 40855.02\n [7843,] 28413.95 39797.97\n [7844,] 32929.70 40067.96\n [7845,] 29452.09 44942.83\n [7846,] 32789.43 33305.36\n [7847,] 35772.28 41136.22\n [7848,] 33194.17 42009.61\n [7849,] 34179.56 41440.81\n [7850,] 17707.01 40265.28\n [7851,] 35561.58 41141.61\n [7852,] 36738.01 42359.71\n [7853,] 28325.75 39700.70\n [7854,] 25073.22 29994.19\n [7855,] 29457.93 44982.57\n [7856,] 16048.26 37170.17\n [7857,] 27546.74 30274.56\n [7858,] 34521.82 38301.36\n [7859,] 29584.94 44828.50\n [7860,] 26616.19 48358.21\n [7861,] 25813.88 47950.37\n [7862,] 24629.97 47757.26\n [7863,] 13439.14 37220.92\n [7864,] 30667.42 35580.71\n [7865,] 25675.16 28525.92\n [7866,] 34367.12 39680.94\n [7867,] 29008.08 45470.67\n [7868,] 13420.52 35448.00\n [7869,] 30357.48 32043.67\n [7870,] 29238.24 38668.87\n [7871,] 19676.89 40790.68\n [7872,] 35854.92 34586.36\n [7873,] 29090.57 28842.98\n [7874,] 29281.98 45774.85\n [7875,] 27574.62 29477.28\n [7876,] 26210.79 48545.18\n [7877,] 24188.18 46410.91\n [7878,] 32588.22 41800.05\n [7879,] 36953.94 41756.40\n [7880,] 34509.77 38426.52\n [7881,] 35524.84 42400.71\n [7882,] 35854.92 34586.36\n [7883,] 20653.16 41226.57\n [7884,] 29289.71 35382.82\n [7885,] 12582.90 35877.73\n [7886,] 20816.74 31875.79\n [7887,] 29563.24 36447.74\n [7888,] 35687.87 41637.05\n [7889,] 19813.76 40958.28\n [7890,] 36295.55 42919.33\n [7891,] 33880.35 39141.09\n [7892,] 29807.47 44873.82\n [7893,] 27397.84 48130.23\n [7894,] 23782.01 47569.46\n [7895,] 33669.26 37078.35\n [7896,] 28879.22 45454.97\n [7897,] 39945.72 39950.65\n [7898,] 18974.36 38264.44\n [7899,] 15504.93 35003.77\n [7900,] 34334.65 42049.85\n [7901,] 39810.30 36415.41\n [7902,] 31941.11 37426.59\n [7903,] 26698.63 30346.56\n [7904,] 25614.62 30608.39\n [7905,] 12693.04 35325.73\n [7906,] 32490.61 41214.34\n [7907,] 36928.46 35084.96\n [7908,] 21957.47 45954.56\n [7909,] 33204.33 41196.88\n [7910,] 38276.08 34507.54\n [7911,] 28707.03 28545.08\n [7912,] 29399.19 35150.94\n [7913,] 13548.67 36396.25\n [7914,] 25271.27 30638.55\n [7915,] 36610.63 34024.29\n [7916,] 17911.43 35623.20\n [7917,] 28456.59 43881.65\n [7918,] 33669.26 37078.35\n [7919,] 40101.43 35118.35\n [7920,] 39077.51 34527.09\n [7921,] 28431.98 46290.80\n [7922,] 29130.00 46070.87\n [7923,] 29369.71 35382.81\n [7924,] 12475.56 36579.09\n [7925,] 34540.71 40900.35\n [7926,] 28612.69 46193.50\n [7927,] 25324.41 30778.08\n [7928,] 29970.59 34899.52\n [7929,] 41016.68 36809.02\n [7930,] 19620.64 40088.33\n [7931,] 35552.70 43636.58\n [7932,] 30689.73 38775.69\n [7933,] 15993.78 36997.38\n [7934,] 35292.95 42907.69\n [7935,] 13788.21 35353.25\n [7936,] 20962.02 40626.39\n [7937,] 40988.63 37172.19\n [7938,] 36593.84 42468.55\n [7939,] 34098.05 34678.29\n [7940,] 30579.35 32233.25\n [7941,] 18440.33 38353.27\n [7942,] 29103.59 38953.94\n [7943,] 34638.11 41051.87\n [7944,] 39657.40 34801.89\n [7945,] 25847.01 48622.47\n [7946,] 25227.63 47385.51\n [7947,] 41458.33 36810.69\n [7948,] 33204.33 41196.88\n [7949,] 17625.96 36521.02\n [7950,] 35182.27 33388.41\n [7951,] 29378.49 46027.74\n [7952,] 41390.63 37771.85\n [7953,] 35231.73 42964.14\n [7954,] 24227.09 31453.43\n [7955,] 37812.84 35371.67\n [7956,] 35193.18 38987.44\n [7957,] 29523.32 37897.38\n [7958,] 19040.05 40433.49\n [7959,] 41542.07 37422.58\n [7960,] 21005.12 40555.91\n [7961,] 39513.90 35337.40\n [7962,] 12937.24 36653.77\n [7963,] 20927.48 40381.14\n [7964,] 38078.00 34457.37\n [7965,] 35576.07 41273.14\n [7966,] 29836.77 35212.87\n [7967,] 35044.14 42960.94\n [7968,] 21144.59 41060.65\n [7969,] 39232.69 37332.30\n [7970,] 29028.99 45961.16\n [7971,] 36653.96 42664.67\n [7972,] 34748.54 40800.81\n [7973,] 13433.45 35580.16\n [7974,] 26449.60 47454.39\n [7975,] 41845.14 39147.35\n [7976,] 21009.85 39910.08\n [7977,] 37091.04 35231.82\n [7978,] 16187.16 36965.14\n [7979,] 18713.57 42479.88\n [7980,] 23678.36 45945.14\n [7981,] 21348.25 39656.03\n [7982,] 33516.47 37236.38\n [7983,] 21133.84 41240.77\n [7984,] 18869.25 42453.70\n [7985,] 16819.01 36463.38\n [7986,] 34860.84 39373.81\n [7987,] 29216.25 44929.65\n [7988,] 21053.60 32503.70\n [7989,] 23961.13 47321.02\n [7990,] 32472.41 41818.76\n [7991,] 36846.09 42609.05\n [7992,] 18187.19 41813.01\n [7993,] 39398.03 37419.94\n [7994,] 32585.58 38957.75\n [7995,] 38036.27 34041.67\n [7996,] 20937.08 32864.98\n [7997,] 39069.41 37157.51\n [7998,] 24481.40 47738.04\n [7999,] 29214.05 44557.60\n [8000,] 35363.35 42475.21\n [8001,] 33147.66 41326.87\n [8002,] 30601.23 38459.25\n [8003,] 24227.09 31453.43\n [8004,] 23663.50 46544.11\n [8005,] 20855.73 32483.78\n [8006,] 12703.36 36494.01\n [8007,] 34946.97 40455.31\n [8008,] 35021.31 43010.55\n [8009,] 36744.65 42417.81\n [8010,] 23300.77 45766.53\n [8011,] 13600.14 36238.41\n [8012,] 17520.66 33991.60\n [8013,] 35317.71 43315.87\n [8014,] 12882.43 36241.47\n [8015,] 24048.67 47069.58\n [8016,] 20870.29 41152.00\n [8017,] 17642.90 40016.81\n [8018,] 37124.11 41957.60\n [8019,] 22637.45 32298.62\n [8020,] 17312.25 35617.04\n [8021,] 41424.30 37557.86\n [8022,] 29461.54 35205.89\n [8023,] 21044.95 41025.20\n [8024,] 36492.92 41872.91\n [8025,] 32324.79 39270.04\n [8026,] 40588.42 36771.58\n [8027,] 20771.55 40016.37\n [8028,] 23520.66 46830.54\n [8029,] 17715.86 36526.71\n [8030,] 39584.06 36472.37\n [8031,] 34187.98 41091.62\n [8032,] 32174.87 36928.37\n [8033,] 20451.59 33486.83\n [8034,] 39042.69 37504.16\n [8035,] 34107.16 37031.73\n [8036,] 22130.91 45717.33\n [8037,] 23881.71 47265.68\n [8038,] 36859.47 42540.04\n [8039,] 24382.48 47357.88\n [8040,] 34808.92 40728.39\n [8041,] 20908.39 40331.48\n [8042,] 34514.86 40852.39\n [8043,] 26800.33 47552.02\n [8044,] 17884.85 35562.82\n [8045,] 21281.71 45373.65\n [8046,] 32851.48 41722.74\n [8047,] 13497.04 35935.38\n [8048,] 21025.23 40286.87\n [8049,] 32533.29 41805.60\n [8050,] 20096.13 40147.73\n [8051,] 28061.11 43878.83\n [8052,] 19031.29 38654.83\n [8053,] 23817.06 46178.64\n [8054,] 12027.89 35745.12\n [8055,] 35202.25 42976.70\n [8056,] 41317.90 36850.75\n [8057,] 33511.36 37148.67\n [8058,] 35312.99 42884.75\n [8059,] 20174.10 40136.96\n [8060,] 31201.80 33996.83\n [8061,] 20941.42 41191.45\n [8062,] 32890.85 40160.08\n [8063,] 19462.61 36930.41\n [8064,] 35475.73 34303.98\n [8065,] 37391.75 35071.82\n [8066,] 20393.57 39934.02\n [8067,] 29280.45 44514.15\n [8068,] 35252.90 40712.57\n [8069,] 13309.22 36317.35\n [8070,] 23446.52 47275.04\n [8071,] 39138.99 36559.72\n [8072,] 35561.22 42685.17\n [8073,] 20386.83 33776.77\n [8074,] 32465.81 37209.61\n [8075,] 25622.61 30681.95\n [8076,] 39569.52 40305.83\n [8077,] 27405.19 46252.41\n [8078,] 24818.15 46959.64\n [8079,] 35617.49 40013.95\n [8080,] 21450.00 39950.64\n [8081,] 32890.85 40160.08\n [8082,] 18173.93 36699.87\n [8083,] 18660.82 41746.56\n [8084,] 35502.57 42466.51\n [8085,] 15327.50 36722.60\n [8086,] 36495.86 41268.56\n [8087,] 27521.20 45268.55\n [8088,] 20844.58 40951.79\n [8089,] 24323.57 47684.08\n [8090,] 17095.32 40253.55\n [8091,] 41161.99 38004.00\n [8092,] 20387.04 33825.18\n [8093,] 35206.53 42464.67\n [8094,] 36137.23 43102.98\n [8095,] 38075.03 34344.29\n [8096,] 39426.26 35349.54\n [8097,] 29387.90 45956.64\n [8098,] 29632.80 35203.32\n [8099,] 26099.64 30042.02\n [8100,] 29818.86 38792.04\n [8101,] 36006.68 42606.14\n [8102,] 23872.77 46483.55\n [8103,] 30063.05 31211.39\n [8104,] 35769.87 33787.35\n [8105,] 24442.04 47860.89\n [8106,] 32666.20 41556.04\n [8107,] 15026.18 37212.12\n [8108,] 17639.86 39764.42\n [8109,] 36986.31 41681.37\n [8110,] 41687.64 36634.42\n [8111,] 33555.28 32503.11\n [8112,] 35431.54 42451.10\n [8113,] 21511.05 39783.57\n [8114,] 36976.44 41821.96\n [8115,] 27664.43 29937.31\n [8116,] 18378.77 41365.56\n [8117,] 35973.59 42952.49\n [8118,] 40988.63 37172.19\n [8119,] 35456.22 42844.66\n [8120,] 38830.62 35225.59\n [8121,] 26134.40 48189.66\n [8122,] 20247.11 40950.19\n [8123,] 30362.87 39037.07\n [8124,] 19529.88 40944.66\n [8125,] 25762.47 48512.55\n [8126,] 36692.37 42718.62\n [8127,] 22289.35 45798.53\n [8128,] 39098.26 38008.94\n [8129,] 20507.12 40196.46\n [8130,] 19533.21 36811.42\n [8131,] 25631.35 30735.62\n [8132,] 18296.42 41365.00\n [8133,] 28872.26 28787.86\n [8134,] 34591.51 40782.49\n [8135,] 31649.37 35052.48\n [8136,] 11813.16 35916.83\n [8137,] 21582.57 45823.82\n [8138,] 17557.21 40353.89\n [8139,] 18411.09 36744.00\n [8140,] 30240.94 38880.02\n [8141,] 26878.90 28287.80\n [8142,] 29468.80 46014.66\n [8143,] 36814.69 35037.62\n [8144,] 29453.73 46038.03\n [8145,] 35193.18 38987.44\n [8146,] 39202.43 37430.01\n [8147,] 31337.32 35439.32\n [8148,] 15553.60 37326.47\n [8149,] 39772.17 36375.77\n [8150,] 26257.93 47555.68\n [8151,] 34557.61 41791.91\n [8152,] 36537.44 41164.11\n [8153,] 30086.33 32348.27\n [8154,] 20587.03 39859.17\n [8155,] 36419.41 42143.51\n [8156,] 36758.46 43100.55\n [8157,] 34292.91 42057.54\n [8158,] 18633.83 38317.68\n [8159,] 23968.29 46542.97\n [8160,] 36938.43 42682.97\n [8161,] 34144.05 39825.43\n [8162,] 18616.72 42948.47\n [8163,] 24865.06 46978.51\n [8164,] 39513.90 35337.40\n [8165,] 14003.04 36678.66\n [8166,] 29381.39 35335.66\n [8167,] 41110.89 36192.58\n [8168,] 26167.70 30125.23\n [8169,] 30373.09 38147.74\n [8170,] 34419.50 41361.63\n [8171,] 28496.97 44422.87\n [8172,] 18106.97 36460.53\n [8173,] 26134.40 48189.66\n [8174,] 17578.65 36146.17\n [8175,] 36210.42 42581.79\n [8176,] 15551.63 35558.97\n [8177,] 28710.67 44821.79\n [8178,] 39524.76 36408.77\n [8179,] 32890.84 40251.77\n [8180,] 21490.49 39869.07\n [8181,] 29807.47 44873.82\n [8182,] 28663.03 46353.33\n [8183,] 35816.59 42712.59\n [8184,] 39048.88 35019.97\n [8185,] 24994.67 47144.29\n [8186,] 35820.97 34499.34\n [8187,] 26696.26 28872.00\n [8188,] 39699.12 33765.23\n [8189,] 38286.08 35423.87\n [8190,] 39339.64 37876.30\n [8191,] 28975.96 37820.80\n [8192,] 21044.95 41025.20\n [8193,] 39372.83 34561.10\n [8194,] 33513.51 33797.32\n [8195,] 25193.11 33400.14\n [8196,] 19031.29 38654.83\n [8197,] 36649.56 42749.14\n [8198,] 34807.64 40822.23\n [8199,] 21144.59 41060.65\n [8200,] 42160.18 39511.98\n [8201,] 23691.07 47540.12\n [8202,] 32184.34 38847.31\n [8203,] 35088.33 43085.89\n [8204,] 24273.92 47260.21\n [8205,] 36653.96 42664.67\n [8206,] 29595.34 35267.53\n [8207,] 23918.69 46150.28\n [8208,] 13746.27 36931.54\n [8209,] 29198.15 38613.74\n [8210,] 19717.75 36405.57\n [8211,] 17706.14 35776.86\n [8212,] 22102.40 46723.93\n [8213,] 33179.38 42084.48\n [8214,] 28677.94 39185.04\n [8215,] 29229.60 44394.57\n [8216,] 39653.37 34419.99\n [8217,] 30041.30 32594.05\n [8218,] 18422.44 36790.70\n [8219,] 27289.25 28583.13\n [8220,] 30641.17 35742.37\n [8221,] 34200.90 39378.09\n [8222,] 20653.16 41226.57\n [8223,] 30237.21 39012.48\n [8224,] 27634.65 29329.80\n [8225,] 40681.87 38966.20\n [8226,] 24002.71 46664.72\n [8227,] 40176.68 33630.68\n [8228,] 41078.14 36004.68\n [8229,] 29225.75 46061.89\n [8230,] 24714.73 46801.84\n [8231,] 35164.67 41324.67\n [8232,] 30840.38 35490.01\n [8233,] 34274.93 42145.44\n [8234,] 35019.47 39102.23\n [8235,] 18817.17 38361.18\n [8236,] 36282.07 31697.73\n [8237,] 28797.61 28575.31\n [8238,] 23918.69 46150.28\n [8239,] 31549.60 37322.49\n [8240,] 23743.73 45926.18\n [8241,] 13302.14 36267.93\n [8242,] 36976.63 42519.01\n [8243,] 32618.48 36924.43\n [8244,] 28086.24 38333.00\n [8245,] 30639.49 33525.84\n [8246,] 15353.38 35563.01\n [8247,] 20469.09 33523.33\n [8248,] 25464.33 30116.01\n [8249,] 36978.96 41739.11\n [8250,] 24227.09 31453.43\n [8251,] 41263.37 36412.33\n [8252,] 41739.00 38231.31\n [8253,] 21532.37 46862.86\n [8254,] 29724.53 37545.18\n [8255,] 25943.02 30568.08\n [8256,] 35502.57 42466.51\n [8257,] 38008.30 34468.96\n [8258,] 24588.33 47679.03\n [8259,] 29873.96 39603.16\n [8260,] 36412.22 42853.42\n [8261,] 30632.34 36085.83\n [8262,] 35675.29 42775.10\n [8263,] 17516.17 39763.27\n [8264,] 13615.21 36999.51\n [8265,] 37570.16 35247.23\n [8266,] 41537.39 38942.17\n [8267,] 19585.79 40949.14\n [8268,] 17642.90 40016.81\n [8269,] 25513.79 30760.40\n [8270,] 36735.64 34999.41\n [8271,] 23907.36 47607.91\n [8272,] 36131.64 35169.34\n [8273,] 36359.00 42364.92\n [8274,] 30601.23 38459.25\n [8275,] 30250.84 36623.37\n [8276,] 36435.41 42891.01\n [8277,] 40786.80 39222.41\n [8278,] 39209.59 35373.96\n [8279,] 35848.37 40032.01\n [8280,] 29361.72 44631.99\n [8281,] 34165.54 41998.48\n [8282,] 32537.89 41573.17\n [8283,] 28534.68 39758.72\n [8284,] 31633.82 37226.16\n [8285,] 23648.34 32091.07\n [8286,] 24171.96 31505.67\n [8287,] 42202.97 37041.89\n [8288,] 34848.50 39827.47\n [8289,] 41346.10 36336.80\n [8290,] 12764.23 36386.16\n [8291,] 29453.73 46038.03\n [8292,] 34466.52 41831.05\n [8293,] 38845.02 37138.53\n [8294,] 18706.36 42558.76\n [8295,] 35530.79 40100.79\n [8296,] 29008.08 45470.67\n [8297,] 29874.15 32805.75\n [8298,] 22242.19 46504.58\n [8299,] 26181.00 48280.93\n [8300,] 28949.69 46327.14\n [8301,] 37812.84 35371.67\n [8302,] 39917.80 34639.20\n [8303,] 11969.02 35939.51\n [8304,] 14175.62 36752.99\n [8305,] 36807.22 31876.19\n [8306,] 33148.24 40268.49\n [8307,] 35557.69 34640.79\n [8308,] 40663.12 38841.62\n [8309,] 17654.86 39732.68\n [8310,] 24481.40 47738.04\n [8311,] 20770.26 32379.02\n [8312,] 14080.05 36749.21\n [8313,] 24062.08 46879.95\n [8314,] 18974.33 36591.40\n [8315,] 39360.70 35339.72\n [8316,] 24839.12 30652.21\n [8317,] 24497.10 46389.48\n [8318,] 42251.66 37744.35\n [8319,] 28336.71 43962.89\n [8320,] 22887.92 46161.52\n [8321,] 36055.54 34879.32\n [8322,] 32641.92 41715.31\n [8323,] 29109.89 46245.90\n [8324,] 24442.04 47860.89\n [8325,] 20451.59 33486.83\n [8326,] 20706.39 32892.83\n [8327,] 35576.07 41273.14\n [8328,] 36649.56 42749.14\n [8329,] 35510.31 40049.49\n [8330,] 13483.67 35998.81\n [8331,] 20259.79 40685.85\n [8332,] 42162.94 37794.08\n [8333,] 35258.70 43091.42\n [8334,] 18904.46 37346.06\n [8335,] 39722.22 37505.77\n [8336,] 29352.65 35432.23\n [8337,] 34828.85 41087.70\n [8338,] 23220.13 46412.40\n [8339,] 34670.70 41170.83\n [8340,] 18432.35 40492.19\n [8341,] 32883.68 41849.98\n [8342,] 20770.26 32379.02\n [8343,] 36540.00 42751.57\n [8344,] 33988.72 33314.34\n [8345,] 27755.41 46528.01\n [8346,] 27499.60 29195.96\n [8347,] 27554.05 29417.25\n [8348,] 40813.72 37158.34\n [8349,] 32113.06 37563.15\n [8350,] 20669.35 41279.55\n [8351,] 39878.17 37723.89\n [8352,] 30086.33 32348.27\n [8353,] 31232.05 34065.57\n [8354,] 25430.50 30891.82\n [8355,] 39513.90 35337.40\n [8356,] 24629.97 47757.26\n [8357,] 35716.05 41263.40\n [8358,] 12753.51 35575.00\n [8359,] 35731.10 34627.20\n [8360,] 20299.65 32696.26\n [8361,] 24508.71 47751.29\n [8362,] 13481.45 36249.35\n [8363,] 36976.44 41821.96\n [8364,] 21030.40 41123.11\n [8365,] 35258.92 38900.96\n [8366,] 28390.14 44313.56\n [8367,] 29533.95 44678.75\n [8368,] 33837.41 39831.08\n [8369,] 21888.98 46999.13\n [8370,] 12886.36 35298.85\n [8371,] 20851.34 32875.25\n [8372,] 41016.68 36809.02\n [8373,] 17851.53 35841.09\n [8374,] 29970.59 34899.52\n [8375,] 42444.75 37109.97\n [8376,] 28031.77 38324.79\n [8377,] 39746.35 35346.57\n [8378,] 27265.75 47952.87\n [8379,] 19014.86 40264.59\n [8380,] 41920.54 38858.65\n [8381,] 28991.85 45431.57\n [8382,] 30318.04 36247.73\n [8383,] 30173.40 32372.19\n [8384,] 17809.74 39749.17\n [8385,] 22274.14 31974.94\n [8386,] 35813.88 42655.99\n [8387,] 15423.74 35332.17\n [8388,] 35189.88 43046.93\n [8389,] 37039.59 41668.46\n [8390,] 29157.71 44457.65\n [8391,] 25263.27 30692.38\n [8392,] 28073.44 44759.65\n [8393,] 32709.01 39245.83\n [8394,] 40078.56 34296.43\n [8395,] 21526.24 39906.87\n [8396,] 23911.52 31600.59\n [8397,] 19097.47 38656.20\n [8398,] 27195.17 29098.03\n [8399,] 32916.21 41754.72\n [8400,] 32757.57 41214.59\n [8401,] 42009.29 36460.28\n [8402,] 13668.57 36013.21\n [8403,] 24691.93 46853.39\n [8404,] 24227.09 31453.43\n [8405,] 37005.35 41832.26\n [8406,] 41845.14 39147.35\n [8407,] 29008.08 45470.67\n [8408,] 18350.16 36659.77\n [8409,] 25842.25 48181.45\n [8410,] 35191.31 42814.66\n [8411,] 35571.89 33616.86\n [8412,] 28707.03 28545.08\n [8413,] 33220.91 35298.52\n [8414,] 19963.52 31908.68\n [8415,] 39760.06 34971.36\n [8416,] 28364.76 45214.69\n [8417,] 33015.31 40206.54\n [8418,] 35812.41 42601.83\n [8419,] 36846.09 42609.05\n [8420,] 15391.40 36976.67\n [8421,] 29044.58 46118.67\n [8422,] 33620.96 39035.58\n [8423,] 25430.50 30891.82\n [8424,] 23612.30 46542.96\n [8425,] 18899.15 42737.55\n [8426,] 35339.78 40524.67\n [8427,] 28872.26 28787.86\n [8428,] 20259.60 40766.99\n [8429,] 30443.29 32890.09\n [8430,] 32650.92 41800.04\n [8431,] 26616.19 48358.21\n [8432,] 23565.98 47218.63\n [8433,] 29065.93 45407.81\n [8434,] 29273.79 39211.39\n [8435,] 32368.49 39623.99\n [8436,] 40825.28 36666.04\n [8437,] 30528.63 35991.98\n [8438,] 24036.90 47133.55\n [8439,] 38276.08 34507.54\n [8440,] 30055.03 38404.80\n [8441,] 29333.46 38563.53\n [8442,] 27323.46 28541.89\n [8443,] 40718.39 37684.02\n [8444,] 12790.82 36586.36\n [8445,] 29518.50 44942.28\n [8446,] 36209.47 42015.34\n [8447,] 35006.21 39971.63\n [8448,] 28751.02 45777.36\n [8449,] 27397.84 48130.23\n [8450,] 29695.39 45409.00\n [8451,] 12984.45 36911.17\n [8452,] 13562.10 35614.30\n [8453,] 28502.94 46612.67\n [8454,] 24497.10 46389.48\n [8455,] 23985.14 31583.40\n [8456,] 24629.97 47757.26\n [8457,] 30342.88 35998.68\n [8458,] 18660.11 38392.70\n [8459,] 40765.47 37554.81\n [8460,] 18857.19 37512.05\n [8461,] 34557.61 41791.91\n [8462,] 18317.68 42947.92\n [8463,] 27747.45 29677.86\n [8464,] 36183.18 35061.69\n [8465,] 17625.96 36521.02\n [8466,] 25318.61 29271.93\n [8467,] 23443.40 45836.16\n [8468,] 34035.13 36986.06\n [8469,] 40684.58 39024.98\n [8470,] 20519.17 40060.09\n [8471,] 39190.95 36539.70\n [8472,] 11611.80 35765.16\n [8473,] 21554.59 46149.49\n [8474,] 35018.83 41633.03\n [8475,] 40514.94 37768.02\n [8476,] 21463.73 35749.72\n [8477,] 36023.29 40859.83\n [8478,] 25631.35 30735.62\n [8479,] 32325.05 37825.97\n [8480,] 35409.40 43504.30\n [8481,] 32316.78 39422.84\n [8482,] 17340.53 40361.38\n [8483,] 35891.51 40087.66\n [8484,] 34946.97 40455.31\n [8485,] 28761.31 39852.64\n [8486,] 32806.30 41626.16\n [8487,] 26150.55 29905.19\n [8488,] 26085.88 48562.06\n [8489,] 40540.27 36860.10\n [8490,] 21072.27 41108.45\n [8491,] 20497.66 32600.26\n [8492,] 19654.90 41062.14\n [8493,] 36045.09 41634.40\n [8494,] 21099.53 41178.93\n [8495,] 20986.56 40525.88\n [8496,] 24547.79 47397.60\n [8497,] 14003.04 36678.66\n [8498,] 26328.26 47468.19\n [8499,] 34520.18 40803.90\n [8500,] 23309.71 46603.93\n [8501,] 39148.95 37643.41\n [8502,] 29258.54 44994.84\n [8503,] 29090.57 28842.98\n [8504,] 26604.85 48154.78\n [8505,] 12926.09 36045.30\n [8506,] 32650.92 41800.04\n [8507,] 13664.22 36192.87\n [8508,] 21310.93 40054.09\n [8509,] 24078.48 46202.36\n [8510,] 35143.06 42934.62\n [8511,] 29762.36 45002.24\n [8512,] 12694.78 35375.13\n [8513,] 32949.02 40144.66\n [8514,] 35594.66 34326.76\n [8515,] 19401.04 36201.60\n [8516,] 34557.61 41791.91\n [8517,] 19098.81 36545.20\n [8518,] 18421.11 33593.77\n [8519,] 20770.26 32379.02\n [8520,] 36910.69 35231.01\n [8521,] 25788.86 30139.71\n [8522,] 18666.11 38119.74\n [8523,] 32283.75 37913.02\n [8524,] 35237.34 39036.21\n [8525,] 26083.87 48625.64\n [8526,] 12970.93 36199.41\n [8527,] 35712.21 40902.13\n [8528,] 29123.41 39134.01\n [8529,] 37062.72 41877.57\n [8530,] 32420.66 38867.87\n [8531,] 23663.50 46544.11\n [8532,] 34071.09 41230.34\n [8533,] 18266.55 37019.18\n [8534,] 41878.33 37862.14\n [8535,] 29691.40 35272.17\n [8536,] 29689.88 45583.49\n [8537,] 32030.40 37432.40\n [8538,] 30920.40 34483.81\n [8539,] 26121.13 47963.14\n [8540,] 37120.98 42629.24\n [8541,] 28386.27 45827.11\n [8542,] 36807.67 42555.10\n [8543,] 17501.29 33750.37\n [8544,] 12790.05 35810.69\n [8545,] 25962.94 47645.51\n [8546,] 34359.60 38338.14\n [8547,] 17638.14 40260.45\n [8548,] 35276.79 41064.88\n [8549,] 20081.57 32005.37\n [8550,] 36953.98 42535.50\n [8551,] 33964.96 39249.56\n [8552,] 28876.22 28717.68\n [8553,] 39855.59 33795.49\n [8554,] 29536.75 37846.63\n [8555,] 29917.18 39339.98\n [8556,] 39878.17 37723.89\n [8557,] 20593.11 40211.20\n [8558,] 41904.73 39610.20\n [8559,] 29956.29 36720.60\n [8560,] 19264.40 37206.06\n [8561,] 18591.19 37650.35\n [8562,] 18520.34 42577.42\n [8563,] 33030.01 41752.64\n [8564,] 32016.85 37259.69\n [8565,] 29191.75 35281.82\n [8566,] 24677.26 47703.11\n [8567,] 12499.46 36259.70\n [8568,] 37789.67 35424.50\n [8569,] 30429.39 32275.12\n [8570,] 15957.77 37264.15\n [8571,] 36435.12 34595.68\n [8572,] 19779.44 36764.43\n [8573,] 29280.45 44514.15\n [8574,] 40702.12 39068.18\n [8575,] 32443.06 39484.26\n [8576,] 18111.79 41789.39\n [8577,] 34514.86 40852.39\n [8578,] 34240.24 32180.99\n [8579,] 20219.97 40201.77\n [8580,] 21362.46 46116.49\n [8581,] 17670.96 39823.49\n [8582,] 41527.96 39235.71\n [8583,] 26088.14 48323.87\n [8584,] 12026.74 36204.94\n [8585,] 22195.68 45830.28\n [8586,] 39554.44 38013.39\n [8587,] 34803.47 40540.80\n [8588,] 32107.82 39616.22\n [8589,] 17668.11 36422.96\n [8590,] 21819.55 46973.55\n [8591,] 28577.02 46397.19\n [8592,] 21341.82 45607.76\n [8593,] 18982.22 38706.05\n [8594,] 14080.05 36749.21\n [8595,] 19534.59 40043.26\n [8596,] 33349.26 40483.93\n [8597,] 29120.97 45320.14\n [8598,] 29225.56 45899.52\n [8599,] 35176.48 43000.43\n [8600,] 21095.91 40990.18\n [8601,] 28404.62 46697.35\n [8602,] 23968.29 46542.97\n [8603,] 32723.35 39317.51\n [8604,] 29696.57 44798.01\n [8605,] 39971.86 34327.01\n [8606,] 29174.35 46154.39\n [8607,] 36731.81 35230.12\n [8608,] 21238.39 45620.85\n [8609,] 25263.27 30692.38\n [8610,] 27458.54 30282.49\n [8611,] 18583.08 37066.62\n [8612,] 17823.72 40344.01\n [8613,] 23034.63 46768.60\n [8614,] 23296.00 46266.90\n [8615,] 24789.73 30887.46\n [8616,] 15409.37 35726.07\n [8617,] 34039.69 34012.35\n [8618,] 17610.96 33639.64\n [8619,] 23639.55 46602.59\n [8620,] 29001.49 37633.20\n [8621,] 32572.91 41570.18\n [8622,] 18638.72 42253.27\n [8623,] 20451.59 33486.83\n [8624,] 21030.40 41123.11\n [8625,] 24682.34 30437.90\n [8626,] 24038.01 47679.74\n [8627,] 33343.93 42143.21\n [8628,] 20529.62 39767.72\n [8629,] 36495.86 41268.56\n [8630,] 34179.56 41440.81\n [8631,] 17260.67 39852.53\n [8632,] 33136.84 41278.61\n [8633,] 34085.33 41868.11\n [8634,] 37098.71 42600.44\n [8635,] 39378.69 39920.11\n [8636,] 34243.98 42252.05\n [8637,] 33115.18 39220.24\n [8638,] 21095.91 40990.18\n [8639,] 34972.07 40449.94\n [8640,] 20550.13 33686.22\n [8641,] 28319.59 44439.95\n [8642,] 39751.23 37892.46\n [8643,] 37537.31 35376.65\n [8644,] 40780.88 39182.39\n [8645,] 33129.97 41219.11\n [8646,] 29337.06 45027.82\n [8647,] 29324.79 44633.09\n [8648,] 23765.14 46425.88\n [8649,] 37089.30 34892.34\n [8650,] 41239.75 37392.44\n [8651,] 36537.44 41164.11\n [8652,] 23971.76 31497.79\n [8653,] 35888.87 34501.67\n [8654,] 23003.20 32384.04\n [8655,] 34799.24 40773.24\n [8656,] 29584.94 44828.50\n [8657,] 23034.63 46768.60\n [8658,] 23446.52 47275.04\n [8659,] 18833.13 38400.38\n [8660,] 29187.77 35340.82\n [8661,] 39315.16 33829.80\n [8662,] 26565.77 47509.61\n [8663,] 28714.83 40447.17\n [8664,] 18739.71 40031.48\n [8665,] 29763.58 36810.11\n [8666,] 39128.87 39867.98\n [8667,] 30657.82 38693.10\n [8668,] 39569.99 37461.90\n [8669,] 36599.45 43229.07\n [8670,] 27589.06 29864.50\n [8671,] 25565.20 30032.44\n [8672,] 17911.43 35623.20\n [8673,] 21424.48 46308.03\n [8674,] 23540.98 46004.53\n [8675,] 27462.75 29460.27\n [8676,] 20096.13 40147.73\n [8677,] 36117.49 41585.11\n [8678,] 15854.55 36649.35\n [8679,] 30860.13 39133.23\n [8680,] 33015.31 40206.54\n [8681,] 40235.26 37006.55\n [8682,] 28949.69 46327.14\n [8683,] 30186.63 38602.78\n [8684,] 28404.93 44429.38\n [8685,] 31725.65 33643.33\n [8686,] 36537.44 41164.11\n [8687,] 39750.97 37936.73\n [8688,] 35552.70 43636.58\n [8689,] 12064.67 36265.13\n [8690,] 12798.49 36249.43\n [8691,] 35521.57 43287.94\n [8692,] 32867.43 41342.68\n [8693,] 19760.34 40940.87\n [8694,] 36979.63 31972.78\n [8695,] 35999.27 42937.43\n [8696,] 32815.04 41834.40\n [8697,] 36807.99 41926.84\n [8698,] 20992.74 41161.79\n [8699,] 38645.44 34497.87\n [8700,] 32990.37 41605.84\n [8701,] 37124.11 41957.60\n [8702,] 24670.48 30188.19\n [8703,] 39691.33 37992.92\n [8704,] 32593.72 39614.82\n [8705,] 35502.21 42400.73\n [8706,] 26157.73 48682.98\n [8707,] 32657.10 41446.09\n [8708,] 34803.47 40540.80\n [8709,] 29229.58 45738.69\n [8710,] 24481.40 47738.04\n [8711,] 34085.33 41868.11\n [8712,] 28982.35 37743.67\n [8713,] 38498.13 34639.49\n [8714,] 20656.99 33528.13\n [8715,] 36143.51 41675.71\n [8716,] 19529.88 40944.66\n [8717,] 30173.40 32372.19\n [8718,] 17362.63 40323.03\n [8719,] 17602.15 33598.57\n [8720,] 39543.99 39562.77\n [8721,] 21008.97 32427.90\n [8722,] 17518.83 39833.52\n [8723,] 18187.19 41813.01\n [8724,] 33138.70 42041.06\n [8725,] 39693.46 37760.98\n [8726,] 35027.93 43052.26\n [8727,] 29527.40 44565.31\n [8728,] 28895.92 40421.86\n [8729,] 36599.45 43229.07\n [8730,] 19734.37 36308.68\n [8731,] 17823.72 40344.01\n [8732,] 25186.96 47092.87\n [8733,] 27460.07 30213.84\n [8734,] 40988.61 37381.70\n [8735,] 25271.27 30638.55\n [8736,] 18982.22 38706.05\n [8737,] 40702.58 36850.23\n [8738,] 36696.77 42634.15\n [8739,] 19753.52 40742.58\n [8740,] 12738.90 36561.46\n [8741,] 35524.84 42400.71\n [8742,] 18615.20 36606.87\n [8743,] 29171.38 38539.56\n [8744,] 13036.89 36138.46\n [8745,] 35502.21 42400.73\n [8746,] 32524.59 41721.90\n [8747,] 28643.40 44523.62\n [8748,] 27371.58 29326.08\n [8749,] 18494.12 40431.49\n [8750,] 20118.77 40430.88\n [8751,] 26057.71 47926.89\n [8752,] 29216.54 38521.26\n [8753,] 32876.22 41763.94\n [8754,] 20656.99 33528.13\n [8755,] 35046.77 33013.52\n [8756,] 28474.82 37002.61\n [8757,] 39886.07 36385.99\n [8758,] 32782.21 41700.54\n [8759,] 20870.29 41152.00\n [8760,] 29041.45 45519.79\n [8761,] 38645.44 34497.87\n [8762,] 20081.57 32005.37\n [8763,] 19750.32 36820.26\n [8764,] 12994.10 35302.85\n [8765,] 23654.83 32274.13\n [8766,] 24369.39 47482.38\n [8767,] 18974.36 38264.44\n [8768,] 28777.71 45804.64\n [8769,] 15646.42 36935.18\n [8770,] 13626.89 36078.76\n [8771,] 35712.21 42604.39\n [8772,] 32676.45 41702.54\n [8773,] 36744.65 42417.81\n [8774,] 32533.29 41805.60\n [8775,] 35887.22 40144.11\n [8776,] 18344.89 38018.24\n [8777,] 13851.43 36116.98\n [8778,] 39148.95 37643.41\n [8779,] 19080.83 36761.75\n [8780,] 34086.71 41473.83\n [8781,] 36346.22 42778.07\n [8782,] 23119.13 46371.15\n [8783,] 24481.40 47738.04\n [8784,] 34520.18 40803.90\n [8785,] 17785.96 40176.08\n [8786,] 40270.55 36688.47\n [8787,] 14941.86 37017.30\n [8788,] 29877.74 39417.12\n [8789,] 13029.18 35964.41\n [8790,] 28081.42 45442.20\n [8791,] 12836.20 35733.87\n [8792,] 27991.62 45368.24\n [8793,] 41011.79 37119.33\n [8794,] 24140.15 47136.74\n [8795,] 35405.91 40829.57\n [8796,] 24307.24 47065.91\n [8797,] 21461.89 35631.46\n [8798,] 28464.37 44875.44\n [8799,] 19796.36 40728.99\n [8800,] 23534.67 47486.09\n [8801,] 34260.43 38429.96\n [8802,] 36613.65 41218.73\n [8803,] 29135.27 37646.42\n [8804,] 28649.77 40151.98\n [8805,] 21494.36 45448.41\n [8806,] 13758.79 35918.42\n [8807,] 15980.99 36609.24\n [8808,] 17765.31 40481.50\n [8809,] 39477.20 37200.87\n [8810,] 36494.87 41211.26\n [8811,] 24329.32 47294.55\n [8812,] 17930.84 36410.66\n [8813,] 35498.36 41859.50\n [8814,] 39017.45 37456.75\n [8815,] 32247.90 38986.28\n [8816,] 34890.00 32897.97\n [8817,] 27306.60 48063.03\n [8818,] 35521.57 43287.94\n [8819,] 24482.06 46785.55\n [8820,] 35191.71 41945.77\n [8821,] 26862.20 29745.50\n [8822,] 23466.73 45709.86\n [8823,] 29523.32 37897.38\n [8824,] 29452.09 44942.83\n [8825,] 23612.30 46542.96\n [8826,] 39190.95 36539.70\n [8827,] 15423.74 35332.17\n [8828,] 19305.00 39996.48\n [8829,] 23177.28 45910.55\n [8830,] 33202.43 40351.12\n [8831,] 41829.76 39500.50\n [8832,] 23691.07 47540.12\n [8833,] 35788.37 34683.76\n [8834,] 28588.05 40098.15\n [8835,] 39770.57 37766.92\n [8836,] 41789.32 38127.82\n [8837,] 35446.93 42794.93\n [8838,] 23588.77 46040.46\n [8839,] 32906.40 40207.27\n [8840,] 20769.96 41218.47\n [8841,] 27265.75 47952.87\n [8842,] 20983.28 40468.85\n [8843,] 29914.12 33468.51\n [8844,] 27216.24 29777.37\n [8845,] 35252.90 40712.57\n [8846,] 30564.16 34766.87\n [8847,] 29181.37 37605.60\n [8848,] 35088.33 43085.89\n [8849,] 21231.20 45448.64\n [8850,] 39288.98 36601.26\n [8851,] 32581.39 41716.94\n [8852,] 18826.09 37428.72\n [8853,] 36653.96 42664.67\n [8854,] 20941.42 41191.45\n [8855,] 24036.90 47133.55\n [8856,] 29378.50 37811.75\n [8857,] 40621.05 37768.03\n [8858,] 19796.36 40728.99\n [8859,] 30207.09 39331.63\n [8860,] 31150.87 33960.67\n [8861,] 33297.94 39784.56\n [8862,] 30435.60 32229.97\n [8863,] 30231.18 36365.82\n [8864,] 31936.64 37254.53\n [8865,] 17011.93 36604.20\n [8866,] 26264.27 48251.93\n [8867,] 29065.93 45407.81\n [8868,] 15528.47 36384.19\n [8869,] 35715.80 41310.25\n [8870,] 26591.26 28653.83\n [8871,] 19813.88 36996.72\n [8872,] 36919.14 35277.07\n [8873,] 19009.03 40492.90\n [8874,] 36322.84 42726.76\n [8875,] 39824.45 36883.33\n [8876,] 28878.39 40462.02\n [8877,] 18645.41 42513.96\n [8878,] 24171.96 31505.67\n [8879,] 42103.21 39558.51\n [8880,] 21372.01 45567.44\n [8881,] 12616.74 35422.58\n [8882,] 22677.10 32407.59\n [8883,] 40684.58 39024.98\n [8884,] 41889.15 38259.70\n [8885,] 29043.74 46064.93\n [8886,] 20451.59 33486.83\n [8887,] 31576.84 35084.07\n [8888,] 29818.86 38792.04\n [8889,] 35915.31 42919.66\n [8890,] 36212.80 42815.39\n [8891,] 14210.49 36691.54\n [8892,] 27807.51 44357.42\n [8893,] 34522.72 38363.16\n [8894,] 26434.74 47544.70\n [8895,] 33501.40 33525.71\n [8896,] 28710.67 44821.79\n [8897,] 28805.57 39943.16\n [8898,] 17568.56 39747.66\n [8899,] 14901.40 37078.94\n [8900,] 35258.92 38900.96\n [8901,] 39060.28 37388.80\n [8902,] 21243.30 35730.61\n [8903,] 18211.88 40142.68\n [8904,] 16014.65 37118.02\n [8905,] 41701.55 37990.54\n [8906,] 37534.91 35424.19\n [8907,] 23984.37 47064.34\n [8908,] 36482.52 42857.42\n [8909,] 41203.80 37091.91\n [8910,] 41317.90 36850.75\n [8911,] 27867.95 46512.41\n [8912,] 22630.14 46012.17\n [8913,] 17721.37 40468.65\n [8914,] 30291.33 31018.52\n [8915,] 26602.47 47967.65\n [8916,] 34304.46 42260.38\n [8917,] 40610.11 33554.61\n [8918,] 33715.84 32484.03\n [8919,] 30528.63 35991.98\n [8920,] 35046.77 33013.52\n [8921,] 32956.36 41532.05\n [8922,] 29702.01 44751.06\n [8923,] 29248.59 38589.71\n [8924,] 35510.31 40049.49\n [8925,] 18537.09 40157.98\n [8926,] 35088.33 43085.89\n [8927,] 33115.18 39220.24\n [8928,] 23307.88 45990.35\n [8929,] 32407.76 38821.36\n [8930,] 25675.16 28525.92\n [8931,] 35377.25 43293.29\n [8932,] 29712.08 45334.81\n [8933,] 36408.33 34961.19\n [8934,] 35913.37 33783.59\n [8935,] 29552.05 45366.14\n [8936,] 18802.22 42917.72\n [8937,] 14133.61 36727.94\n [8938,] 36569.24 34706.30\n [8939,] 12864.96 36638.44\n [8940,] 20182.34 31585.09\n [8941,] 19953.58 32606.80\n [8942,] 34806.66 40425.07\n [8943,] 35608.64 42765.97\n [8944,] 30988.75 33837.76\n [8945,] 17582.77 33891.16\n [8946,] 21047.00 40320.89\n [8947,] 29452.09 44942.83\n [8948,] 36520.56 42844.74\n [8949,] 28390.14 44313.56\n [8950,] 21501.29 46116.31\n [8951,] 18350.32 40590.50\n [8952,] 24682.34 30437.90\n [8953,] 18246.52 35957.56\n [8954,] 34086.95 41912.07\n [8955,] 23648.34 32091.07\n [8956,] 17824.75 36645.40\n [8957,] 36096.32 41313.77\n [8958,] 31898.90 36933.33\n [8959,] 28277.59 46282.38\n [8960,] 29043.74 46064.93\n [8961,] 22130.91 45717.33\n [8962,] 14754.68 36104.58\n [8963,] 26204.19 48675.05\n [8964,] 41181.09 36064.82\n [8965,] 28254.19 46230.56\n [8966,] 34243.98 42252.05\n [8967,] 38585.32 35480.32\n [8968,] 17823.72 40344.01\n [8969,] 28107.30 45524.10\n [8970,] 40059.06 33708.03\n [8971,] 19283.81 37066.91\n [8972,] 20602.57 40537.72\n [8973,] 15685.84 35327.68\n [8974,] 30759.95 38355.06\n [8975,] 41335.33 38916.07\n [8976,] 35341.91 40787.90\n [8977,] 18441.05 38295.25\n [8978,] 29042.23 38153.20\n [8979,] 39751.23 37892.46\n [8980,] 32949.02 40144.66\n [8981,] 28905.73 45904.29\n [8982,] 21144.59 41060.65\n [8983,] 25565.20 30032.44\n [8984,] 27415.98 48063.02\n [8985,] 20451.59 33486.83\n [8986,] 32811.80 41241.18\n [8987,] 25271.27 30638.55\n [8988,] 19575.51 36913.34\n [8989,] 20469.09 33523.33\n [8990,] 41526.58 39065.94\n [8991,] 18309.71 35982.07\n [8992,] 20374.28 32991.74\n [8993,] 34291.08 41039.86\n [8994,] 33645.20 31392.61\n [8995,] 20386.83 33776.77\n [8996,] 18296.42 41365.00\n [8997,] 39859.03 39849.85\n [8998,] 21072.27 41108.45\n [8999,] 35887.22 40144.11\n [9000,] 20915.34 39704.63\n [9001,] 23166.02 46739.85\n [9002,] 36435.41 42891.01\n [9003,] 27755.41 46528.01\n [9004,] 28570.97 44703.85\n [9005,] 27991.62 45368.24\n [9006,] 18545.73 38552.59\n [9007,] 34098.05 34678.29\n [9008,] 34733.15 40691.51\n [9009,] 13989.08 36079.69\n [9010,] 24677.26 47703.11\n [9011,] 35027.93 43052.26\n [9012,] 28105.44 45308.62\n [9013,] 34777.47 38534.34\n [9014,] 29216.25 44929.65\n [9015,] 31952.62 37222.57\n [9016,] 33555.28 32503.11\n [9017,] 39021.54 37368.70\n [9018,] 25421.00 28444.17\n [9019,] 29263.83 45891.33\n [9020,] 32850.99 41385.31\n [9021,] 38676.79 35018.03\n [9022,] 35682.49 42733.07\n [9023,] 36758.46 43100.55\n [9024,] 19654.58 40895.74\n [9025,] 40786.80 39222.41\n [9026,] 23612.54 46167.91\n [9027,] 33147.66 41326.87\n [9028,] 24033.07 46633.70\n [9029,] 17789.73 35914.14\n [9030,] 35485.64 34228.98\n [9031,] 42167.27 37751.92\n [9032,] 25263.27 30692.38\n [9033,] 21375.06 40991.07\n [9034,] 29763.60 35203.33\n [9035,] 16494.74 36917.37\n [9036,] 13569.83 37256.37\n [9037,] 41459.67 36278.90\n [9038,] 38181.36 34389.11\n [9039,] 26133.21 48037.90\n [9040,] 34248.55 41961.95\n [9041,] 35176.48 43000.43\n [9042,] 19575.12 40860.16\n [9043,] 29552.94 45327.90\n [9044,] 29636.10 45700.11\n [9045,] 32356.28 39488.59\n [9046,] 41517.36 38839.81\n [9047,] 27289.25 28583.13\n [9048,] 38884.13 36816.18\n [9049,] 17879.86 40419.21\n [9050,] 36263.85 34896.84\n [9051,] 22274.14 31974.94\n [9052,] 26059.10 30099.20\n [9053,] 32657.10 41446.09\n [9054,] 26052.69 47663.73\n [9055,] 26167.70 30125.23\n [9056,] 42209.96 37396.80\n [9057,] 41170.19 37722.58\n [9058,] 28410.26 44388.03\n [9059,] 35594.66 34326.76\n [9060,] 28681.74 46252.65\n [9061,] 28978.82 46249.91\n [9062,] 34274.93 42145.44\n [9063,] 32785.76 41808.31\n [9064,] 39360.28 36913.14\n [9065,] 28876.22 28717.68\n [9066,] 19401.04 36201.60\n [9067,] 28589.31 46228.50\n [9068,] 26351.69 47736.03\n [9069,] 35654.91 42683.10\n [9070,] 40780.88 39182.39\n [9071,] 29702.01 44751.06\n [9072,] 27780.65 29917.22\n [9073,] 36406.82 35104.44\n [9074,] 30237.21 39012.48\n [9075,] 20669.35 41279.55\n [9076,] 38827.74 35171.90\n [9077,] 25544.25 30619.87\n [9078,] 35687.92 41220.85\n [9079,] 15685.84 35327.68\n [9080,] 35127.23 40519.73\n [9081,] 28254.19 46230.56\n [9082,] 35540.50 40671.77\n [9083,] 25657.71 30003.28\n [9084,] 21822.45 46075.83\n [9085,] 34514.86 40852.39\n [9086,] 32916.21 41754.72\n [9087,] 20680.84 40289.64\n [9088,] 18645.41 42513.96\n [9089,] 34087.15 39457.88\n [9090,] 20899.73 40733.17\n [9091,] 18714.49 38005.80\n [9092,] 14169.47 36801.47\n [9093,] 23625.95 46882.38\n [9094,] 24481.40 47738.04\n [9095,] 35713.75 42014.90\n [9096,] 28070.24 45161.87\n [9097,] 12956.96 36354.45\n [9098,] 32760.65 41301.41\n [9099,] 18542.91 36927.16\n [9100,] 23369.41 47241.13\n [9101,] 29248.59 38589.71\n [9102,] 14133.61 36727.94\n [9103,] 13256.55 35349.69\n [9104,] 41174.30 38722.15\n [9105,] 12693.04 35325.73\n [9106,] 29141.23 46198.19\n [9107,] 24442.04 47860.89\n [9108,] 26012.73 48560.65\n [9109,] 17771.70 36462.14\n [9110,] 35768.73 42579.08\n [9111,] 30920.40 34483.81\n [9112,] 23873.28 46917.64\n [9113,] 18544.02 41886.92\n [9114,] 32201.36 38810.91\n [9115,] 28686.50 44851.59\n [9116,] 34361.20 37562.21\n [9117,] 27931.84 45424.57\n [9118,] 18621.61 41973.17\n [9119,] 29512.33 38534.41\n [9120,] 19428.74 36734.11\n [9121,] 17499.73 39688.26\n [9122,] 35035.51 39685.48\n [9123,] 22327.22 32002.06\n [9124,] 40420.08 36708.32\n [9125,] 39202.43 37430.01\n [9126,] 35414.54 42625.10\n [9127,] 14080.05 36749.21\n [9128,] 35391.28 34210.49\n [9129,] 17449.68 34002.98\n [9130,] 22260.51 45827.04\n [9131,] 13151.87 35964.09\n [9132,] 38105.05 34696.03\n [9133,] 32937.38 41971.85\n [9134,] 30102.06 36322.61\n [9135,] 32400.12 39411.20\n [9136,] 33343.93 42143.21\n [9137,] 20983.28 40468.85\n [9138,] 21005.12 40555.91\n [9139,] 19825.20 36902.71\n [9140,] 15066.83 36787.82\n [9141,] 17520.66 33991.60\n [9142,] 40537.78 36902.04\n [9143,] 21549.13 39950.64\n [9144,] 21053.09 33228.13\n [9145,] 24629.97 47757.26\n [9146,] 34708.38 41024.85\n [9147,] 17865.03 40458.67\n [9148,] 12703.36 36494.01\n [9149,] 20669.35 41279.55\n [9150,] 33648.65 39776.44\n [9151,] 17501.44 39893.97\n [9152,] 33566.50 32417.14\n [9153,] 29468.80 46014.66\n [9154,] 29112.84 38159.88\n [9155,] 35088.33 43085.89\n [9156,] 35255.86 42983.08\n [9157,] 41653.98 38943.63\n [9158,] 19247.46 40292.28\n [9159,] 30333.69 35346.85\n [9160,] 18520.34 42577.42\n [9161,] 20036.37 32662.30\n [9162,] 39750.97 37936.73\n [9163,] 32990.37 41605.84\n [9164,] 40221.70 39622.22\n [9165,] 27503.37 29288.91\n [9166,] 23769.64 47130.66\n [9167,] 30613.60 38603.54\n [9168,] 41305.12 37690.98\n [9169,] 35341.91 40787.90\n [9170,] 35568.35 43392.61\n [9171,] 21161.68 40187.70\n [9172,] 29281.98 45774.85\n [9173,] 24279.23 47795.02\n [9174,] 39241.24 35378.15\n [9175,] 17113.87 36243.01\n [9176,] 36495.86 41268.56\n [9177,] 37166.21 35173.34\n [9178,] 29318.16 35335.67\n [9179,] 40780.88 39182.39\n [9180,] 36193.86 35019.60\n [9181,] 21133.84 41240.77\n [9182,] 35539.98 39998.97\n [9183,] 25638.63 29215.77\n [9184,] 19529.88 40944.66\n [9185,] 17870.44 39841.44\n [9186,] 36650.11 42422.56\n [9187,] 36153.02 41472.97\n [9188,] 22470.06 32195.25\n [9189,] 17625.93 36047.46\n [9190,] 15572.58 34537.44\n [9191,] 17568.56 39747.66\n [9192,] 35032.14 43095.64\n [9193,] 35682.49 42733.07\n [9194,] 21076.57 41233.31\n [9195,] 26121.13 47963.14\n [9196,] 35252.54 41164.30\n [9197,] 23534.67 47486.09\n [9198,] 25143.10 30030.69\n [9199,] 32807.53 41638.03\n [9200,] 17428.35 35745.37\n [9201,] 32890.85 40160.08\n [9202,] 33588.07 32362.01\n [9203,] 34469.95 41889.54\n [9204,] 35787.70 42726.34\n [9205,] 29216.54 38521.26\n [9206,] 20229.67 40395.54\n [9207,] 21640.48 45836.62\n [9208,] 15465.94 36893.03\n [9209,] 42429.47 38310.50\n [9210,] 39196.99 39740.37\n [9211,] 41035.46 36756.80\n [9212,] 29219.73 45247.84\n [9213,] 35120.27 42848.74\n [9214,] 34204.87 42248.94\n [9215,] 14689.89 36250.27\n [9216,] 20086.59 31907.87\n [9217,] 40681.87 38966.20\n [9218,] 28337.68 44751.35\n [9219,] 23699.57 46341.72\n [9220,] 22241.93 46545.97\n [9221,] 32676.45 41702.54\n [9222,] 33202.43 40351.12\n [9223,] 27893.28 44883.62\n [9224,] 32937.38 41971.85\n [9225,] 24062.08 46879.95\n [9226,] 25512.07 29966.12\n [9227,] 15828.73 36609.26\n [9228,] 14246.35 36749.10\n [9229,] 36097.50 42583.89\n [9230,] 15448.48 34379.43\n [9231,] 22321.85 46172.58\n [9232,] 41962.50 37567.88\n [9233,] 34292.91 42057.54\n [9234,] 35812.41 42601.83\n [9235,] 35317.71 43315.87\n [9236,] 36307.74 42799.10\n [9237,] 29083.36 45815.45\n [9238,] 29599.54 35297.37\n [9239,] 20387.04 33825.18\n [9240,] 30562.28 33470.30\n [9241,] 34781.45 40855.02\n [9242,] 17499.68 33618.68\n [9243,] 36607.15 41184.66\n [9244,] 37166.21 35173.34\n [9245,] 20555.98 32729.69\n [9246,] 40717.45 38939.07\n [9247,] 12703.36 36494.01\n [9248,] 35659.26 43562.75\n [9249,] 24279.23 47795.02\n [9250,] 27286.91 45348.38\n [9251,] 15704.55 37046.95\n [9252,] 12934.89 35682.17\n [9253,] 41679.84 36019.71\n [9254,] 17582.77 33891.16\n [9255,] 23523.53 45594.99\n [9256,] 36223.01 41402.04\n [9257,] 26123.12 48520.66\n [9258,] 18400.12 35694.91\n [9259,] 34996.56 39515.68\n [9260,] 22243.94 46099.16\n [9261,] 19586.86 36299.52\n [9262,] 24012.11 46989.61\n [9263,] 28834.27 45921.82\n [9264,] 31060.64 33818.82\n [9265,] 17405.09 40176.90\n [9266,] 35891.51 40087.66\n [9267,] 38554.70 35122.88\n [9268,] 13341.46 35904.09\n [9269,] 27990.53 45332.55\n [9270,] 33317.91 42073.50\n [9271,] 28771.12 45867.62\n [9272,] 35779.40 34619.10\n [9273,] 36537.44 41164.11\n [9274,] 17582.77 33891.16\n [9275,] 35617.49 40013.95\n [9276,] 40684.58 39024.98\n [9277,] 39868.02 37588.96\n [9278,] 40508.69 33444.94\n [9279,] 36451.70 42826.86\n [9280,] 40641.62 37154.17\n [9281,] 17638.14 40260.45\n [9282,] 23696.09 45489.69\n [9283,] 36607.15 41184.66\n [9284,] 32857.85 41580.64\n [9285,] 35339.78 40524.67\n [9286,] 34157.34 38666.54\n [9287,] 23612.30 46542.96\n [9288,] 33003.77 41832.21\n [9289,] 34561.49 40900.31\n [9290,] 30499.32 34746.05\n [9291,] 26263.75 48635.08\n [9292,] 34529.68 40756.35\n [9293,] 28929.78 46359.20\n [9294,] 35723.57 41114.28\n [9295,] 39338.80 36965.68\n [9296,] 33665.06 39282.98\n [9297,] 42509.67 38788.43\n [9298,] 36537.44 41164.11\n [9299,] 22387.90 32219.37\n [9300,] 36137.23 43102.98\n [9301,] 21472.50 39626.02\n [9302,] 35358.29 41378.62\n [9303,] 30443.27 38382.85\n [9304,] 31549.60 37322.49\n [9305,] 38969.30 37407.03\n [9306,] 18264.00 36459.59\n [9307,] 25657.71 30003.28\n [9308,] 18205.12 41735.91\n [9309,] 36266.61 42056.96\n [9310,] 17773.53 39688.05\n [9311,] 36438.88 34812.19\n [9312,] 26163.95 48506.64\n [9313,] 21495.80 45373.58\n [9314,] 15853.79 34462.31\n [9315,] 23766.91 46392.11\n [9316,] 18256.96 38289.60\n [9317,] 35618.28 33714.07\n [9318,] 28949.69 46327.14\n [9319,] 14080.05 36749.21\n [9320,] 34477.19 39035.88\n [9321,] 29572.09 44921.42\n [9322,] 23485.77 45849.80\n [9323,] 26688.93 30197.43\n [9324,] 17149.94 35708.75\n [9325,] 25143.10 30030.69\n [9326,] 32179.25 37461.42\n [9327,] 34147.49 37390.67\n [9328,] 18971.81 38331.83\n [9329,] 31916.96 36967.95\n [9330,] 27624.34 29285.24\n [9331,] 33227.69 37195.11\n [9332,] 34730.86 40482.14\n [9333,] 17670.96 39823.49\n [9334,] 34388.31 40051.85\n [9335,] 35428.81 42207.27\n [9336,] 30086.33 32348.27\n [9337,] 35257.32 42834.33\n [9338,] 35300.57 42496.68\n [9339,] 39488.79 40128.56\n [9340,] 32033.59 36894.72\n [9341,] 36735.18 42688.11\n [9342,] 36495.86 41268.56\n [9343,] 35635.35 40114.50\n [9344,] 27589.06 29864.50\n [9345,] 37784.58 34086.71\n [9346,] 21464.06 46271.25\n [9347,] 34803.47 40540.80\n [9348,] 39691.97 37938.11\n [9349,] 35502.21 42400.73\n [9350,] 21009.85 39910.08\n [9351,] 35044.14 42960.94\n [9352,] 18722.67 36402.03\n [9353,] 26210.79 48545.18\n [9354,] 35524.84 42400.71\n [9355,] 29636.10 45700.11\n [9356,] 37097.86 31783.94\n [9357,] 29142.24 38774.89\n [9358,] 19533.21 36811.42\n [9359,] 35014.68 42970.64\n [9360,] 32570.89 39211.62\n [9361,] 35363.35 42475.21\n [9362,] 17899.08 41409.86\n [9363,] 35252.11 42510.08\n [9364,] 32409.22 38910.69\n [9365,] 35331.55 42533.96\n [9366,] 19654.90 41062.14\n [9367,] 19998.72 40875.01\n [9368,] 35669.93 40491.07\n [9369,] 28086.24 38333.00\n [9370,] 24165.28 46126.52\n [9371,] 40680.99 38924.85\n [9372,] 17207.30 39802.29\n [9373,] 40641.62 37154.17\n [9374,] 18516.68 37847.27\n [9375,] 34469.95 41889.54\n [9376,] 32857.85 41580.64\n [9377,] 27304.32 47968.69\n [9378,] 18549.86 36869.24\n [9379,] 34710.69 39529.41\n [9380,] 34250.31 39904.98\n [9381,] 39040.02 35066.35\n [9382,] 35539.98 39998.97\n [9383,] 18307.14 41507.72\n [9384,] 40991.97 36713.98\n [9385,] 28879.22 45454.97\n [9386,] 29164.47 39971.51\n [9387,] 21853.72 46229.60\n [9388,] 32122.36 39227.78\n [9389,] 28404.62 46697.35\n [9390,] 28876.22 28717.68\n [9391,] 27834.31 45889.26\n [9392,] 29468.80 46014.66\n [9393,] 29572.09 44921.42\n [9394,] 39868.02 37588.96\n [9395,] 33513.51 33797.32\n [9396,] 24227.09 31453.43\n [9397,] 35255.86 42983.08\n [9398,] 28820.35 44701.54\n [9399,] 29763.60 35203.33\n [9400,] 20555.98 32729.69\n [9401,] 27890.86 45963.29\n [9402,] 33129.97 41219.11\n [9403,] 15957.77 37264.15\n [9404,] 39584.06 36472.37\n [9405,] 29585.55 35191.21\n [9406,] 39868.02 37588.96\n [9407,] 34505.30 41813.00\n [9408,] 32368.49 39623.99\n [9409,] 29074.12 37582.85\n [9410,] 29548.52 44871.70\n [9411,] 29873.59 39507.67\n [9412,] 30250.84 36623.37\n [9413,] 36607.15 41184.66\n [9414,] 33566.50 32417.14\n [9415,] 40664.43 37412.28\n [9416,] 20773.83 41290.92\n [9417,] 23366.37 46232.19\n [9418,] 27304.32 47968.69\n [9419,] 19705.13 36353.62\n [9420,] 22770.83 32327.85\n [9421,] 35564.95 42709.51\n [9422,] 30129.34 36875.27\n [9423,] 27834.31 45889.26\n [9424,] 36882.45 42523.80\n [9425,] 32405.49 36532.18\n [9426,] 32657.10 41446.09\n [9427,] 33953.01 36874.99\n [9428,] 24481.40 47738.04\n [9429,] 13110.25 35900.96\n [9430,] 41878.33 37862.14\n [9431,] 29723.91 36595.57\n [9432,] 41057.44 36396.82\n [9433,] 28593.92 44540.97\n [9434,] 18671.70 42623.05\n [9435,] 28452.45 46673.45\n [9436,] 36010.57 42878.58\n [9437,] 37056.78 41693.88\n [9438,] 35193.18 38987.44\n [9439,] 25692.56 30857.69\n [9440,] 29871.45 32114.99\n [9441,] 34127.72 33997.87\n [9442,] 17396.63 35792.53\n [9443,] 36495.86 41268.56\n [9444,] 34925.26 42853.27\n [9445,] 29762.36 45002.24\n [9446,] 12900.18 35611.42\n [9447,] 30196.95 39688.16\n [9448,] 18787.33 41790.25\n [9449,] 35312.99 42884.75\n [9450,] 28879.22 45454.97\n [9451,] 34825.93 40877.56\n [9452,] 27415.98 48063.02\n [9453,] 19458.09 36969.97\n [9454,] 23239.38 46622.60\n [9455,] 35530.79 40100.79\n [9456,] 32916.21 41754.72\n [9457,] 18903.33 42610.44\n [9458,] 11955.17 35812.96\n [9459,] 32676.45 41702.54\n [9460,] 31296.89 35194.57\n [9461,] 20992.74 41161.79\n [9462,] 35270.50 33315.95\n [9463,] 40201.44 39571.68\n [9464,] 27161.33 29723.86\n [9465,] 19015.74 37395.88\n [9466,] 20436.46 40261.82\n [9467,] 35307.63 42426.14\n [9468,] 36083.79 43138.63\n [9469,] 29103.59 38953.94\n [9470,] 39875.94 33952.51\n [9471,] 32821.64 41699.95\n [9472,] 19654.58 40895.74\n [9473,] 18903.33 42610.44\n [9474,] 17501.44 39893.97\n [9475,] 15504.93 35003.77\n [9476,] 34520.18 40803.90\n [9477,] 35956.99 34361.53\n [9478,] 30758.84 34219.24\n [9479,] 29361.72 44631.99\n [9480,] 15799.34 37135.26\n [9481,] 29461.54 35205.89\n [9482,] 35820.97 34499.34\n [9483,] 31722.51 33765.39\n [9484,] 39215.74 37676.66\n [9485,] 17432.30 39816.08\n [9486,] 34202.03 41344.59\n [9487,] 35763.71 41252.26\n [9488,] 29361.72 44631.99\n [9489,] 42301.76 39477.11\n [9490,] 28681.74 46252.65\n [9491,] 13195.23 35289.12\n [9492,] 29649.88 45369.14\n [9493,] 35044.14 42960.94\n [9494,] 25158.81 30687.65\n [9495,] 23911.52 31600.59\n [9496,] 36540.00 42751.57\n [9497,] 32908.10 41628.34\n [9498,] 26052.69 47663.73\n [9499,] 30471.65 32150.00\n [9500,] 37101.96 41756.97\n [9501,] 29214.05 44557.60\n [9502,] 18969.28 38392.75\n [9503,] 35635.35 40114.50\n [9504,] 23639.55 46602.59\n [9505,] 40884.21 37050.76\n [9506,] 35539.98 39998.97\n [9507,] 17666.79 40209.58\n [9508,] 39187.49 34668.26\n [9509,] 34705.98 38390.09\n [9510,] 16494.74 36917.37\n [9511,] 28454.53 44265.61\n [9512,] 21998.32 46723.95\n [9513,] 35472.31 42732.76\n [9514,] 32851.48 41722.74\n [9515,] 29781.83 37646.94\n [9516,] 41654.63 39147.39\n [9517,] 27689.33 45282.09\n [9518,] 22816.47 46071.39\n [9519,] 29333.46 38563.53\n [9520,] 28727.35 44401.13\n [9521,] 33712.10 39353.48\n [9522,] 28649.77 40151.98\n [9523,] 24227.09 31453.43\n [9524,] 20721.15 39820.02\n [9525,] 29065.93 45407.81\n [9526,] 40152.07 34016.35\n [9527,] 31756.01 37413.44\n [9528,] 32477.58 41459.33\n [9529,] 13551.01 37062.42\n [9530,] 21328.27 47196.51\n [9531,] 34704.60 40653.66\n [9532,] 30393.19 39175.25\n [9533,] 24651.29 47679.40\n [9534,] 34148.60 32242.78\n [9535,] 19585.79 40949.14\n [9536,] 38075.03 34344.29\n [9537,] 35057.98 40935.60\n [9538,] 27520.09 46163.59\n [9539,] 33797.44 39748.52\n [9540,] 34231.78 37062.56\n [9541,] 39846.57 33842.55\n [9542,] 21182.11 47068.02\n [9543,] 34450.40 39977.32\n [9544,] 28584.00 44670.55\n [9545,] 32605.50 41178.63\n [9546,] 36328.51 42976.62\n [9547,] 36212.80 42815.39\n [9548,] 31725.65 33643.33\n [9549,] 35428.21 42746.43\n [9550,] 27917.81 45044.25\n [9551,] 34334.65 42049.85\n [9552,] 20387.04 33825.18\n [9553,] 18409.35 36326.55\n [9554,] 34844.24 39755.20\n [9555,] 40765.47 37554.81\n [9556,] 18838.09 42783.03\n [9557,] 28963.89 45446.68\n [9558,] 29074.12 37582.85\n [9559,] 32663.68 36774.04\n [9560,] 29157.71 44457.65\n [9561,] 19443.40 36859.79\n [9562,] 24481.40 47738.04\n [9563,] 27127.40 47923.62\n [9564,] 35768.73 42579.08\n [9565,] 35431.54 42451.10\n [9566,] 13541.16 35708.54\n [9567,] 34349.99 40122.65\n [9568,] 12475.56 36579.09\n [9569,] 33015.31 40206.54\n [9570,] 36263.85 34896.84\n [9571,] 40152.07 34016.35\n [9572,] 35812.41 42601.83\n [9573,] 27289.25 28583.13\n [9574,] 18437.30 40238.13\n [9575,] 34785.22 40122.03\n [9576,] 15980.99 36609.24\n [9577,] 37101.96 41756.97\n [9578,] 39823.95 36747.73\n [9579,] 29429.44 35266.30\n [9580,] 33321.17 40188.58\n [9581,] 41102.65 37678.68\n [9582,] 39907.30 39863.47\n [9583,] 34526.12 41877.85\n [9584,] 33748.47 33327.88\n [9585,] 39151.37 34121.59\n [9586,] 17518.83 39833.52\n [9587,] 25995.77 48741.06\n [9588,] 30920.40 34483.81\n [9589,] 20460.64 33596.21\n [9590,] 36076.73 42902.18\n [9591,] 20870.29 41152.00\n [9592,] 28777.71 45804.64\n [9593,] 22892.48 46127.66\n [9594,] 34165.54 41998.48\n [9595,] 34465.19 39099.68\n [9596,] 35300.57 42496.68\n [9597,] 36261.59 41966.09\n [9598,] 35307.63 42426.14\n [9599,] 19260.43 36177.91\n [9600,] 29723.91 36595.57\n [9601,] 35509.95 43461.37\n [9602,] 17813.11 35981.95\n [9603,] 29143.45 39248.42\n [9604,] 36412.22 42853.42\n [9605,] 33917.37 37043.26\n [9606,] 29352.65 35432.23\n [9607,] 41829.84 39534.96\n [9608,] 14080.05 36749.21\n [9609,] 19771.40 40831.07\n [9610,] 20918.96 32638.12\n [9611,] 24382.48 47357.88\n [9612,] 33880.35 39141.09\n [9613,] 21354.75 39607.06\n [9614,] 36653.96 42664.67\n [9615,] 41617.31 36604.96\n [9616,] 29564.76 38572.47\n [9617,] 36636.36 43269.84\n [9618,] 22623.63 45943.54\n [9619,] 30173.40 32372.19\n [9620,] 36465.01 34554.31\n [9621,] 25234.75 29290.26\n [9622,] 35507.68 40831.53\n [9623,] 33227.69 37195.11\n [9624,] 20799.49 39906.31\n [9625,] 35608.64 42765.97\n [9626,] 28379.52 46384.82\n [9627,] 24508.71 47751.29\n [9628,] 30063.05 31211.39\n [9629,] 24508.71 47751.29\n [9630,] 21027.30 40196.31\n [9631,] 36438.88 34812.19\n [9632,] 36013.36 41798.33\n [9633,] 16512.05 36720.36\n [9634,] 18426.40 35847.48\n [9635,] 41096.15 37721.01\n [9636,] 32053.70 32801.30\n [9637,] 38001.84 35081.91\n [9638,] 29468.80 46014.66\n [9639,] 36307.74 42799.10\n [9640,] 32159.15 32778.05\n [9641,] 33317.91 42073.50\n [9642,] 27022.60 29406.75\n [9643,] 25992.13 30051.90\n [9644,] 15655.57 37379.00\n [9645,] 18080.32 42321.85\n [9646,] 29463.95 45634.94\n [9647,] 40684.58 39024.98\n [9648,] 20941.42 41191.45\n [9649,] 28319.59 44439.95\n [9650,] 37091.95 31959.36\n [9651,] 27939.79 46532.25\n [9652,] 29762.36 45002.24\n [9653,] 34153.57 41905.94\n [9654,] 30429.39 32275.12\n [9655,] 18807.69 37797.39\n [9656,] 34807.64 40822.23\n [9657,] 39501.38 37376.65\n [9658,] 31582.96 34979.91\n [9659,] 32637.29 38903.28\n [9660,] 21888.98 46999.13\n [9661,] 30120.81 36692.22\n [9662,] 29074.12 37582.85\n [9663,] 36216.02 41124.45\n [9664,] 30689.73 38775.69\n [9665,] 30879.43 39203.43\n [9666,] 39293.14 40054.03\n [9667,] 23692.65 46664.52\n [9668,] 32657.86 39541.76\n [9669,] 19742.50 41041.11\n [9670,] 18790.80 42868.87\n [9671,] 32972.82 41858.42\n [9672,] 29387.90 45956.64\n [9673,] 21182.11 47068.02\n [9674,] 20918.96 32638.12\n [9675,] 13439.14 37220.92\n [9676,] 22242.19 46504.58\n [9677,] 22241.80 46587.82\n [9678,] 18320.84 42482.61\n [9679,] 29507.16 38473.85\n [9680,] 35272.33 42811.32\n [9681,] 24508.71 47751.29\n [9682,] 30474.74 36269.11\n [9683,] 25648.08 30864.46\n [9684,] 29041.45 45519.79\n [9685,] 36494.87 41211.26\n [9686,] 27545.35 30190.75\n [9687,] 36061.99 42848.27\n [9688,] 37229.75 42240.88\n [9689,] 17654.86 39732.68\n [9690,] 39426.26 35349.54\n [9691,] 22117.03 45752.60\n [9692,] 30994.53 33511.15\n [9693,] 16187.16 36965.14\n [9694,] 31678.09 34080.63\n [9695,] 20393.57 39934.02\n [9696,] 29870.55 35921.75\n [9697,] 32201.07 36840.01\n [9698,] 32941.30 41628.25\n [9699,] 12729.27 36604.82\n [9700,] 19654.90 41062.14\n [9701,] 23401.56 47454.15\n [9702,] 32782.21 41700.54\n [9703,] 34700.54 40123.15\n [9704,] 12969.48 35472.53\n [9705,] 39202.43 37430.01\n [9706,] 29773.87 35275.80\n [9707,] 29632.80 35203.32\n [9708,] 18948.36 40021.54\n [9709,] 17953.91 39878.19\n [9710,] 41654.63 39147.39\n [9711,] 35482.12 40902.93\n [9712,] 34330.82 40189.65\n [9713,] 35156.98 40695.52\n [9714,] 17449.68 34002.98\n [9715,] 20583.04 32713.09\n [9716,] 25257.47 47286.92\n [9717,] 27790.00 37831.17\n [9718,] 32531.00 32644.45\n [9719,] 39855.59 33795.49\n [9720,] 19575.12 40860.16\n [9721,] 17590.01 33737.08\n [9722,] 28885.44 28667.40\n [9723,] 42242.83 38860.88\n [9724,] 12703.36 36494.01\n [9725,] 29950.86 36597.74\n [9726,] 42226.52 39433.51\n [9727,] 24354.26 46128.76\n [9728,] 18440.33 38353.27\n [9729,] 36807.22 31876.19\n [9730,] 29127.34 29422.87\n [9731,] 41776.10 36481.46\n [9732,] 28612.75 46522.06\n [9733,] 36306.08 42109.26\n [9734,] 17395.08 39834.34\n [9735,] 25143.10 30030.69\n [9736,] 35642.76 43519.88\n [9737,] 39257.77 37371.90\n [9738,] 29870.55 35921.75\n [9739,] 30412.22 34452.80\n [9740,] 27503.37 29288.91\n [9741,] 29462.65 44542.38\n [9742,] 28442.88 39207.31\n [9743,] 27842.27 44210.73\n [9744,] 34469.95 41889.54\n [9745,] 34256.92 37138.51\n [9746,] 41769.50 36685.83\n [9747,] 21341.36 47400.41\n [9748,] 18344.89 38018.24\n [9749,] 29554.62 44598.43\n [9750,] 34243.98 42252.05\n [9751,] 22387.90 32219.37\n [9752,] 32503.38 32711.82\n [9753,] 25996.74 30164.90\n [9754,] 32867.43 41342.68\n [9755,] 41248.08 37472.61\n [9756,] 33728.01 39056.62\n [9757,] 34466.52 41831.05\n [9758,] 23725.57 47473.18\n [9759,] 39360.70 35339.72\n [9760,] 29417.95 39047.97\n [9761,] 36367.69 42271.02\n [9762,] 36021.15 43104.21\n [9763,] 20769.96 41218.47\n [9764,] 35456.22 42844.66\n [9765,] 33878.04 41513.15\n [9766,] 34799.24 40773.24\n [9767,] 20975.30 40886.84\n [9768,] 18111.79 41789.39\n [9769,] 34524.65 37794.36\n [9770,] 27778.79 46137.43\n [9771,] 39187.49 34668.26\n [9772,] 27326.46 29289.20\n [9773,] 19515.53 37018.50\n [9774,] 25464.42 28553.97\n [9775,] 42009.82 36114.03\n [9776,] 25532.83 30833.41\n [9777,] 36802.00 42985.51\n [9778,] 23612.30 46542.96\n [9779,] 30347.53 35907.04\n [9780,] 20941.42 41191.45\n [9781,] 36649.56 42749.14\n [9782,] 40813.72 37158.34\n [9783,] 34925.26 42853.27\n [9784,] 31367.32 31780.90\n [9785,] 35337.22 41556.11\n [9786,] 39878.17 37723.89\n [9787,] 31724.69 33708.31\n [9788,] 28462.50 44830.73\n [9789,] 24677.26 47703.11\n [9790,] 27363.82 48032.56\n [9791,] 23637.30 46660.83\n [9792,] 29536.75 37846.63\n [9793,] 17428.35 35745.37\n [9794,] 27265.75 47952.87\n [9795,] 15557.30 34906.31\n [9796,] 30347.48 38995.85\n [9797,] 13917.69 36020.82\n [9798,] 35206.53 42464.67\n [9799,] 19654.90 41062.14\n [9800,] 30463.22 39698.52\n [9801,] 27246.25 30469.37\n [9802,] 35270.50 33315.95\n [9803,] 35258.70 43091.42\n [9804,] 35571.89 33616.86\n [9805,] 36635.36 42503.75\n [9806,] 35288.10 40640.60\n [9807,] 19742.50 41041.11\n [9808,] 33190.98 41392.37\n [9809,] 29298.53 45962.12\n [9810,] 28872.26 28787.86\n [9811,] 28105.44 45308.62\n [9812,] 18399.38 38112.34\n [9813,] 17040.77 36517.25\n [9814,] 34521.82 38301.36\n [9815,] 29452.09 44942.83\n [9816,] 27768.70 45328.59\n [9817,] 32226.54 33128.13\n [9818,] 42000.80 37028.70\n [9819,] 23984.74 45878.96\n [9820,] 37005.35 41832.26\n [9821,] 31677.83 33604.27\n [9822,] 36540.63 42049.09\n [9823,] 25205.95 30711.87\n [9824,] 18674.01 33668.10\n [9825,] 12656.16 36881.88\n [9826,] 29749.74 36548.96\n [9827,] 15452.22 36404.85\n [9828,] 39042.69 37504.16\n [9829,] 36539.79 41675.65\n [9830,] 37101.96 41756.97\n [9831,] 41112.68 37267.54\n [9832,] 31990.78 33896.39\n [9833,] 29399.19 35150.94\n [9834,] 25692.56 30857.69\n [9835,] 33955.15 40097.62\n [9836,] 24048.67 47069.58\n [9837,] 20855.73 32483.78\n [9838,] 35456.22 42844.66\n [9839,] 23523.53 45594.99\n [9840,] 27315.65 45605.62\n [9841,] 23666.00 32813.64\n [9842,] 19421.29 37007.89\n [9843,] 21320.85 47023.75\n [9844,] 24614.05 46864.25\n [9845,] 13541.90 35943.67\n [9846,] 27146.02 29318.47\n [9847,] 30226.17 36452.87\n [9848,] 30660.95 35482.47\n [9849,] 34785.22 40122.03\n [9850,] 19654.58 40895.74\n [9851,] 18456.51 42726.80\n [9852,] 12156.89 36283.81\n [9853,] 32531.00 32644.45\n [9854,] 32159.15 32778.05\n [9855,] 38830.62 35225.59\n [9856,] 35682.49 42733.07\n [9857,] 18187.19 41813.01\n [9858,] 33848.55 41481.40\n [9859,] 20552.54 32600.30\n [9860,] 32533.29 41805.60\n [9861,] 41797.65 37882.17\n [9862,] 28546.22 46666.99\n [9863,] 27700.33 45833.64\n [9864,] 25271.27 30638.55\n [9865,] 12126.42 36196.11\n [9866,] 35341.91 40787.90\n [9867,] 34755.26 39572.65\n [9868,] 26711.98 47553.01\n [9869,] 14689.89 36250.27\n [9870,] 33044.85 41569.84\n [9871,] 31952.62 37222.57\n [9872,] 20769.96 41218.47\n [9873,] 34802.40 40676.88\n [9874,] 18261.84 38544.06\n [9875,] 24227.09 31453.43\n [9876,] 25882.67 48648.61\n [9877,] 29049.95 38191.46\n [9878,] 39732.47 36881.63\n [9879,] 35472.31 42732.76\n [9880,] 32435.94 41127.80\n [9881,] 21450.00 39950.64\n [9882,] 18338.01 36902.88\n [9883,] 40663.12 38841.62\n [9884,] 29008.86 46011.25\n [9885,] 41517.36 38839.81\n [9886,] 27624.34 29285.24\n [9887,] 19972.11 40752.23\n [9888,] 36137.23 43102.98\n [9889,] 32785.76 41808.31\n [9890,] 17083.67 39944.17\n [9891,] 26604.85 48154.78\n [9892,] 35337.22 41556.11\n [9893,] 35539.98 39998.97\n [9894,] 22160.06 46762.93\n [9895,] 38645.44 34497.87\n [9896,] 27195.17 29098.03\n [9897,] 29548.52 44871.70\n [9898,] 36607.15 41184.66\n [9899,] 29214.05 44557.60\n [9900,] 35189.88 43046.93\n [9901,] 12627.62 36496.54\n [9902,] 33917.20 41357.77\n [9903,] 14175.62 36752.99\n [9904,] 21089.52 40146.58\n [9905,] 32581.39 41716.94\n [9906,] 29433.32 45978.74\n [9907,] 40665.04 37365.85\n [9908,] 27397.84 48130.23\n [9909,] 25096.47 28442.07\n [9910,] 26370.75 48443.33\n [9911,] 39569.52 40305.83\n [9912,] 18857.19 37512.05\n [9913,] 32990.37 41605.84\n [9914,] 18205.70 36090.43\n [9915,] 23230.19 29227.46\n [9916,] 18497.74 37771.05\n [9917,] 35027.93 43052.26\n [9918,] 29266.07 46069.01\n [9919,] 32817.31 36694.53\n [9920,] 20954.52 41110.65\n [9921,] 23372.57 32513.67\n [9922,] 28593.92 44540.97\n [9923,] 22117.03 45752.60\n [9924,] 35813.88 42655.99\n [9925,] 12725.08 36200.72\n [9926,] 35206.53 42464.67\n [9927,] 34526.12 41877.85\n [9928,] 12756.39 35869.83\n [9929,] 35176.48 43000.43\n [9930,] 21857.28 46973.56\n [9931,] 36117.49 41585.11\n [9932,] 13562.10 35614.30\n [9933,] 41887.21 38178.09\n [9934,] 18974.36 38264.44\n [9935,] 32990.37 41605.84\n [9936,] 32773.47 41188.06\n [9937,] 13225.54 35898.66\n [9938,] 17178.17 40168.16\n [9939,] 35625.98 33627.57\n [9940,] 25430.50 30891.82\n [9941,] 14210.49 36691.54\n [9942,] 33511.36 37148.67\n [9943,] 39807.44 37787.05\n [9944,] 12961.91 35618.04\n [9945,] 36636.36 43269.84\n [9946,] 35231.73 42964.14\n [9947,] 36807.99 41926.84\n [9948,] 27422.34 29563.32\n [9949,] 18384.86 36537.63\n [9950,] 32356.28 39488.59\n [9951,] 34282.70 41941.51\n [9952,] 28617.56 45894.25\n [9953,] 20944.20 32418.61\n [9954,] 13702.58 36084.78\n [9955,] 24407.14 47097.81\n [9956,] 28777.71 45804.64\n [9957,] 24818.15 46959.64\n [9958,] 26274.32 47605.88\n [9959,] 33511.36 37148.67\n [9960,] 22892.48 46127.66\n [9961,] 33299.72 40273.50\n [9962,] 42061.47 37790.92\n [9963,] 13874.84 36230.08\n [9964,] 32990.37 41605.84\n [9965,] 32757.57 41214.59\n [9966,] 32806.30 41626.16\n [9967,] 37003.67 41725.21\n [9968,] 29032.17 37885.81\n [9969,] 27406.23 29488.17\n [9970,] 29214.05 44557.60\n [9971,] 26693.27 30307.66\n [9972,] 18580.57 42816.95\n [9973,] 34514.86 40852.39\n [9974,] 37039.59 41668.46\n [9975,] 17668.11 36422.96\n [9976,] 29238.24 38668.87\n [9977,] 29229.58 45738.69\n [9978,] 35499.58 42535.17\n [9979,] 35027.93 43052.26\n [9980,] 39506.07 35418.23\n [9981,] 17698.01 40415.81\n [9982,] 39397.56 37461.83\n [9983,] 32439.24 41206.44\n [9984,] 27982.70 29883.43\n [9985,] 42251.66 37744.35\n [9986,] 23487.35 46067.93\n [9987,] 24994.67 47144.29\n [9988,] 41886.32 39277.70\n [9989,] 30340.88 38900.48\n [9990,] 18426.40 35847.48\n [9991,] 29041.45 45519.79\n [9992,] 26124.93 48353.52\n [9993,] 35682.93 40446.79\n [9994,] 39620.82 37662.49\n [9995,] 18771.50 42454.48\n [9996,] 40708.23 36492.62\n [9997,] 14175.62 36752.99\n [9998,] 35956.99 34361.53\n [9999,] 12756.39 35869.83\n[10000,] 42289.79 39225.47\n[10001,] 19031.29 38654.83\n[10002,] 34224.81 41482.47\n[10003,] 29903.60 35288.41\n[10004,] 19575.35 36862.76\n[10005,] 29752.71 35960.02\n[10006,] 40300.83 39631.04\n[10007,] 23759.05 46095.88\n[10008,] 35182.93 40545.46\n[10009,] 29462.65 44542.38\n[10010,] 23890.58 46656.33\n[10011,] 35312.99 42884.75\n[10012,] 18974.36 38264.44\n[10013,] 27250.43 29457.87\n[10014,] 27589.06 29864.50\n[10015,] 36807.67 42555.10\n[10016,] 19428.74 36734.11\n[10017,] 25882.67 48648.61\n[10018,] 18501.00 35913.49\n[10019,] 18608.90 42129.56\n[10020,] 27391.92 29520.40\n[10021,] 27363.82 48032.56\n[10022,] 15038.05 36900.81\n[10023,] 32420.66 38867.87\n[10024,] 29231.42 44639.74\n[10025,] 29176.32 45655.37\n[10026,] 25271.27 30638.55\n[10027,] 20451.59 33486.83\n[10028,] 28632.87 46911.40\n[10029,] 17095.32 40253.55\n[10030,] 34748.61 40577.16\n[10031,] 39693.46 37760.98\n[10032,] 41572.13 38614.57\n[10033,] 39576.44 36521.72\n[10034,] 20761.49 40539.41\n[10035,] 41458.73 36575.48\n[10036,] 18476.24 38153.20\n[10037,] 28107.30 45524.10\n[10038,] 32472.41 41818.76\n[10039,] 26157.73 48682.98\n[10040,] 39961.98 33700.85\n[10041,] 35502.21 42400.73\n[10042,] 36109.15 42891.87\n[10043,] 21281.71 45373.65\n[10044,] 32603.98 41458.53\n[10045,] 34811.18 40588.20\n[10046,] 25201.15 47217.82\n[10047,] 27624.34 29285.24\n[10048,] 37229.75 42240.88\n[10049,] 38318.74 34121.34\n[10050,] 36096.32 41313.77\n[10051,] 41734.30 39121.66\n[10052,] 32153.95 39528.08\n[10053,] 36814.69 35037.62\n[10054,] 22274.14 31974.94\n[10055,] 18676.55 38355.00\n[10056,] 35064.79 40599.61\n[10057,] 24225.90 47466.95\n[10058,] 20460.64 33596.21\n[10059,] 29833.29 33142.70\n[10060,] 28534.68 39758.72\n[10061,] 25532.83 30833.41\n[10062,] 12674.98 35407.94\n[10063,] 34969.35 40389.84\n[10064,] 34096.43 39994.70\n[10065,] 36494.87 41211.26\n[10066,] 41174.86 36629.43\n[10067,] 29298.53 45962.12\n[10068,] 20647.21 32677.74\n[10069,] 36705.86 35306.88\n[10070,] 38697.90 35199.14\n[10071,] 27931.84 45424.57\n[10072,] 36754.28 42484.89\n[10073,] 29476.30 37798.50\n[10074,] 18797.22 38125.55\n[10075,] 28992.73 37963.50\n[10076,] 15488.83 36506.53\n[10077,] 27022.60 29406.75\n[10078,] 25847.01 48622.47\n[10079,] 29266.07 46069.01\n[10080,] 35221.40 33308.23\n[10081,] 20975.30 40886.84\n[10082,] 38251.29 34726.97\n[10083,] 28476.59 39368.95\n[10084,] 32821.64 41699.95\n[10085,] 36745.84 35280.87\n[10086,] 24273.92 47260.21\n[10087,] 23782.01 47569.46\n[10088,] 36551.75 34980.60\n[10089,] 19714.87 37042.67\n[10090,] 36975.56 42718.09\n[10091,] 21328.64 47451.40\n[10092,] 32147.19 39007.84\n[10093,] 29065.93 45407.81\n[10094,] 24459.20 46256.03\n[10095,] 37784.98 35386.28\n[10096,] 20653.16 41226.57\n[10097,] 28019.32 45671.66\n[10098,] 13521.39 35395.21\n[10099,] 35762.69 42213.04\n[10100,] 34520.18 40803.90\n[10101,] 29281.98 45774.85\n[10102,] 39656.21 37461.76\n[10103,] 23612.30 46542.96\n[10104,] 23283.37 45943.33\n[10105,] 35201.55 38700.80\n[10106,] 35189.88 43046.93\n[10107,] 29548.52 44871.70\n[10108,] 31201.80 33996.83\n[10109,] 29434.38 44715.69\n[10110,] 29654.27 37414.98\n[10111,] 25882.67 48648.61\n[10112,] 14080.05 36749.21\n[10113,] 35682.49 42733.07\n[10114,] 32949.02 40144.66\n[10115,] 22130.91 45717.33\n[10116,] 33330.56 40438.20\n[10117,] 41712.27 38205.20\n[10118,] 15828.73 36609.26\n[10119,] 17260.67 39852.53\n[10120,] 32428.92 39127.55\n[10121,] 40497.43 37515.47\n[10122,] 39940.62 34522.49\n[10123,] 36973.61 42458.67\n[10124,] 18224.96 42597.58\n[10125,] 18358.84 42651.82\n[10126,] 12588.58 35339.95\n[10127,] 20451.59 33486.83\n[10128,] 35539.98 39998.97\n[10129,] 15489.63 36979.15\n[10130,] 29043.74 46064.93\n[10131,] 34844.43 41055.62\n[10132,] 29467.40 44663.71\n[10133,] 35521.57 43287.94\n[10134,] 34505.30 41813.00\n[10135,] 42009.86 39685.99\n[10136,] 40588.42 36771.58\n[10137,] 24508.71 47751.29\n[10138,] 29283.45 38517.37\n[10139,] 17688.80 40138.59\n[10140,] 23938.60 47260.17\n[10141,] 32760.65 41301.41\n[10142,] 12489.99 35993.51\n[10143,] 17809.74 39749.17\n[10144,] 34155.79 41949.13\n[10145,] 35465.18 42438.06\n[10146,] 40696.14 37914.26\n[10147,] 40078.56 34296.43\n[10148,] 17501.44 39893.97\n[10149,] 34201.39 39416.91\n[10150,] 34499.63 37831.80\n[10151,] 29323.14 36005.30\n[10152,] 18411.09 36744.00\n[10153,] 29123.41 39134.01\n[10154,] 18187.19 41813.01\n[10155,] 21661.56 45914.58\n[10156,] 21603.38 39573.42\n[10157,] 21495.80 45373.58\n[10158,] 35913.37 33783.59\n[10159,] 21777.13 45914.57\n[10160,] 32641.92 41715.31\n[10161,] 28521.55 43968.06\n[10162,] 28452.45 46673.45\n[10163,] 40621.05 37768.03\n[10164,] 41501.76 37924.17\n[10165,] 34557.61 41791.91\n[10166,] 20927.48 40381.14\n[10167,] 23142.86 46256.10\n[10168,] 27370.58 45417.75\n[10169,] 18722.67 36402.03\n[10170,] 29640.96 36577.40\n[10171,] 29337.06 45027.82\n[10172,] 36607.15 41184.66\n[10173,] 17738.40 40027.47\n[10174,] 29712.24 38575.91\n[10175,] 33666.99 37148.42\n[10176,] 39569.99 37461.90\n[10177,] 21030.06 39585.82\n[10178,] 34763.22 38463.43\n[10179,] 27825.55 37906.15\n[10180,] 35530.79 40100.79\n[10181,] 28879.22 45454.97\n[10182,] 13383.63 35454.32\n[10183,] 30035.87 38457.24\n[10184,] 29917.16 34548.05\n[10185,] 40663.57 37113.17\n[10186,] 40022.52 36431.51\n[10187,] 36024.97 42922.38\n[10188,] 29694.10 37515.23\n[10189,] 33793.13 32353.03\n[10190,] 22241.80 46587.82\n[10191,] 23824.42 45999.98\n[10192,] 17529.85 33900.60\n[10193,] 19529.88 40944.66\n[10194,] 27702.21 37866.80\n[10195,] 28311.51 44027.29\n[10196,] 40484.85 37710.94\n[10197,] 39842.58 33739.21\n[10198,] 36082.36 42203.43\n[10199,] 35524.84 42400.71\n[10200,] 34359.81 41479.23\n[10201,] 12956.96 36354.45\n[10202,] 21144.59 41060.65\n[10203,] 32400.12 39411.20\n[10204,] 22341.29 32045.61\n[10205,] 19842.62 36831.05\n[10206,] 34292.91 42057.54\n[10207,] 41131.78 36303.27\n[10208,] 17724.40 33760.13\n[10209,] 35190.64 42920.65\n[10210,] 33139.01 40081.78\n[10211,] 29296.97 45063.20\n[10212,] 39542.09 37958.67\n[10213,] 27589.06 29864.50\n[10214,] 29861.37 38417.99\n[10215,] 39809.48 35007.23\n[10216,] 36219.47 42620.50\n[10217,] 34096.12 42002.61\n[10218,] 34248.55 41961.95\n[10219,] 27510.51 30193.82\n[10220,] 25089.17 47061.90\n[10221,] 28808.95 46010.43\n[10222,] 18651.99 41796.72\n[10223,] 32541.45 39651.56\n[10224,] 11824.29 35957.32\n[10225,] 13642.66 36046.86\n[10226,] 25804.38 48534.26\n[10227,] 28610.73 44759.31\n[10228,] 41836.95 38893.75\n[10229,] 29258.92 38653.10\n[10230,] 21208.52 41231.97\n[10231,] 28929.08 28879.35\n[10232,] 18613.20 37095.71\n[10233,] 40201.44 39571.68\n[10234,] 36976.44 41821.96\n[10235,] 18597.30 37967.84\n[10236,] 24178.01 31430.11\n[10237,] 32815.04 41834.40\n[10238,] 17724.40 33760.13\n[10239,] 15611.86 35485.51\n[10240,] 24075.75 46127.70\n[10241,] 27664.43 29937.31\n[10242,] 28670.25 44329.60\n[10243,] 12258.27 36390.32\n[10244,] 39750.97 37936.73\n[10245,] 34276.93 42009.52\n[10246,] 32184.34 38847.31\n[10247,] 18417.09 41366.75\n[10248,] 20669.35 41279.55\n[10249,] 40524.49 37058.36\n[10250,] 35659.26 43562.75\n[10251,] 29752.71 35960.02\n[10252,] 18467.66 42848.66\n[10253,] 41978.94 39544.63\n[10254,] 40717.45 38939.07\n[10255,] 34153.57 41905.94\n[10256,] 34807.64 40822.23\n[10257,] 18685.83 42187.58\n[10258,] 27022.60 29406.75\n[10259,] 27476.84 46102.89\n[10260,] 19813.76 40958.28\n[10261,] 20443.49 33415.37\n[10262,] 29030.08 45851.78\n[10263,] 25799.80 48617.40\n[10264,] 35369.19 41424.28\n[10265,] 33276.86 41992.68\n[10266,] 34925.26 42853.27\n[10267,] 28780.16 46535.54\n[10268,] 34698.27 41073.20\n[10269,] 30063.05 31211.39\n[10270,] 29533.95 44678.75\n[10271,] 41361.05 36493.65\n[10272,] 39188.64 34196.31\n[10273,] 34466.52 41831.05\n[10274,] 29036.48 37924.35\n[10275,] 36061.99 42848.27\n[10276,] 21456.64 35597.21\n[10277,] 31302.70 33996.19\n[10278,] 23904.58 46704.19\n[10279,] 21076.57 41233.31\n[10280,] 32451.97 41520.06\n[10281,] 34909.00 39906.22\n[10282,] 35173.32 33297.57\n[10283,] 19758.10 36437.70\n[10284,] 25544.25 30619.87\n[10285,] 34895.88 40972.23\n[10286,] 19031.29 38654.83\n[10287,] 15557.30 34906.31\n[10288,] 15754.69 34520.18\n[10289,] 30528.63 35991.98\n[10290,] 22241.93 46545.97\n[10291,] 20086.59 31907.87\n[10292,] 32408.87 41138.76\n[10293,] 32867.43 41342.68\n[10294,] 35317.71 43315.87\n[10295,] 38251.29 34726.97\n[10296,] 35552.83 42079.83\n[10297,] 13831.54 35888.61\n[10298,] 25544.25 30619.87\n[10299,] 34469.95 41889.54\n[10300,] 20063.30 31962.44\n[10301,] 27146.02 29318.47\n[10302,] 32581.39 41716.94\n[10303,] 31150.87 33960.67\n[10304,] 42298.81 38910.38\n[10305,] 17379.11 33971.22\n[10306,] 41464.72 38651.32\n[10307,] 30291.20 38778.21\n[10308,] 32511.63 41194.54\n[10309,] 27363.82 48032.56\n[10310,] 40266.27 39572.22\n[10311,] 23696.09 45489.69\n[10312,] 20227.76 40490.10\n[10313,] 40717.45 38939.07\n[10314,] 24075.75 46127.70\n[10315,] 29467.40 44663.71\n[10316,] 22241.94 46462.68\n[10317,] 29585.55 35191.21\n[10318,] 20927.48 40381.14\n[10319,] 29008.25 40303.93\n[10320,] 36435.41 42891.01\n[10321,] 34204.87 42248.94\n[10322,] 24382.48 47357.88\n[10323,] 28869.09 38824.80\n[10324,] 29462.65 44542.38\n[10325,] 20393.57 39934.02\n[10326,] 35272.33 42811.32\n[10327,] 24657.69 46888.66\n[10328,] 23918.69 46150.28\n[10329,] 15050.10 36716.38\n[10330,] 36978.96 41739.11\n[10331,] 25929.59 47862.40\n[10332,] 28771.12 45867.62\n[10333,] 39309.39 37227.95\n[10334,] 12893.55 36276.17\n[10335,] 14941.86 37017.30\n\n\n\n\nCode\ncoords_test\n\n\n               X        Y\n   [1,] 28423.42 39745.94\n   [2,] 30550.38 39588.77\n   [3,] 28240.06 39477.60\n   [4,] 30637.92 39516.90\n   [5,] 30347.48 38995.85\n   [6,] 28325.75 39700.70\n   [7,] 28271.22 40241.11\n   [8,] 29873.59 39507.67\n   [9,] 29283.45 38517.37\n  [10,] 29419.80 39109.98\n  [11,] 29216.54 38521.26\n  [12,] 39846.57 33842.55\n  [13,] 39766.43 34608.46\n  [14,] 36897.68 35313.56\n  [15,] 36730.60 34950.97\n  [16,] 39699.12 33765.23\n  [17,] 40610.11 33554.61\n  [18,] 38519.04 35232.50\n  [19,] 37883.79 34558.85\n  [20,] 39967.02 34387.45\n  [21,] 39851.45 33693.73\n  [22,] 39188.64 34196.31\n  [23,] 39124.49 34171.91\n  [24,] 39151.37 34121.59\n  [25,] 29625.06 36505.54\n  [26,] 29592.68 37844.87\n  [27,] 29164.84 37756.46\n  [28,] 30138.57 36909.09\n  [29,] 29965.20 36754.12\n  [30,] 28992.73 37963.50\n  [31,] 29049.95 38191.46\n  [32,] 29736.58 37771.79\n  [33,] 29207.69 38218.63\n  [34,] 29181.37 37605.60\n  [35,] 18833.13 38400.38\n  [36,] 18680.87 38239.31\n  [37,] 18817.17 38361.18\n  [38,] 19283.98 36592.99\n  [39,] 18693.28 38044.36\n  [40,] 18190.42 36773.17\n  [41,] 17625.96 36521.02\n  [42,] 19842.62 36831.05\n  [43,] 19012.08 38443.16\n  [44,] 19012.08 38443.16\n  [45,] 17640.22 36470.64\n  [46,] 18411.09 36744.00\n  [47,] 26878.90 28287.80\n  [48,] 25644.05 28493.59\n  [49,] 25406.61 30116.06\n  [50,] 28797.61 28575.31\n  [51,] 26227.41 30088.16\n  [52,] 27096.78 29393.50\n  [53,] 21089.52 40146.58\n  [54,] 20655.65 39818.11\n  [55,] 21276.85 41202.55\n  [56,] 20673.42 40679.27\n  [57,] 21155.90 40320.68\n  [58,] 20550.02 40105.07\n  [59,] 20096.13 40147.73\n  [60,] 28908.95 28820.87\n  [61,] 18489.23 42915.95\n  [62,] 18903.33 42610.44\n  [63,] 17405.09 40176.90\n  [64,] 17072.46 40018.36\n  [65,] 17937.12 41443.15\n  [66,] 18105.21 42501.28\n  [67,] 18660.35 42567.99\n  [68,] 19444.72 40306.89\n  [69,] 17755.06 40336.29\n  [70,] 18205.12 41735.91\n  [71,] 18205.12 41735.91\n  [72,] 20182.34 31585.09\n  [73,] 20395.31 33687.82\n  [74,] 20905.68 32575.97\n  [75,] 20918.96 32638.12\n  [76,] 20555.98 32729.69\n  [77,] 20770.26 32379.02\n  [78,] 20617.73 32691.96\n  [79,] 20497.66 32600.26\n  [80,] 20855.73 32483.78\n  [81,] 35958.92 34459.49\n  [82,] 33692.87 32439.00\n  [83,] 33449.82 32310.48\n  [84,] 35529.25 33696.58\n  [85,] 35170.47 33252.39\n  [86,] 33620.96 39035.58\n  [87,] 33797.44 39748.52\n  [88,] 33107.05 39180.95\n  [89,] 33723.18 39110.10\n  [90,] 33507.13 39558.35\n  [91,] 34344.58 39196.11\n  [92,] 17798.75 36219.46\n  [93,] 16866.27 36531.85\n  [94,] 17578.65 36146.17\n  [95,] 18137.96 35874.39\n  [96,] 12557.27 36844.97\n  [97,] 11924.80 36162.15\n  [98,] 12409.51 36480.82\n  [99,] 15643.52 35057.70\n [100,] 15215.13 37161.59\n [101,] 12147.46 36056.16\n [102,] 13256.55 35349.69\n [103,] 12926.09 36045.30\n [104,] 12618.77 35479.29\n [105,] 13735.20 35318.54\n [106,] 15456.56 35774.53\n [107,] 15490.38 36938.33\n [108,] 14246.35 36749.10\n [109,] 14246.35 36749.10\n [110,] 13702.58 36084.78\n [111,] 30018.34 32908.99\n [112,] 30777.15 33728.61\n [113,] 31724.69 33708.31\n [114,] 32159.15 32778.05\n [115,] 36998.70 31789.68\n [116,] 41920.54 38858.65\n [117,] 39339.51 39939.31\n [118,] 36097.50 42583.89\n [119,] 36953.98 42535.50\n [120,] 36264.53 42703.48\n [121,] 35272.33 42811.32\n [122,] 35816.59 42712.59\n [123,] 36176.47 43075.41\n [124,] 36328.51 42976.62\n [125,] 35502.21 42400.73\n [126,] 35618.69 42647.25\n [127,] 36696.77 42634.15\n [128,] 36724.74 42512.33\n [129,] 35271.89 43005.46\n [130,] 35312.99 42884.75\n [131,] 36137.23 43102.98\n [132,] 35277.79 43057.12\n [133,] 35787.70 42726.34\n [134,] 23807.44 32254.03\n [135,] 23654.83 32274.13\n [136,] 23721.40 32407.14\n [137,] 22600.66 32354.85\n [138,] 25271.27 30638.55\n [139,] 23971.76 31497.79\n [140,] 25631.35 30735.62\n [141,] 23911.52 31600.59\n [142,] 26133.21 48037.90\n [143,] 25842.25 48181.45\n [144,] 26051.87 48431.33\n [145,] 25987.26 47819.65\n [146,] 26022.07 47921.91\n [147,] 26677.20 48277.88\n [148,] 25847.01 48622.47\n [149,] 25847.01 48622.47\n [150,] 25847.01 48622.47\n [151,] 25847.01 48622.47\n [152,] 36613.65 41218.73\n [153,] 34291.08 41039.86\n [154,] 35989.67 40958.87\n [155,] 36607.15 41184.66\n [156,] 35192.28 41407.77\n [157,] 36607.15 41184.66\n [158,] 34192.64 41487.01\n [159,] 34084.87 41528.07\n [160,] 35405.91 40829.57\n [161,] 36494.87 41211.26\n [162,] 35337.22 41556.11\n [163,] 32480.52 41577.30\n [164,] 32773.47 41188.06\n [165,] 34565.39 41492.94\n [166,] 34536.80 41708.05\n [167,] 36494.87 41211.26\n [168,] 32472.41 41818.76\n [169,] 32657.10 41446.09\n [170,] 32803.26 41317.97\n [171,] 32785.76 41808.31\n [172,] 35064.79 40599.61\n [173,] 32883.68 41849.98\n [174,] 35112.00 40504.21\n [175,] 34808.92 40728.39\n [176,] 34733.15 40691.51\n [177,] 32147.19 39007.84\n [178,] 32463.36 37771.40\n [179,] 32495.95 37356.27\n [180,] 32174.87 36928.37\n [181,] 41712.27 38205.20\n [182,] 41889.80 36998.87\n [183,] 41491.67 37784.47\n [184,] 41518.69 37029.15\n [185,] 42091.02 36428.69\n [186,] 42276.26 37460.50\n [187,] 41378.15 37417.54\n [188,] 42053.07 38130.90\n [189,] 39556.45 37890.97\n [190,] 41284.29 37512.03\n [191,] 40972.07 36111.83\n [192,] 30342.88 35998.68\n [193,] 30802.29 34932.56\n [194,] 31655.89 35011.69\n [195,] 21752.95 47002.21\n [196,] 21341.36 47400.41\n [197,] 21240.52 45414.13\n [198,] 22117.03 45752.60\n [199,] 23519.30 47201.67\n [200,] 21853.72 46229.60\n [201,] 22275.82 46072.75\n [202,] 21679.93 46187.26\n [203,] 23984.74 45878.96\n [204,] 24165.28 46126.52\n [205,] 23942.92 47580.54\n [206,] 24075.75 46127.70\n [207,] 24422.78 47391.68\n [208,] 21957.47 45954.56\n [209,] 23814.61 45826.55\n [210,] 24172.23 46283.89\n [211,] 24184.47 46641.28\n [212,] 22203.22 46633.87\n [213,] 24075.75 46127.70\n [214,] 21398.30 45428.53\n [215,] 24354.91 47636.41\n [216,] 23581.25 46870.49\n [217,] 21362.46 46116.49\n [218,] 23612.30 46542.96\n [219,] 21857.28 46973.56\n [220,] 29652.73 45295.09\n [221,] 29555.18 44742.73\n [222,] 27886.75 46325.98\n [223,] 29007.62 46373.56\n [224,] 27381.55 45550.59\n [225,] 27920.86 45079.77\n [226,] 27809.48 46442.49\n [227,] 28209.98 46259.68\n [228,] 27646.60 46230.75\n [229,] 28464.37 44875.44\n [230,] 29410.98 45315.50\n [231,] 28710.67 44821.79\n [232,] 28612.75 46522.06\n [233,] 27990.53 45332.55\n [234,] 28070.69 44004.81\n [235,] 28012.41 46015.43\n [236,] 29337.06 45027.82\n [237,] 29258.54 44994.84\n [238,] 29548.52 44871.70\n [239,] 28083.29 45403.61\n [240,] 29043.74 46064.93\n [241,] 29361.72 44631.99\n [242,] 29065.93 45407.81\n [243,] 28991.85 45431.57\n [244,] 28943.92 39225.43\n [245,] 28452.14 39266.19\n [246,] 28431.52 38930.27\n [247,] 28537.68 38825.23\n [248,] 28263.09 39636.50\n [249,] 29238.24 38668.87\n [250,] 30082.21 38436.17\n [251,] 29248.59 38589.71\n [252,] 39452.25 34993.38\n [253,] 39315.16 33829.80\n [254,] 36814.69 35037.62\n [255,] 37091.04 35231.82\n [256,] 39775.15 33898.37\n [257,] 40450.94 33589.20\n [258,] 38636.54 34545.43\n [259,] 39209.59 35373.96\n [260,] 29640.96 36577.40\n [261,] 28086.24 38333.00\n [262,] 27790.00 37831.17\n [263,] 18344.89 38018.24\n [264,] 19758.10 36437.70\n [265,] 17808.54 36497.59\n [266,] 19533.14 36953.50\n [267,] 19717.27 36699.72\n [268,] 19526.02 36169.54\n [269,] 19359.40 36134.89\n [270,] 18722.67 36402.03\n [271,] 18969.28 38392.75\n [272,] 19454.43 36156.82\n [273,] 18422.44 36790.70\n [274,] 18657.75 36993.77\n [275,] 25675.16 28525.92\n [276,] 27323.46 28541.89\n [277,] 26696.26 28872.00\n [278,] 25258.81 29285.57\n [279,] 25996.74 30164.90\n [280,] 27510.51 30193.82\n [281,] 27146.02 29318.47\n [282,] 28655.37 28641.91\n [283,] 27140.14 29503.32\n [284,] 27462.75 29460.27\n [285,] 27664.43 29937.31\n [286,] 21512.98 39553.42\n [287,] 21089.52 40146.58\n [288,] 21320.61 40986.71\n [289,] 21099.53 41178.93\n [290,] 21030.40 41123.11\n [291,] 21076.57 41233.31\n [292,] 20268.74 41042.65\n [293,] 20145.42 40375.84\n [294,] 20941.42 41191.45\n [295,] 21072.27 41108.45\n [296,] 20384.11 39828.87\n [297,] 20096.13 40147.73\n [298,] 29868.34 32055.27\n [299,] 30021.00 32211.22\n [300,] 18123.86 40030.26\n [301,] 17260.67 39852.53\n [302,] 17266.60 39720.72\n [303,] 17178.17 40168.16\n [304,] 17688.80 40138.59\n [305,] 17295.98 39829.52\n [306,] 17593.37 40542.25\n [307,] 18324.29 41997.66\n [308,] 18111.79 41789.39\n [309,] 19930.03 32569.73\n [310,] 20081.57 32005.37\n [311,] 20081.57 32005.37\n [312,] 20895.00 31781.84\n [313,] 20944.20 32418.61\n [314,] 35871.64 34303.97\n [315,] 34013.23 33937.73\n [316,] 35571.89 33616.86\n [317,] 33759.61 39801.60\n [318,] 33989.29 39188.29\n [319,] 34834.18 38793.27\n [320,] 33924.35 40034.94\n [321,] 32890.84 40251.77\n [322,] 17528.41 33802.31\n [323,] 17520.66 33991.60\n [324,] 18098.03 35944.40\n [325,] 17830.74 35485.55\n [326,] 12703.36 36494.01\n [327,] 11901.52 35990.11\n [328,] 12542.36 36465.27\n [329,] 13077.35 36637.87\n [330,] 12762.09 36032.36\n [331,] 15904.43 37156.59\n [332,] 12994.10 35302.85\n [333,] 13256.55 35349.69\n [334,] 13548.67 36396.25\n [335,] 13257.17 36725.54\n [336,] 13497.04 35935.38\n [337,] 15828.73 36609.26\n [338,] 14133.61 36727.94\n [339,] 14080.05 36749.21\n [340,] 13686.28 36164.99\n [341,] 32109.42 33998.94\n [342,] 30025.60 34493.68\n [343,] 30615.82 34239.58\n [344,] 39974.55 40196.33\n [345,] 39378.69 39920.11\n [346,] 41510.71 38880.72\n [347,] 39856.06 40068.75\n [348,] 40401.66 39495.13\n [349,] 37232.21 42184.67\n [350,] 35331.55 42533.96\n [351,] 36905.31 42507.46\n [352,] 35465.18 42438.06\n [353,] 36384.90 42870.98\n [354,] 36888.78 42582.01\n [355,] 35548.11 42534.58\n [356,] 37003.67 41725.21\n [357,] 35271.89 43005.46\n [358,] 36735.18 42688.11\n [359,] 35967.96 42639.09\n [360,] 35524.84 42400.71\n [361,] 36212.80 42815.39\n [362,] 35189.88 43046.93\n [363,] 35231.73 42964.14\n [364,] 35644.27 42790.82\n [365,] 24762.67 30499.05\n [366,] 23724.28 32123.95\n [367,] 23724.28 32123.95\n [368,] 24200.86 31913.25\n [369,] 23709.41 32086.87\n [370,] 23389.01 32595.76\n [371,] 26263.75 48635.08\n [372,] 26127.08 48230.31\n [373,] 26274.32 47605.88\n [374,] 26553.19 48343.33\n [375,] 26434.74 47544.70\n [376,] 26707.84 47347.92\n [377,] 25847.01 48622.47\n [378,] 36171.03 40943.46\n [379,] 33878.04 41513.15\n [380,] 32588.22 41800.05\n [381,] 35750.76 40701.36\n [382,] 32560.15 41105.64\n [383,] 34487.89 41389.51\n [384,] 32480.52 41577.30\n [385,] 34959.25 40780.64\n [386,] 34807.64 40822.23\n [387,] 32347.02 38870.60\n [388,] 32725.66 39178.93\n [389,] 31900.57 37456.51\n [390,] 32111.14 37605.39\n [391,] 32314.90 37745.94\n [392,] 32174.87 36928.37\n [393,] 32383.67 37473.30\n [394,] 39137.00 37384.49\n [395,] 38913.38 37146.45\n [396,] 39222.02 37960.74\n [397,] 39546.43 37080.67\n [398,] 40813.72 37158.34\n [399,] 40751.36 37055.69\n [400,] 41594.60 36123.52\n [401,] 31599.88 35324.98\n [402,] 29323.05 34973.76\n [403,] 21312.16 47070.56\n [404,] 24234.02 46379.30\n [405,] 24265.75 47745.73\n [406,] 24423.51 46133.07\n [407,] 23128.76 47176.38\n [408,] 23824.42 45999.98\n [409,] 23984.74 45878.96\n [410,] 23938.60 47260.17\n [411,] 23948.75 47505.80\n [412,] 21467.91 45501.63\n [413,] 23612.54 46167.91\n [414,] 21424.62 46347.80\n [415,] 21264.98 46385.07\n [416,] 21819.55 46973.55\n [417,] 23135.77 45925.38\n [418,] 24629.97 47757.26\n [419,] 22816.47 46071.39\n [420,] 23663.50 46544.11\n [421,] 28593.92 44540.97\n [422,] 28311.51 44027.29\n [423,] 28671.10 44889.68\n [424,] 28632.87 46911.40\n [425,] 28311.51 44027.29\n [426,] 28233.11 44682.23\n [427,] 29120.97 45320.14\n [428,] 28060.12 44847.17\n [429,] 29548.52 44871.70\n [430,] 28879.22 45454.97\n [431,] 28879.22 45454.97\n [432,] 28545.55 39010.84\n [433,] 28943.92 39225.43\n [434,] 29140.92 40269.45\n [435,] 29144.93 40222.71\n [436,] 30224.78 39055.72\n [437,] 40143.01 34063.12\n [438,] 40049.91 33755.10\n [439,] 40550.35 33618.85\n [440,] 38498.13 34639.49\n [441,] 37570.16 35247.23\n [442,] 38585.32 35480.32\n [443,] 39589.61 35388.80\n [444,] 39155.77 34184.36\n [445,] 30318.04 36247.73\n [446,] 29077.11 38219.23\n [447,] 29640.96 36577.40\n [448,] 28975.95 37778.52\n [449,] 29172.47 37879.24\n [450,] 27702.21 37866.80\n [451,] 29181.72 38185.97\n [452,] 29632.79 36542.36\n [453,] 29129.76 37573.18\n [454,] 18165.40 36958.47\n [455,] 18465.57 38406.96\n [456,] 18790.06 38280.84\n [457,] 18633.83 38317.68\n [458,] 18825.29 37467.42\n [459,] 18190.42 36773.17\n [460,] 19359.40 36134.89\n [461,] 18722.67 36402.03\n [462,] 18969.28 38392.75\n [463,] 19097.47 38656.20\n [464,] 18106.97 36460.53\n [465,] 18371.85 36948.49\n [466,] 26878.90 28287.80\n [467,] 25259.63 28597.13\n [468,] 25210.62 28870.53\n [469,] 27096.78 29393.50\n [470,] 27096.78 29393.50\n [471,] 27176.96 29783.36\n [472,] 26059.10 30099.20\n [473,] 25024.14 28462.79\n [474,] 27982.70 29883.43\n [475,] 21217.00 39692.27\n [476,] 20649.18 41126.40\n [477,] 21099.53 41178.93\n [478,] 19771.40 40831.07\n [479,] 19813.76 40958.28\n [480,] 20941.42 41191.45\n [481,] 19753.52 40742.58\n [482,] 20495.11 40135.56\n [483,] 25188.65 33288.05\n [484,] 30119.21 32393.85\n [485,] 28899.78 28918.09\n [486,] 18937.83 40434.29\n [487,] 19165.45 40130.33\n [488,] 18671.70 42623.05\n [489,] 18281.58 42579.48\n [490,] 18745.73 42929.37\n [491,] 18686.57 42716.93\n [492,] 18454.86 40158.12\n [493,] 18378.77 41365.56\n [494,] 17593.37 40542.25\n [495,] 17588.17 40185.12\n [496,] 18219.46 41813.23\n [497,] 19963.60 32176.57\n [498,] 20200.02 33693.53\n [499,] 20724.24 32936.30\n [500,] 35788.37 34683.76\n [501,] 35723.75 33837.35\n [502,] 35041.64 32765.05\n [503,] 33748.47 33327.88\n [504,] 33724.07 33386.71\n [505,] 33495.00 32270.02\n [506,] 34390.07 38431.20\n [507,] 34060.37 38708.37\n [508,] 35224.91 39320.67\n [509,] 35235.79 39077.89\n [510,] 35044.72 38640.92\n [511,] 33717.79 39018.13\n [512,] 35006.21 39971.63\n [513,] 34075.58 36924.40\n [514,] 33321.17 40188.58\n [515,] 34732.02 39909.14\n [516,] 33669.26 37078.35\n [517,] 34200.90 39378.09\n [518,] 35193.18 38987.44\n [519,] 35617.49 40013.95\n [520,] 34823.40 39473.84\n [521,] 35617.49 40013.95\n [522,] 32890.84 40251.77\n [523,] 35617.49 40013.95\n [524,] 17590.01 33737.08\n [525,] 17982.64 36024.33\n [526,] 18501.00 35913.49\n [527,] 16494.74 36917.37\n [528,] 18361.43 36028.10\n [529,] 18426.40 35847.48\n [530,] 16187.16 36965.14\n [531,] 11916.12 36225.49\n [532,] 12914.05 36880.51\n [533,] 15828.73 36609.26\n [534,] 12535.11 36210.34\n [535,] 12816.32 35873.26\n [536,] 15772.20 35395.86\n [537,] 15423.74 35332.17\n [538,] 15736.93 35351.94\n [539,] 14246.35 36749.10\n [540,] 14246.35 36749.10\n [541,] 15551.63 35558.97\n [542,] 31308.79 34136.52\n [543,] 30012.30 32655.67\n [544,] 30858.66 33582.35\n [545,] 32275.60 32824.57\n [546,] 31105.01 33147.79\n [547,] 42310.49 39569.16\n [548,] 41537.39 38942.17\n [549,] 39468.47 40489.30\n [550,] 41517.36 38839.81\n [551,] 41780.74 39687.97\n [552,] 40503.84 39456.37\n [553,] 36624.09 42069.17\n [554,] 35272.33 42811.32\n [555,] 37003.67 41725.21\n [556,] 36846.09 42609.05\n [557,] 37039.59 41668.46\n [558,] 36451.70 42826.86\n [559,] 36222.76 42860.59\n [560,] 35307.63 42426.14\n [561,] 35307.63 42426.14\n [562,] 35465.18 42438.06\n [563,] 35978.83 42899.21\n [564,] 35813.88 42655.99\n [565,] 35176.48 43000.43\n [566,] 36116.34 43022.32\n [567,] 35292.95 42907.69\n [568,] 35255.86 42983.08\n [569,] 35189.88 43046.93\n [570,] 35271.89 43005.46\n [571,] 24910.74 30751.74\n [572,] 24171.96 31505.67\n [573,] 22274.14 31974.94\n [574,] 25996.63 47491.95\n [575,] 26167.57 47897.38\n [576,] 25762.47 48512.55\n [577,] 25882.67 48648.61\n [578,] 25847.01 48622.47\n [579,] 27397.84 48130.23\n [580,] 25882.67 48648.61\n [581,] 35056.58 41996.91\n [582,] 35833.14 41255.73\n [583,] 35763.71 41252.26\n [584,] 35812.20 41327.98\n [585,] 34802.98 41008.03\n [586,] 36494.87 41211.26\n [587,] 34086.71 41473.83\n [588,] 32451.97 41520.06\n [589,] 34708.38 41024.85\n [590,] 32972.82 41858.42\n [591,] 32581.39 41716.94\n [592,] 34704.60 40653.66\n [593,] 32878.47 41215.94\n [594,] 32415.85 41649.39\n [595,] 32666.20 41556.04\n [596,] 32480.52 41577.30\n [597,] 32588.22 41800.05\n [598,] 34165.54 41998.48\n [599,] 34799.24 40773.24\n [600,] 34857.65 40669.57\n [601,] 35036.12 40361.23\n [602,] 34781.45 40855.02\n [603,] 34809.92 40477.37\n [604,] 32639.36 38940.10\n [605,] 32395.12 36648.47\n [606,] 32050.07 37199.79\n [607,] 41439.47 37826.96\n [608,] 42280.55 37552.40\n [609,] 42349.48 37523.20\n [610,] 41637.18 36168.05\n [611,] 39516.17 37584.35\n [612,] 41039.91 36035.19\n [613,] 41317.90 36850.75\n [614,] 39432.62 36514.31\n [615,] 40490.01 37415.86\n [616,] 41451.47 36145.54\n [617,] 42058.52 36143.01\n [618,] 30528.63 35991.98\n [619,] 29323.14 36005.30\n [620,] 29870.55 35921.75\n [621,] 31655.89 35011.69\n [622,] 29308.67 35192.93\n [623,] 29365.53 34999.36\n [624,] 21552.66 46823.29\n [625,] 21475.81 45414.05\n [626,] 23937.30 47433.97\n [627,] 21445.13 47271.73\n [628,] 21281.71 45373.65\n [629,] 23639.36 46382.83\n [630,] 24175.40 47659.60\n [631,] 23369.41 47241.13\n [632,] 23296.66 46904.47\n [633,] 21401.47 45621.49\n [634,] 23928.59 46309.61\n [635,] 23430.33 45645.64\n [636,] 24184.47 46641.28\n [637,] 23128.76 47176.38\n [638,] 21330.60 45516.23\n [639,] 24267.54 47020.21\n [640,] 21857.28 46973.56\n [641,] 23520.66 46830.54\n [642,] 24482.06 46785.55\n [643,] 21819.55 46973.55\n [644,] 24528.26 46812.80\n [645,] 23612.30 46542.96\n [646,] 23080.88 46048.43\n [647,] 24677.26 47703.11\n [648,] 23639.55 46602.59\n [649,] 29649.88 45369.14\n [650,] 27375.19 45328.68\n [651,] 29670.16 44909.77\n [652,] 27514.73 45351.85\n [653,] 28330.35 44062.84\n [654,] 28546.22 46666.99\n [655,] 28539.45 44732.23\n [656,] 28072.88 45197.38\n [657,] 28546.22 46666.99\n [658,] 27515.70 45316.61\n [659,] 28589.31 46228.50\n [660,] 28495.49 46811.92\n [661,] 27777.49 45930.78\n [662,] 28447.41 44059.42\n [663,] 28938.60 45939.10\n [664,] 29263.83 45891.33\n [665,] 29203.53 45951.17\n [666,] 29203.53 45951.17\n [667,] 27713.14 44269.01\n [668,] 29289.18 44916.43\n [669,] 29263.83 45891.33\n [670,] 29065.93 45407.81\n [671,] 28963.89 45446.68\n [672,] 29041.45 45519.79\n [673,] 28201.78 40334.05\n [674,] 30730.76 39223.53\n [675,] 30601.23 38459.25\n [676,] 30759.95 38355.06\n [677,] 30860.13 39133.23\n [678,] 30526.74 39084.81\n [679,] 28960.32 39342.78\n [680,] 28968.13 39865.82\n [681,] 29144.93 40222.71\n [682,] 28152.37 39135.65\n [683,] 28509.46 38986.49\n [684,] 29465.62 39051.41\n [685,] 28592.73 40062.84\n [686,] 29417.95 39047.97\n [687,] 30288.60 39307.11\n [688,] 39865.79 34003.09\n [689,] 37908.27 35289.22\n [690,] 39729.72 34710.92\n [691,] 39689.49 33812.06\n [692,] 38676.79 35018.03\n [693,] 36928.46 35084.96\n [694,] 38001.84 35081.91\n [695,] 39931.40 34570.51\n [696,] 37567.54 35294.78\n [697,] 38507.50 34591.83\n [698,] 37912.95 35388.27\n [699,] 36465.04 34635.17\n [700,] 38643.94 35459.35\n [701,] 36183.18 35061.69\n [702,] 39426.26 35349.54\n [703,] 39290.77 34160.04\n [704,] 29672.61 36744.54\n [705,] 28514.58 36915.11\n [706,] 29137.66 37722.77\n [707,] 18230.93 38212.74\n [708,] 17860.64 36438.79\n [709,] 19248.49 36711.23\n [710,] 18375.27 38071.34\n [711,] 18256.96 38289.60\n [712,] 18285.84 37059.93\n [713,] 17715.86 36526.71\n [714,] 18969.28 38392.75\n [715,] 19586.86 36299.52\n [716,] 19012.08 38443.16\n [717,] 19758.10 36437.70\n [718,] 18768.48 36459.61\n [719,] 18069.33 36523.76\n [720,] 18437.03 36353.45\n [721,] 18583.08 37066.62\n [722,] 18493.50 36688.49\n [723,] 18414.68 36705.26\n [724,] 19097.47 38656.20\n [725,] 18106.97 36460.53\n [726,] 25784.12 28600.03\n [727,] 27123.33 29075.18\n [728,] 27246.25 30469.37\n [729,] 27377.34 29030.93\n [730,] 27422.34 29563.32\n [731,] 26114.30 29937.27\n [732,] 27722.43 29885.24\n [733,] 27234.98 29701.90\n [734,] 27161.33 29723.86\n [735,] 26103.31 30159.16\n [736,] 27408.08 30276.81\n [737,] 21493.31 39523.14\n [738,] 21348.25 39656.03\n [739,] 20823.45 40920.64\n [740,] 20962.02 40626.39\n [741,] 20730.85 40943.90\n [742,] 20673.42 40679.27\n [743,] 20427.21 40740.42\n [744,] 21354.75 39607.06\n [745,] 19771.40 40831.07\n [746,] 21002.69 41053.33\n [747,] 21099.53 41178.93\n [748,] 21133.84 41240.77\n [749,] 21076.57 41233.31\n [750,] 19813.76 40958.28\n [751,] 19753.52 40742.58\n [752,] 30119.21 32393.85\n [753,] 30119.21 32393.85\n [754,] 30242.27 31412.37\n [755,] 28872.26 28787.86\n [756,] 19255.04 40123.24\n [757,] 19280.71 40192.75\n [758,] 18537.09 40157.98\n [759,] 18371.67 42947.87\n [760,] 17331.24 40397.98\n [761,] 17765.31 40481.50\n [762,] 18044.66 42402.07\n [763,] 18452.24 42542.72\n [764,] 17870.32 39880.43\n [765,] 17553.97 40243.17\n [766,] 18683.56 42139.86\n [767,] 18621.61 41973.17\n [768,] 18546.64 42188.03\n [769,] 35475.73 34303.98\n [770,] 35795.31 34011.31\n [771,] 33748.47 33327.88\n [772,] 33787.43 33493.26\n [773,] 34240.24 32180.99\n [774,] 33566.50 32417.14\n [775,] 33797.44 39748.52\n [776,] 34034.29 39853.85\n [777,] 35237.34 39036.21\n [778,] 35320.59 39346.09\n [779,] 34549.25 37718.77\n [780,] 34330.82 40189.65\n [781,] 35193.18 38987.44\n [782,] 33297.94 39784.56\n [783,] 34524.65 37794.36\n [784,] 34011.67 39667.62\n [785,] 34307.92 39153.43\n [786,] 35510.31 40049.49\n [787,] 34344.58 39196.11\n [788,] 35617.49 40013.95\n [789,] 33697.30 37668.49\n [790,] 17582.77 33891.16\n [791,] 16628.86 36534.77\n [792,] 11824.29 35957.32\n [793,] 12358.65 36192.11\n [794,] 13130.20 36918.09\n [795,] 12937.19 35969.57\n [796,] 15977.37 37078.75\n [797,] 13077.35 36637.87\n [798,] 15666.80 34524.06\n [799,] 13256.55 35349.69\n [800,] 12654.70 35329.27\n [801,] 12615.87 35271.68\n [802,] 13865.64 36471.13\n [803,] 15353.38 35563.01\n [804,] 12872.38 35808.63\n [805,] 14246.35 36749.10\n [806,] 13664.22 36192.87\n [807,] 31678.09 34080.63\n [808,] 31367.32 31780.90\n [809,] 30443.29 32890.09\n [810,] 30597.62 32954.93\n [811,] 31107.88 32141.73\n [812,] 32159.15 32778.05\n [813,] 39171.63 39939.45\n [814,] 41517.36 38839.81\n [815,] 39466.57 39642.88\n [816,] 39373.51 39707.26\n [817,] 41466.54 38691.58\n [818,] 40100.17 39700.70\n [819,] 40526.29 39543.43\n [820,] 36349.34 42055.12\n [821,] 36536.14 41556.12\n [822,] 37140.49 42216.39\n [823,] 36423.77 42426.99\n [824,] 36602.65 41637.89\n [825,] 36976.44 41821.96\n [826,] 36553.75 41583.03\n [827,] 36011.47 42729.76\n [828,] 36976.63 42519.01\n [829,] 36593.84 42468.55\n [830,] 36978.96 41739.11\n [831,] 36859.47 42540.04\n [832,] 36451.70 42826.86\n [833,] 36222.76 42860.59\n [834,] 35642.76 43519.88\n [835,] 36754.28 42484.89\n [836,] 35768.73 42579.08\n [837,] 35414.54 42625.10\n [838,] 35768.73 42579.08\n [839,] 36685.93 42525.91\n [840,] 35411.93 42559.87\n [841,] 35915.31 42919.66\n [842,] 35176.48 43000.43\n [843,] 35120.27 42848.74\n [844,] 35191.31 42814.66\n [845,] 35456.22 42844.66\n [846,] 35231.73 42964.14\n [847,] 36083.79 43138.63\n [848,] 35535.84 42866.36\n [849,] 35654.91 42683.10\n [850,] 36137.23 43102.98\n [851,] 24670.48 30188.19\n [852,] 23721.40 32407.14\n [853,] 25544.25 30619.87\n [854,] 25158.81 30687.65\n [855,] 23911.52 31600.59\n [856,] 26083.87 48625.64\n [857,] 26056.87 48669.59\n [858,] 26274.32 47605.88\n [859,] 26088.14 48323.87\n [860,] 26800.33 47552.02\n [861,] 27127.40 47923.62\n [862,] 26436.21 48219.52\n [863,] 26419.85 47397.09\n [864,] 27363.82 48032.56\n [865,] 27265.75 47952.87\n [866,] 26282.03 47739.71\n [867,] 35281.10 41921.70\n [868,] 34895.88 40972.23\n [869,] 34536.80 41708.05\n [870,] 36494.87 41211.26\n [871,] 32851.48 41722.74\n [872,] 33048.82 41292.71\n [873,] 36495.86 41268.56\n [874,] 34698.27 41073.20\n [875,] 35482.12 40902.93\n [876,] 32524.59 41721.90\n [877,] 36495.86 41268.56\n [878,] 34526.12 41877.85\n [879,] 35048.69 40430.10\n [880,] 34086.95 41912.07\n [881,] 34808.92 40728.39\n [882,] 34514.86 40852.39\n [883,] 32283.75 37913.02\n [884,] 32105.85 36862.83\n [885,] 32044.48 37114.29\n [886,] 31990.69 37171.58\n [887,] 32438.34 36488.81\n [888,] 32359.79 36512.83\n [889,] 41058.57 37820.01\n [890,] 41317.90 36850.75\n [891,] 39360.28 36913.14\n [892,] 38988.49 37017.83\n [893,] 39303.48 36549.51\n [894,] 38988.49 37017.83\n [895,] 39307.85 37143.23\n [896,] 38988.49 37017.83\n [897,] 39526.58 37785.62\n [898,] 42061.47 37790.92\n [899,] 39242.42 37809.10\n [900,] 40786.95 37727.96\n [901,] 40884.21 37050.76\n [902,] 40814.31 37108.56\n [903,] 30510.01 36101.59\n [904,] 31369.95 35359.81\n [905,] 30442.63 34807.68\n [906,] 30697.69 35120.96\n [907,] 29848.35 35275.79\n [908,] 29187.77 35340.82\n [909,] 29352.65 35432.23\n [910,] 29632.80 35203.32\n [911,] 21528.39 47201.93\n [912,] 23646.60 47416.27\n [913,] 23341.42 46782.39\n [914,] 22732.47 47039.47\n [915,] 21970.16 45719.72\n [916,] 23881.71 47265.68\n [917,] 24157.40 47080.03\n [918,] 24369.39 47482.38\n [919,] 24354.26 46128.76\n [920,] 24286.01 46275.47\n [921,] 24065.36 47601.58\n [922,] 24038.01 47679.74\n [923,] 23948.75 47505.80\n [924,] 25093.16 47165.81\n [925,] 24079.62 46363.07\n [926,] 21495.80 45373.58\n [927,] 23283.37 45943.33\n [928,] 24098.25 46567.49\n [929,] 24265.75 47745.73\n [930,] 23763.87 46474.25\n [931,] 21819.55 46973.55\n [932,] 23363.43 46371.22\n [933,] 25089.17 47061.90\n [934,] 21819.55 46973.55\n [935,] 24442.04 47860.89\n [936,] 23296.00 46266.90\n [937,] 23639.55 46602.59\n [938,] 23612.30 46542.96\n [939,] 23663.50 46544.11\n [940,] 23639.55 46602.59\n [941,] 23612.30 46542.96\n [942,] 27520.09 46163.59\n [943,] 27768.70 45328.59\n [944,] 27315.65 45605.62\n [945,] 28214.27 46147.57\n [946,] 28311.51 44027.29\n [947,] 28710.67 44821.79\n [948,] 27818.18 46097.36\n [949,] 29427.62 44862.31\n [950,] 28078.98 46056.46\n [951,] 27775.61 46176.45\n [952,] 29361.72 44631.99\n [953,] 28404.15 44055.28\n [954,] 29008.86 46011.25\n [955,] 29361.72 44631.99\n [956,] 29203.53 45951.17\n [957,] 29337.06 45027.82\n [958,] 29296.97 45063.20\n [959,] 29216.25 44929.65\n [960,] 29110.88 46009.43\n [961,] 29229.56 46022.74\n [962,] 29065.93 45407.81\n [963,] 28879.22 45454.97\n [964,] 30759.95 38355.06\n [965,] 30576.62 39551.00\n [966,] 28201.78 40334.05\n [967,] 28325.75 39700.70\n [968,] 29622.73 38692.71\n [969,] 28592.73 40062.84\n [970,] 29510.05 38880.94\n [971,] 29258.92 38653.10\n [972,] 30264.97 39315.69\n [973,] 40125.14 33963.93\n [974,] 38668.12 35062.69\n [975,] 39376.06 34806.40\n [976,] 38668.12 35062.69\n [977,] 37728.93 34149.48\n [978,] 36435.12 34595.68\n [979,] 40176.68 33630.68\n [980,] 27695.04 37908.17\n [981,] 29378.50 37811.75\n [982,] 27638.13 37842.75\n [983,] 18441.05 38295.25\n [984,] 18440.33 38353.27\n [985,] 19842.62 36831.05\n [986,] 18633.30 38166.64\n [987,] 19192.51 36955.78\n [988,] 18857.19 37512.05\n [989,] 19533.21 36811.42\n [990,] 18166.23 37077.99\n [991,] 19253.72 36540.65\n [992,] 19750.32 36820.26\n [993,] 18633.83 38317.68\n [994,] 19733.64 36891.86\n [995,] 18414.68 36705.26\n [996,] 18414.68 36705.26\n [997,] 18722.67 36402.03\n [998,] 26793.86 28444.65\n [999,] 25804.18 28647.63\n[1000,] 26878.90 28287.80\n[1001,] 25638.63 29215.77\n[1002,] 27289.25 28583.13\n[1003,] 25198.73 29324.68\n[1004,] 25318.61 29271.93\n[1005,] 26707.21 28914.60\n[1006,] 27140.14 29503.32\n[1007,] 28772.63 28489.11\n[1008,] 27250.43 29457.87\n[1009,] 21186.67 40627.75\n[1010,] 21012.93 40953.28\n[1011,] 20779.84 41082.98\n[1012,] 21319.36 41091.34\n[1013,] 21220.29 39828.79\n[1014,] 21421.95 39831.44\n[1015,] 19771.40 40831.07\n[1016,] 21133.84 41240.77\n[1017,] 21133.84 41240.77\n[1018,] 21133.84 41240.77\n[1019,] 20992.74 41161.79\n[1020,] 21030.40 41123.11\n[1021,] 19753.52 40742.58\n[1022,] 20227.76 40490.10\n[1023,] 20440.51 39940.74\n[1024,] 19753.52 40742.58\n[1025,] 19753.52 40742.58\n[1026,] 25100.24 33339.65\n[1027,] 21239.26 35695.04\n[1028,] 21243.03 35575.13\n[1029,] 29003.56 29339.05\n[1030,] 29090.57 28842.98\n[1031,] 28929.08 28879.35\n[1032,] 18961.65 42668.27\n[1033,] 18224.96 42597.58\n[1034,] 17266.60 39720.72\n[1035,] 17904.14 40254.97\n[1036,] 17900.65 40365.93\n[1037,] 18205.78 41867.32\n[1038,] 18350.32 40590.50\n[1039,] 19582.79 40314.74\n[1040,] 21041.05 33272.62\n[1041,] 20657.13 32817.91\n[1042,] 20111.33 33701.73\n[1043,] 20770.26 32379.02\n[1044,] 35779.40 34619.10\n[1045,] 33629.25 32414.15\n[1046,] 33793.13 32353.03\n[1047,] 35270.50 33315.95\n[1048,] 34154.34 39254.00\n[1049,] 34197.35 40052.13\n[1050,] 33624.15 40101.47\n[1051,] 34154.34 39254.00\n[1052,] 33854.47 39220.91\n[1053,] 34377.73 39639.92\n[1054,] 34105.17 39936.54\n[1055,] 33642.03 40052.31\n[1056,] 33989.29 39188.29\n[1057,] 34512.83 37621.43\n[1058,] 34534.47 40148.36\n[1059,] 33172.10 39348.31\n[1060,] 32890.84 40251.77\n[1061,] 32906.40 40207.27\n[1062,] 35530.79 40100.79\n[1063,] 35510.31 40049.49\n[1064,] 16505.04 36963.27\n[1065,] 17590.01 33737.08\n[1066,] 17520.66 33991.60\n[1067,] 18307.58 35739.43\n[1068,] 11597.97 35821.60\n[1069,] 16072.26 37261.40\n[1070,] 11960.04 35854.22\n[1071,] 14871.26 36967.45\n[1072,] 15215.13 37161.59\n[1073,] 15905.30 37077.90\n[1074,] 15271.36 37248.27\n[1075,] 12554.21 36569.86\n[1076,] 13746.27 36931.54\n[1077,] 12816.32 35873.26\n[1078,] 13615.21 36999.51\n[1079,] 15152.55 36470.59\n[1080,] 13668.25 36455.00\n[1081,] 13420.75 36289.61\n[1082,] 13246.67 35675.36\n[1083,] 15385.33 36620.82\n[1084,] 14175.62 36752.99\n[1085,] 14754.68 36104.58\n[1086,] 29917.16 34548.05\n[1087,] 31294.56 33397.29\n[1088,] 30219.53 34447.45\n[1089,] 30953.84 34425.57\n[1090,] 30563.16 33412.18\n[1091,] 30041.30 32594.05\n[1092,] 31677.83 33604.27\n[1093,] 31884.95 33877.89\n[1094,] 30858.66 33582.35\n[1095,] 32294.11 32892.07\n[1096,] 42301.76 39477.11\n[1097,] 41475.48 38729.62\n[1098,] 41886.32 39239.78\n[1099,] 42062.01 38670.96\n[1100,] 41475.48 38729.62\n[1101,] 39685.31 40248.58\n[1102,] 36111.60 42480.89\n[1103,] 35762.69 42213.04\n[1104,] 37270.91 42297.00\n[1105,] 36520.56 42844.74\n[1106,] 37062.51 41810.12\n[1107,] 35807.64 42214.72\n[1108,] 36451.70 42826.86\n[1109,] 36294.04 42758.28\n[1110,] 35744.69 42295.43\n[1111,] 36744.65 42417.81\n[1112,] 37074.56 41718.56\n[1113,] 35377.73 42514.60\n[1114,] 35189.88 43046.93\n[1115,] 36184.55 42763.67\n[1116,] 35191.31 42814.66\n[1117,] 36692.37 42718.62\n[1118,] 35675.29 42775.10\n[1119,] 35552.70 43636.58\n[1120,] 36650.11 42422.56\n[1121,] 36846.09 42609.05\n[1122,] 35642.76 43519.88\n[1123,] 35712.21 42604.39\n[1124,] 36137.23 43102.98\n[1125,] 35189.88 43046.93\n[1126,] 24839.12 30652.21\n[1127,] 25158.81 30687.65\n[1128,] 24227.09 31453.43\n[1129,] 25492.64 30608.30\n[1130,] 25631.35 30735.62\n[1131,] 23917.89 32280.62\n[1132,] 22770.83 32327.85\n[1133,] 26134.40 48189.66\n[1134,] 25799.80 48617.40\n[1135,] 26949.74 48009.84\n[1136,] 27415.98 48063.02\n[1137,] 26553.19 48343.33\n[1138,] 26123.12 48520.66\n[1139,] 25882.67 48648.61\n[1140,] 27363.82 48032.56\n[1141,] 35524.27 41967.94\n[1142,] 36354.80 41087.62\n[1143,] 35419.45 42131.96\n[1144,] 36393.77 41485.17\n[1145,] 36256.31 41559.84\n[1146,] 35528.14 41848.56\n[1147,] 35530.17 42018.06\n[1148,] 33806.69 41414.41\n[1149,] 36607.15 41184.66\n[1150,] 34670.70 41170.83\n[1151,] 36537.44 41164.11\n[1152,] 35608.16 40642.23\n[1153,] 36494.87 41211.26\n[1154,] 32408.87 41138.76\n[1155,] 32883.68 41849.98\n[1156,] 32650.92 41800.04\n[1157,] 32650.92 41800.04\n[1158,] 32524.59 41721.90\n[1159,] 32924.26 41871.99\n[1160,] 32916.21 41754.72\n[1161,] 32581.39 41716.94\n[1162,] 32867.43 41342.68\n[1163,] 34808.92 40728.39\n[1164,] 32924.26 41871.99\n[1165,] 34092.60 41956.90\n[1166,] 34505.30 41813.00\n[1167,] 34809.92 40477.37\n[1168,] 34946.97 40455.31\n[1169,] 34746.29 40745.36\n[1170,] 34514.86 40852.39\n[1171,] 34514.86 40852.39\n[1172,] 32368.49 39623.99\n[1173,] 32407.76 38821.36\n[1174,] 32509.91 36656.10\n[1175,] 40331.42 36651.14\n[1176,] 38861.12 36955.50\n[1177,] 41655.97 36447.40\n[1178,] 38982.06 37124.55\n[1179,] 41881.49 37346.38\n[1180,] 42241.58 37839.11\n[1181,] 39904.78 36750.55\n[1182,] 41337.65 37417.76\n[1183,] 39488.95 36601.54\n[1184,] 41887.21 38178.09\n[1185,] 41214.54 38258.28\n[1186,] 39483.72 37461.83\n[1187,] 40429.32 37020.62\n[1188,] 40641.62 37154.17\n[1189,] 40440.33 37543.65\n[1190,] 40751.36 37055.69\n[1191,] 29870.55 35921.75\n[1192,] 29968.62 35980.90\n[1193,] 29752.71 35960.02\n[1194,] 31369.95 35359.81\n[1195,] 31281.70 35494.06\n[1196,] 30662.40 34824.50\n[1197,] 31988.65 35169.99\n[1198,] 31655.48 34952.60\n[1199,] 21190.84 47019.94\n[1200,] 21552.66 46823.29\n[1201,] 21557.88 46266.02\n[1202,] 24423.51 46133.07\n[1203,] 23264.05 46816.89\n[1204,] 24038.01 47679.74\n[1205,] 23850.54 47287.02\n[1206,] 23540.98 46004.53\n[1207,] 24423.51 46133.07\n[1208,] 22102.40 46723.93\n[1209,] 24369.39 47482.38\n[1210,] 21957.47 45954.56\n[1211,] 25093.16 47165.81\n[1212,] 24865.06 46978.51\n[1213,] 23594.88 45561.36\n[1214,] 23142.98 46586.92\n[1215,] 21262.30 45797.34\n[1216,] 24224.68 47073.43\n[1217,] 23177.28 45910.55\n[1218,] 23215.59 46371.18\n[1219,] 24865.06 46978.51\n[1220,] 21819.55 46973.55\n[1221,] 24442.04 47860.89\n[1222,] 29555.18 44742.73\n[1223,] 29636.10 45700.11\n[1224,] 28780.16 46535.54\n[1225,] 29712.08 45334.81\n[1226,] 28710.67 44821.79\n[1227,] 27506.12 45662.97\n[1228,] 27917.81 45044.25\n[1229,] 29552.94 45327.90\n[1230,] 28452.45 46673.45\n[1231,] 29649.88 45369.14\n[1232,] 27766.90 46054.88\n[1233,] 28083.29 45403.61\n[1234,] 28900.17 45686.07\n[1235,] 28643.40 44523.62\n[1236,] 29772.23 44831.65\n[1237,] 28777.71 45804.64\n[1238,] 28242.87 46343.90\n[1239,] 28404.93 44429.38\n[1240,] 28695.04 44357.30\n[1241,] 29519.15 44638.48\n[1242,] 29453.73 46038.03\n[1243,] 29263.83 45891.33\n[1244,] 27977.63 45758.73\n[1245,] 29043.74 46064.93\n[1246,] 29043.74 46064.93\n[1247,] 29110.88 46009.43\n[1248,] 29130.00 46070.87\n[1249,] 29008.08 45470.67\n[1250,] 30393.19 39175.25\n[1251,] 28423.42 39745.94\n[1252,] 30443.27 38382.85\n[1253,] 29003.37 40258.92\n[1254,] 28677.94 39185.04\n[1255,] 30224.78 39055.72\n[1256,] 29417.95 39047.97\n[1257,] 40125.14 33963.93\n[1258,] 40143.01 34063.12\n[1259,] 39040.02 35066.35\n[1260,] 37534.91 35424.19\n[1261,] 36465.01 34554.31\n[1262,] 38318.74 34121.34\n[1263,] 40276.85 33512.84\n[1264,] 36928.46 35084.96\n[1265,] 39971.86 34327.01\n[1266,] 30456.94 36680.90\n[1267,] 28973.90 37860.15\n[1268,] 29600.33 37890.81\n[1269,] 29961.64 36412.45\n[1270,] 17792.57 36409.68\n[1271,] 19714.87 37042.67\n[1272,] 18371.85 36948.49\n[1273,] 19458.09 36969.97\n[1274,] 18660.11 38392.70\n[1275,] 17834.46 36607.36\n[1276,] 19233.32 37000.79\n[1277,] 19421.29 37007.89\n[1278,] 19327.60 36185.04\n[1279,] 18982.22 38706.05\n[1280,] 18320.25 36436.94\n[1281,] 19097.47 38656.20\n[1282,] 25406.61 30116.06\n[1283,] 27722.43 29885.24\n[1284,] 27574.62 29477.28\n[1285,] 27140.14 29503.32\n[1286,] 26167.70 30125.23\n[1287,] 27554.05 29417.25\n[1288,] 21088.66 40111.17\n[1289,] 20721.15 39820.02\n[1290,] 20915.34 39704.63\n[1291,] 20844.58 40951.79\n[1292,] 20662.48 41058.00\n[1293,] 20247.11 40950.19\n[1294,] 20870.29 41152.00\n[1295,] 20870.29 41152.00\n[1296,] 21133.84 41240.77\n[1297,] 20582.52 40157.67\n[1298,] 20440.51 39940.74\n[1299,] 21224.71 35657.32\n[1300,] 30425.04 32043.05\n[1301,] 28872.26 28787.86\n[1302,] 28851.09 28922.88\n[1303,] 17260.67 39852.53\n[1304,] 19053.93 39993.26\n[1305,] 18467.66 42848.66\n[1306,] 18790.80 42868.87\n[1307,] 17783.98 40288.54\n[1308,] 17934.34 40186.89\n[1309,] 18417.09 41366.75\n[1310,] 17331.24 40397.98\n[1311,] 17852.76 40187.48\n[1312,] 18706.36 42558.76\n[1313,] 18205.12 41735.91\n[1314,] 20344.07 33415.35\n[1315,] 21085.11 34077.73\n[1316,] 20497.66 32600.26\n[1317,] 20332.59 33020.16\n[1318,] 33470.39 33637.64\n[1319,] 33513.51 33797.32\n[1320,] 35270.50 33315.95\n[1321,] 34303.61 38684.75\n[1322,] 33829.07 39879.73\n[1323,] 33330.56 40438.20\n[1324,] 34207.04 38747.69\n[1325,] 32929.70 40067.96\n[1326,] 34356.75 40213.43\n[1327,] 34075.58 36924.40\n[1328,] 33139.01 40081.78\n[1329,] 34907.37 39481.03\n[1330,] 35530.79 40100.79\n[1331,] 34313.52 38405.98\n[1332,] 34189.99 37766.84\n[1333,] 33697.30 37668.49\n[1334,] 17659.30 36293.22\n[1335,] 18501.00 35913.49\n[1336,] 17251.08 35985.65\n[1337,] 17520.66 33991.60\n[1338,] 16950.64 36629.53\n[1339,] 17453.83 35673.92\n[1340,] 17529.85 33900.60\n[1341,] 17830.74 35485.55\n[1342,] 17449.68 34002.98\n[1343,] 15967.93 37313.55\n[1344,] 14046.85 36624.93\n[1345,] 11597.31 35922.48\n[1346,] 12926.09 36045.30\n[1347,] 12554.21 36569.86\n[1348,] 13569.83 37256.37\n[1349,] 12948.33 36688.14\n[1350,] 16194.96 36719.15\n[1351,] 12984.68 36105.19\n[1352,] 13929.86 36468.32\n[1353,] 15667.40 35098.60\n[1354,] 13514.24 35598.50\n[1355,] 13641.77 35319.89\n[1356,] 15521.17 35595.02\n[1357,] 14686.20 36172.54\n[1358,] 14686.20 36172.54\n[1359,] 30953.84 34425.57\n[1360,] 30041.30 32594.05\n[1361,] 30091.23 32740.48\n[1362,] 31725.65 33643.33\n[1363,] 31204.28 32179.87\n[1364,] 41880.13 38835.34\n[1365,] 41016.61 38847.03\n[1366,] 39466.57 39642.88\n[1367,] 40596.91 39419.79\n[1368,] 36985.42 41933.04\n[1369,] 36905.31 42507.46\n[1370,] 37010.19 41665.68\n[1371,] 36744.65 42417.81\n[1372,] 35206.53 42464.67\n[1373,] 36611.14 42695.18\n[1374,] 35257.32 42834.33\n[1375,] 35642.76 43519.88\n[1376,] 36061.99 42848.27\n[1377,] 35524.84 42400.71\n[1378,] 35363.35 42475.21\n[1379,] 35120.27 42848.74\n[1380,] 35564.95 42709.51\n[1381,] 35618.69 42647.25\n[1382,] 35494.85 42778.30\n[1383,] 35485.40 42891.67\n[1384,] 24282.43 30629.06\n[1385,] 22387.90 32219.37\n[1386,] 24171.96 31505.67\n[1387,] 25897.24 30605.04\n[1388,] 26056.87 48669.59\n[1389,] 26565.77 47509.61\n[1390,] 26650.52 47262.39\n[1391,] 25847.01 48622.47\n[1392,] 25882.67 48648.61\n[1393,] 27265.75 47952.87\n[1394,] 27363.82 48032.56\n[1395,] 35428.81 42207.27\n[1396,] 35392.69 42133.20\n[1397,] 34007.42 41217.84\n[1398,] 36495.86 41268.56\n[1399,] 36607.15 41184.66\n[1400,] 35750.76 40701.36\n[1401,] 36216.02 41124.45\n[1402,] 35668.08 40927.64\n[1403,] 32883.68 41849.98\n[1404,] 32650.92 41800.04\n[1405,] 36494.87 41211.26\n[1406,] 35156.98 40695.52\n[1407,] 32451.97 41520.06\n[1408,] 32588.22 41800.05\n[1409,] 32821.64 41699.95\n[1410,] 32811.80 41241.18\n[1411,] 32524.59 41721.90\n[1412,] 32941.30 41628.25\n[1413,] 32782.21 41700.54\n[1414,] 34085.33 41868.11\n[1415,] 32415.85 41649.39\n[1416,] 34096.12 42002.61\n[1417,] 34165.54 41998.48\n[1418,] 34165.54 41998.48\n[1419,] 34092.60 41956.90\n[1420,] 34404.52 41842.70\n[1421,] 34469.95 41889.54\n[1422,] 34165.54 41998.48\n[1423,] 34825.93 40877.56\n[1424,] 34748.54 40800.81\n[1425,] 35048.69 40430.10\n[1426,] 34514.86 40852.39\n[1427,] 34807.64 40822.23\n[1428,] 34561.49 40900.31\n[1429,] 34802.40 40676.88\n[1430,] 34857.65 40669.57\n[1431,] 34520.18 40803.90\n[1432,] 34561.49 40900.31\n[1433,] 32201.36 38810.91\n[1434,] 32593.72 39614.82\n[1435,] 32541.45 39651.56\n[1436,] 32325.05 37825.97\n[1437,] 32663.68 36774.04\n[1438,] 41781.11 38063.08\n[1439,] 41769.50 36685.83\n[1440,] 39338.80 36965.68\n[1441,] 41508.92 36775.14\n[1442,] 39255.76 37000.06\n[1443,] 41655.97 36447.40\n[1444,] 41054.10 36619.32\n[1445,] 41919.64 37077.83\n[1446,] 39247.34 37901.67\n[1447,] 42054.07 36266.60\n[1448,] 39376.55 37906.69\n[1449,] 39586.98 37785.36\n[1450,] 41035.46 36756.80\n[1451,] 39190.67 37767.09\n[1452,] 41110.89 36192.58\n[1453,] 41039.91 36035.19\n[1454,] 41097.50 36130.11\n[1455,] 40663.57 37113.17\n[1456,] 41136.19 35945.20\n[1457,] 39551.01 37131.54\n[1458,] 39770.57 37766.92\n[1459,] 30510.01 36101.59\n[1460,] 29528.59 35065.72\n[1461,] 30356.24 35168.72\n[1462,] 29585.55 35191.21\n[1463,] 29585.55 35191.21\n[1464,] 29632.80 35203.32\n[1465,] 29308.67 35192.93\n[1466,] 21177.91 47246.95\n[1467,] 21312.16 47070.56\n[1468,] 21366.11 47162.10\n[1469,] 21475.81 45414.05\n[1470,] 21853.72 46229.60\n[1471,] 23850.54 47287.02\n[1472,] 22241.93 46545.97\n[1473,] 23743.73 45926.18\n[1474,] 21822.45 46075.83\n[1475,] 21528.39 47201.93\n[1476,] 23938.96 46237.37\n[1477,] 24012.81 47300.89\n[1478,] 21314.77 46424.22\n[1479,] 23984.74 45878.96\n[1480,] 22241.80 46587.82\n[1481,] 23759.05 46095.88\n[1482,] 24411.11 47496.83\n[1483,] 24286.01 46275.47\n[1484,] 24217.38 47722.61\n[1485,] 23519.30 47201.67\n[1486,] 23904.58 46704.19\n[1487,] 24651.29 47679.40\n[1488,] 24662.07 46778.75\n[1489,] 24865.06 46978.51\n[1490,] 24482.06 46785.55\n[1491,] 23012.05 46053.00\n[1492,] 23177.28 45910.55\n[1493,] 23142.86 46256.10\n[1494,] 28005.53 43731.97\n[1495,] 29695.39 45409.00\n[1496,] 29523.81 45655.15\n[1497,] 29176.32 45655.37\n[1498,] 28593.92 44540.97\n[1499,] 27632.02 46135.67\n[1500,] 27990.53 45332.55\n[1501,] 27839.01 45032.17\n[1502,] 27501.07 45742.63\n[1503,] 28534.08 44014.31\n[1504,] 28388.62 44154.02\n[1505,] 28820.27 46224.93\n[1506,] 29769.97 44954.80\n[1507,] 29548.52 44871.70\n[1508,] 27920.86 45079.77\n[1509,] 28088.46 45568.07\n[1510,] 28447.34 43958.92\n[1511,] 29324.79 44633.09\n[1512,] 29258.54 44994.84\n[1513,] 29361.72 44631.99\n[1514,] 29130.00 46070.87\n[1515,] 29065.93 45407.81\n[1516,] 28972.42 39816.13\n[1517,] 30750.23 38776.53\n[1518,] 28468.15 38954.04\n[1519,] 30443.27 38382.85\n[1520,] 30747.14 39099.03\n[1521,] 30860.13 39133.23\n[1522,] 29142.24 38774.89\n[1523,] 28818.02 40553.81\n[1524,] 29134.85 39080.61\n[1525,] 29198.15 38613.74\n[1526,] 30082.21 38436.17\n[1527,] 39917.80 34639.20\n[1528,] 36683.42 35060.29\n[1529,] 40018.30 35009.87\n[1530,] 36757.61 35198.91\n[1531,] 40186.28 33581.30\n[1532,] 36209.95 35113.90\n[1533,] 39638.31 35405.00\n[1534,] 40078.56 34296.43\n[1535,] 39290.77 34160.04\n[1536,] 28975.96 37820.80\n[1537,] 29749.74 36548.96\n[1538,] 30138.57 36909.09\n[1539,] 29259.45 38127.38\n[1540,] 29317.64 37555.17\n[1541,] 29723.91 36595.57\n[1542,] 29319.59 37668.94\n[1543,] 29259.45 38127.38\n[1544,] 29639.17 36794.67\n[1545,] 18543.06 38016.70\n[1546,] 18281.19 38365.11\n[1547,] 18768.48 36459.61\n[1548,] 17834.46 36607.36\n[1549,] 17668.11 36422.96\n[1550,] 18768.48 36459.61\n[1551,] 19359.40 36134.89\n[1552,] 18768.48 36459.61\n[1553,] 19012.08 38443.16\n[1554,] 18542.91 36927.16\n[1555,] 26693.27 30307.66\n[1556,] 27171.93 28549.92\n[1557,] 27140.14 29503.32\n[1558,] 27546.74 30274.56\n[1559,] 27096.78 29393.50\n[1560,] 27096.78 29393.50\n[1561,] 27780.65 29917.22\n[1562,] 20937.05 39909.44\n[1563,] 20967.15 39800.71\n[1564,] 21492.94 39355.58\n[1565,] 20047.55 40647.18\n[1566,] 20540.52 41074.92\n[1567,] 21405.08 40213.84\n[1568,] 19955.67 40663.65\n[1569,] 21072.27 41108.45\n[1570,] 19753.52 40742.58\n[1571,] 21099.53 41178.93\n[1572,] 20229.67 40395.54\n[1573,] 21030.40 41123.11\n[1574,] 20870.29 41152.00\n[1575,] 21076.57 41233.31\n[1576,] 20897.90 41213.35\n[1577,] 20954.52 41110.65\n[1578,] 20582.52 40157.67\n[1579,] 21072.27 41108.45\n[1580,] 30291.33 31018.52\n[1581,] 28908.95 28820.87\n[1582,] 28851.09 28922.88\n[1583,] 18224.96 42597.58\n[1584,] 17331.24 40397.98\n[1585,] 17701.78 39933.33\n[1586,] 18903.33 42610.44\n[1587,] 18961.79 39984.53\n[1588,] 17588.17 40185.12\n[1589,] 19216.72 39896.49\n[1590,] 17591.17 40630.91\n[1591,] 17588.50 40316.88\n[1592,] 17736.18 40652.34\n[1593,] 19445.65 40020.39\n[1594,] 18119.34 40383.20\n[1595,] 17153.78 39877.90\n[1596,] 18187.19 41813.01\n[1597,] 18219.46 41813.23\n[1598,] 18111.79 41789.39\n[1599,] 20454.88 31825.53\n[1600,] 20063.30 31962.44\n[1601,] 19929.60 32708.74\n[1602,] 20425.01 31900.97\n[1603,] 20343.29 33367.57\n[1604,] 20855.73 32483.78\n[1605,] 20770.26 32379.02\n[1606,] 35785.39 34519.69\n[1607,] 33513.51 33797.32\n[1608,] 34983.59 32884.54\n[1609,] 33906.79 34342.08\n[1610,] 35769.87 33787.35\n[1611,] 33715.84 32484.03\n[1612,] 35221.40 33308.23\n[1613,] 34093.99 38788.29\n[1614,] 34389.03 38544.59\n[1615,] 33321.17 40188.58\n[1616,] 34497.47 37746.69\n[1617,] 33129.79 40222.46\n[1618,] 34909.00 39906.22\n[1619,] 34080.15 40276.28\n[1620,] 34178.72 36915.51\n[1621,] 33971.47 39991.16\n[1622,] 34899.18 39565.95\n[1623,] 33924.35 40034.94\n[1624,] 34844.24 39755.20\n[1625,] 34965.79 40090.06\n[1626,] 35539.98 39998.97\n[1627,] 32906.40 40207.27\n[1628,] 17251.08 35985.65\n[1629,] 15339.46 37146.96\n[1630,] 11646.69 35854.07\n[1631,] 11979.77 35707.72\n[1632,] 11810.43 35830.77\n[1633,] 16014.65 37118.02\n[1634,] 14856.64 37200.55\n[1635,] 13119.19 36442.21\n[1636,] 12892.70 36205.17\n[1637,] 12935.14 36571.88\n[1638,] 15882.73 36996.01\n[1639,] 15410.94 35851.40\n[1640,] 15851.23 35538.26\n[1641,] 12654.70 35329.27\n[1642,] 13865.64 36471.13\n[1643,] 12816.32 35873.26\n[1644,] 14081.50 36439.84\n[1645,] 12616.74 35422.58\n[1646,] 15559.61 35819.13\n[1647,] 13514.24 35598.50\n[1648,] 13539.91 36009.43\n[1649,] 13540.12 35466.72\n[1650,] 14175.62 36752.99\n[1651,] 15163.91 36358.68\n[1652,] 15504.93 35003.77\n[1653,] 14689.89 36250.27\n[1654,] 30487.06 33756.56\n[1655,] 30025.60 34493.68\n[1656,] 30621.09 33552.94\n[1657,] 31328.89 33907.67\n[1658,] 30988.75 33837.76\n[1659,] 30597.62 32954.93\n[1660,] 32511.04 32677.50\n[1661,] 32398.10 32843.35\n[1662,] 32347.25 32901.99\n[1663,] 30909.56 33567.20\n[1664,] 42103.21 39558.51\n[1665,] 39276.49 40021.06\n[1666,] 42523.18 38908.24\n[1667,] 41870.18 38995.52\n[1668,] 42289.79 39225.47\n[1669,] 41956.92 38678.62\n[1670,] 42296.04 39410.82\n[1671,] 40864.25 38975.18\n[1672,] 41527.28 38994.80\n[1673,] 40663.12 38841.62\n[1674,] 37074.56 41718.56\n[1675,] 36905.31 42507.46\n[1676,] 36550.68 42824.06\n[1677,] 35915.31 42919.66\n[1678,] 35300.57 42496.68\n[1679,] 36362.59 42820.88\n[1680,] 35462.07 43626.85\n[1681,] 35472.31 42732.76\n[1682,] 35608.64 42765.97\n[1683,] 35535.84 42866.36\n[1684,] 35712.21 42604.39\n[1685,] 35306.75 42778.71\n[1686,] 23764.95 32159.76\n[1687,] 25544.25 30619.87\n[1688,] 25622.61 30681.95\n[1689,] 22274.14 31974.94\n[1690,] 22677.10 32407.59\n[1691,] 22770.83 32327.85\n[1692,] 23911.52 31600.59\n[1693,] 26650.52 47262.39\n[1694,] 26083.87 48625.64\n[1695,] 26166.21 48326.93\n[1696,] 25962.94 47645.51\n[1697,] 26146.26 47685.96\n[1698,] 27304.32 47968.69\n[1699,] 26167.57 47897.38\n[1700,] 25847.01 48622.47\n[1701,] 27265.75 47952.87\n[1702,] 36279.54 41619.55\n[1703,] 36256.31 41559.84\n[1704,] 36071.52 41800.02\n[1705,] 36495.86 41268.56\n[1706,] 33646.89 41431.38\n[1707,] 32415.85 41649.39\n[1708,] 35500.03 40457.42\n[1709,] 36185.22 41183.27\n[1710,] 32743.27 41330.52\n[1711,] 32811.80 41241.18\n[1712,] 32413.78 41191.05\n[1713,] 35451.12 40551.29\n[1714,] 36494.87 41211.26\n[1715,] 32657.10 41446.09\n[1716,] 32815.04 41834.40\n[1717,] 32524.59 41721.90\n[1718,] 35288.10 40640.60\n[1719,] 32533.29 41805.60\n[1720,] 32743.27 41330.52\n[1721,] 34526.12 41877.85\n[1722,] 34096.12 42002.61\n[1723,] 34469.95 41889.54\n[1724,] 34092.60 41956.90\n[1725,] 32924.26 41871.99\n[1726,] 34276.93 42009.52\n[1727,] 34505.30 41813.00\n[1728,] 34466.52 41831.05\n[1729,] 34481.65 40892.63\n[1730,] 34514.86 40852.39\n[1731,] 34803.47 40540.80\n[1732,] 34514.86 40852.39\n[1733,] 32146.41 38906.55\n[1734,] 32440.30 39656.62\n[1735,] 32723.35 39317.51\n[1736,] 32016.40 37030.90\n[1737,] 32509.91 36656.10\n[1738,] 31633.82 37226.16\n[1739,] 32102.83 37014.16\n[1740,] 32574.08 36696.87\n[1741,] 39384.65 37028.19\n[1742,] 41501.70 38097.89\n[1743,] 41491.67 37784.47\n[1744,] 39222.02 37960.74\n[1745,] 41475.52 37392.30\n[1746,] 42058.91 37114.14\n[1747,] 42087.96 37968.94\n[1748,] 42091.02 36428.69\n[1749,] 41781.85 36262.08\n[1750,] 41248.08 37472.61\n[1751,] 39497.68 37940.19\n[1752,] 40601.29 37986.91\n[1753,] 41196.59 36211.73\n[1754,] 39958.94 36547.09\n[1755,] 39570.25 37688.75\n[1756,] 40833.46 36861.06\n[1757,] 39061.04 37438.79\n[1758,] 39746.65 37995.14\n[1759,] 42032.99 36128.04\n[1760,] 29461.54 35205.89\n[1761,] 29632.80 35203.32\n[1762,] 21475.81 45414.05\n[1763,] 22203.22 46633.87\n[1764,] 23855.04 47519.91\n[1765,] 21853.72 46229.60\n[1766,] 23968.29 46542.97\n[1767,] 22289.35 45798.53\n[1768,] 24547.79 47397.60\n[1769,] 21475.81 45414.05\n[1770,] 24865.06 46978.51\n[1771,] 23692.65 46664.52\n[1772,] 22816.89 46198.72\n[1773,] 29712.08 45334.81\n[1774,] 28681.74 46252.65\n[1775,] 27892.94 46478.86\n[1776,] 29555.18 44742.73\n[1777,] 29652.96 44954.66\n[1778,] 27705.12 45364.64\n[1779,] 27374.63 46362.31\n[1780,] 27351.34 46166.09\n[1781,] 29547.14 45620.43\n[1782,] 27354.73 45992.92\n[1783,] 28610.73 44759.31\n[1784,] 28518.29 43876.02\n[1785,] 29584.94 44828.50\n[1786,] 27476.84 46102.89\n[1787,] 29219.73 45247.84\n[1788,] 27876.01 44638.09\n[1789,] 29420.41 45054.67\n[1790,] 28623.21 46129.59\n[1791,] 29296.97 45063.20\n[1792,] 28521.55 43968.06\n[1793,] 29696.57 44798.01\n[1794,] 28659.23 44273.97\n[1795,] 29258.54 44994.84\n[1796,] 29769.97 44954.80\n[1797,] 29702.01 44751.06\n[1798,] 29702.01 44751.06\n[1799,] 29702.01 44751.06\n[1800,] 29468.80 46014.66\n[1801,] 28105.70 45483.59\n[1802,] 29467.40 44663.71\n[1803,] 29044.58 46118.67\n[1804,] 29772.23 44831.65\n[1805,] 27939.37 44026.95\n[1806,] 29008.86 46011.25\n[1807,] 29577.99 44987.12\n[1808,] 29008.08 45470.67\n[1809,] 28991.85 45431.57\n[1810,] 30443.27 38382.85\n[1811,] 28900.16 40218.84\n[1812,] 30263.23 38499.84\n[1813,] 30055.03 38404.80\n[1814,] 29512.33 38534.41\n[1815,] 29872.38 39327.20\n[1816,] 39422.61 33693.26\n[1817,] 39846.57 33842.55\n[1818,] 39689.49 33812.06\n[1819,] 38318.74 34121.34\n[1820,] 38519.04 35232.50\n[1821,] 39077.10 33897.75\n[1822,] 39367.14 34851.36\n[1823,] 37955.65 34337.61\n[1824,] 39260.23 34137.56\n[1825,] 29749.74 36548.96\n[1826,] 29118.23 38080.50\n[1827,] 29112.84 38159.88\n[1828,] 29639.95 36615.23\n[1829,] 29042.22 37662.56\n[1830,] 27930.03 37868.53\n[1831,] 29161.74 38232.97\n[1832,] 18441.05 38295.25\n[1833,] 19842.62 36831.05\n[1834,] 18985.80 37350.17\n[1835,] 18155.29 37001.40\n[1836,] 18165.24 38285.96\n[1837,] 17930.84 36410.66\n[1838,] 19705.13 36353.62\n[1839,] 18266.55 37019.18\n[1840,] 18264.00 36459.59\n[1841,] 19119.34 36723.11\n[1842,] 18549.86 36869.24\n[1843,] 26808.50 29468.20\n[1844,] 27525.46 29330.00\n[1845,] 25259.63 28597.13\n[1846,] 25198.78 28815.09\n[1847,] 25210.62 28870.53\n[1848,] 26075.49 29921.30\n[1849,] 27460.07 30213.84\n[1850,] 27624.34 29285.24\n[1851,] 27282.96 29686.46\n[1852,] 28635.93 28697.12\n[1853,] 27511.40 29914.89\n[1854,] 21319.36 41091.34\n[1855,] 20844.58 40951.79\n[1856,] 20602.57 40537.72\n[1857,] 20941.42 41191.45\n[1858,] 21133.84 41240.77\n[1859,] 21076.57 41233.31\n[1860,] 20145.42 40375.84\n[1861,] 21461.89 35631.46\n[1862,] 28872.26 28787.86\n[1863,] 19014.86 40264.59\n[1864,] 17642.90 40016.81\n[1865,] 17729.11 40101.77\n[1866,] 17588.17 40185.12\n[1867,] 17707.01 40265.28\n[1868,] 17363.76 39666.07\n[1869,] 18771.50 42454.48\n[1870,] 17491.00 40163.17\n[1871,] 18307.14 41507.72\n[1872,] 18838.09 42783.03\n[1873,] 17729.11 40101.77\n[1874,] 17491.15 40233.45\n[1875,] 18105.21 42501.28\n[1876,] 17557.21 40353.89\n[1877,] 18187.19 41813.01\n[1878,] 18212.10 40497.22\n[1879,] 18205.12 41735.91\n[1880,] 20567.02 31853.03\n[1881,] 20454.88 31825.53\n[1882,] 20454.88 31825.53\n[1883,] 20111.33 33701.73\n[1884,] 20387.04 33825.18\n[1885,] 20733.83 33424.76\n[1886,] 20555.98 32729.69\n[1887,] 21104.11 32515.89\n[1888,] 35723.75 33837.35\n[1889,] 35354.22 34162.49\n[1890,] 33715.84 32484.03\n[1891,] 35270.50 33315.95\n[1892,] 35625.98 33627.57\n[1893,] 33566.50 32417.14\n[1894,] 35573.74 33706.98\n[1895,] 35170.47 33252.39\n[1896,] 35320.59 39346.09\n[1897,] 33712.10 39353.48\n[1898,] 34238.59 37490.94\n[1899,] 35235.79 39077.89\n[1900,] 33934.10 36797.03\n[1901,] 33283.66 39845.58\n[1902,] 34403.15 37450.68\n[1903,] 33971.47 39991.16\n[1904,] 32906.40 40207.27\n[1905,] 34835.96 40166.02\n[1906,] 35510.31 40049.49\n[1907,] 32949.02 40144.66\n[1908,] 35617.49 40013.95\n[1909,] 32906.40 40207.27\n[1910,] 35510.31 40049.49\n[1911,] 34465.19 39099.68\n[1912,] 17982.02 35661.70\n[1913,] 11955.56 36080.32\n[1914,] 12701.62 36386.28\n[1915,] 13038.60 35853.06\n[1916,] 15215.13 37161.59\n[1917,] 12535.11 36210.34\n[1918,] 13763.44 36144.91\n[1919,] 13129.39 35572.39\n[1920,] 12836.20 35733.87\n[1921,] 14175.62 36752.99\n[1922,] 13763.44 36144.91\n[1923,] 14210.49 36691.54\n[1924,] 14133.61 36727.94\n[1925,] 15504.93 35003.77\n[1926,] 14210.49 36691.54\n[1927,] 31678.09 34080.63\n[1928,] 23230.19 29227.46\n[1929,] 30512.05 34338.68\n[1930,] 30909.56 33567.20\n[1931,] 30909.56 33567.20\n[1932,] 30858.66 33582.35\n[1933,] 32398.10 32843.35\n[1934,] 36998.70 31789.68\n[1935,] 41953.75 38887.15\n[1936,] 39482.28 39724.94\n[1937,] 41517.36 38839.81\n[1938,] 41466.54 38691.58\n[1939,] 39333.26 40065.12\n[1940,] 40663.12 38841.62\n[1941,] 36540.00 42751.57\n[1942,] 35202.25 42976.70\n[1943,] 35533.40 42462.21\n[1944,] 36695.92 42389.95\n[1945,] 37074.56 41718.56\n[1946,] 36744.65 42417.81\n[1947,] 37101.96 41756.97\n[1948,] 36611.14 42695.18\n[1949,] 36341.93 42903.48\n[1950,] 36846.09 42609.05\n[1951,] 35973.59 42952.49\n[1952,] 35494.85 42778.30\n[1953,] 35533.40 42462.21\n[1954,] 36540.00 42751.57\n[1955,] 35524.84 42400.71\n[1956,] 35190.64 42920.65\n[1957,] 35608.64 42765.97\n[1958,] 35552.70 43636.58\n[1959,] 35552.70 43636.58\n[1960,] 35306.75 42778.71\n[1961,] 22406.38 32266.79\n[1962,] 25631.35 30735.62\n[1963,] 23929.02 32338.14\n[1964,] 22677.10 32407.59\n[1965,] 25897.24 30605.04\n[1966,] 26085.88 48562.06\n[1967,] 26901.99 48150.59\n[1968,] 26163.95 48506.64\n[1969,] 25847.01 48622.47\n[1970,] 26390.82 47565.27\n[1971,] 26055.85 47871.06\n[1972,] 25847.01 48622.47\n[1973,] 26440.72 47977.41\n[1974,] 27306.60 48063.03\n[1975,] 36212.71 41692.15\n[1976,] 35428.81 42207.27\n[1977,] 35618.30 41725.97\n[1978,] 32464.70 41235.64\n[1979,] 34332.43 41059.12\n[1980,] 35392.69 42133.20\n[1981,] 35281.10 41921.70\n[1982,] 34909.73 40934.33\n[1983,] 35576.07 41273.14\n[1984,] 36189.66 41439.32\n[1985,] 32862.51 41269.21\n[1986,] 35272.09 41373.41\n[1987,] 34540.74 41534.16\n[1988,] 32415.85 41649.39\n[1989,] 36495.86 41268.56\n[1990,] 32956.36 41532.05\n[1991,] 32803.26 41317.97\n[1992,] 34165.54 41998.48\n[1993,] 32806.30 41626.16\n[1994,] 34730.86 40482.14\n[1995,] 32941.30 41628.25\n[1996,] 32657.10 41446.09\n[1997,] 35254.16 40616.81\n[1998,] 32676.45 41702.54\n[1999,] 34895.40 40469.81\n[2000,] 32987.92 41688.56\n[2001,] 32883.68 41849.98\n[2002,] 35023.63 40435.45\n[2003,] 34096.12 42002.61\n[2004,] 34165.54 41998.48\n[2005,] 34781.45 40855.02\n[2006,] 34514.86 40852.39\n[2007,] 34561.49 40900.31\n[2008,] 32409.22 38910.69\n[2009,] 31756.01 37413.44\n[2010,] 32094.88 37646.39\n[2011,] 32179.25 37461.42\n[2012,] 32395.12 36648.47\n[2013,] 32201.07 36840.01\n[2014,] 39421.99 37094.13\n[2015,] 41794.31 36432.60\n[2016,] 42369.14 37456.88\n[2017,] 41420.86 37715.16\n[2018,] 39264.33 37035.21\n[2019,] 39086.64 37107.14\n[2020,] 39265.10 36656.63\n[2021,] 39418.77 37140.45\n[2022,] 39148.95 37643.41\n[2023,] 41657.67 36078.46\n[2024,] 39655.59 37420.10\n[2025,] 39281.60 37109.69\n[2026,] 40776.01 37206.64\n[2027,] 41448.97 36355.66\n[2028,] 40711.12 37733.33\n[2029,] 39190.67 37767.09\n[2030,] 39770.57 37766.92\n[2031,] 39746.65 37995.14\n[2032,] 39862.54 37677.08\n[2033,] 39868.02 37588.96\n[2034,] 30342.88 35998.68\n[2035,] 29810.74 35965.00\n[2036,] 31305.55 35354.54\n[2037,] 29585.55 35191.21\n[2038,] 29836.77 35212.87\n[2039,] 29352.65 35432.23\n[2040,] 21182.11 47068.02\n[2041,] 21752.95 47002.21\n[2042,] 21341.36 47400.41\n[2043,] 21240.52 45414.13\n[2044,] 24423.51 46133.07\n[2045,] 22091.70 46005.75\n[2046,] 23961.13 47321.02\n[2047,] 23911.18 46959.21\n[2048,] 24196.77 47754.35\n[2049,] 23848.43 46071.42\n[2050,] 24497.10 46389.48\n[2051,] 23817.06 46178.64\n[2052,] 21494.36 45448.41\n[2053,] 23691.07 47540.12\n[2054,] 24677.26 47703.11\n[2055,] 24508.71 47751.29\n[2056,] 25119.35 47150.42\n[2057,] 23594.88 45561.36\n[2058,] 23119.13 46371.15\n[2059,] 24629.97 47757.26\n[2060,] 24036.90 47133.55\n[2061,] 24508.71 47751.29\n[2062,] 24528.26 46812.80\n[2063,] 24651.29 47679.40\n[2064,] 24481.40 47738.04\n[2065,] 23639.55 46602.59\n[2066,] 23177.28 45910.55\n[2067,] 23135.77 45925.38\n[2068,] 23663.50 46544.11\n[2069,] 29652.96 44954.66\n[2070,] 29652.96 44954.66\n[2071,] 27286.91 45348.38\n[2072,] 28749.31 44629.33\n[2073,] 29712.08 45334.81\n[2074,] 29652.73 45295.09\n[2075,] 29007.62 46373.56\n[2076,] 27881.24 45137.97\n[2077,] 27514.73 45351.85\n[2078,] 28905.73 45904.29\n[2079,] 27509.28 45622.36\n[2080,] 27920.86 45079.77\n[2081,] 28242.87 46343.90\n[2082,] 27839.01 45032.17\n[2083,] 28076.68 45270.79\n[2084,] 28052.96 44641.91\n[2085,] 28496.97 44422.87\n[2086,] 29762.36 45002.24\n[2087,] 29762.36 45002.24\n[2088,] 29772.23 44831.65\n[2089,] 28255.46 44591.15\n[2090,] 29130.00 46070.87\n[2091,] 29434.38 44715.69\n[2092,] 27905.72 45677.91\n[2093,] 29772.23 44831.65\n[2094,] 29266.07 46069.01\n[2095,] 29266.07 46069.01\n[2096,] 29337.06 45027.82\n[2097,] 29263.83 45891.33\n[2098,] 29266.07 46069.01\n[2099,] 29174.35 46154.39\n[2100,] 29008.86 46011.25\n[2101,] 29043.74 46064.93\n[2102,] 29135.03 46121.71\n[2103,] 28963.89 45446.68\n[2104,] 28883.28 38866.52\n[2105,] 28566.05 38861.93\n[2106,] 30717.37 39292.93\n[2107,] 29060.49 38651.05\n[2108,] 28943.92 39225.43\n[2109,] 28588.05 40098.15\n[2110,] 30759.95 38355.06\n[2111,] 30362.87 39037.07\n[2112,] 30036.29 38360.76\n[2113,] 30408.56 39311.17\n[2114,] 29952.60 38496.68\n[2115,] 29872.38 39327.20\n[2116,] 30166.50 39342.82\n[2117,] 30288.60 39307.11\n[2118,] 39422.61 33693.26\n[2119,] 40550.35 33618.85\n[2120,] 39931.40 34570.51\n[2121,] 36954.26 35201.66\n[2122,] 40101.43 35118.35\n[2123,] 36452.08 34523.53\n[2124,] 39187.49 34668.26\n[2125,] 36183.18 35061.69\n[2126,] 39426.26 35349.54\n[2127,] 40014.13 34323.98\n[2128,] 40078.56 34296.43\n[2129,] 40014.13 34323.98\n[2130,] 28099.72 38389.24\n[2131,] 30051.67 36893.05\n[2132,] 27825.55 37906.15\n[2133,] 18159.76 38193.32\n[2134,] 18196.32 38210.20\n[2135,] 18170.05 38540.53\n[2136,] 18499.33 37727.99\n[2137,] 19813.88 36996.72\n[2138,] 18116.56 37077.75\n[2139,] 19283.98 36592.99\n[2140,] 18190.42 36773.17\n[2141,] 19031.29 38654.83\n[2142,] 18128.20 36516.31\n[2143,] 18971.81 38331.83\n[2144,] 19828.51 36770.15\n[2145,] 18449.29 37058.81\n[2146,] 19586.86 36299.52\n[2147,] 18324.82 36860.77\n[2148,] 18969.28 38392.75\n[2149,] 25420.80 28397.40\n[2150,] 27184.35 29359.27\n[2151,] 27117.73 29561.86\n[2152,] 27545.35 30190.75\n[2153,] 27391.92 29520.40\n[2154,] 26099.64 30042.02\n[2155,] 27460.07 30213.84\n[2156,] 27624.34 29285.24\n[2157,] 20761.49 40539.41\n[2158,] 21314.57 40370.65\n[2159,] 20823.45 40920.64\n[2160,] 20427.21 40740.42\n[2161,] 20085.56 40910.79\n[2162,] 19655.94 40836.75\n[2163,] 21095.91 40990.18\n[2164,] 19880.76 40842.02\n[2165,] 20202.07 40544.31\n[2166,] 21095.91 40990.18\n[2167,] 20897.90 41213.35\n[2168,] 25100.24 33339.65\n[2169,] 28929.08 28879.35\n[2170,] 28876.22 28717.68\n[2171,] 19305.00 39996.48\n[2172,] 18236.98 42767.10\n[2173,] 18961.65 42668.27\n[2174,] 18095.83 41632.03\n[2175,] 19216.72 39896.49\n[2176,] 17721.84 40064.78\n[2177,] 17666.79 40209.58\n[2178,] 17649.40 40442.93\n[2179,] 18434.53 42639.92\n[2180,] 18787.33 41790.25\n[2181,] 17382.54 39925.74\n[2182,] 21070.60 33137.62\n[2183,] 21027.17 32579.22\n[2184,] 20583.04 32713.09\n[2185,] 20770.26 32379.02\n[2186,] 33513.51 33797.32\n[2187,] 35501.96 34191.16\n[2188,] 35913.37 33783.59\n[2189,] 33629.25 32414.15\n[2190,] 33550.47 32243.25\n[2191,] 33466.48 32420.06\n[2192,] 33566.50 32417.14\n[2193,] 34060.37 38708.37\n[2194,] 34238.92 38551.86\n[2195,] 35229.21 38792.73\n[2196,] 34521.82 38301.36\n[2197,] 33096.72 39136.68\n[2198,] 34805.82 39240.54\n[2199,] 33245.62 40170.69\n[2200,] 34178.72 36915.51\n[2201,] 32929.70 40067.96\n[2202,] 35320.59 39346.09\n[2203,] 33161.15 39550.89\n[2204,] 34285.59 39183.36\n[2205,] 33226.42 39911.43\n[2206,] 34733.48 39792.20\n[2207,] 34449.87 39938.40\n[2208,] 35026.78 39561.04\n[2209,] 33964.96 39249.56\n[2210,] 34361.20 37562.21\n[2211,] 35539.98 39998.97\n[2212,] 17428.35 35745.37\n[2213,] 17449.68 34002.98\n[2214,] 12364.93 36619.72\n[2215,] 12926.08 36504.08\n[2216,] 12970.93 36199.41\n[2217,] 13569.83 37256.37\n[2218,] 14856.64 37200.55\n[2219,] 14859.90 37155.25\n[2220,] 12475.56 36579.09\n[2221,] 15082.57 36525.19\n[2222,] 13089.00 36156.88\n[2223,] 15533.63 35407.07\n[2224,] 13641.77 35319.89\n[2225,] 12760.82 35621.80\n[2226,] 14175.62 36752.99\n[2227,] 15571.34 34998.71\n[2228,] 30165.93 34396.20\n[2229,] 30948.51 34492.43\n[2230,] 29914.12 33468.51\n[2231,] 30012.30 32655.67\n[2232,] 30909.56 33567.20\n[2233,] 31105.01 33147.79\n[2234,] 39266.44 40132.99\n[2235,] 41517.36 38839.81\n[2236,] 41475.48 38729.62\n[2237,] 41654.63 39147.39\n[2238,] 41517.36 38839.81\n[2239,] 37184.16 42297.60\n[2240,] 36210.42 42581.79\n[2241,] 36540.00 42751.57\n[2242,] 36341.93 42903.48\n[2243,] 36696.77 42634.15\n[2244,] 36650.11 42422.56\n[2245,] 36738.01 42359.71\n[2246,] 36412.22 42853.42\n[2247,] 35377.73 42514.60\n[2248,] 36540.00 42751.57\n[2249,] 36735.18 42688.11\n[2250,] 35238.10 42796.92\n[2251,] 35768.73 42579.08\n[2252,] 36176.47 43075.41\n[2253,] 23654.83 32274.13\n[2254,] 25544.25 30619.87\n[2255,] 22600.66 32354.85\n[2256,] 24227.09 31453.43\n[2257,] 24171.96 31505.67\n[2258,] 26650.52 47262.39\n[2259,] 26056.87 48669.59\n[2260,] 26949.74 48009.84\n[2261,] 26959.31 48261.11\n[2262,] 26274.32 47605.88\n[2263,] 27415.98 48063.02\n[2264,] 25847.01 48622.47\n[2265,] 27265.75 47952.87\n[2266,] 27415.98 48063.02\n[2267,] 35419.45 42131.96\n[2268,] 35763.71 41252.26\n[2269,] 35524.28 40509.54\n[2270,] 36143.51 41675.71\n[2271,] 35619.90 41896.12\n[2272,] 32560.15 41105.64\n[2273,] 32785.76 41808.31\n[2274,] 34304.46 42260.38\n[2275,] 35272.09 41373.41\n[2276,] 32821.64 41699.95\n[2277,] 34153.57 41905.94\n[2278,] 35482.12 40902.93\n[2279,] 32524.59 41721.90\n[2280,] 35252.90 40712.57\n[2281,] 32641.92 41715.31\n[2282,] 32676.45 41702.54\n[2283,] 34561.49 40900.31\n[2284,] 34802.40 40676.88\n[2285,] 32201.36 38810.91\n[2286,] 32290.85 38677.33\n[2287,] 32259.01 39024.73\n[2288,] 32383.67 37473.30\n[2289,] 32174.87 36928.37\n[2290,] 41712.27 38205.20\n[2291,] 42280.55 37552.40\n[2292,] 39759.53 36776.88\n[2293,] 41491.67 37784.47\n[2294,] 41594.95 37273.94\n[2295,] 42167.27 37751.92\n[2296,] 41189.84 38282.47\n[2297,] 41016.68 36809.02\n[2298,] 39955.34 36713.02\n[2299,] 41361.05 36493.65\n[2300,] 39868.02 37588.96\n[2301,] 39750.97 37936.73\n[2302,] 30743.53 35742.31\n[2303,] 29810.74 35965.00\n[2304,] 30509.77 34841.36\n[2305,] 30792.23 35324.75\n[2306,] 29728.65 35311.86\n[2307,] 29399.19 35150.94\n[2308,] 29193.72 35384.32\n[2309,] 21393.74 47085.59\n[2310,] 21278.37 47226.80\n[2311,] 23901.62 45980.35\n[2312,] 22160.06 46762.93\n[2313,] 23519.30 47201.67\n[2314,] 23765.14 46425.88\n[2315,] 24165.28 46126.52\n[2316,] 24038.01 47679.74\n[2317,] 23769.76 45953.01\n[2318,] 23817.06 46178.64\n[2319,] 24024.13 47536.51\n[2320,] 22735.85 46957.43\n[2321,] 24547.79 47397.60\n[2322,] 23958.17 46347.67\n[2323,] 24129.71 46676.24\n[2324,] 23873.28 46917.64\n[2325,] 23961.13 47321.02\n[2326,] 22289.35 45798.53\n[2327,] 23974.72 46491.38\n[2328,] 25265.01 47327.23\n[2329,] 25174.14 47338.43\n[2330,] 24641.52 46936.00\n[2331,] 23124.53 46411.14\n[2332,] 24657.69 46888.66\n[2333,] 21739.67 45952.98\n[2334,] 29553.82 44789.22\n[2335,] 28929.78 46359.20\n[2336,] 27809.48 46442.49\n[2337,] 29427.62 44862.31\n[2338,] 28233.11 44682.23\n[2339,] 29649.88 45369.14\n[2340,] 29176.32 45655.37\n[2341,] 29229.60 44394.57\n[2342,] 28083.29 45403.61\n[2343,] 29533.95 44678.75\n[2344,] 28337.68 44751.35\n[2345,] 29769.97 44954.80\n[2346,] 29233.61 44682.73\n[2347,] 28386.97 44206.19\n[2348,] 28073.76 45235.22\n[2349,] 28388.62 44154.02\n[2350,] 29225.75 46061.89\n[2351,] 29346.24 44872.19\n[2352,] 29298.53 45962.12\n[2353,] 29229.56 46022.74\n[2354,] 29263.83 45891.33\n[2355,] 29378.49 46027.74\n[2356,] 29387.90 45956.64\n[2357,] 29008.86 46011.25\n[2358,] 28879.22 45454.97\n[2359,] 28879.22 45454.97\n[2360,] 29965.54 38418.56\n[2361,] 29283.45 38517.37\n[2362,] 30373.09 38147.74\n[2363,] 30681.04 38839.80\n[2364,] 29179.92 38822.08\n[2365,] 28468.15 38954.04\n[2366,] 28588.05 40098.15\n[2367,] 29952.60 38496.68\n[2368,] 39290.77 34160.04\n[2369,] 39181.69 34122.30\n[2370,] 39243.59 34190.27\n[2371,] 38955.73 34503.48\n[2372,] 38668.12 35062.69\n[2373,] 39169.94 34751.73\n[2374,] 40078.56 34296.43\n[2375,] 39300.56 34963.74\n[2376,] 37567.54 35294.78\n[2377,] 39971.86 34327.01\n[2378,] 36435.12 34595.68\n[2379,] 36635.33 34993.13\n[2380,] 36705.86 35306.88\n[2381,] 39513.90 35337.40\n[2382,] 39746.35 35346.57\n[2383,] 39689.49 33812.06\n[2384,] 39855.59 33795.49\n[2385,] 39689.49 33812.06\n[2386,] 39689.49 33812.06\n[2387,] 40049.91 33755.10\n[2388,] 40610.11 33554.61\n[2389,] 29717.36 36671.49\n[2390,] 30180.53 36412.85\n[2391,] 29259.45 38127.38\n[2392,] 29042.23 38153.20\n[2393,] 29163.41 38144.62\n[2394,] 28992.73 37963.50\n[2395,] 29049.95 38191.46\n[2396,] 29354.94 37780.27\n[2397,] 28982.35 37743.67\n[2398,] 28606.82 36954.75\n[2399,] 19230.39 36800.35\n[2400,] 19298.21 36771.90\n[2401,] 19543.63 36862.88\n[2402,] 18658.80 36487.01\n[2403,] 19758.10 36437.70\n[2404,] 19734.37 36308.68\n[2405,] 18833.13 38400.38\n[2406,] 18982.22 38706.05\n[2407,] 19026.85 38717.79\n[2408,] 18982.22 38706.05\n[2409,] 18190.42 36773.17\n[2410,] 18431.93 36606.59\n[2411,] 27542.17 29862.11\n[2412,] 27019.51 28398.64\n[2413,] 28678.74 28487.07\n[2414,] 28655.37 28641.91\n[2415,] 25638.63 29215.77\n[2416,] 27545.35 30190.75\n[2417,] 26688.93 30197.43\n[2418,] 25452.02 28504.87\n[2419,] 25420.80 28397.40\n[2420,] 25644.91 28727.86\n[2421,] 21027.30 40196.31\n[2422,] 21030.06 39585.82\n[2423,] 20591.86 40630.04\n[2424,] 21390.12 39492.54\n[2425,] 21030.40 41123.11\n[2426,] 21133.84 41240.77\n[2427,] 21144.59 41060.65\n[2428,] 20954.52 41110.65\n[2429,] 21076.57 41233.31\n[2430,] 21133.84 41240.77\n[2431,] 19575.12 40860.16\n[2432,] 25193.11 33400.14\n[2433,] 25193.11 33400.14\n[2434,] 30291.33 31018.52\n[2435,] 30119.21 32393.85\n[2436,] 30086.33 32348.27\n[2437,] 30437.28 32101.45\n[2438,] 17721.84 40064.78\n[2439,] 17960.35 39926.20\n[2440,] 17904.14 40254.97\n[2441,] 17698.01 40415.81\n[2442,] 17731.69 40787.32\n[2443,] 18311.33 42847.09\n[2444,] 18070.36 42619.75\n[2445,] 18790.70 42522.14\n[2446,] 18765.27 42810.50\n[2447,] 18423.88 41845.33\n[2448,] 18219.46 41813.23\n[2449,] 18139.24 42385.52\n[2450,] 19153.73 40394.52\n[2451,] 18799.73 40204.80\n[2452,] 20953.60 32498.18\n[2453,] 21078.23 32437.45\n[2454,] 20552.54 32600.30\n[2455,] 20550.13 33686.22\n[2456,] 20968.00 33991.86\n[2457,] 35769.87 33787.35\n[2458,] 33938.12 33406.30\n[2459,] 35270.50 33315.95\n[2460,] 35046.77 33013.52\n[2461,] 35041.64 32765.05\n[2462,] 35479.67 34264.58\n[2463,] 35871.64 34303.97\n[2464,] 35662.80 34610.62\n[2465,] 32890.85 40160.08\n[2466,] 34163.95 37296.37\n[2467,] 34860.84 39373.81\n[2468,] 33880.35 39141.09\n[2469,] 35026.31 38593.51\n[2470,] 33651.28 39485.88\n[2471,] 34736.13 40161.81\n[2472,] 33330.62 39108.14\n[2473,] 33096.72 39136.68\n[2474,] 34361.20 37562.21\n[2475,] 34260.43 38429.96\n[2476,] 34096.43 39994.70\n[2477,] 34349.99 40122.65\n[2478,] 33249.15 40084.65\n[2479,] 35617.49 40013.95\n[2480,] 35530.79 40100.79\n[2481,] 35635.35 40114.50\n[2482,] 35889.58 39923.62\n[2483,] 17450.77 35507.23\n[2484,] 16580.66 36764.55\n[2485,] 16580.66 36764.55\n[2486,] 17449.68 34002.98\n[2487,] 14246.35 36749.10\n[2488,] 14689.89 36250.27\n[2489,] 14100.74 36480.41\n[2490,] 12969.48 35472.53\n[2491,] 12954.10 35571.49\n[2492,] 13483.67 35998.81\n[2493,] 13497.04 35935.38\n[2494,] 13256.55 35349.69\n[2495,] 13423.41 35668.52\n[2496,] 13225.54 35898.66\n[2497,] 12762.09 36032.36\n[2498,] 13040.82 36547.54\n[2499,] 12990.57 36835.40\n[2500,] 12254.94 36302.40\n[2501,] 11655.33 35926.34\n[2502,] 11698.16 35997.46\n[2503,] 11955.17 35812.96\n[2504,] 15448.48 34379.43\n[2505,] 30041.30 32594.05\n[2506,] 30856.13 33696.49\n[2507,] 36282.07 31697.73\n[2508,] 41886.32 39239.78\n[2509,] 41880.13 38835.34\n[2510,] 40730.93 39254.96\n[2511,] 40730.93 39254.96\n[2512,] 39128.87 39867.98\n[2513,] 39504.00 39575.67\n[2514,] 36624.09 42069.17\n[2515,] 36602.65 41637.89\n[2516,] 36536.14 41556.12\n[2517,] 36536.14 41556.12\n[2518,] 36540.00 42751.57\n[2519,] 36540.00 42751.57\n[2520,] 36744.65 42417.81\n[2521,] 36985.42 41933.04\n[2522,] 36328.51 42976.62\n[2523,] 36176.47 43075.41\n[2524,] 36176.47 43075.41\n[2525,] 36696.77 42634.15\n[2526,] 36978.96 41739.11\n[2527,] 36306.08 42109.26\n[2528,] 35608.64 42765.97\n[2529,] 35300.57 42496.68\n[2530,] 35176.48 43000.43\n[2531,] 35489.11 43685.88\n[2532,] 22770.83 32327.85\n[2533,] 22637.45 32298.62\n[2534,] 22600.66 32354.85\n[2535,] 22361.12 33318.68\n[2536,] 25263.27 30692.38\n[2537,] 26163.95 48506.64\n[2538,] 26210.79 48545.18\n[2539,] 27265.75 47952.87\n[2540,] 27397.84 48130.23\n[2541,] 25847.01 48622.47\n[2542,] 26575.72 48237.12\n[2543,] 26670.30 48200.84\n[2544,] 33646.89 41431.38\n[2545,] 33878.04 41513.15\n[2546,] 34276.93 42009.52\n[2547,] 34359.96 41982.62\n[2548,] 35023.63 40435.45\n[2549,] 35419.45 42131.96\n[2550,] 35288.10 40640.60\n[2551,] 35432.53 40749.86\n[2552,] 34730.86 40482.14\n[2553,] 35018.83 41633.03\n[2554,] 33049.47 41677.27\n[2555,] 32987.92 41688.56\n[2556,] 32521.31 41455.59\n[2557,] 32807.53 41638.03\n[2558,] 32782.21 41700.54\n[2559,] 32821.64 41699.95\n[2560,] 32803.26 41317.97\n[2561,] 32641.92 41715.31\n[2562,] 36153.02 41472.97\n[2563,] 36613.65 41218.73\n[2564,] 35772.28 41136.22\n[2565,] 35451.12 40551.29\n[2566,] 34807.64 40822.23\n[2567,] 34529.68 40756.35\n[2568,] 34640.23 40817.82\n[2569,] 34514.86 40852.39\n[2570,] 34514.86 40852.39\n[2571,] 34514.86 40852.39\n[2572,] 34641.71 41624.40\n[2573,] 34457.79 41639.25\n[2574,] 33006.93 41543.26\n[2575,] 32581.39 41716.94\n[2576,] 32581.39 41716.94\n[2577,] 32581.39 41716.94\n[2578,] 32752.43 36657.89\n[2579,] 31549.60 37322.49\n[2580,] 32201.07 36840.01\n[2581,] 32030.40 37432.40\n[2582,] 32035.59 37559.55\n[2583,] 32107.82 39616.22\n[2584,] 32591.97 39579.57\n[2585,] 41210.13 36002.60\n[2586,] 41339.28 36383.96\n[2587,] 39576.44 36521.72\n[2588,] 39750.98 37825.31\n[2589,] 39691.97 37938.11\n[2590,] 39746.65 37995.14\n[2591,] 39868.02 37588.96\n[2592,] 39914.89 37706.46\n[2593,] 39862.54 37677.08\n[2594,] 40701.25 37554.92\n[2595,] 41174.86 36629.43\n[2596,] 42384.31 37038.92\n[2597,] 42280.55 37552.40\n[2598,] 41104.84 38044.81\n[2599,] 39497.68 37940.19\n[2600,] 39526.58 37785.62\n[2601,] 39421.99 37094.13\n[2602,] 39255.76 37000.06\n[2603,] 39398.03 37419.94\n[2604,] 33322.19 35447.56\n[2605,] 29193.72 35384.32\n[2606,] 29429.44 35266.30\n[2607,] 29970.59 34899.52\n[2608,] 30528.63 35991.98\n[2609,] 29810.74 35965.00\n[2610,] 21312.16 47070.56\n[2611,] 21312.16 47070.56\n[2612,] 23177.28 45910.55\n[2613,] 24423.51 46133.07\n[2614,] 23674.06 47353.23\n[2615,] 24442.04 47860.89\n[2616,] 24481.40 47738.04\n[2617,] 24442.04 47860.89\n[2618,] 24481.40 47738.04\n[2619,] 24677.26 47703.11\n[2620,] 24508.71 47751.29\n[2621,] 23418.23 45684.74\n[2622,] 23612.30 46542.96\n[2623,] 24411.11 47496.83\n[2624,] 24411.11 47496.83\n[2625,] 24060.51 46703.66\n[2626,] 22241.80 46587.82\n[2627,] 21582.57 45823.82\n[2628,] 21957.47 45954.56\n[2629,] 21398.30 45428.53\n[2630,] 23461.10 47158.03\n[2631,] 29519.15 44638.48\n[2632,] 29554.62 44598.43\n[2633,] 29527.40 44565.31\n[2634,] 29533.95 44678.75\n[2635,] 29527.40 44565.31\n[2636,] 29577.99 44987.12\n[2637,] 29696.57 44798.01\n[2638,] 29807.47 44873.82\n[2639,] 28991.85 45431.57\n[2640,] 29065.93 45407.81\n[2641,] 29696.57 44798.01\n[2642,] 29296.97 45063.20\n[2643,] 29427.62 44862.31\n[2644,] 29008.08 45470.67\n[2645,] 29258.54 44994.84\n[2646,] 29769.97 44954.80\n[2647,] 27920.86 45079.77\n[2648,] 27846.49 46565.40\n[2649,] 29174.35 46154.39\n[2650,] 29043.01 46310.57\n[2651,] 27875.18 44323.46\n[2652,] 29034.90 45780.96\n[2653,] 28805.86 45883.64\n[2654,] 29313.48 45702.53\n[2655,] 29010.23 45755.52\n[2656,] 29263.83 44869.00\n[2657,] 27757.48 46255.22\n[2658,] 28104.32 45956.29\n[2659,] 28502.94 46612.67\n[2660,] 29433.32 45978.74\n[2661,] 29229.56 46022.74\n[2662,] 28570.97 44703.85\n[2663,] 28464.37 44875.44\n[2664,] 27705.12 45364.64\n[2665,] 27514.73 45351.85\n[2666,] 27705.12 45364.64\n[2667,] 27689.33 45282.09\n[2668,] 27910.47 45286.02\n[2669,] 27990.53 45332.55\n[2670,] 28072.88 45197.38\n[2671,] 28026.84 44246.24\n[2672,] 27939.37 44026.95\n[2673,] 28010.22 44168.13\n[2674,] 28091.85 43903.03\n[2675,] 29328.33 38742.64\n[2676,] 30291.20 38778.21\n[2677,] 29109.09 38999.35\n[2678,] 29246.06 38942.60\n[2679,] 29419.80 39109.98\n[2680,] 29512.33 38534.41\n[2681,] 29507.16 38473.85\n[2682,] 30166.50 39342.82\n[2683,] 39040.02 35066.35\n[2684,] 39917.80 34639.20\n[2685,] 39729.72 34710.92\n[2686,] 39483.79 34550.56\n[2687,] 36889.56 34893.90\n[2688,] 39701.24 35345.57\n[2689,] 39432.63 33898.88\n[2690,] 39846.57 33842.55\n[2691,] 36406.82 35104.44\n[2692,] 36395.53 34920.19\n[2693,] 36183.18 35061.69\n[2694,] 36611.50 34091.06\n[2695,] 39856.64 34051.13\n[2696,] 29763.58 36810.11\n[2697,] 30333.28 36336.19\n[2698,] 30250.84 36623.37\n[2699,] 29032.17 37885.81\n[2700,] 29275.95 38055.81\n[2701,] 29588.70 37440.89\n[2702,] 29654.27 37414.98\n[2703,] 29056.65 37745.86\n[2704,] 27702.21 37866.80\n[2705,] 18583.08 37066.62\n[2706,] 19515.53 37018.50\n[2707,] 17910.50 36697.23\n[2708,] 19260.43 36177.91\n[2709,] 19260.43 36177.91\n[2710,] 18262.04 38503.95\n[2711,] 18969.28 38392.75\n[2712,] 27481.48 29916.33\n[2713,] 27780.65 29917.22\n[2714,] 27499.60 29195.96\n[2715,] 25804.18 28647.63\n[2716,] 26708.58 28524.10\n[2717,] 20227.76 40490.10\n[2718,] 20111.93 40788.18\n[2719,] 21097.14 40018.14\n[2720,] 20582.52 40157.67\n[2721,] 20096.13 40147.73\n[2722,] 21030.40 41123.11\n[2723,] 21095.91 40990.18\n[2724,] 21072.27 41108.45\n[2725,] 19654.90 41062.14\n[2726,] 19654.90 41062.14\n[2727,] 20078.59 40388.92\n[2728,] 19760.34 40940.87\n[2729,] 19585.79 40949.14\n[2730,] 28851.09 28922.88\n[2731,] 30139.86 32311.76\n[2732,] 17268.87 40297.96\n[2733,] 17812.01 40764.32\n[2734,] 17207.30 39802.29\n[2735,] 18437.30 40238.13\n[2736,] 18520.43 40241.96\n[2737,] 18693.93 41722.33\n[2738,] 18205.12 41735.91\n[2739,] 18187.19 41813.01\n[2740,] 18187.19 41813.01\n[2741,] 18205.12 41735.91\n[2742,] 18638.72 42253.27\n[2743,] 18799.73 40204.80\n[2744,] 18945.19 40306.47\n[2745,] 21078.23 32437.45\n[2746,] 20121.94 32983.23\n[2747,] 20555.98 32729.69\n[2748,] 20442.81 33367.51\n[2749,] 21053.09 33228.13\n[2750,] 21163.74 34128.30\n[2751,] 33588.07 32362.01\n[2752,] 35723.75 33837.35\n[2753,] 35221.40 33308.23\n[2754,] 33541.38 32139.12\n[2755,] 35958.92 34459.49\n[2756,] 35479.67 34264.58\n[2757,] 35594.66 34326.76\n[2758,] 33245.62 40170.69\n[2759,] 32890.84 40251.77\n[2760,] 35009.93 40052.19\n[2761,] 34975.22 39655.54\n[2762,] 33918.10 39220.19\n[2763,] 34377.73 39639.92\n[2764,] 32942.68 39698.93\n[2765,] 34410.90 39104.65\n[2766,] 34096.43 39994.70\n[2767,] 34195.53 40007.99\n[2768,] 33511.36 37148.67\n[2769,] 33516.47 37236.38\n[2770,] 35510.31 40049.49\n[2771,] 17036.79 35663.21\n[2772,] 17872.76 36081.98\n[2773,] 17625.93 36047.46\n[2774,] 18331.02 35895.77\n[2775,] 18377.51 35621.81\n[2776,] 14175.62 36752.99\n[2777,] 13936.21 36509.20\n[2778,] 14133.61 36727.94\n[2779,] 14689.89 36250.27\n[2780,] 13696.62 35989.61\n[2781,] 13989.08 36079.69\n[2782,] 13995.23 36029.67\n[2783,] 15749.40 36965.17\n[2784,] 15392.46 36925.25\n[2785,] 14921.35 37108.00\n[2786,] 15071.17 36872.15\n[2787,] 15385.33 36620.82\n[2788,] 12954.10 35571.49\n[2789,] 12994.10 35302.85\n[2790,] 13237.37 35772.26\n[2791,] 13627.94 35376.72\n[2792,] 12677.95 36132.58\n[2793,] 11909.70 36043.85\n[2794,] 12558.49 35351.10\n[2795,] 12674.98 35407.94\n[2796,] 15571.34 34998.71\n[2797,] 32159.15 32778.05\n[2798,] 30947.86 33105.27\n[2799,] 31915.37 33828.89\n[2800,] 36223.84 31782.73\n[2801,] 36371.52 31748.51\n[2802,] 37012.58 31727.85\n[2803,] 39920.21 39753.06\n[2804,] 39920.21 39753.06\n[2805,] 41804.67 39610.12\n[2806,] 40713.98 39216.49\n[2807,] 40780.88 39182.39\n[2808,] 40701.69 39109.09\n[2809,] 40663.12 38841.62\n[2810,] 39437.03 39747.35\n[2811,] 36341.93 42903.48\n[2812,] 35833.84 42356.60\n[2813,] 35312.99 42884.75\n[2814,] 34938.36 42931.85\n[2815,] 35816.59 42712.59\n[2816,] 36021.15 43104.21\n[2817,] 36024.97 42922.38\n[2818,] 35564.95 42709.51\n[2819,] 36346.22 42778.07\n[2820,] 36116.34 43022.32\n[2821,] 35307.63 42426.14\n[2822,] 35428.21 42746.43\n[2823,] 35027.93 43052.26\n[2824,] 35271.89 43005.46\n[2825,] 35189.88 43046.93\n[2826,] 35255.86 42983.08\n[2827,] 35489.11 43685.88\n[2828,] 35593.41 43605.80\n[2829,] 35552.70 43636.58\n[2830,] 35552.70 43636.58\n[2831,] 22341.29 32045.61\n[2832,] 22600.66 32354.85\n[2833,] 23917.89 32280.62\n[2834,] 24844.20 30862.37\n[2835,] 25987.26 47819.65\n[2836,] 26026.63 48628.51\n[2837,] 26087.20 48392.31\n[2838,] 26124.93 48353.52\n[2839,] 26056.87 48669.59\n[2840,] 26163.95 48506.64\n[2841,] 26345.31 48339.17\n[2842,] 26602.47 47967.65\n[2843,] 25882.67 48648.61\n[2844,] 26575.72 48237.12\n[2845,] 34102.60 42258.98\n[2846,] 34304.46 42260.38\n[2847,] 34150.21 42180.99\n[2848,] 34557.61 41791.91\n[2849,] 34085.33 41868.11\n[2850,] 34086.95 41912.07\n[2851,] 34248.55 41961.95\n[2852,] 35341.45 42169.43\n[2853,] 35338.15 40733.81\n[2854,] 35341.91 40787.90\n[2855,] 35328.82 40660.61\n[2856,] 35328.82 40660.61\n[2857,] 35338.15 40733.81\n[2858,] 35338.15 40733.81\n[2859,] 34959.25 40780.64\n[2860,] 35528.14 41848.56\n[2861,] 32972.82 41858.42\n[2862,] 32987.92 41688.56\n[2863,] 32641.92 41715.31\n[2864,] 36224.86 41599.40\n[2865,] 36190.96 41644.13\n[2866,] 35709.76 40570.30\n[2867,] 35833.14 41255.73\n[2868,] 34704.60 40653.66\n[2869,] 32924.26 41871.99\n[2870,] 32916.21 41754.72\n[2871,] 32415.85 41649.39\n[2872,] 32883.68 41849.98\n[2873,] 32449.27 37171.31\n[2874,] 32286.01 38629.78\n[2875,] 41984.01 36410.11\n[2876,] 39190.95 36539.70\n[2877,] 39782.88 37043.49\n[2878,] 39061.04 37438.79\n[2879,] 39746.65 37995.14\n[2880,] 39691.97 37938.11\n[2881,] 39693.46 37760.98\n[2882,] 39746.65 37995.14\n[2883,] 39838.19 37647.38\n[2884,] 40751.36 37055.69\n[2885,] 40641.62 37154.17\n[2886,] 41697.15 36997.67\n[2887,] 42202.97 37041.89\n[2888,] 40786.95 37727.96\n[2889,] 39610.51 37923.73\n[2890,] 39310.54 37658.48\n[2891,] 39215.74 37676.66\n[2892,] 39215.74 37676.66\n[2893,] 39554.44 38013.39\n[2894,] 39215.74 37676.66\n[2895,] 39423.46 37238.45\n[2896,] 39060.28 37388.80\n[2897,] 39824.45 36883.33\n[2898,] 39824.45 36883.33\n[2899,] 39759.53 36776.88\n[2900,] 30504.33 34674.52\n[2901,] 29365.53 34999.36\n[2902,] 29399.19 35150.94\n[2903,] 29461.54 35205.89\n[2904,] 30833.55 35701.80\n[2905,] 31346.41 35293.20\n[2906,] 31728.91 35112.08\n[2907,] 29866.80 35121.52\n[2908,] 29866.80 35121.52\n[2909,] 29698.19 35205.51\n[2910,] 29810.74 35965.00\n[2911,] 21752.95 47002.21\n[2912,] 21440.36 47063.28\n[2913,] 21532.37 46862.86\n[2914,] 21702.95 47038.04\n[2915,] 21888.98 46999.13\n[2916,] 23611.51 47342.52\n[2917,] 24482.06 46785.55\n[2918,] 24307.24 47065.91\n[2919,] 24225.90 47466.95\n[2920,] 24677.26 47703.11\n[2921,] 24442.04 47860.89\n[2922,] 24196.77 47754.35\n[2923,] 24422.78 47391.68\n[2924,] 24481.40 47738.04\n[2925,] 24481.40 47738.04\n[2926,] 24677.26 47703.11\n[2927,] 24442.04 47860.89\n[2928,] 23549.45 46158.59\n[2929,] 23243.92 45983.65\n[2930,] 23390.64 45907.92\n[2931,] 23012.05 46053.00\n[2932,] 23296.00 46266.90\n[2933,] 23769.76 45953.01\n[2934,] 23612.30 46542.96\n[2935,] 24692.13 47138.10\n[2936,] 24188.18 46410.91\n[2937,] 24033.07 46633.70\n[2938,] 24002.71 46664.72\n[2939,] 22199.95 46420.34\n[2940,] 21281.71 45373.65\n[2941,] 23446.52 47275.04\n[2942,] 23581.25 46870.49\n[2943,] 29519.15 44638.48\n[2944,] 28991.85 45431.57\n[2945,] 29807.47 44873.82\n[2946,] 29434.38 44715.69\n[2947,] 29065.93 45407.81\n[2948,] 28963.89 45446.68\n[2949,] 29772.23 44831.65\n[2950,] 28060.12 44847.17\n[2951,] 27920.86 45079.77\n[2952,] 29678.77 45660.61\n[2953,] 29553.82 44789.22\n[2954,] 29071.88 46208.62\n[2955,] 29043.01 46310.57\n[2956,] 29071.88 46208.62\n[2957,] 29044.58 46118.67\n[2958,] 29109.89 46245.90\n[2959,] 29240.41 45813.68\n[2960,] 29229.58 45738.69\n[2961,] 27938.41 44845.27\n[2962,] 29518.30 45253.55\n[2963,] 28905.73 45904.29\n[2964,] 29229.58 45738.69\n[2965,] 27299.10 46205.20\n[2966,] 27755.87 46300.26\n[2967,] 28617.56 45894.25\n[2968,] 28546.22 46666.99\n[2969,] 29298.53 45962.12\n[2970,] 29266.07 46069.01\n[2971,] 29203.53 45951.17\n[2972,] 28337.68 44751.35\n[2973,] 28306.59 44129.97\n[2974,] 28061.11 43878.83\n[2975,] 28534.08 44014.31\n[2976,] 28685.95 38712.81\n[2977,] 29045.72 38609.48\n[2978,] 30382.45 38192.92\n[2979,] 30320.33 38676.42\n[2980,] 28684.34 39142.08\n[2981,] 30224.78 39055.72\n[2982,] 28960.32 39342.78\n[2983,] 29817.68 38835.29\n[2984,] 28588.05 40098.15\n[2985,] 29417.95 39047.97\n[2986,] 39151.37 34121.59\n[2987,] 39169.94 34751.73\n[2988,] 39169.94 34751.73\n[2989,] 39729.72 34710.92\n[2990,] 37827.54 35426.78\n[2991,] 38012.27 35467.75\n[2992,] 36757.61 35198.91\n[2993,] 36532.99 34834.61\n[2994,] 37537.21 34341.84\n[2995,] 37728.93 34149.48\n[2996,] 29969.53 36449.29\n[2997,] 29436.31 37817.98\n[2998,] 29374.36 37567.03\n[2999,] 28973.90 37860.15\n[3000,] 27702.21 37866.80\n[3001,] 19752.02 36261.59\n[3002,] 18257.42 38249.64\n[3003,] 18284.70 38462.94\n[3004,] 19074.03 38725.55\n[3005,] 18969.28 38392.75\n[3006,] 27722.43 29885.24\n[3007,] 27303.21 28476.31\n[3008,] 28751.41 28550.62\n[3009,] 25464.33 30116.01\n[3010,] 27326.46 29289.20\n[3011,] 27515.26 29587.30\n[3012,] 25996.74 30164.90\n[3013,] 26696.26 28872.00\n[3014,] 25420.80 28397.40\n[3015,] 25620.97 28453.44\n[3016,] 21421.95 39831.44\n[3017,] 21131.93 40570.65\n[3018,] 20910.46 40655.23\n[3019,] 20962.02 40626.39\n[3020,] 20844.58 40951.79\n[3021,] 20898.88 39665.08\n[3022,] 20781.41 40572.50\n[3023,] 21095.91 40990.18\n[3024,] 20992.74 41161.79\n[3025,] 20870.29 41152.00\n[3026,] 21144.59 41060.65\n[3027,] 19529.88 40944.66\n[3028,] 19796.36 40728.99\n[3029,] 19827.29 40824.41\n[3030,] 19585.79 40949.14\n[3031,] 21237.79 35770.45\n[3032,] 28872.26 28787.86\n[3033,] 28885.44 28667.40\n[3034,] 18706.36 42558.76\n[3035,] 18187.19 41813.01\n[3036,] 18379.99 41507.31\n[3037,] 18286.40 42279.17\n[3038,] 18685.83 42187.58\n[3039,] 19447.02 40242.98\n[3040,] 19247.46 40292.28\n[3041,] 19047.12 39896.36\n[3042,] 19280.71 40192.75\n[3043,] 21008.97 32427.90\n[3044,] 20142.48 33661.08\n[3045,] 20281.96 31919.71\n[3046,] 20084.13 31833.18\n[3047,] 20182.34 31585.09\n[3048,] 35221.40 33308.23\n[3049,] 35046.77 33013.52\n[3050,] 33513.51 33797.32\n[3051,] 34039.69 34012.35\n[3052,] 34143.71 37846.81\n[3053,] 34469.76 38041.39\n[3054,] 32929.70 40067.96\n[3055,] 34410.90 39104.65\n[3056,] 34465.31 40170.23\n[3057,] 34026.96 39725.85\n[3058,] 33139.01 40081.78\n[3059,] 35510.31 40049.49\n[3060,] 35635.35 40114.50\n[3061,] 35635.35 40114.50\n[3062,] 35635.35 40114.50\n[3063,] 17206.13 35873.88\n[3064,] 17520.66 33991.60\n[3065,] 17379.11 33971.22\n[3066,] 17449.68 34002.98\n[3067,] 18245.59 35648.24\n[3068,] 18501.00 35913.49\n[3069,] 13897.52 36424.28\n[3070,] 14686.20 36172.54\n[3071,] 15431.55 37048.72\n[3072,] 13566.83 37074.13\n[3073,] 13989.08 36079.69\n[3074,] 15957.77 37264.15\n[3075,] 15215.13 37161.59\n[3076,] 14856.64 37200.55\n[3077,] 15279.69 36301.29\n[3078,] 15528.47 36384.19\n[3079,] 12905.31 35733.34\n[3080,] 13541.90 35943.67\n[3081,] 13514.24 35598.50\n[3082,] 11646.69 35854.07\n[3083,] 15611.86 35485.51\n[3084,] 15867.80 34515.18\n[3085,] 31722.51 33765.39\n[3086,] 31677.83 33604.27\n[3087,] 31859.20 33819.53\n[3088,] 32511.04 32677.50\n[3089,] 31302.70 33996.19\n[3090,] 32133.26 32974.19\n[3091,] 36998.70 31789.68\n[3092,] 39937.08 40177.91\n[3093,] 39856.06 40068.75\n[3094,] 42254.10 39487.27\n[3095,] 41886.32 39239.78\n[3096,] 41915.53 39688.01\n[3097,] 41915.53 39688.01\n[3098,] 41707.74 39045.40\n[3099,] 42226.52 39433.51\n[3100,] 40717.54 39173.75\n[3101,] 40730.93 39254.96\n[3102,] 40786.80 39222.41\n[3103,] 40684.58 39024.98\n[3104,] 40717.45 38939.07\n[3105,] 40717.45 38939.07\n[3106,] 36599.45 43229.07\n[3107,] 36599.45 43229.07\n[3108,] 36724.74 42512.33\n[3109,] 36653.96 42664.67\n[3110,] 36807.00 42645.69\n[3111,] 36950.99 42475.66\n[3112,] 37010.19 41665.68\n[3113,] 35360.07 42870.54\n[3114,] 36170.91 42342.51\n[3115,] 35524.84 42400.71\n[3116,] 35816.59 42712.59\n[3117,] 35459.55 42502.79\n[3118,] 35459.55 42502.79\n[3119,] 35548.11 42534.58\n[3120,] 36346.22 42778.07\n[3121,] 35206.53 42464.67\n[3122,] 35472.31 42732.76\n[3123,] 22637.45 32298.62\n[3124,] 23929.02 32338.14\n[3125,] 24294.88 30717.60\n[3126,] 25158.81 30687.65\n[3127,] 24227.09 31453.43\n[3128,] 26210.79 48545.18\n[3129,] 26354.58 48289.84\n[3130,] 27397.84 48130.23\n[3131,] 27397.84 48130.23\n[3132,] 27415.98 48063.02\n[3133,] 26146.26 47685.96\n[3134,] 26051.36 48229.21\n[3135,] 34243.98 42252.05\n[3136,] 33676.35 41463.15\n[3137,] 34179.56 41440.81\n[3138,] 34292.91 42057.54\n[3139,] 34282.70 41941.51\n[3140,] 35460.70 40997.98\n[3141,] 34828.85 41087.70\n[3142,] 35338.15 40733.81\n[3143,] 35369.84 40688.02\n[3144,] 34959.25 40780.64\n[3145,] 34806.66 40425.07\n[3146,] 34970.94 40746.11\n[3147,] 35084.72 41612.01\n[3148,] 35084.72 41612.01\n[3149,] 35667.15 41935.32\n[3150,] 33251.74 41378.36\n[3151,] 32803.26 41317.97\n[3152,] 32858.46 41642.97\n[3153,] 32605.50 41178.63\n[3154,] 32782.21 41700.54\n[3155,] 32867.43 41342.68\n[3156,] 32650.92 41800.04\n[3157,] 32650.92 41800.04\n[3158,] 32451.97 41520.06\n[3159,] 36537.44 41164.11\n[3160,] 36607.15 41184.66\n[3161,] 36028.27 41826.86\n[3162,] 34561.49 40900.31\n[3163,] 34520.18 40803.90\n[3164,] 34514.86 40852.39\n[3165,] 32924.26 41871.99\n[3166,] 32588.22 41800.05\n[3167,] 31916.96 36967.95\n[3168,] 32177.60 37656.09\n[3169,] 32451.63 37326.25\n[3170,] 32240.17 38691.55\n[3171,] 32125.78 39332.05\n[3172,] 32587.13 39507.43\n[3173,] 41769.50 36685.83\n[3174,] 41555.98 36387.80\n[3175,] 41451.47 36145.54\n[3176,] 39190.95 36539.70\n[3177,] 39138.99 36559.72\n[3178,] 41701.55 37990.54\n[3179,] 39693.46 37760.98\n[3180,] 39878.17 37723.89\n[3181,] 39914.89 37706.46\n[3182,] 40588.42 36771.58\n[3183,] 40420.08 36708.32\n[3184,] 40641.62 37154.17\n[3185,] 41016.68 36809.02\n[3186,] 41770.14 36979.61\n[3187,] 42370.04 37362.61\n[3188,] 41305.12 37690.98\n[3189,] 42066.66 38046.09\n[3190,] 39824.45 36883.33\n[3191,] 30637.43 34861.22\n[3192,] 29399.19 35150.94\n[3193,] 30022.10 35386.94\n[3194,] 30641.17 35742.37\n[3195,] 31305.55 35354.54\n[3196,] 21819.55 46973.55\n[3197,] 23300.77 45766.53\n[3198,] 22816.89 46198.72\n[3199,] 24168.39 47171.91\n[3200,] 24279.23 47795.02\n[3201,] 24629.97 47757.26\n[3202,] 24422.78 47391.68\n[3203,] 24481.40 47738.04\n[3204,] 24217.38 47722.61\n[3205,] 24593.62 47743.72\n[3206,] 24442.04 47860.89\n[3207,] 24481.40 47738.04\n[3208,] 23413.68 45939.17\n[3209,] 23243.92 45983.65\n[3210,] 23621.12 45714.97\n[3211,] 23621.43 46465.74\n[3212,] 24038.01 47679.74\n[3213,] 24354.91 47636.41\n[3214,] 24614.05 46864.25\n[3215,] 25103.85 47216.27\n[3216,] 22241.93 46545.97\n[3217,] 21424.62 46347.80\n[3218,] 23151.14 47217.82\n[3219,] 22735.85 46957.43\n[3220,] 28879.22 45454.97\n[3221,] 29317.76 44977.20\n[3222,] 29772.23 44831.65\n[3223,] 29258.54 44994.84\n[3224,] 29140.70 45577.30\n[3225,] 29008.08 45470.67\n[3226,] 29065.93 45407.81\n[3227,] 29140.70 45577.30\n[3228,] 29702.01 44751.06\n[3229,] 29702.01 44751.06\n[3230,] 28069.61 44924.90\n[3231,] 28052.96 44641.91\n[3232,] 28710.67 44821.79\n[3233,] 27371.24 45806.91\n[3234,] 29695.39 45409.00\n[3235,] 29071.88 46208.62\n[3236,] 29071.88 46208.62\n[3237,] 29008.86 46011.25\n[3238,] 29071.88 46208.62\n[3239,] 27299.10 46205.20\n[3240,] 29321.36 45664.48\n[3241,] 27713.14 44269.01\n[3242,] 27806.35 44254.75\n[3243,] 27780.41 44409.77\n[3244,] 29263.83 45891.33\n[3245,] 29237.28 46110.40\n[3246,] 29453.73 46038.03\n[3247,] 29225.56 45899.52\n[3248,] 29361.72 44631.99\n[3249,] 28081.42 45442.20\n[3250,] 28447.34 43958.92\n[3251,] 29060.49 38651.05\n[3252,] 29216.54 38521.26\n[3253,] 30518.97 39266.71\n[3254,] 30618.32 38345.09\n[3255,] 30730.76 39223.53\n[3256,] 29510.05 38880.94\n[3257,] 28545.55 39010.84\n[3258,] 30362.87 39037.07\n[3259,] 28878.39 40462.02\n[3260,] 29952.60 38496.68\n[3261,] 39494.31 35055.13\n[3262,] 38498.13 34639.49\n[3263,] 40076.54 34344.32\n[3264,] 38645.44 34497.87\n[3265,] 39729.72 34710.92\n[3266,] 38827.74 35171.90\n[3267,] 37784.98 35386.28\n[3268,] 37527.03 35490.50\n[3269,] 37156.99 35128.40\n[3270,] 37301.60 35139.33\n[3271,] 36635.33 34993.13\n[3272,] 36569.24 34706.30\n[3273,] 39746.35 35346.57\n[3274,] 39315.16 33829.80\n[3275,] 39249.28 33826.97\n[3276,] 40450.94 33589.20\n[3277,] 30494.97 36300.12\n[3278,] 29749.74 36548.96\n[3279,] 29470.92 37851.27\n[3280,] 29181.37 37605.60\n[3281,] 19714.87 37042.67\n[3282,] 19750.32 36820.26\n[3283,] 17842.91 36732.57\n[3284,] 18722.67 36402.03\n[3285,] 18846.94 38010.82\n[3286,] 18465.57 38406.96\n[3287,] 18256.96 38289.60\n[3288,] 18338.01 36902.88\n[3289,] 18338.28 36619.18\n[3290,] 18284.82 36773.19\n[3291,] 27589.06 29864.50\n[3292,] 28726.26 28479.79\n[3293,] 27246.25 30469.37\n[3294,] 27460.07 30213.84\n[3295,] 27022.60 29406.75\n[3296,] 26005.76 30228.58\n[3297,] 25992.13 30051.90\n[3298,] 26167.70 30125.23\n[3299,] 20975.30 40886.84\n[3300,] 21046.63 40575.21\n[3301,] 20440.51 39940.74\n[3302,] 20251.31 40647.00\n[3303,] 20251.31 40647.00\n[3304,] 20495.11 40135.56\n[3305,] 20436.46 40261.82\n[3306,] 20376.47 40244.87\n[3307,] 20814.71 39623.06\n[3308,] 20330.48 39951.74\n[3309,] 21185.33 41020.82\n[3310,] 21263.96 41018.18\n[3311,] 21076.57 41233.31\n[3312,] 20794.73 41260.70\n[3313,] 21275.62 41135.84\n[3314,] 21095.91 40990.18\n[3315,] 21095.91 40990.18\n[3316,] 19585.79 40949.14\n[3317,] 20047.20 40308.02\n[3318,] 19654.90 41062.14\n[3319,] 20047.20 40308.02\n[3320,] 19760.34 40940.87\n[3321,] 19654.90 41062.14\n[3322,] 25193.11 33400.14\n[3323,] 21347.46 35608.54\n[3324,] 28899.78 28918.09\n[3325,] 17721.84 40064.78\n[3326,] 17997.02 40295.90\n[3327,] 17553.97 40243.17\n[3328,] 17785.96 40176.08\n[3329,] 17649.40 40442.93\n[3330,] 17544.47 40600.96\n[3331,] 17078.82 40155.35\n[3332,] 17316.22 39704.72\n[3333,] 18891.55 42558.59\n[3334,] 18112.72 42705.14\n[3335,] 18567.39 40321.55\n[3336,] 18007.15 41429.98\n[3337,] 18219.46 41813.23\n[3338,] 19216.72 39896.49\n[3339,] 18941.49 39941.01\n[3340,] 19123.41 39901.79\n[3341,] 18869.24 40173.63\n[3342,] 19280.71 40192.75\n[3343,] 20855.73 32483.78\n[3344,] 20555.98 32729.69\n[3345,] 20469.09 33523.33\n[3346,] 20469.09 33523.33\n[3347,] 20816.74 31875.79\n[3348,] 33797.02 34655.09\n[3349,] 34240.24 32180.99\n[3350,] 35913.37 33783.59\n[3351,] 35644.33 34298.90\n[3352,] 35475.73 34303.98\n[3353,] 35888.87 34501.67\n[3354,] 33321.17 40188.58\n[3355,] 33321.17 40188.58\n[3356,] 32890.85 40160.08\n[3357,] 34844.24 39755.20\n[3358,] 34157.34 38666.54\n[3359,] 35224.91 39320.67\n[3360,] 34911.82 39774.81\n[3361,] 34361.20 37562.21\n[3362,] 34384.72 40015.73\n[3363,] 33837.41 39831.08\n[3364,] 33262.36 39726.30\n[3365,] 33511.36 37148.67\n[3366,] 17206.13 35873.88\n[3367,] 17851.53 35841.09\n[3368,] 17084.99 36397.28\n[3369,] 16950.64 36629.53\n[3370,] 17334.42 33696.28\n[3371,] 17724.40 33760.13\n[3372,] 18205.70 36090.43\n[3373,] 14100.74 36480.41\n[3374,] 13897.52 36424.28\n[3375,] 13917.69 36020.82\n[3376,] 13439.14 37220.92\n[3377,] 15854.55 36691.51\n[3378,] 15967.93 37313.55\n[3379,] 16206.75 36923.77\n[3380,] 13237.37 35772.26\n[3381,] 13483.67 35998.81\n[3382,] 13110.25 35900.96\n[3383,] 12914.05 36880.51\n[3384,] 12631.17 36241.31\n[3385,] 12435.79 36087.27\n[3386,] 12701.62 36386.28\n[3387,] 12325.56 36525.23\n[3388,] 11901.52 35990.11\n[3389,] 12648.68 35420.01\n[3390,] 12694.78 35375.13\n[3391,] 15655.44 35514.26\n[3392,] 15482.56 35048.32\n[3393,] 31070.08 33262.64\n[3394,] 30038.83 32697.73\n[3395,] 31107.88 32141.73\n[3396,] 30909.56 33567.20\n[3397,] 30621.09 33552.94\n[3398,] 30279.80 33674.30\n[3399,] 31678.09 34080.63\n[3400,] 37097.86 31783.94\n[3401,] 39920.21 39753.06\n[3402,] 41654.63 39147.39\n[3403,] 41686.40 38978.13\n[3404,] 40684.58 39024.98\n[3405,] 40663.12 38841.62\n[3406,] 40713.98 39216.49\n[3407,] 40780.88 39182.39\n[3408,] 36550.68 42824.06\n[3409,] 36051.03 42917.24\n[3410,] 36649.56 42749.14\n[3411,] 36692.37 42718.62\n[3412,] 34938.36 42931.85\n[3413,] 35026.93 42837.67\n[3414,] 35272.33 42811.32\n[3415,] 35131.26 42885.13\n[3416,] 36818.63 41606.67\n[3417,] 35813.88 42655.99\n[3418,] 35431.54 42451.10\n[3419,] 35428.21 42746.43\n[3420,] 35088.33 43085.89\n[3421,] 35176.48 43000.43\n[3422,] 35202.25 42976.70\n[3423,] 24294.88 30717.60\n[3424,] 25563.60 30752.26\n[3425,] 26394.43 47966.45\n[3426,] 26056.87 48669.59\n[3427,] 27159.64 47926.16\n[3428,] 26449.60 47454.39\n[3429,] 25882.67 48648.61\n[3430,] 25847.01 48622.47\n[3431,] 34205.51 42158.32\n[3432,] 34111.56 42183.78\n[3433,] 33836.18 41446.15\n[3434,] 34096.12 42002.61\n[3435,] 34334.65 42049.85\n[3436,] 34276.93 42009.52\n[3437,] 35068.17 40344.50\n[3438,] 35340.26 42239.44\n[3439,] 34844.43 41055.62\n[3440,] 35084.72 41612.01\n[3441,] 35253.52 42077.04\n[3442,] 33136.84 41278.61\n[3443,] 32668.88 41133.24\n[3444,] 32743.27 41330.52\n[3445,] 32803.26 41317.97\n[3446,] 32760.65 41301.41\n[3447,] 32676.45 41702.54\n[3448,] 32851.48 41722.74\n[3449,] 32803.26 41317.97\n[3450,] 36537.44 41164.11\n[3451,] 35833.14 41255.73\n[3452,] 34591.51 40782.49\n[3453,] 32924.26 41871.99\n[3454,] 32581.39 41716.94\n[3455,] 32876.22 41763.94\n[3456,] 32412.56 36590.55\n[3457,] 31583.47 37224.79\n[3458,] 32218.44 37833.78\n[3459,] 32113.06 37563.15\n[3460,] 32112.13 39185.67\n[3461,] 32409.22 38910.69\n[3462,] 32684.54 38978.71\n[3463,] 32107.82 39616.22\n[3464,] 42082.86 36327.23\n[3465,] 41078.14 36004.68\n[3466,] 39138.99 36559.72\n[3467,] 39437.72 36444.81\n[3468,] 39691.97 37938.11\n[3469,] 39750.97 37936.73\n[3470,] 40814.31 37108.56\n[3471,] 42298.34 37028.72\n[3472,] 39148.95 37643.41\n[3473,] 39610.51 37923.73\n[3474,] 39242.42 37809.10\n[3475,] 39242.42 37809.10\n[3476,] 39339.64 37876.30\n[3477,] 39133.56 37962.16\n[3478,] 39384.65 37028.19\n[3479,] 39358.29 36996.24\n[3480,] 39349.32 37298.03\n[3481,] 39202.43 37430.01\n[3482,] 38975.98 37312.40\n[3483,] 30662.40 34824.50\n[3484,] 29193.72 35384.32\n[3485,] 29968.62 35980.90\n[3486,] 21528.39 47201.93\n[3487,] 23918.69 46150.28\n[3488,] 23611.51 47342.52\n[3489,] 24423.51 46133.07\n[3490,] 23937.30 47433.97\n[3491,] 24050.84 47192.31\n[3492,] 24050.84 47192.31\n[3493,] 24677.26 47703.11\n[3494,] 24508.71 47751.29\n[3495,] 24481.40 47738.04\n[3496,] 23904.58 46704.19\n[3497,] 23639.55 46602.59\n[3498,] 23639.55 46602.59\n[3499,] 24267.07 47658.65\n[3500,] 24038.01 47679.74\n[3501,] 24267.07 47658.65\n[3502,] 25148.65 47231.54\n[3503,] 24386.82 46297.76\n[3504,] 24131.67 46487.49\n[3505,] 24033.07 46633.70\n[3506,] 24647.43 46490.45\n[3507,] 24557.74 46640.90\n[3508,] 22117.08 45976.90\n[3509,] 21281.71 45373.65\n[3510,] 21323.77 45650.54\n[3511,] 29533.95 44678.75\n[3512,] 29533.95 44678.75\n[3513,] 29467.40 44663.71\n[3514,] 29065.93 45407.81\n[3515,] 29769.97 44954.80\n[3516,] 29769.97 44954.80\n[3517,] 29762.36 45002.24\n[3518,] 29702.01 44751.06\n[3519,] 29772.23 44831.65\n[3520,] 28963.89 45446.68\n[3521,] 27839.01 45032.17\n[3522,] 27839.01 45032.17\n[3523,] 28820.35 44701.54\n[3524,] 29109.89 46245.90\n[3525,] 28973.82 46300.29\n[3526,] 28679.65 45843.47\n[3527,] 29346.24 44872.19\n[3528,] 28749.37 46047.08\n[3529,] 28820.27 46224.93\n[3530,] 29281.98 45774.85\n[3531,] 27658.89 45966.94\n[3532,] 28780.16 46535.54\n[3533,] 28636.69 46572.39\n[3534,] 29387.90 45956.64\n[3535,] 29453.73 46038.03\n[3536,] 29214.05 44557.60\n[3537,] 29229.60 44394.57\n[3538,] 28464.37 44875.44\n[3539,] 28337.68 44751.35\n[3540,] 28593.92 44540.97\n[3541,] 27465.19 45395.83\n[3542,] 27709.70 45411.08\n[3543,] 28081.42 45442.20\n[3544,] 29171.38 38539.56\n[3545,] 29941.75 38240.88\n[3546,] 30770.07 39578.64\n[3547,] 30434.82 38555.82\n[3548,] 28322.68 39876.58\n[3549,] 29140.92 40269.45\n[3550,] 29873.59 39507.67\n[3551,] 28818.02 40553.81\n[3552,] 28818.02 40553.81\n[3553,] 29917.18 39339.98\n[3554,] 38552.01 34741.74\n[3555,] 40018.30 35009.87\n[3556,] 39766.43 34608.46\n[3557,] 38251.29 34726.97\n[3558,] 36843.18 35328.24\n[3559,] 36849.74 35008.60\n[3560,] 37186.97 34939.09\n[3561,] 39689.49 33812.06\n[3562,] 40049.91 33755.10\n[3563,] 40049.91 33755.10\n[3564,] 29924.80 36550.02\n[3565,] 29969.53 36449.29\n[3566,] 29049.95 38191.46\n[3567,] 29259.45 38127.38\n[3568,] 29181.72 38185.97\n[3569,] 29470.92 37851.27\n[3570,] 29536.75 37846.63\n[3571,] 29164.84 37756.46\n[3572,] 19149.86 36753.57\n[3573,] 19283.43 36649.18\n[3574,] 19739.24 36934.02\n[3575,] 19533.21 36811.42\n[3576,] 19705.13 36353.62\n[3577,] 18463.66 38246.94\n[3578,] 18159.76 38193.32\n[3579,] 18256.96 38289.60\n[3580,] 18281.19 38365.11\n[3581,] 18982.22 38706.05\n[3582,] 18982.22 38706.05\n[3583,] 19012.08 38443.16\n[3584,] 18350.16 36659.77\n[3585,] 18069.13 36865.23\n[3586,] 18338.01 36902.88\n[3587,] 17731.26 36421.38\n[3588,] 27589.06 29864.50\n[3589,] 27542.17 29862.11\n[3590,] 28797.61 28575.31\n[3591,] 27334.03 30454.96\n[3592,] 27634.65 29329.80\n[3593,] 27371.58 29326.08\n[3594,] 26059.10 30099.20\n[3595,] 21490.49 39869.07\n[3596,] 20673.42 40679.27\n[3597,] 20653.16 41226.57\n[3598,] 20769.96 41218.47\n[3599,] 21030.40 41123.11\n[3600,] 19654.90 41062.14\n[3601,] 19742.50 41041.11\n[3602,] 19742.50 41041.11\n[3603,] 28929.08 28879.35\n[3604,] 30721.96 32054.47\n[3605,] 17827.30 39894.64\n[3606,] 17661.21 40092.42\n[3607,] 17130.86 40224.89\n[3608,] 17614.03 40356.17\n[3609,] 18203.74 42708.19\n[3610,] 18869.25 42453.70\n[3611,] 18303.74 40264.67\n[3612,] 18402.36 40559.98\n[3613,] 18007.15 41429.98\n[3614,] 17977.93 41657.99\n[3615,] 18379.99 41507.31\n[3616,] 19534.59 40043.26\n[3617,] 19123.41 39901.79\n[3618,] 20552.54 32600.30\n[3619,] 20583.04 32713.09\n[3620,] 20451.59 33486.83\n[3621,] 20460.64 33596.21\n[3622,] 21163.74 34128.30\n[3623,] 20968.00 33991.86\n[3624,] 20454.88 31825.53\n[3625,] 35573.74 33706.98\n[3626,] 35825.47 34612.26\n[3627,] 33125.71 40164.92\n[3628,] 33189.99 40167.97\n[3629,] 33015.31 40206.54\n[3630,] 32890.85 40160.08\n[3631,] 33015.31 40206.54\n[3632,] 34943.36 39611.03\n[3633,] 34303.61 38684.75\n[3634,] 34303.61 38684.75\n[3635,] 35296.22 38846.59\n[3636,] 34708.29 39945.56\n[3637,] 32984.54 39861.00\n[3638,] 34359.60 38338.14\n[3639,] 33226.42 39911.43\n[3640,] 35635.35 40114.50\n[3641,] 17030.45 36365.00\n[3642,] 14668.98 36214.38\n[3643,] 14133.61 36727.94\n[3644,] 13763.44 36144.91\n[3645,] 13471.60 37247.55\n[3646,] 15967.93 37313.55\n[3647,] 13370.41 35398.04\n[3648,] 12299.58 36240.83\n[3649,] 12764.23 36386.16\n[3650,] 15410.94 35851.40\n[3651,] 15448.48 34379.43\n[3652,] 15557.30 34906.31\n[3653,] 31678.09 34080.63\n[3654,] 36427.15 31668.30\n[3655,] 37096.41 31873.09\n[3656,] 40154.32 39672.69\n[3657,] 39515.18 40053.84\n[3658,] 41975.93 38389.54\n[3659,] 40680.99 38924.85\n[3660,] 40681.87 38966.20\n[3661,] 40786.80 39222.41\n[3662,] 40701.69 39109.09\n[3663,] 39189.84 39788.11\n[3664,] 36599.45 43229.07\n[3665,] 36713.12 43168.83\n[3666,] 36482.52 42857.42\n[3667,] 36550.68 42824.06\n[3668,] 36636.36 43269.84\n[3669,] 36322.84 42726.76\n[3670,] 37124.11 41957.60\n[3671,] 36882.45 42523.80\n[3672,] 36975.56 42718.09\n[3673,] 37242.79 42313.38\n[3674,] 35849.55 42428.09\n[3675,] 35312.99 42884.75\n[3676,] 35758.99 42693.46\n[3677,] 22677.10 32407.59\n[3678,] 22677.10 32407.59\n[3679,] 23003.20 32384.04\n[3680,] 23003.20 32384.04\n[3681,] 23917.89 32280.62\n[3682,] 24839.12 30652.21\n[3683,] 25271.27 30638.55\n[3684,] 24227.09 31453.43\n[3685,] 26121.13 47963.14\n[3686,] 26210.79 48545.18\n[3687,] 26769.30 47419.46\n[3688,] 27397.84 48130.23\n[3689,] 27415.98 48063.02\n[3690,] 27306.60 48063.03\n[3691,] 34102.60 42258.98\n[3692,] 34243.98 42252.05\n[3693,] 34165.54 41998.48\n[3694,] 34080.67 41758.88\n[3695,] 34282.70 41941.51\n[3696,] 34321.85 41951.96\n[3697,] 35328.82 40660.61\n[3698,] 35341.91 40787.90\n[3699,] 34946.97 40455.31\n[3700,] 34809.92 40477.37\n[3701,] 34806.66 40425.07\n[3702,] 35064.79 40599.61\n[3703,] 35337.22 41556.11\n[3704,] 35530.17 42018.06\n[3705,] 32435.94 41127.80\n[3706,] 32990.37 41605.84\n[3707,] 33030.01 41752.64\n[3708,] 33030.01 41752.64\n[3709,] 33129.97 41219.11\n[3710,] 33190.98 41392.37\n[3711,] 32997.30 41756.79\n[3712,] 33250.81 41249.50\n[3713,] 32743.27 41330.52\n[3714,] 32666.20 41556.04\n[3715,] 32676.45 41702.54\n[3716,] 32807.53 41638.03\n[3717,] 32650.92 41800.04\n[3718,] 36117.49 41585.11\n[3719,] 36495.86 41268.56\n[3720,] 35456.56 40495.15\n[3721,] 34514.86 40852.39\n[3722,] 34514.86 40852.39\n[3723,] 32908.10 41628.34\n[3724,] 32908.10 41628.34\n[3725,] 31936.64 37254.53\n[3726,] 32174.87 36928.37\n[3727,] 32325.05 37825.97\n[3728,] 32147.19 39007.84\n[3729,] 32440.30 39656.62\n[3730,] 41465.73 36524.29\n[3731,] 39138.99 36559.72\n[3732,] 39576.44 36521.72\n[3733,] 39693.46 37760.98\n[3734,] 39868.02 37588.96\n[3735,] 39914.89 37706.46\n[3736,] 41030.90 36660.15\n[3737,] 41541.74 36988.30\n[3738,] 41503.04 37521.61\n[3739,] 42074.60 37028.71\n[3740,] 42162.94 37794.08\n[3741,] 40514.94 37768.02\n[3742,] 40718.39 37684.02\n[3743,] 41816.59 38154.09\n[3744,] 39222.02 37960.74\n[3745,] 39222.02 37960.74\n[3746,] 39421.99 37094.13\n[3747,] 39264.33 37035.21\n[3748,] 39281.60 37109.69\n[3749,] 39927.86 36476.53\n[3750,] 30637.43 34861.22\n[3751,] 30641.17 35742.37\n[3752,] 29323.14 36005.30\n[3753,] 23918.69 46150.28\n[3754,] 22887.92 46161.52\n[3755,] 24225.90 47466.95\n[3756,] 24012.81 47300.89\n[3757,] 24629.97 47757.26\n[3758,] 24422.78 47391.68\n[3759,] 24508.71 47751.29\n[3760,] 23029.50 46129.51\n[3761,] 23229.73 46265.89\n[3762,] 23765.14 46425.88\n[3763,] 23637.30 46660.83\n[3764,] 23639.55 46602.59\n[3765,] 24664.73 46976.73\n[3766,] 24224.68 47073.43\n[3767,] 24557.74 46640.90\n[3768,] 23974.72 46491.38\n[3769,] 24651.86 46591.71\n[3770,] 21853.72 46229.60\n[3771,] 21475.81 45414.05\n[3772,] 23519.30 47201.67\n[3773,] 23461.10 47158.03\n[3774,] 29548.52 44871.70\n[3775,] 29807.47 44873.82\n[3776,] 29670.16 44909.77\n[3777,] 29426.06 44899.70\n[3778,] 29041.45 45519.79\n[3779,] 29807.47 44873.82\n[3780,] 29807.47 44873.82\n[3781,] 29652.96 44954.66\n[3782,] 28706.46 44982.45\n[3783,] 29044.58 46118.67\n[3784,] 28913.65 45623.77\n[3785,] 28251.99 44429.36\n[3786,] 29083.36 45815.45\n[3787,] 27423.14 46303.57\n[3788,] 27893.28 44883.62\n[3789,] 28380.88 44249.50\n[3790,] 29263.83 44869.00\n[3791,] 28780.16 46535.54\n[3792,] 29237.28 46110.40\n[3793,] 29378.49 46027.74\n[3794,] 27465.19 45395.83\n[3795,] 28311.51 44027.29\n[3796,] 28447.34 43958.92\n[3797,] 28061.11 43878.83\n[3798,] 28447.34 43958.92\n[3799,] 29143.45 39248.42\n[3800,] 28325.75 39700.70\n[3801,] 29507.16 38473.85\n[3802,] 38409.52 34835.23\n[3803,] 38676.79 35018.03\n[3804,] 38507.50 34591.83\n[3805,] 38507.50 34591.83\n[3806,] 39452.25 34993.38\n[3807,] 39940.62 34522.49\n[3808,] 37867.37 35441.37\n[3809,] 36465.04 34635.17\n[3810,] 36731.81 35230.12\n[3811,] 36757.61 35198.91\n[3812,] 39699.12 33765.23\n[3813,] 39851.45 33693.73\n[3814,] 37915.61 34613.41\n[3815,] 30102.06 36322.61\n[3816,] 29935.53 36802.28\n[3817,] 29163.41 38144.62\n[3818,] 29176.07 37834.64\n[3819,] 29288.62 37580.35\n[3820,] 28982.35 37743.67\n[3821,] 27695.04 37908.17\n[3822,] 18587.10 36402.95\n[3823,] 18768.48 36459.61\n[3824,] 19734.37 36308.68\n[3825,] 18833.13 38400.38\n[3826,] 19026.85 38717.79\n[3827,] 18338.28 36619.18\n[3828,] 27542.17 29862.11\n[3829,] 26942.00 29720.63\n[3830,] 27172.94 28616.49\n[3831,] 25512.55 29229.28\n[3832,] 27458.54 30282.49\n[3833,] 25595.61 29989.53\n[3834,] 25365.21 30116.09\n[3835,] 25365.21 30116.09\n[3836,] 27634.65 29329.80\n[3837,] 27574.62 29477.28\n[3838,] 25657.71 30003.28\n[3839,] 25512.07 29966.12\n[3840,] 26059.10 30099.20\n[3841,] 26878.90 28287.80\n[3842,] 20602.57 40537.72\n[3843,] 20840.28 41058.15\n[3844,] 20840.28 41058.15\n[3845,] 21116.62 39661.66\n[3846,] 20794.73 41260.70\n[3847,] 21072.27 41108.45\n[3848,] 20653.16 41226.57\n[3849,] 21072.27 41108.45\n[3850,] 21133.84 41240.77\n[3851,] 20941.42 41191.45\n[3852,] 19654.90 41062.14\n[3853,] 19654.90 41062.14\n[3854,] 29068.25 28859.83\n[3855,] 30406.63 32003.94\n[3856,] 17956.14 39976.69\n[3857,] 17593.22 39783.09\n[3858,] 17438.75 39918.25\n[3859,] 17654.86 39732.68\n[3860,] 17518.83 39833.52\n[3861,] 18671.70 42623.05\n[3862,] 18869.25 42453.70\n[3863,] 18660.35 42567.99\n[3864,] 18454.86 40158.12\n[3865,] 18396.24 40266.02\n[3866,] 18520.43 40241.96\n[3867,] 18119.34 40383.20\n[3868,] 17955.74 41799.07\n[3869,] 18379.99 41507.31\n[3870,] 18140.10 42353.15\n[3871,] 19482.53 40129.24\n[3872,] 20905.68 32575.97\n[3873,] 20673.69 33049.58\n[3874,] 20583.04 32713.09\n[3875,] 20555.98 32729.69\n[3876,] 20451.59 33486.83\n[3877,] 19863.73 32474.25\n[3878,] 33927.36 34743.41\n[3879,] 33907.24 32524.22\n[3880,] 35182.27 33388.41\n[3881,] 35854.92 34586.36\n[3882,] 35897.33 34558.17\n[3883,] 35956.99 34361.53\n[3884,] 32890.84 40251.77\n[3885,] 33658.44 39565.92\n[3886,] 35044.72 38640.92\n[3887,] 34911.82 39774.81\n[3888,] 34736.13 40161.81\n[3889,] 33697.30 37668.49\n[3890,] 33511.36 37148.67\n[3891,] 35635.35 40114.50\n[3892,] 35635.35 40114.50\n[3893,] 35635.35 40114.50\n[3894,] 35539.98 39998.97\n[3895,] 35889.58 39923.62\n[3896,] 35848.37 40032.01\n[3897,] 17582.77 33891.16\n[3898,] 14941.86 37017.30\n[3899,] 13609.15 37104.66\n[3900,] 13467.95 35451.94\n[3901,] 13335.01 35633.92\n[3902,] 13019.32 36404.06\n[3903,] 12740.84 36712.95\n[3904,] 12510.70 36503.99\n[3905,] 11597.31 35922.48\n[3906,] 12654.70 35329.27\n[3907,] 15551.63 35558.97\n[3908,] 15699.37 35541.83\n[3909,] 31294.56 33397.29\n[3910,] 33645.20 31392.61\n[3911,] 30562.28 33470.30\n[3912,] 36449.25 31636.29\n[3913,] 39920.21 39753.06\n[3914,] 39685.31 40248.58\n[3915,] 40713.98 39216.49\n[3916,] 40684.58 39024.98\n[3917,] 40663.12 38841.62\n[3918,] 40655.03 38880.45\n[3919,] 39453.27 40322.47\n[3920,] 36758.46 43100.55\n[3921,] 36636.36 43269.84\n[3922,] 36713.12 43168.83\n[3923,] 36036.29 42863.63\n[3924,] 36294.04 42758.28\n[3925,] 37140.49 42216.39\n[3926,] 36011.47 42729.76\n[3927,] 36692.37 42718.62\n[3928,] 37029.84 42595.50\n[3929,] 36911.65 42565.65\n[3930,] 36696.77 42634.15\n[3931,] 37087.54 41792.23\n[3932,] 37003.67 41725.21\n[3933,] 34974.26 42850.60\n[3934,] 35131.26 42885.13\n[3935,] 35131.26 42885.13\n[3936,] 36063.64 43071.01\n[3937,] 35533.40 42462.21\n[3938,] 35499.58 42535.17\n[3939,] 35816.59 42712.59\n[3940,] 36219.47 42620.50\n[3941,] 35377.73 42514.60\n[3942,] 35485.40 42891.67\n[3943,] 35317.71 43315.87\n[3944,] 35194.89 43089.61\n[3945,] 35027.93 43052.26\n[3946,] 35231.73 42964.14\n[3947,] 35014.68 42970.64\n[3948,] 35021.31 43010.55\n[3949,] 23929.02 32338.14\n[3950,] 25205.95 30711.87\n[3951,] 24171.96 31505.67\n[3952,] 24227.09 31453.43\n[3953,] 26394.43 47966.45\n[3954,] 26363.14 47691.16\n[3955,] 26449.60 47454.39\n[3956,] 25996.63 47491.95\n[3957,] 25971.91 48288.26\n[3958,] 26256.41 48294.55\n[3959,] 34274.93 42145.44\n[3960,] 33688.72 41498.46\n[3961,] 34212.95 41431.26\n[3962,] 34434.40 41913.17\n[3963,] 34469.95 41889.54\n[3964,] 34334.65 42049.85\n[3965,] 34321.85 41951.96\n[3966,] 35443.82 40862.14\n[3967,] 34803.47 40540.80\n[3968,] 35017.27 40607.33\n[3969,] 34730.86 40482.14\n[3970,] 35573.68 41099.41\n[3971,] 33190.98 41392.37\n[3972,] 32973.60 42149.01\n[3973,] 32962.01 41239.69\n[3974,] 32990.37 41605.84\n[3975,] 33129.97 41219.11\n[3976,] 33129.97 41219.11\n[3977,] 33129.97 41219.11\n[3978,] 33250.81 41249.50\n[3979,] 32657.10 41446.09\n[3980,] 32807.53 41638.03\n[3981,] 32815.04 41834.40\n[3982,] 36247.42 41447.38\n[3983,] 34781.45 40855.02\n[3984,] 34733.15 40691.51\n[3985,] 34383.06 41646.34\n[3986,] 32941.30 41628.25\n[3987,] 32524.59 41721.90\n[3988,] 32415.85 41649.39\n[3989,] 31943.08 37177.61\n[3990,] 32044.48 37114.29\n[3991,] 31986.22 37469.36\n[3992,] 32766.50 39269.11\n[3993,] 41781.85 36262.08\n[3994,] 39479.99 36472.97\n[3995,] 39570.23 37420.13\n[3996,] 39770.57 37766.92\n[3997,] 39750.97 37936.73\n[3998,] 40701.25 37554.92\n[3999,] 41016.68 36809.02\n[4000,] 41475.52 37392.30\n[4001,] 42439.59 37228.99\n[4002,] 41697.15 36997.67\n[4003,] 39242.42 37809.10\n[4004,] 39542.55 37834.28\n[4005,] 39310.54 37658.48\n[4006,] 39133.56 37962.16\n[4007,] 39529.80 37048.48\n[4008,] 39829.60 36455.52\n[4009,] 33220.91 35298.52\n[4010,] 30504.33 34674.52\n[4011,] 29289.71 35382.82\n[4012,] 29318.16 35335.67\n[4013,] 29940.65 35389.90\n[4014,] 23918.69 46150.28\n[4015,] 22887.92 46161.52\n[4016,] 24307.24 47065.91\n[4017,] 24102.06 47223.57\n[4018,] 23725.57 47473.18\n[4019,] 23881.71 47265.68\n[4020,] 23880.18 47353.10\n[4021,] 24651.29 47679.40\n[4022,] 24629.97 47757.26\n[4023,] 24481.40 47738.04\n[4024,] 23696.09 45489.69\n[4025,] 23904.58 46704.19\n[4026,] 23763.87 46474.25\n[4027,] 23215.59 46371.18\n[4028,] 23142.98 46586.92\n[4029,] 24397.04 46527.28\n[4030,] 21264.98 46385.07\n[4031,] 23089.53 47277.71\n[4032,] 29519.15 44638.48\n[4033,] 29519.15 44638.48\n[4034,] 29702.01 44751.06\n[4035,] 29702.01 44751.06\n[4036,] 29420.41 45054.67\n[4037,] 27371.24 45806.91\n[4038,] 29678.77 45660.61\n[4039,] 29712.08 45334.81\n[4040,] 28479.16 46847.37\n[4041,] 29044.58 46118.67\n[4042,] 29008.86 46011.25\n[4043,] 29174.35 46154.39\n[4044,] 28707.35 45751.47\n[4045,] 28645.96 45982.09\n[4046,] 28805.86 45883.64\n[4047,] 28645.96 45982.09\n[4048,] 29463.95 45634.94\n[4049,] 27505.30 46315.54\n[4050,] 29129.33 45799.39\n[4051,] 29281.98 45774.85\n[4052,] 27755.87 46300.26\n[4053,] 28275.70 45826.46\n[4054,] 28703.71 46643.05\n[4055,] 28612.75 46522.06\n[4056,] 29225.75 46061.89\n[4057,] 29213.82 44512.85\n[4058,] 28593.92 44540.97\n[4059,] 28588.37 44852.19\n[4060,] 27370.58 45417.75\n[4061,] 27768.70 45328.59\n[4062,] 28236.81 44158.16\n[4063,] 28330.35 44062.84\n[4064,] 40101.43 35118.35\n[4065,] 39506.34 34441.93\n[4066,] 29592.68 37844.87\n[4067,] 18440.33 38353.27\n[4068,] 18338.01 36902.88\n[4069,] 25753.81 29242.91\n[4070,] 27161.33 29723.86\n[4071,] 26361.53 29807.27\n[4072,] 20899.73 40733.17\n[4073,] 21076.57 41233.31\n[4074,] 21320.61 40986.71\n[4075,] 20794.73 41260.70\n[4076,] 19753.52 40742.58\n[4077,] 19585.79 40949.14\n[4078,] 17432.30 39816.08\n[4079,] 20612.15 32606.08\n[4080,] 35035.51 39685.48\n[4081,] 34060.37 38708.37\n[4082,] 34733.29 39828.90\n[4083,] 34549.25 37718.77\n[4084,] 35889.58 39923.62\n[4085,] 17851.53 35841.09\n[4086,] 17582.77 33891.16\n[4087,] 13735.20 35318.54\n[4088,] 31160.25 32139.25\n[4089,] 41982.17 39610.42\n[4090,] 40717.54 39173.75\n[4091,] 40730.93 39254.96\n[4092,] 40596.91 39419.79\n[4093,] 39332.27 39678.02\n[4094,] 36546.83 42138.55\n[4095,] 36636.36 43269.84\n[4096,] 36938.43 42682.97\n[4097,] 36225.85 42393.03\n[4098,] 35608.64 42765.97\n[4099,] 35519.81 42819.11\n[4100,] 35317.71 43315.87\n[4101,] 35489.11 43685.88\n[4102,] 25648.08 30864.46\n[4103,] 25211.64 30780.56\n[4104,] 25882.67 48648.61\n[4105,] 25971.91 48288.26\n[4106,] 34232.78 42158.91\n[4107,] 34103.93 41148.01\n[4108,] 34292.91 42057.54\n[4109,] 35530.17 42018.06\n[4110,] 33190.98 41392.37\n[4111,] 32850.99 41385.31\n[4112,] 36613.65 41218.73\n[4113,] 34733.15 40691.51\n[4114,] 32593.72 39614.82\n[4115,] 40331.42 36651.14\n[4116,] 40765.48 36984.38\n[4117,] 38861.12 36955.50\n[4118,] 21888.98 46999.13\n[4119,] 24036.90 47133.55\n[4120,] 23937.30 47433.97\n[4121,] 23624.26 46416.82\n[4122,] 24165.28 46126.52\n[4123,] 24060.51 46703.66\n[4124,] 29008.86 46011.25\n[4125,] 27736.61 44300.73\n[4126,] 29225.75 46061.89\n[4127,] 29378.49 46027.74\n[4128,] 28459.41 44749.17\n[4129,] 28294.59 39310.55\n[4130,] 39048.88 35019.97\n[4131,] 39519.20 34376.53\n[4132,] 38001.58 34366.79\n[4133,] 27117.73 29561.86\n[4134,] 20812.14 40280.30\n[4135,] 21272.50 39613.96\n[4136,] 20653.16 41226.57\n[4137,] 17536.14 39884.51\n[4138,] 17432.30 39816.08\n[4139,] 18580.57 42816.95\n[4140,] 18240.43 41523.86\n[4141,] 34039.69 34012.35\n[4142,] 34035.13 36986.06\n[4143,] 35904.47 39992.30\n[4144,] 35889.58 39923.62\n[4145,] 17379.11 33971.22\n[4146,] 41692.33 39329.53\n[4147,] 36758.46 43100.55\n[4148,] 36649.48 43202.10\n[4149,] 36696.77 42634.15\n[4150,] 35206.53 42464.67\n[4151,] 25532.83 30833.41\n[4152,] 34165.54 41998.48\n[4153,] 34748.61 40577.16\n[4154,] 32997.30 41756.79\n[4155,] 33053.62 41248.05\n[4156,] 32908.13 42023.92\n[4157,] 41131.78 36303.27\n[4158,] 42162.94 37794.08\n[4159,] 42162.94 37794.08\n[4160,] 40514.94 37768.02\n[4161,] 41889.15 38259.70\n[4162,] 39904.78 36750.55\n[4163,] 23229.82 45865.34\n[4164,] 22130.91 45717.33\n[4165,] 29130.00 46070.87\n[4166,] 27476.84 46102.89\n[4167,] 29258.92 38653.10\n[4168,] 29965.54 38418.56\n[4169,] 29171.38 38539.56\n[4170,] 30550.38 39588.77\n[4171,] 30717.37 39292.93\n[4172,] 30393.19 39175.25\n[4173,] 29871.32 38742.71\n[4174,] 28534.68 39758.72\n[4175,] 29333.46 38563.53\n[4176,] 29507.16 38473.85\n[4177,] 30166.50 39342.82\n[4178,] 39155.77 34184.36\n[4179,] 38661.18 34863.03\n[4180,] 39398.43 34419.31\n[4181,] 40018.30 35009.87\n[4182,] 39971.86 34327.01\n[4183,] 39931.40 34570.51\n[4184,] 38190.16 35350.79\n[4185,] 36474.37 34808.57\n[4186,] 38286.08 35423.87\n[4187,] 39513.90 35337.40\n[4188,] 40550.35 33618.85\n[4189,] 38010.02 34414.55\n[4190,] 36670.56 33913.30\n[4191,] 30156.07 36376.10\n[4192,] 30269.67 36546.54\n[4193,] 28994.82 38003.54\n[4194,] 29077.11 38219.23\n[4195,] 29380.38 37850.20\n[4196,] 28643.33 36831.04\n[4197,] 18974.33 36591.40\n[4198,] 19758.10 36437.70\n[4199,] 18375.27 38071.34\n[4200,] 18515.21 38121.71\n[4201,] 18474.44 38191.95\n[4202,] 18872.93 37388.97\n[4203,] 18284.70 38462.94\n[4204,] 18974.36 38264.44\n[4205,] 18338.01 36902.88\n[4206,] 17834.46 36607.36\n[4207,] 27589.06 29864.50\n[4208,] 27847.72 29889.97\n[4209,] 27161.33 29723.86\n[4210,] 27096.78 29393.50\n[4211,] 27624.34 29285.24\n[4212,] 25527.99 28635.69\n[4213,] 25198.78 28815.09\n[4214,] 21365.06 40291.42\n[4215,] 21047.79 40885.21\n[4216,] 21009.67 40822.65\n[4217,] 20899.73 40733.17\n[4218,] 20908.39 40331.48\n[4219,] 20384.11 39828.87\n[4220,] 20713.11 41295.70\n[4221,] 20653.16 41226.57\n[4222,] 20954.52 41110.65\n[4223,] 21144.59 41060.65\n[4224,] 21185.33 41020.82\n[4225,] 20773.83 41290.92\n[4226,] 19827.29 40824.41\n[4227,] 19742.50 41041.11\n[4228,] 19654.90 41062.14\n[4229,] 19742.50 41041.11\n[4230,] 25100.24 33339.65\n[4231,] 30021.00 32211.22\n[4232,] 30086.33 32348.27\n[4233,] 18000.47 40229.38\n[4234,] 17755.06 40336.29\n[4235,] 17130.86 40224.89\n[4236,] 17438.75 39918.25\n[4237,] 17654.86 39732.68\n[4238,] 17516.17 39763.27\n[4239,] 17593.22 39783.09\n[4240,] 17639.86 39764.42\n[4241,] 18520.34 42577.42\n[4242,] 18452.24 42542.72\n[4243,] 18765.27 42810.50\n[4244,] 18240.43 41523.86\n[4245,] 18139.24 42385.52\n[4246,] 18292.20 42201.71\n[4247,] 18961.79 39984.53\n[4248,] 18948.36 40021.54\n[4249,] 20770.26 32379.02\n[4250,] 20851.34 32875.25\n[4251,] 20555.98 32729.69\n[4252,] 20550.13 33686.22\n[4253,] 20857.50 33547.40\n[4254,] 20733.83 33424.76\n[4255,] 21163.74 34128.30\n[4256,] 35618.28 33714.07\n[4257,] 33724.07 33386.71\n[4258,] 35221.40 33308.23\n[4259,] 34983.59 32884.54\n[4260,] 34983.59 32884.54\n[4261,] 33469.31 33872.00\n[4262,] 32890.84 40251.77\n[4263,] 33015.31 40206.54\n[4264,] 32890.85 40160.08\n[4265,] 33015.31 40206.54\n[4266,] 34201.39 39416.91\n[4267,] 33856.25 39188.09\n[4268,] 35193.18 38987.44\n[4269,] 35357.76 39379.56\n[4270,] 34532.81 39982.31\n[4271,] 34524.65 37794.36\n[4272,] 34351.52 38304.04\n[4273,] 34197.35 40052.13\n[4274,] 33966.18 39939.21\n[4275,] 34447.91 40013.43\n[4276,] 33249.15 40084.65\n[4277,] 33934.10 36797.03\n[4278,] 35420.29 39690.26\n[4279,] 35891.51 40087.66\n[4280,] 17911.43 35623.20\n[4281,] 17851.53 35841.09\n[4282,] 17379.11 33971.22\n[4283,] 17511.68 33675.59\n[4284,] 18501.00 35913.49\n[4285,] 18246.52 35957.56\n[4286,] 14941.86 37017.30\n[4287,] 15889.83 36592.62\n[4288,] 15490.38 36938.33\n[4289,] 12969.48 35472.53\n[4290,] 12886.36 35298.85\n[4291,] 13497.04 35935.38\n[4292,] 13225.54 35898.66\n[4293,] 12882.62 36129.10\n[4294,] 13019.32 36404.06\n[4295,] 11672.86 35698.70\n[4296,] 12026.74 36204.94\n[4297,] 12219.23 36082.72\n[4298,] 11980.86 36207.75\n[4299,] 12618.77 35479.29\n[4300,] 12616.74 35422.58\n[4301,] 15772.20 35395.86\n[4302,] 31677.83 33604.27\n[4303,] 31859.20 33819.53\n[4304,] 30758.84 34219.24\n[4305,] 30978.35 34449.97\n[4306,] 30869.26 33741.48\n[4307,] 30562.28 33470.30\n[4308,] 30526.36 32971.68\n[4309,] 30994.53 33511.15\n[4310,] 32347.25 32901.99\n[4311,] 30279.80 33674.30\n[4312,] 30280.93 33630.54\n[4313,] 30487.06 33756.56\n[4314,] 30340.45 33670.61\n[4315,] 36395.05 31714.45\n[4316,] 37097.86 31783.94\n[4317,] 41947.62 39002.72\n[4318,] 41845.14 39147.35\n[4319,] 41455.51 39436.06\n[4320,] 41591.93 39327.98\n[4321,] 41686.40 38978.13\n[4322,] 41537.39 38942.17\n[4323,] 41466.54 38691.58\n[4324,] 42623.63 38522.77\n[4325,] 41016.61 38847.03\n[4326,] 40780.88 39182.39\n[4327,] 40684.58 39024.98\n[4328,] 40655.03 38880.45\n[4329,] 40780.88 39182.39\n[4330,] 41175.89 38759.93\n[4331,] 39196.99 39740.37\n[4332,] 36916.10 41852.83\n[4333,] 36758.46 43100.55\n[4334,] 36482.52 42857.42\n[4335,] 36036.29 42863.63\n[4336,] 36724.74 42512.33\n[4337,] 36184.55 42763.67\n[4338,] 37029.84 42595.50\n[4339,] 36975.56 42718.09\n[4340,] 37029.84 42595.50\n[4341,] 37045.20 42396.69\n[4342,] 36938.43 42682.97\n[4343,] 37087.54 41792.23\n[4344,] 34938.36 42931.85\n[4345,] 37003.67 41725.21\n[4346,] 35120.27 42848.74\n[4347,] 36540.63 42049.09\n[4348,] 37003.67 41725.21\n[4349,] 35238.10 42796.92\n[4350,] 35360.07 42870.54\n[4351,] 35787.70 42726.34\n[4352,] 36346.22 42778.07\n[4353,] 35317.71 43315.87\n[4354,] 35377.25 43293.29\n[4355,] 35456.22 42844.66\n[4356,] 35206.53 42464.67\n[4357,] 35535.84 42866.36\n[4358,] 35317.71 43315.87\n[4359,] 35377.73 42514.60\n[4360,] 35088.33 43085.89\n[4361,] 35194.89 43089.61\n[4362,] 35027.93 43052.26\n[4363,] 35044.14 42960.94\n[4364,] 35659.26 43562.75\n[4365,] 35462.07 43626.85\n[4366,] 35642.76 43519.88\n[4367,] 25603.53 30871.26\n[4368,] 25692.56 30857.69\n[4369,] 25648.08 30864.46\n[4370,] 25648.08 30864.46\n[4371,] 22361.12 33318.68\n[4372,] 24227.09 31453.43\n[4373,] 25854.47 47796.82\n[4374,] 26219.18 47985.88\n[4375,] 26012.73 48560.65\n[4376,] 26210.79 48545.18\n[4377,] 26434.74 47544.70\n[4378,] 26246.39 47739.77\n[4379,] 26146.26 47685.96\n[4380,] 25882.67 48648.61\n[4381,] 26575.72 48237.12\n[4382,] 34205.51 42158.32\n[4383,] 34304.46 42260.38\n[4384,] 34534.27 41325.59\n[4385,] 34526.12 41877.85\n[4386,] 34165.54 41998.48\n[4387,] 34165.54 41998.48\n[4388,] 34096.12 42002.61\n[4389,] 34334.65 42049.85\n[4390,] 34248.55 41961.95\n[4391,] 34828.85 41087.70\n[4392,] 34828.85 41087.70\n[4393,] 34809.92 40477.37\n[4394,] 32973.60 42149.01\n[4395,] 33147.66 41326.87\n[4396,] 33204.33 41196.88\n[4397,] 33266.71 41302.53\n[4398,] 33250.81 41249.50\n[4399,] 32563.25 41150.95\n[4400,] 32641.92 41715.31\n[4401,] 32803.26 41317.97\n[4402,] 32821.64 41699.95\n[4403,] 32641.92 41715.31\n[4404,] 32359.33 41561.13\n[4405,] 32451.97 41520.06\n[4406,] 36495.86 41268.56\n[4407,] 36494.87 41211.26\n[4408,] 36537.44 41164.11\n[4409,] 36337.00 41062.84\n[4410,] 35618.30 41725.97\n[4411,] 35866.86 41872.45\n[4412,] 34799.24 40773.24\n[4413,] 34514.86 40852.39\n[4414,] 33006.93 41543.26\n[4415,] 32752.43 36657.89\n[4416,] 32033.59 36894.72\n[4417,] 32201.07 36840.01\n[4418,] 32446.53 36732.71\n[4419,] 32112.13 39185.67\n[4420,] 32112.13 39185.67\n[4421,] 32161.99 39437.89\n[4422,] 32668.37 39329.62\n[4423,] 41426.11 36403.83\n[4424,] 41613.96 36697.28\n[4425,] 41039.91 36035.19\n[4426,] 41555.98 36387.80\n[4427,] 39495.35 36509.87\n[4428,] 39871.87 37054.80\n[4429,] 39722.26 37376.60\n[4430,] 40367.50 37530.26\n[4431,] 39750.97 37936.73\n[4432,] 40611.62 36592.98\n[4433,] 41267.91 37223.23\n[4434,] 41458.33 36810.69\n[4435,] 41530.84 36945.24\n[4436,] 42202.97 37041.89\n[4437,] 41490.49 37747.74\n[4438,] 39310.54 37658.48\n[4439,] 39955.34 36713.02\n[4440,] 33076.37 35337.50\n[4441,] 29352.65 35432.23\n[4442,] 29308.67 35192.93\n[4443,] 29308.67 35192.93\n[4444,] 30743.53 35742.31\n[4445,] 31655.48 34952.60\n[4446,] 31728.83 35208.85\n[4447,] 29763.60 35203.33\n[4448,] 29763.60 35203.33\n[4449,] 21552.66 46823.29\n[4450,] 22623.63 45943.54\n[4451,] 23920.72 46199.02\n[4452,] 23942.92 47580.54\n[4453,] 23881.71 47265.68\n[4454,] 23695.71 47495.33\n[4455,] 24629.97 47757.26\n[4456,] 24442.04 47860.89\n[4457,] 23080.88 46048.43\n[4458,] 23612.54 46167.91\n[4459,] 23637.30 46660.83\n[4460,] 23612.30 46542.96\n[4461,] 23639.55 46602.59\n[4462,] 24075.75 46127.70\n[4463,] 23901.62 45980.35\n[4464,] 24354.91 47636.41\n[4465,] 24818.15 46959.64\n[4466,] 23870.78 46408.51\n[4467,] 21464.06 46271.25\n[4468,] 22241.93 46545.97\n[4469,] 21495.80 45373.58\n[4470,] 23519.30 47201.67\n[4471,] 29462.65 44542.38\n[4472,] 29702.01 44751.06\n[4473,] 28963.89 45446.68\n[4474,] 29258.54 44994.84\n[4475,] 29772.23 44831.65\n[4476,] 29584.94 44828.50\n[4477,] 27755.41 46528.01\n[4478,] 29008.86 46011.25\n[4479,] 29130.00 46070.87\n[4480,] 29071.88 46208.62\n[4481,] 28491.09 45490.53\n[4482,] 28808.52 46258.39\n[4483,] 29346.24 44872.19\n[4484,] 27520.09 46163.59\n[4485,] 29216.25 44929.65\n[4486,] 27809.48 46442.49\n[4487,] 27299.10 46205.20\n[4488,] 28455.25 46256.29\n[4489,] 29225.75 46061.89\n[4490,] 29298.53 45962.12\n[4491,] 29225.56 45899.52\n[4492,] 29225.56 45899.52\n[4493,] 29213.82 44512.85\n[4494,] 29213.82 44512.85\n[4495,] 29214.05 44557.60\n[4496,] 27902.73 45634.32\n[4497,] 27990.53 45332.55\n[4498,] 28116.86 44201.06\n[4499,] 29198.15 38613.74\n[4500,] 30477.30 38737.26\n[4501,] 30312.77 39607.85\n[4502,] 30657.82 38693.10\n[4503,] 30036.65 38972.99\n[4504,] 30119.86 39179.24\n[4505,] 28543.46 39220.01\n[4506,] 28534.68 39758.72\n[4507,] 29417.95 39047.97\n[4508,] 29512.33 38534.41\n[4509,] 30207.09 39331.63\n[4510,] 30264.97 39315.69\n[4511,] 39967.02 34387.45\n[4512,] 39483.79 34550.56\n[4513,] 39626.29 34537.50\n[4514,] 39592.28 34738.38\n[4515,] 37789.67 35424.50\n[4516,] 37812.84 35371.67\n[4517,] 36683.42 35060.29\n[4518,] 36831.23 35370.75\n[4519,] 37291.13 35094.75\n[4520,] 38643.94 35459.35\n[4521,] 39506.07 35418.23\n[4522,] 39249.28 33826.97\n[4523,] 37537.21 34341.84\n[4524,] 38075.03 34344.29\n[4525,] 40125.14 33963.93\n[4526,] 29639.17 36794.67\n[4527,] 30045.07 36467.76\n[4528,] 30272.23 36786.74\n[4529,] 30176.80 36806.36\n[4530,] 18411.09 36744.00\n[4531,] 18560.24 36981.04\n[4532,] 18583.08 37066.62\n[4533,] 19750.32 36820.26\n[4534,] 19828.51 36770.15\n[4535,] 19533.21 36811.42\n[4536,] 18722.67 36402.03\n[4537,] 18768.48 36459.61\n[4538,] 18441.05 38295.25\n[4539,] 18796.32 38243.67\n[4540,] 18660.11 38392.70\n[4541,] 18817.17 38361.18\n[4542,] 19149.75 37202.05\n[4543,] 18974.36 38264.44\n[4544,] 17759.18 36588.95\n[4545,] 27589.06 29864.50\n[4546,] 27511.40 29914.89\n[4547,] 27172.94 28616.49\n[4548,] 28635.93 28697.12\n[4549,] 27246.25 30469.37\n[4550,] 27460.07 30213.84\n[4551,] 27306.29 29006.69\n[4552,] 27097.09 29466.38\n[4553,] 25365.21 30116.09\n[4554,] 27808.76 28869.57\n[4555,] 20975.30 40886.84\n[4556,] 21088.66 40111.17\n[4557,] 20591.86 40630.04\n[4558,] 21390.12 39492.54\n[4559,] 21488.78 39464.33\n[4560,] 20393.57 39934.02\n[4561,] 21594.49 39611.17\n[4562,] 20781.41 40572.50\n[4563,] 20870.29 41152.00\n[4564,] 21144.59 41060.65\n[4565,] 21144.59 41060.65\n[4566,] 21099.53 41178.93\n[4567,] 21218.19 41290.74\n[4568,] 19529.88 40944.66\n[4569,] 19655.94 40836.75\n[4570,] 19742.50 41041.11\n[4571,] 19654.90 41062.14\n[4572,] 19742.50 41041.11\n[4573,] 19742.50 41041.11\n[4574,] 19654.90 41062.14\n[4575,] 28872.26 28787.86\n[4576,] 30242.27 31412.37\n[4577,] 17729.11 40101.77\n[4578,] 17341.31 40117.99\n[4579,] 17638.14 40260.45\n[4580,] 17362.63 40323.03\n[4581,] 17501.44 39893.97\n[4582,] 17501.44 39893.97\n[4583,] 17518.83 39833.52\n[4584,] 17609.19 39842.80\n[4585,] 17670.96 39823.49\n[4586,] 17518.83 39833.52\n[4587,] 17609.19 39842.80\n[4588,] 17809.74 39749.17\n[4589,] 17260.67 39852.53\n[4590,] 17773.53 39688.05\n[4591,] 18763.40 42761.08\n[4592,] 18861.88 42838.10\n[4593,] 18790.80 42868.87\n[4594,] 18683.56 42139.86\n[4595,] 18697.55 42055.74\n[4596,] 18378.77 41365.56\n[4597,] 19014.86 40264.59\n[4598,] 20617.73 32691.96\n[4599,] 20376.33 33731.52\n[4600,] 20451.59 33486.83\n[4601,] 20469.09 33523.33\n[4602,] 20469.09 33523.33\n[4603,] 20469.09 33523.33\n[4604,] 20460.64 33596.21\n[4605,] 20106.86 32068.26\n[4606,] 20182.34 31585.09\n[4607,] 19863.73 32474.25\n[4608,] 33927.36 34743.41\n[4609,] 34098.05 34678.29\n[4610,] 35221.40 33308.23\n[4611,] 35170.47 33252.39\n[4612,] 33513.51 33797.32\n[4613,] 33513.51 33797.32\n[4614,] 33495.00 32270.02\n[4615,] 35865.87 34348.01\n[4616,] 35910.45 34472.84\n[4617,] 35651.74 34263.42\n[4618,] 34251.91 36965.79\n[4619,] 34093.99 38788.29\n[4620,] 34238.92 38551.86\n[4621,] 34553.58 38054.84\n[4622,] 33717.79 39018.13\n[4623,] 33172.10 39348.31\n[4624,] 34042.95 39419.04\n[4625,] 32929.70 40067.96\n[4626,] 34099.24 40064.44\n[4627,] 33509.70 40096.05\n[4628,] 33363.81 39849.54\n[4629,] 34035.13 36986.06\n[4630,] 35530.79 40100.79\n[4631,] 35635.35 40114.50\n[4632,] 35420.29 39690.26\n[4633,] 35466.00 39686.32\n[4634,] 35904.47 39992.30\n[4635,] 35848.37 40032.01\n[4636,] 17384.05 35832.87\n[4637,] 17851.53 35841.09\n[4638,] 17800.86 33706.51\n[4639,] 17334.42 33696.28\n[4640,] 17590.01 33737.08\n[4641,] 17520.66 33991.60\n[4642,] 18377.51 35621.81\n[4643,] 14080.05 36749.21\n[4644,] 14133.61 36727.94\n[4645,] 14941.86 37017.30\n[4646,] 13851.43 36116.98\n[4647,] 13709.32 36905.91\n[4648,] 13678.13 37003.18\n[4649,] 15828.73 36609.26\n[4650,] 15828.73 36609.26\n[4651,] 16072.26 37261.40\n[4652,] 15957.77 37264.15\n[4653,] 15322.25 37193.05\n[4654,] 15163.91 36358.68\n[4655,] 12790.05 35810.69\n[4656,] 13627.03 36119.21\n[4657,] 13540.96 36334.23\n[4658,] 13483.67 35998.81\n[4659,] 13472.92 35679.79\n[4660,] 12953.79 36615.10\n[4661,] 13347.14 36472.08\n[4662,] 12510.70 36503.99\n[4663,] 12554.21 36569.86\n[4664,] 15611.86 35485.51\n[4665,] 15853.79 34462.31\n[4666,] 15497.96 35332.11\n[4667,] 15448.48 34379.43\n[4668,] 15504.93 35003.77\n[4669,] 15666.80 34524.06\n[4670,] 31105.01 33147.79\n[4671,] 31854.94 33937.77\n[4672,] 31259.90 34076.00\n[4673,] 32426.61 32898.13\n[4674,] 39920.21 39753.06\n[4675,] 41829.76 39500.50\n[4676,] 41904.73 39610.20\n[4677,] 42199.75 39005.48\n[4678,] 40684.58 39024.98\n[4679,] 40681.87 38966.20\n[4680,] 40681.87 38966.20\n[4681,] 40680.99 38924.85\n[4682,] 41174.30 38722.15\n[4683,] 40701.69 39109.09\n[4684,] 40701.69 39109.09\n[4685,] 39153.59 39822.15\n[4686,] 39535.54 39707.84\n[4687,] 36611.37 41664.20\n[4688,] 36971.31 43021.34\n[4689,] 36863.08 43025.82\n[4690,] 36758.46 43100.55\n[4691,] 36865.06 42959.42\n[4692,] 36971.31 43021.34\n[4693,] 36636.36 43269.84\n[4694,] 36758.46 43100.55\n[4695,] 36636.36 43269.84\n[4696,] 36898.69 43019.28\n[4697,] 36635.36 42503.75\n[4698,] 36744.65 42417.81\n[4699,] 37382.94 42470.99\n[4700,] 36328.51 42976.62\n[4701,] 36362.54 43129.03\n[4702,] 36769.75 42592.63\n[4703,] 37369.45 42367.78\n[4704,] 36341.93 42903.48\n[4705,] 36976.63 42519.01\n[4706,] 36384.90 42870.98\n[4707,] 36343.08 43084.21\n[4708,] 36911.65 42565.65\n[4709,] 36540.63 42049.09\n[4710,] 34925.26 42853.27\n[4711,] 36461.74 42100.26\n[4712,] 34974.26 42850.60\n[4713,] 34938.36 42931.85\n[4714,] 35257.32 42834.33\n[4715,] 35712.21 42604.39\n[4716,] 35953.13 42914.28\n[4717,] 36346.22 42778.07\n[4718,] 35411.93 42559.87\n[4719,] 35446.93 42794.93\n[4720,] 35206.53 42464.67\n[4721,] 35521.57 43287.94\n[4722,] 35509.95 43461.37\n[4723,] 35409.40 43504.30\n[4724,] 35317.71 43315.87\n[4725,] 35377.73 42514.60\n[4726,] 35044.14 42960.94\n[4727,] 35027.93 43052.26\n[4728,] 35032.14 43095.64\n[4729,] 35593.41 43605.80\n[4730,] 25604.79 30819.19\n[4731,] 25604.79 30819.19\n[4732,] 25430.50 30891.82\n[4733,] 22327.22 32002.06\n[4734,] 22600.66 32354.85\n[4735,] 23666.00 32813.64\n[4736,] 23916.59 32229.67\n[4737,] 25263.27 30692.38\n[4738,] 25263.27 30692.38\n[4739,] 26250.67 47940.29\n[4740,] 26085.88 48562.06\n[4741,] 26085.88 48562.06\n[4742,] 26085.88 48562.06\n[4743,] 27062.12 47927.40\n[4744,] 27306.60 48063.03\n[4745,] 27265.75 47952.87\n[4746,] 26650.52 47262.39\n[4747,] 34150.21 42180.99\n[4748,] 34505.30 41813.00\n[4749,] 34086.95 41912.07\n[4750,] 34110.19 41707.31\n[4751,] 34334.65 42049.85\n[4752,] 35340.26 42239.44\n[4753,] 34615.43 41214.30\n[4754,] 35405.91 40829.57\n[4755,] 35528.14 41848.56\n[4756,] 33147.66 41326.87\n[4757,] 32972.82 41858.42\n[4758,] 33190.98 41392.37\n[4759,] 33251.74 41378.36\n[4760,] 32803.26 41317.97\n[4761,] 32773.47 41188.06\n[4762,] 32650.92 41800.04\n[4763,] 32811.80 41241.18\n[4764,] 33343.93 42143.21\n[4765,] 33276.86 41992.68\n[4766,] 33244.80 42043.31\n[4767,] 32359.33 41561.13\n[4768,] 36143.51 41675.71\n[4769,] 36537.44 41164.11\n[4770,] 36045.09 41634.40\n[4771,] 35743.58 40887.07\n[4772,] 34748.54 40800.81\n[4773,] 34781.45 40855.02\n[4774,] 34520.18 40803.90\n[4775,] 33044.85 41569.84\n[4776,] 32908.13 42023.92\n[4777,] 32876.22 41763.94\n[4778,] 32581.39 41716.94\n[4779,] 32981.70 41976.55\n[4780,] 32937.38 41971.85\n[4781,] 32033.59 36894.72\n[4782,] 32044.48 37114.29\n[4783,] 32663.68 36774.04\n[4784,] 32147.19 39007.84\n[4785,] 32585.58 38957.75\n[4786,] 32107.82 39616.22\n[4787,] 41984.35 36099.10\n[4788,] 41039.91 36035.19\n[4789,] 41826.93 36113.81\n[4790,] 41448.97 36355.66\n[4791,] 39190.95 36539.70\n[4792,] 39190.95 36539.70\n[4793,] 39782.88 37043.49\n[4794,] 39437.72 36444.81\n[4795,] 39017.45 37456.75\n[4796,] 41855.07 37958.26\n[4797,] 39746.65 37995.14\n[4798,] 40420.08 36708.32\n[4799,] 40664.96 37455.28\n[4800,] 41258.44 37146.77\n[4801,] 41092.77 37377.83\n[4802,] 40677.30 37258.61\n[4803,] 41112.68 37267.54\n[4804,] 41317.90 36850.75\n[4805,] 41016.68 36809.02\n[4806,] 41816.59 38154.09\n[4807,] 39242.42 37809.10\n[4808,] 39303.48 36549.51\n[4809,] 38861.12 36955.50\n[4810,] 39829.51 36502.93\n[4811,] 39772.17 36375.77\n[4812,] 29193.72 35384.32\n[4813,] 30347.53 35907.04\n[4814,] 31281.70 35494.06\n[4815,] 21558.63 47152.06\n[4816,] 21558.63 47152.06\n[4817,] 21857.28 46973.56\n[4818,] 21683.70 45726.08\n[4819,] 23250.78 45762.25\n[4820,] 23844.35 47448.77\n[4821,] 24256.71 47326.31\n[4822,] 23695.71 47495.33\n[4823,] 24508.71 47751.29\n[4824,] 24382.48 47357.88\n[4825,] 23324.97 46112.92\n[4826,] 23397.71 46255.07\n[4827,] 23540.98 46004.53\n[4828,] 23814.61 45826.55\n[4829,] 23550.99 46495.37\n[4830,] 23612.30 46542.96\n[4831,] 24165.28 46126.52\n[4832,] 24017.18 46940.26\n[4833,] 25093.16 47165.81\n[4834,] 25174.14 47338.43\n[4835,] 24397.04 46527.28\n[4836,] 22117.03 45752.60\n[4837,] 21204.97 45786.49\n[4838,] 21484.89 45622.60\n[4839,] 21495.80 45373.58\n[4840,] 23519.30 47201.67\n[4841,] 29519.15 44638.48\n[4842,] 29807.47 44873.82\n[4843,] 29296.97 45063.20\n[4844,] 27729.73 45709.42\n[4845,] 28632.87 46911.40\n[4846,] 29695.39 45409.00\n[4847,] 29695.39 45409.00\n[4848,] 29044.58 46118.67\n[4849,] 29044.58 46118.67\n[4850,] 29346.24 44872.19\n[4851,] 29321.36 45664.48\n[4852,] 29455.68 45198.72\n[4853,] 29281.98 45774.85\n[4854,] 28612.69 46193.50\n[4855,] 28324.84 46075.36\n[4856,] 28780.16 46535.54\n[4857,] 28651.28 46386.79\n[4858,] 29378.49 46027.74\n[4859,] 29229.56 46022.74\n[4860,] 29225.75 46061.89\n[4861,] 29266.07 46069.01\n[4862,] 29229.56 46022.74\n[4863,] 29157.71 44457.65\n[4864,] 29157.71 44457.65\n[4865,] 28337.68 44751.35\n[4866,] 28570.97 44703.85\n[4867,] 28076.68 45270.79\n[4868,] 28081.42 45442.20\n[4869,] 29238.24 38668.87\n[4870,] 30263.23 38499.84\n[4871,] 29254.90 39118.40\n[4872,] 28677.94 39185.04\n[4873,] 28294.81 39181.18\n[4874,] 30082.21 38436.17\n[4875,] 29971.11 39320.09\n[4876,] 29872.38 39327.20\n[4877,] 38955.73 34503.48\n[4878,] 38636.54 34545.43\n[4879,] 39971.86 34327.01\n[4880,] 39452.25 34993.38\n[4881,] 39964.67 34274.35\n[4882,] 39741.35 34650.83\n[4883,] 39519.20 34376.53\n[4884,] 38269.51 34781.03\n[4885,] 36889.56 34893.90\n[4886,] 37939.87 35343.54\n[4887,] 38190.16 35350.79\n[4888,] 36465.04 34635.17\n[4889,] 36928.46 35084.96\n[4890,] 39689.49 33812.06\n[4891,] 38008.30 34468.96\n[4892,] 37915.61 34613.41\n[4893,] 39865.79 34003.09\n[4894,] 30438.03 36775.99\n[4895,] 29258.73 37706.32\n[4896,] 17910.50 36697.23\n[4897,] 18715.00 36631.86\n[4898,] 18722.67 36402.03\n[4899,] 19359.40 36134.89\n[4900,] 18339.96 38161.84\n[4901,] 18680.87 38239.31\n[4902,] 19074.03 38725.55\n[4903,] 18384.86 36537.63\n[4904,] 18431.93 36606.59\n[4905,] 18069.13 36865.23\n[4906,] 18128.20 36516.31\n[4907,] 28635.93 28697.12\n[4908,] 25512.55 29229.28\n[4909,] 25342.53 29267.33\n[4910,] 27022.60 29406.75\n[4911,] 27146.02 29318.47\n[4912,] 25167.59 30109.71\n[4913,] 27581.61 29378.41\n[4914,] 26103.31 30159.16\n[4915,] 25439.77 28673.07\n[4916,] 21009.67 40822.65\n[4917,] 20519.17 40060.09\n[4918,] 20730.85 40943.90\n[4919,] 20112.11 40187.06\n[4920,] 21272.50 39613.96\n[4921,] 20695.00 40477.19\n[4922,] 20769.96 41218.47\n[4923,] 20954.52 41110.65\n[4924,] 20992.74 41161.79\n[4925,] 20897.90 41213.35\n[4926,] 20653.16 41226.57\n[4927,] 21133.84 41240.77\n[4928,] 19575.12 40860.16\n[4929,] 19529.88 40944.66\n[4930,] 19676.89 40790.68\n[4931,] 19676.89 40790.68\n[4932,] 19529.88 40944.66\n[4933,] 19676.89 40790.68\n[4934,] 19676.89 40790.68\n[4935,] 29871.45 32114.99\n[4936,] 28872.26 28787.86\n[4937,] 17738.40 40027.47\n[4938,] 17609.19 39842.80\n[4939,] 17382.54 39925.74\n[4940,] 18660.35 42567.99\n[4941,] 18961.65 42668.27\n[4942,] 18686.57 42716.93\n[4943,] 18498.13 40495.05\n[4944,] 18537.09 40157.98\n[4945,] 18520.65 42140.82\n[4946,] 18219.46 41813.23\n[4947,] 18314.07 41951.82\n[4948,] 19280.71 40192.75\n[4949,] 18799.73 40204.80\n[4950,] 20974.59 33100.20\n[4951,] 20707.04 33561.16\n[4952,] 20469.09 33523.33\n[4953,] 20460.64 33596.21\n[4954,] 20961.19 33443.93\n[4955,] 20111.33 33701.73\n[4956,] 20182.34 31585.09\n[4957,] 19930.03 32569.73\n[4958,] 33762.62 33630.70\n[4959,] 33715.84 32484.03\n[4960,] 35529.25 33696.58\n[4961,] 35871.64 34303.97\n[4962,] 34909.00 39906.22\n[4963,] 34522.72 38363.16\n[4964,] 34553.58 38054.84\n[4965,] 33918.10 39220.19\n[4966,] 33918.10 39220.19\n[4967,] 34389.13 39717.96\n[4968,] 35263.78 39162.51\n[4969,] 33404.65 39026.81\n[4970,] 33728.01 39056.62\n[4971,] 34733.29 39828.90\n[4972,] 34025.67 39498.31\n[4973,] 34549.25 37718.77\n[4974,] 34705.98 38390.09\n[4975,] 34763.22 38463.43\n[4976,] 34096.43 39994.70\n[4977,] 33478.05 39854.79\n[4978,] 33919.54 36953.10\n[4979,] 35617.49 40013.95\n[4980,] 35539.98 39998.97\n[4981,] 35510.31 40049.49\n[4982,] 35635.35 40114.50\n[4983,] 35887.22 40144.11\n[4984,] 35889.58 39923.62\n[4985,] 17030.45 36365.00\n[4986,] 17449.68 34002.98\n[4987,] 18406.05 35752.49\n[4988,] 16014.65 37118.02\n[4989,] 12926.08 36504.08\n[4990,] 15955.03 36649.38\n[4991,] 15980.99 36609.24\n[4992,] 15746.09 36915.86\n[4993,] 15970.93 36553.19\n[4994,] 15957.77 37264.15\n[4995,] 12994.10 35302.85\n[4996,] 13664.22 36192.87\n[4997,] 13151.87 35964.09\n[4998,] 13293.53 36476.87\n[4999,] 12358.65 36192.11\n[5000,] 12462.57 36183.87\n[5001,] 11824.29 35957.32\n[5002,] 11969.02 35939.51\n[5003,] 15571.34 34998.71\n[5004,] 15504.93 35003.77\n[5005,] 15557.30 34906.31\n[5006,] 30953.84 34425.57\n[5007,] 29979.52 33225.83\n[5008,] 30777.15 33728.61\n[5009,] 31150.87 33960.67\n[5010,] 42254.10 39487.27\n[5011,] 41734.30 39121.66\n[5012,] 40713.98 39216.49\n[5013,] 40663.12 38841.62\n[5014,] 41332.27 38822.66\n[5015,] 40702.12 39068.18\n[5016,] 40221.70 39622.22\n[5017,] 39237.87 39771.77\n[5018,] 39437.03 39747.35\n[5019,] 36482.52 42857.42\n[5020,] 36722.70 43115.14\n[5021,] 36482.52 42857.42\n[5022,] 36599.45 43229.07\n[5023,] 36898.69 43019.28\n[5024,] 36695.92 42389.95\n[5025,] 36212.80 42815.39\n[5026,] 36593.84 42468.55\n[5027,] 36010.57 42878.58\n[5028,] 36724.74 42512.33\n[5029,] 36692.37 42718.62\n[5030,] 36362.54 43129.03\n[5031,] 36696.77 42634.15\n[5032,] 37075.77 42444.27\n[5033,] 34890.87 42859.34\n[5034,] 36262.33 42139.35\n[5035,] 35233.69 42904.96\n[5036,] 34925.26 42853.27\n[5037,] 35016.05 42888.49\n[5038,] 35654.91 42683.10\n[5039,] 35377.25 43293.29\n[5040,] 35521.57 43287.94\n[5041,] 35456.22 42844.66\n[5042,] 35472.31 42732.76\n[5043,] 35519.81 42819.11\n[5044,] 35307.63 42426.14\n[5045,] 35277.79 43057.12\n[5046,] 35021.31 43010.55\n[5047,] 35176.48 43000.43\n[5048,] 23971.76 31497.79\n[5049,] 24265.64 32022.05\n[5050,] 25943.02 30568.08\n[5051,] 25378.13 30900.82\n[5052,] 25430.50 30891.82\n[5053,] 25430.50 30891.82\n[5054,] 22387.90 32219.37\n[5055,] 24670.48 30188.19\n[5056,] 24670.48 30188.19\n[5057,] 24227.09 31453.43\n[5058,] 24227.09 31453.43\n[5059,] 24178.01 31430.11\n[5060,] 25808.96 48085.38\n[5061,] 26376.66 48382.96\n[5062,] 26363.14 47691.16\n[5063,] 26134.40 48189.66\n[5064,] 25882.67 48648.61\n[5065,] 34557.61 41791.91\n[5066,] 34277.07 41736.99\n[5067,] 34155.79 41949.13\n[5068,] 34276.93 42009.52\n[5069,] 34359.96 41982.62\n[5070,] 35036.12 40361.23\n[5071,] 35432.53 40749.86\n[5072,] 34806.66 40425.07\n[5073,] 34857.65 40669.57\n[5074,] 35253.52 42077.04\n[5075,] 32413.78 41191.05\n[5076,] 32490.61 41214.34\n[5077,] 33129.97 41219.11\n[5078,] 32987.92 41688.56\n[5079,] 33250.81 41249.50\n[5080,] 32997.30 41756.79\n[5081,] 33138.70 42041.06\n[5082,] 32987.92 41688.56\n[5083,] 33048.82 41292.71\n[5084,] 33129.97 41219.11\n[5085,] 33251.74 41378.36\n[5086,] 33204.33 41196.88\n[5087,] 32850.99 41385.31\n[5088,] 32807.53 41638.03\n[5089,] 32641.92 41715.31\n[5090,] 32821.64 41699.95\n[5091,] 32603.98 41458.53\n[5092,] 33362.41 41982.95\n[5093,] 33324.93 42023.05\n[5094,] 36537.44 41164.11\n[5095,] 35759.62 41210.92\n[5096,] 34748.54 40800.81\n[5097,] 34704.60 40653.66\n[5098,] 34540.71 40900.35\n[5099,] 34514.86 40852.39\n[5100,] 34536.80 41708.05\n[5101,] 36019.59 40915.01\n[5102,] 33006.93 41543.26\n[5103,] 33044.85 41569.84\n[5104,] 32524.59 41721.90\n[5105,] 32981.70 41976.55\n[5106,] 32916.21 41754.72\n[5107,] 32524.59 41721.90\n[5108,] 32102.83 37014.16\n[5109,] 32174.73 37698.46\n[5110,] 32139.11 39050.55\n[5111,] 32161.99 39437.89\n[5112,] 41136.19 35945.20\n[5113,] 41613.96 36697.28\n[5114,] 41181.23 36130.78\n[5115,] 41643.85 36309.48\n[5116,] 41637.18 36168.05\n[5117,] 39178.84 36604.84\n[5118,] 39138.99 36559.72\n[5119,] 39138.99 36559.72\n[5120,] 39584.12 36608.54\n[5121,] 39083.65 37556.97\n[5122,] 39750.97 37936.73\n[5123,] 39746.65 37995.14\n[5124,] 39750.97 37936.73\n[5125,] 39751.23 37892.46\n[5126,] 39746.65 37995.14\n[5127,] 39746.65 37995.14\n[5128,] 39750.98 37825.31\n[5129,] 39868.02 37588.96\n[5130,] 40611.62 36592.98\n[5131,] 40702.58 36850.23\n[5132,] 40833.46 36861.06\n[5133,] 40983.75 37469.85\n[5134,] 41248.08 37472.61\n[5135,] 42162.94 37794.08\n[5136,] 41501.76 37924.17\n[5137,] 39098.26 38008.94\n[5138,] 39133.56 37962.16\n[5139,] 38861.12 36955.50\n[5140,] 38988.49 37017.83\n[5141,] 39281.60 37109.69\n[5142,] 39202.43 37430.01\n[5143,] 39086.64 37107.14\n[5144,] 39004.24 37338.14\n[5145,] 33317.93 35378.21\n[5146,] 33322.19 35447.56\n[5147,] 33317.93 35378.21\n[5148,] 29972.28 35852.19\n[5149,] 29972.28 35852.19\n[5150,] 30840.38 35490.01\n[5151,] 21296.36 47540.61\n[5152,] 21320.85 47023.75\n[5153,] 23817.06 46178.64\n[5154,] 24177.30 47447.50\n[5155,] 24010.69 47246.71\n[5156,] 23616.53 47438.27\n[5157,] 24593.62 47743.72\n[5158,] 23296.00 46266.90\n[5159,] 23710.94 46049.50\n[5160,] 23663.50 46544.11\n[5161,] 23941.20 46048.66\n[5162,] 25093.16 47165.81\n[5163,] 25119.35 47150.42\n[5164,] 24425.79 46203.96\n[5165,] 21790.12 46186.98\n[5166,] 22241.93 46545.97\n[5167,] 21651.16 45957.37\n[5168,] 21475.81 45414.05\n[5169,] 23519.30 47201.67\n[5170,] 29527.40 44565.31\n[5171,] 29696.57 44798.01\n[5172,] 29644.04 44870.69\n[5173,] 29696.57 44798.01\n[5174,] 29702.01 44751.06\n[5175,] 29452.09 44942.83\n[5176,] 29702.01 44751.06\n[5177,] 28070.24 45161.87\n[5178,] 29678.77 45660.61\n[5179,] 29689.88 45583.49\n[5180,] 28663.64 46797.77\n[5181,] 29695.39 45409.00\n[5182,] 29135.03 46121.71\n[5183,] 29109.89 46245.90\n[5184,] 29141.23 46198.19\n[5185,] 28905.73 45904.29\n[5186,] 27886.75 46325.98\n[5187,] 28938.60 45939.10\n[5188,] 29322.90 45626.57\n[5189,] 29010.23 45755.52\n[5190,] 28832.02 46308.79\n[5191,] 28938.60 45939.10\n[5192,] 29216.25 44929.65\n[5193,] 29240.41 45813.68\n[5194,] 27766.90 46054.88\n[5195,] 29263.83 45891.33\n[5196,] 28464.37 44875.44\n[5197,] 28105.70 45483.59\n[5198,] 27910.47 45286.02\n[5199,] 28404.15 44055.28\n[5200,] 29328.33 38742.64\n[5201,] 29971.15 38276.32\n[5202,] 30320.33 38676.42\n[5203,] 30601.23 38459.25\n[5204,] 30681.04 38839.80\n[5205,] 30730.76 39223.53\n[5206,] 29179.92 38822.08\n[5207,] 29774.63 38889.47\n[5208,] 28534.68 39758.72\n[5209,] 28322.68 39876.58\n[5210,] 29164.47 39971.51\n[5211,] 29107.86 40393.84\n[5212,] 29575.86 38452.76\n[5213,] 39243.59 34190.27\n[5214,] 39077.51 34527.09\n[5215,] 39196.68 34621.27\n[5216,] 37567.54 35294.78\n[5217,] 38251.29 34726.97\n[5218,] 38251.29 34726.97\n[5219,] 38005.50 34727.56\n[5220,] 37166.21 35173.34\n[5221,] 36438.88 34812.19\n[5222,] 36465.04 34635.17\n[5223,] 40059.06 33708.03\n[5224,] 37728.93 34149.48\n[5225,] 38190.29 34348.82\n[5226,] 38075.03 34344.29\n[5227,] 37674.23 34125.20\n[5228,] 30333.28 36336.19\n[5229,] 30513.68 36484.48\n[5230,] 29523.32 37897.38\n[5231,] 29351.87 38100.47\n[5232,] 29727.93 37727.55\n[5233,] 29074.12 37582.85\n[5234,] 29317.64 37555.17\n[5235,] 29317.64 37555.17\n[5236,] 28430.31 37065.18\n[5237,] 19233.32 37000.79\n[5238,] 19192.51 36955.78\n[5239,] 19526.02 36169.54\n[5240,] 18499.33 37727.99\n[5241,] 18693.28 38044.36\n[5242,] 18499.33 37727.99\n[5243,] 18633.30 38166.64\n[5244,] 18833.13 38400.38\n[5245,] 18190.42 36773.17\n[5246,] 18284.82 36773.19\n[5247,] 27780.65 29917.22\n[5248,] 27542.17 29862.11\n[5249,] 25143.10 30030.69\n[5250,] 27449.30 29262.88\n[5251,] 26227.41 30088.16\n[5252,] 26611.18 28728.05\n[5253,] 21310.93 40054.09\n[5254,] 21293.22 40173.28\n[5255,] 20229.67 40395.54\n[5256,] 20229.67 40395.54\n[5257,] 21097.14 40018.14\n[5258,] 20591.86 40630.04\n[5259,] 20624.25 41031.95\n[5260,] 20174.10 40136.96\n[5261,] 21493.31 39523.14\n[5262,] 20915.34 39704.63\n[5263,] 21144.59 41060.65\n[5264,] 21185.33 41020.82\n[5265,] 20794.73 41260.70\n[5266,] 20954.52 41110.65\n[5267,] 20653.16 41226.57\n[5268,] 21133.84 41240.77\n[5269,] 20769.96 41218.47\n[5270,] 19983.91 40801.33\n[5271,] 19753.52 40742.58\n[5272,] 19585.79 40949.14\n[5273,] 19654.90 41062.14\n[5274,] 19676.89 40790.68\n[5275,] 19585.79 40949.14\n[5276,] 19742.50 41041.11\n[5277,] 25100.24 33339.65\n[5278,] 21239.26 35695.04\n[5279,] 18123.86 40030.26\n[5280,] 17688.80 40138.59\n[5281,] 17340.53 40361.38\n[5282,] 17588.50 40316.88\n[5283,] 17431.12 39715.98\n[5284,] 17382.54 39925.74\n[5285,] 18961.65 42668.27\n[5286,] 18881.03 42505.55\n[5287,] 18745.73 42929.37\n[5288,] 18187.19 41813.01\n[5289,] 18159.06 42530.00\n[5290,] 18804.85 40003.86\n[5291,] 19165.45 40130.33\n[5292,] 20770.26 32379.02\n[5293,] 20451.59 33486.83\n[5294,] 20387.04 33825.18\n[5295,] 21053.09 33228.13\n[5296,] 20567.41 32919.21\n[5297,] 20111.33 33701.73\n[5298,] 20063.30 31962.44\n[5299,] 33906.79 34342.08\n[5300,] 34098.05 34678.29\n[5301,] 34217.81 34683.60\n[5302,] 34197.59 32268.86\n[5303,] 35825.47 34612.26\n[5304,] 33015.31 40206.54\n[5305,] 32890.85 40160.08\n[5306,] 34189.99 37766.84\n[5307,] 35053.39 39604.02\n[5308,] 34975.51 39884.43\n[5309,] 34996.56 39515.68\n[5310,] 34521.82 38301.36\n[5311,] 34370.69 39600.58\n[5312,] 35357.76 39379.56\n[5313,] 33050.73 37182.40\n[5314,] 34351.52 38304.04\n[5315,] 34717.48 38456.78\n[5316,] 34763.22 38463.43\n[5317,] 34349.51 40086.66\n[5318,] 33829.07 39879.73\n[5319,] 33363.81 39849.54\n[5320,] 35466.00 39686.32\n[5321,] 17036.79 35663.21\n[5322,] 18027.62 35834.29\n[5323,] 17251.08 35985.65\n[5324,] 17449.68 34002.98\n[5325,] 18148.24 35919.64\n[5326,] 14210.49 36691.54\n[5327,] 14175.62 36752.99\n[5328,] 14689.89 36250.27\n[5329,] 15332.87 37069.86\n[5330,] 15392.46 36925.25\n[5331,] 15215.13 37161.59\n[5332,] 15433.37 37176.31\n[5333,] 15071.17 36872.15\n[5334,] 12886.36 35298.85\n[5335,] 13514.24 35598.50\n[5336,] 12882.62 36129.10\n[5337,] 12882.62 36129.10\n[5338,] 12953.79 36615.10\n[5339,] 12266.15 36507.50\n[5340,] 12435.79 36087.27\n[5341,] 12018.25 36305.20\n[5342,] 11979.77 35707.72\n[5343,] 12618.77 35479.29\n[5344,] 15611.86 35485.51\n[5345,] 15655.44 35514.26\n[5346,] 15867.80 34515.18\n[5347,] 15423.74 35332.17\n[5348,] 30412.22 34452.80\n[5349,] 31308.79 34136.52\n[5350,] 31302.70 33996.19\n[5351,] 32260.84 32878.34\n[5352,] 30280.93 33630.54\n[5353,] 36807.22 31876.19\n[5354,] 36807.22 31876.19\n[5355,] 36807.22 31876.19\n[5356,] 41978.94 39544.63\n[5357,] 41591.93 39327.98\n[5358,] 41653.26 39110.00\n[5359,] 41646.41 38855.54\n[5360,] 42052.16 38396.78\n[5361,] 41646.41 38855.54\n[5362,] 41520.02 38798.27\n[5363,] 40663.12 38841.62\n[5364,] 40684.58 39024.98\n[5365,] 40681.87 38966.20\n[5366,] 40730.93 39254.96\n[5367,] 40681.87 38966.20\n[5368,] 41174.30 38722.15\n[5369,] 40442.37 39562.72\n[5370,] 39332.27 39678.02\n[5371,] 39482.28 39724.94\n[5372,] 36599.45 43229.07\n[5373,] 36802.00 42985.51\n[5374,] 36758.46 43100.55\n[5375,] 36294.04 42758.28\n[5376,] 36738.01 42359.71\n[5377,] 36724.74 42512.33\n[5378,] 36938.43 42682.97\n[5379,] 36391.03 43056.63\n[5380,] 36362.54 43129.03\n[5381,] 36176.47 43075.41\n[5382,] 36391.03 43056.63\n[5383,] 36938.43 42682.97\n[5384,] 36888.78 42582.01\n[5385,] 37351.42 42515.85\n[5386,] 37120.98 42629.24\n[5387,] 37101.96 41756.97\n[5388,] 36111.60 42480.89\n[5389,] 36596.15 42008.75\n[5390,] 35120.27 42848.74\n[5391,] 36986.31 41681.37\n[5392,] 36306.08 42109.26\n[5393,] 35026.93 42837.67\n[5394,] 36986.31 41681.37\n[5395,] 35654.91 42683.10\n[5396,] 35618.69 42647.25\n[5397,] 36219.47 42620.50\n[5398,] 36142.50 42582.24\n[5399,] 35363.35 42475.21\n[5400,] 35317.71 43315.87\n[5401,] 35317.71 43315.87\n[5402,] 35377.25 43293.29\n[5403,] 35456.22 42844.66\n[5404,] 35377.25 43293.29\n[5405,] 35409.40 43504.30\n[5406,] 35521.57 43287.94\n[5407,] 35202.25 42976.70\n[5408,] 35032.14 43095.64\n[5409,] 35032.14 43095.64\n[5410,] 35176.48 43000.43\n[5411,] 35021.31 43010.55\n[5412,] 35489.11 43685.88\n[5413,] 35659.26 43562.75\n[5414,] 23971.76 31497.79\n[5415,] 23971.76 31497.79\n[5416,] 25692.56 30857.69\n[5417,] 25603.53 30871.26\n[5418,] 25648.08 30864.46\n[5419,] 25430.50 30891.82\n[5420,] 25430.50 30891.82\n[5421,] 25648.08 30864.46\n[5422,] 25378.13 30900.82\n[5423,] 25378.13 30900.82\n[5424,] 25603.53 30871.26\n[5425,] 25492.64 30608.30\n[5426,] 25492.64 30608.30\n[5427,] 24227.09 31453.43\n[5428,] 26055.85 47871.06\n[5429,] 26121.13 47963.14\n[5430,] 26022.07 47921.91\n[5431,] 26026.63 48628.51\n[5432,] 26917.55 47972.37\n[5433,] 27304.32 47968.69\n[5434,] 26119.03 47626.35\n[5435,] 26449.60 47454.39\n[5436,] 26373.85 47351.52\n[5437,] 25882.67 48648.61\n[5438,] 26630.20 47351.29\n[5439,] 34291.08 41039.86\n[5440,] 34179.56 41440.81\n[5441,] 34086.95 41912.07\n[5442,] 33925.16 41317.09\n[5443,] 34276.93 42009.52\n[5444,] 34359.96 41982.62\n[5445,] 34334.65 42049.85\n[5446,] 34969.35 40389.84\n[5447,] 34698.27 41073.20\n[5448,] 34721.19 40540.21\n[5449,] 32973.60 42149.01\n[5450,] 33023.52 42207.49\n[5451,] 33129.97 41219.11\n[5452,] 33179.38 42084.48\n[5453,] 32990.37 41605.84\n[5454,] 33023.52 42207.49\n[5455,] 33179.38 42084.48\n[5456,] 33028.10 42151.70\n[5457,] 33023.52 42207.49\n[5458,] 32785.76 41808.31\n[5459,] 32743.27 41330.52\n[5460,] 32806.30 41626.16\n[5461,] 32650.92 41800.04\n[5462,] 33276.86 41992.68\n[5463,] 33317.91 42073.50\n[5464,] 33343.93 42143.21\n[5465,] 33343.93 42143.21\n[5466,] 32451.97 41520.06\n[5467,] 36494.87 41211.26\n[5468,] 36537.44 41164.11\n[5469,] 36153.02 41472.97\n[5470,] 35668.08 40927.64\n[5471,] 34825.93 40877.56\n[5472,] 34807.64 40822.23\n[5473,] 34514.86 40852.39\n[5474,] 34852.23 41692.13\n[5475,] 33044.85 41569.84\n[5476,] 32588.22 41800.05\n[5477,] 32357.47 36580.97\n[5478,] 31549.60 37322.49\n[5479,] 31986.22 37469.36\n[5480,] 32320.18 37787.48\n[5481,] 32174.73 37698.46\n[5482,] 39138.99 36559.72\n[5483,] 39656.21 37461.76\n[5484,] 39017.45 37456.75\n[5485,] 40963.38 38132.66\n[5486,] 39914.89 37706.46\n[5487,] 39862.54 37677.08\n[5488,] 40908.23 36564.34\n[5489,] 40524.49 37058.36\n[5490,] 40420.08 36708.32\n[5491,] 41112.68 37267.54\n[5492,] 40775.53 37262.11\n[5493,] 41016.68 36809.02\n[5494,] 41256.54 36653.64\n[5495,] 41192.51 37362.87\n[5496,] 41212.41 37532.80\n[5497,] 41439.47 37826.96\n[5498,] 41096.14 38144.49\n[5499,] 41993.14 38172.11\n[5500,] 39190.67 37767.09\n[5501,] 38916.04 36837.21\n[5502,] 39529.80 37048.48\n[5503,] 39323.51 37263.76\n[5504,] 39086.64 37107.14\n[5505,] 38913.71 37643.73\n[5506,] 39732.47 36881.63\n[5507,] 39732.47 36881.63\n[5508,] 33322.19 35447.56\n[5509,] 29352.65 35432.23\n[5510,] 29289.71 35382.82\n[5511,] 29599.54 35297.37\n[5512,] 29848.35 35275.79\n[5513,] 30528.63 35991.98\n[5514,] 29810.74 35965.00\n[5515,] 21198.74 47562.16\n[5516,] 21752.95 47002.21\n[5517,] 21393.74 47085.59\n[5518,] 23938.60 47260.17\n[5519,] 24442.04 47860.89\n[5520,] 23397.71 46255.07\n[5521,] 23663.50 46544.11\n[5522,] 24369.39 47482.38\n[5523,] 24822.58 47056.57\n[5524,] 25165.99 47142.68\n[5525,] 21396.98 46079.81\n[5526,] 22241.93 46545.97\n[5527,] 21485.54 46193.59\n[5528,] 22241.94 46462.68\n[5529,] 21629.55 45879.40\n[5530,] 23430.31 47233.57\n[5531,] 23581.25 46870.49\n[5532,] 23450.11 46867.27\n[5533,] 29577.99 44987.12\n[5534,] 29548.52 44871.70\n[5535,] 29548.52 44871.70\n[5536,] 28879.22 45454.97\n[5537,] 29008.08 45470.67\n[5538,] 29337.06 45027.82\n[5539,] 29258.54 44994.84\n[5540,] 29807.47 44873.82\n[5541,] 28070.24 45161.87\n[5542,] 27920.86 45079.77\n[5543,] 29071.88 46208.62\n[5544,] 29110.88 46009.43\n[5545,] 28973.82 46300.29\n[5546,] 29044.58 46118.67\n[5547,] 28207.93 44494.51\n[5548,] 28808.95 46010.43\n[5549,] 28905.73 45904.29\n[5550,] 28179.91 44544.02\n[5551,] 27354.73 45992.92\n[5552,] 27625.96 45873.42\n[5553,] 27892.94 46478.86\n[5554,] 27778.79 46137.43\n[5555,] 28242.87 46343.90\n[5556,] 28334.11 45907.55\n[5557,] 28254.19 46230.56\n[5558,] 28452.45 46673.45\n[5559,] 28651.28 46386.79\n[5560,] 29293.48 44558.05\n[5561,] 27705.12 45364.64\n[5562,] 28081.42 45442.20\n[5563,] 28088.46 45568.07\n[5564,] 28010.77 44101.23\n[5565,] 28061.11 43878.83\n[5566,] 28311.51 44027.29\n\n\n\n\nCode\ntrain_data &lt;- train_data %&gt;% \n  st_drop_geometry()"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex09/data/geospatial/MPSZ-2019.html",
    "href": "Hands-on_Ex/Hands-on_Ex09/data/geospatial/MPSZ-2019.html",
    "title": "IS415-GAA",
    "section": "",
    "text": "&lt;!DOCTYPE qgis PUBLIC ‘http://mrcc.com/qgis.dtd’ ‘SYSTEM’&gt;     dataset\n\n\n        0 0     false"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex10/Hands-on_Ex10.html",
    "href": "Hands-on_Ex/Hands-on_Ex10/Hands-on_Ex10.html",
    "title": "Hands-on Exercise 10 - Modelling Geographical Accessibility",
    "section": "",
    "text": "Code\npacman::p_load(tmap, SpatialAcc, sf, \n               ggstatsplot, reshape2,\n               tidyverse)\nspatialacc is from the SpatialAcc package, which is a package for computing spatial accessibility measures. The package provides functions for computing the following measures:\nreshape2 is a package for reshaping data frames. It provides functions for converting data between wide and long formats."
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex10/Hands-on_Ex10.html#updating-crs",
    "href": "Hands-on_Ex/Hands-on_Ex10/Hands-on_Ex10.html#updating-crs",
    "title": "Hands-on Exercise 10 - Modelling Geographical Accessibility",
    "section": "1.1 Updating CRS",
    "text": "1.1 Updating CRS\n\n\nCode\nmpsz &lt;- st_transform(mpsz, 3414)\neldercare &lt;- st_transform(eldercare, 3414)\nhexagons &lt;- st_transform(hexagons, 3414)\n\n\n\n\nCode\nst_crs(mpsz)\n\n\nCoordinate Reference System:\n  User input: EPSG:3414 \n  wkt:\nPROJCRS[\"SVY21 / Singapore TM\",\n    BASEGEOGCRS[\"SVY21\",\n        DATUM[\"SVY21\",\n            ELLIPSOID[\"WGS 84\",6378137,298.257223563,\n                LENGTHUNIT[\"metre\",1]]],\n        PRIMEM[\"Greenwich\",0,\n            ANGLEUNIT[\"degree\",0.0174532925199433]],\n        ID[\"EPSG\",4757]],\n    CONVERSION[\"Singapore Transverse Mercator\",\n        METHOD[\"Transverse Mercator\",\n            ID[\"EPSG\",9807]],\n        PARAMETER[\"Latitude of natural origin\",1.36666666666667,\n            ANGLEUNIT[\"degree\",0.0174532925199433],\n            ID[\"EPSG\",8801]],\n        PARAMETER[\"Longitude of natural origin\",103.833333333333,\n            ANGLEUNIT[\"degree\",0.0174532925199433],\n            ID[\"EPSG\",8802]],\n        PARAMETER[\"Scale factor at natural origin\",1,\n            SCALEUNIT[\"unity\",1],\n            ID[\"EPSG\",8805]],\n        PARAMETER[\"False easting\",28001.642,\n            LENGTHUNIT[\"metre\",1],\n            ID[\"EPSG\",8806]],\n        PARAMETER[\"False northing\",38744.572,\n            LENGTHUNIT[\"metre\",1],\n            ID[\"EPSG\",8807]]],\n    CS[Cartesian,2],\n        AXIS[\"northing (N)\",north,\n            ORDER[1],\n            LENGTHUNIT[\"metre\",1]],\n        AXIS[\"easting (E)\",east,\n            ORDER[2],\n            LENGTHUNIT[\"metre\",1]],\n    USAGE[\n        SCOPE[\"Cadastre, engineering survey, topographic mapping.\"],\n        AREA[\"Singapore - onshore and offshore.\"],\n        BBOX[1.13,103.59,1.47,104.07]],\n    ID[\"EPSG\",3414]]"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex10/Hands-on_Ex10.html#cleaning-and-updating-attribute-fields-of-the-geospatial-data",
    "href": "Hands-on_Ex/Hands-on_Ex10/Hands-on_Ex10.html#cleaning-and-updating-attribute-fields-of-the-geospatial-data",
    "title": "Hands-on Exercise 10 - Modelling Geographical Accessibility",
    "section": "1.2 Cleaning and updating attribute fields of the geospatial data",
    "text": "1.2 Cleaning and updating attribute fields of the geospatial data\n\n\nCode\neldercare &lt;- eldercare %&gt;%\n  select(fid, ADDRESSPOS) %&gt;%\n  mutate(capacity = 100)\n\n\n\n\nCode\nhexagons &lt;- hexagons %&gt;%\n  select(fid) %&gt;%\n  mutate(demand = 100)"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex10/Hands-on_Ex10.html#aspatial-data",
    "href": "Hands-on_Ex/Hands-on_Ex10/Hands-on_Ex10.html#aspatial-data",
    "title": "Hands-on Exercise 10 - Modelling Geographical Accessibility",
    "section": "1.3 Aspatial data",
    "text": "1.3 Aspatial data\n\n\nCode\nODMatrix &lt;- read_csv(\"data/aspatial/OD_Matrix.csv\", skip = 0)\n\n\nwe indicate skip = 0 to ensure that the first row is not skipped."
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex10/Hands-on_Ex10.html#tidying-distance-matrix",
    "href": "Hands-on_Ex/Hands-on_Ex10/Hands-on_Ex10.html#tidying-distance-matrix",
    "title": "Hands-on Exercise 10 - Modelling Geographical Accessibility",
    "section": "1.4 tidying distance matrix",
    "text": "1.4 tidying distance matrix\n\n\nCode\ndistmat &lt;- ODMatrix %&gt;%\n  select(origin_id, destination_id, total_cost) %&gt;%\n  spread(destination_id, total_cost)%&gt;%\n  select(c(-c('origin_id')))\n\n\n\n\nCode\ndistmat_km &lt;- as.matrix(distmat/1000)"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex10/Hands-on_Ex10.html#visualising-hansens-accessibility",
    "href": "Hands-on_Ex/Hands-on_Ex10/Hands-on_Ex10.html#visualising-hansens-accessibility",
    "title": "Hands-on Exercise 10 - Modelling Geographical Accessibility",
    "section": "2.1 visualising hansen’s accessibility",
    "text": "2.1 visualising hansen’s accessibility\n\n\nCode\nmapex &lt;- st_bbox(hexagons)\n\n\n\n\nCode\ntmap_mode(\"plot\")\ntm_shape(hexagon_Hansen,\n         bbox = mapex) + \n  tm_fill(col = \"accHansen\",\n          n = 10,\n          style = \"quantile\",\n          border.col = \"black\",\n          border.lwd = 1) +\ntm_shape(eldercare) +\n  tm_symbols(size = 0.1) +\n  tm_layout(main.title = \"Accessibility to eldercare: Hansen method\",\n            main.title.position = \"center\",\n            main.title.size = 2,\n            legend.outside = FALSE,\n            legend.height = 0.45, \n            legend.width = 3.0,\n            legend.format = list(digits = 6),\n            legend.position = c(\"right\", \"top\"),\n            frame = TRUE) +\n  tm_compass(type=\"8star\", size = 2) +\n  tm_scale_bar(width = 0.15) +\n  tm_grid(lwd = 0.1, alpha = 0.5)"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex10/Hands-on_Ex10.html#statistical-graphic-visualisation",
    "href": "Hands-on_Ex/Hands-on_Ex10/Hands-on_Ex10.html#statistical-graphic-visualisation",
    "title": "Hands-on Exercise 10 - Modelling Geographical Accessibility",
    "section": "2.2 Statistical graphic visualisation",
    "text": "2.2 Statistical graphic visualisation\nFirstly, we need to add the planning region field into haxegon_Hansen simple feature data frame by using the code chunk below.\n\n\nCode\nhexagon_Hansen &lt;- st_join(hexagon_Hansen, mpsz, \n                          join = st_intersects)\n\n\n\n\nCode\nggplot(data=hexagon_Hansen, \n       aes(y = log(accHansen), \n           x= REGION_N)) +\n  geom_boxplot() +\n  geom_point(stat=\"summary\", \n             fun.y=\"mean\", \n             colour =\"red\", \n             size=2)"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex10/Hands-on_Ex10.html#visualising-kd2sfcas-accessibility",
    "href": "Hands-on_Ex/Hands-on_Ex10/Hands-on_Ex10.html#visualising-kd2sfcas-accessibility",
    "title": "Hands-on Exercise 10 - Modelling Geographical Accessibility",
    "section": "3.1 visualising KD2SFCA’s accessibility",
    "text": "3.1 visualising KD2SFCA’s accessibility\n\n\nCode\ntmap_mode(\"plot\")\ntm_shape(hexagon_KD2SFCA,\n         bbox = mapex) + \n  tm_fill(col = \"accKD2SFCA\",\n          n = 10,\n          style = \"quantile\",\n          border.col = \"black\",\n          border.lwd = 1) +\ntm_shape(eldercare) +\n  tm_symbols(size = 0.1) +\n  tm_layout(main.title = \"Accessibility to eldercare: KD2SFCA method\",\n            main.title.position = \"center\",\n            main.title.size = 2,\n            legend.outside = FALSE,\n            legend.height = 0.45, \n            legend.width = 3.0,\n            legend.format = list(digits = 6),\n            legend.position = c(\"right\", \"top\"),\n            frame = TRUE) +\n  tm_compass(type=\"8star\", size = 2) +\n  tm_scale_bar(width = 0.15) +\n  tm_grid(lwd = 0.1, alpha = 0.5)"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex10/Hands-on_Ex10.html#statistical-graphic-visualisation-1",
    "href": "Hands-on_Ex/Hands-on_Ex10/Hands-on_Ex10.html#statistical-graphic-visualisation-1",
    "title": "Hands-on Exercise 10 - Modelling Geographical Accessibility",
    "section": "3.2 Statistical graphic visualisation",
    "text": "3.2 Statistical graphic visualisation\n\n\nCode\nhexagon_KD2SFCA &lt;- st_join(hexagon_KD2SFCA, mpsz, \n                          join = st_intersects)\n\n\n\n\nCode\nggplot(data=hexagon_KD2SFCA, \n       aes(y = accKD2SFCA, \n           x= REGION_N)) +\n  geom_boxplot() +\n  geom_point(stat=\"summary\", \n             fun.y=\"mean\", \n             colour =\"red\", \n             size=2)"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex10/Hands-on_Ex10.html#visualising-sams-accessibility",
    "href": "Hands-on_Ex/Hands-on_Ex10/Hands-on_Ex10.html#visualising-sams-accessibility",
    "title": "Hands-on Exercise 10 - Modelling Geographical Accessibility",
    "section": "4.1 visualising SAM’s accessibility",
    "text": "4.1 visualising SAM’s accessibility\n\n\nCode\ntmap_mode(\"plot\")\ntm_shape(hexagon_SAM,\n         bbox = mapex) + \n  tm_fill(col = \"accSAM\",\n          n = 10,\n          style = \"quantile\",\n          border.col = \"black\",\n          border.lwd = 1) +\ntm_shape(eldercare) +\n  tm_symbols(size = 0.1) +\n  tm_layout(main.title = \"Accessibility to eldercare: SAM method\",\n            main.title.position = \"center\",\n            main.title.size = 2,\n            legend.outside = FALSE,\n            legend.height = 0.45, \n            legend.width = 3.0,\n            legend.format = list(digits = 3),\n            legend.position = c(\"right\", \"top\"),\n            frame = TRUE) +\n  tm_compass(type=\"8star\", size = 2) +\n  tm_scale_bar(width = 0.15) +\n  tm_grid(lwd = 0.1, alpha = 0.5)"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex10/Hands-on_Ex10.html#statistical-graphic-visualisation-2",
    "href": "Hands-on_Ex/Hands-on_Ex10/Hands-on_Ex10.html#statistical-graphic-visualisation-2",
    "title": "Hands-on Exercise 10 - Modelling Geographical Accessibility",
    "section": "4.2 Statistical graphic visualisation",
    "text": "4.2 Statistical graphic visualisation\n\n\nCode\nhexagon_SAM &lt;- st_join(hexagon_SAM, mpsz, \n                       join = st_intersects)\n\n\n\n\nCode\nggplot(data=hexagon_SAM, \n       aes(y = accSAM, \n           x= REGION_N)) +\n  geom_boxplot() +\n  geom_point(stat=\"summary\", \n             fun.y=\"mean\", \n             colour =\"red\", \n             size=2)"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex10/data/geospatial/hexagons.html",
    "href": "Hands-on_Ex/Hands-on_Ex10/data/geospatial/hexagons.html",
    "title": "IS415-GAA",
    "section": "",
    "text": "&lt;!DOCTYPE qgis PUBLIC ‘http://mrcc.com/qgis.dtd’ ‘SYSTEM’&gt;     dataset\n\n\n                 0 0     false"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex10/data/geospatial/ELDERCARE.html",
    "href": "Hands-on_Ex/Hands-on_Ex10/data/geospatial/ELDERCARE.html",
    "title": "IS415-GAA",
    "section": "",
    "text": "&lt;!DOCTYPE qgis PUBLIC ‘http://mrcc.com/qgis.dtd’ ‘SYSTEM’&gt;  ELDERCARE  ENG dataset\n\nELDERCARE\n\n                 0 0     false"
  }
]