---
title: "Hands-on Exercise 8 - Geographically Weighted Predictive Models"
format:
  html:
    code-fold: true
    code-summary: "Show the code"

execute: 
  eval: true
  echo: true
  warning: false
  freeze: true

date: "`r Sys.Date()`"
---

# 1.0 Getting Started

## 1.1 Installing and loading packages 

```{r}
pacman::p_load(sf, spdep, GWmodel, SpatialML, 
               tmap, rsample, Metrics, tidyverse)
```

## 1.2 Data

```{r}
mdata <- read_rds("data/aspatial/mdata.rds")
```

### 1.2.1 data sampling 

```{r}
#| eval: False

set.seed(1234)
resale_split <- initial_split(mdata, 
                              prop = 6.5/10,)
train_data <- training(resale_split)
test_data <- testing(resale_split)
```

```{r}
#| eval: False

write_rds(train_data, "data/rds/train_data.rds")
write_rds(test_data, "data/rds/test_data.rds")
```

# 2.0 Computing correlation matrix 

```{r}

mdata_nogeo <- mdata %>%
  st_drop_geometry()
corrplot::corrplot(cor(mdata_nogeo[, 2:17]), 
                   diag = FALSE, 
                   order = "AOE",
                   tl.pos = "td", 
                   tl.cex = 0.5, 
                   method = "number", 
                   type = "upper")
```

::: call-out note The correlation matrix above shows that all the correlation values are below 0.8. Hence, there is no sign of multicolinearity.

```{r}
train_data <- read_rds("data/aspatial/train_data.rds")
test_data <- read_rds("data/aspatial/test_data.rds")
```



# 3.0 Building a non spatial multiple linear regression 

```{r}
#| eval: False

price_mlr <- lm(resale_price ~ floor_area_sqm +
                  storey_order + remaining_lease_mths +
                  PROX_CBD + PROX_ELDERLYCARE + PROX_HAWKER +
                  PROX_MRT + PROX_PARK + PROX_MALL + 
                  PROX_SUPERMARKET + WITHIN_350M_KINDERGARTEN +
                  WITHIN_350M_CHILDCARE + WITHIN_350M_BUS +
                  WITHIN_1KM_PRISCH,
                data=train_data)
summary(price_mlr)
```

```{r}
#| eval: False

write_rds(price_mlr, "data/rds/price_mlr.rds" ) 
```

```{r}
price_mlr <- read_rds("data/rds/price_mlr.rds" )
```

```{r}
summary(price_mlr)
```


# 4.0 gwr predictive method

```{r}
#| eval: False

train_data_sp <- as_Spatial(train_data)
train_data_sp
```

## 4.1 computing adaptive bandwidth 

```{r}
#| eval: False

bw_adaptive <- bw.gwr(resale_price ~ floor_area_sqm +
                  storey_order + remaining_lease_mths +
                  PROX_CBD + PROX_ELDERLYCARE + PROX_HAWKER +
                  PROX_MRT + PROX_PARK + PROX_MALL + 
                  PROX_SUPERMARKET + WITHIN_350M_KINDERGARTEN +
                  WITHIN_350M_CHILDCARE + WITHIN_350M_BUS +
                  WITHIN_1KM_PRISCH,
                  data=train_data_sp,
                  approach="CV",
                  kernel="gaussian",
                  adaptive=TRUE,
                  longlat=FALSE)
```
```{r}
#| eval: False

write_rds(bw_adaptive, "data/rds/bw_adaptive.rds" ) 
```

```{r}
bw_adaptive <- read_rds("data/rds/bw_adaptive.rds" )
```


```{r}
bw_adaptive
```


## 4.2 gwr model



```{r}
#| eval: False

gwr_adaptive <- gwr.basic(formula = resale_price ~
                            floor_area_sqm + storey_order +
                            remaining_lease_mths + PROX_CBD + 
                            PROX_ELDERLYCARE + PROX_HAWKER +
                            PROX_MRT + PROX_PARK + PROX_MALL + 
                            PROX_SUPERMARKET + WITHIN_350M_KINDERGARTEN +
                            WITHIN_350M_CHILDCARE + WITHIN_350M_BUS +
                            WITHIN_1KM_PRISCH,
                          data=train_data_sp,
                          bw=bw_adaptive, 
                          kernel = 'gaussian', 
                          adaptive=TRUE,
                          longlat = FALSE)
```

```{r}
#| eval: False

write_rds(gwr_adaptive, "data/rds/gwr_adaptive.rds" ) 

```

```{r}
gwr_adaptive <- read_rds("data/rds/gwr_adaptive.rds" )
```

```{r}
gwr_adaptive
```

```{r}
#| eval: False

test_data_sp <- test_data %>%
  as_Spatial()
test_data_sp
```


# 4.3 computing adaptive bandwidth for test data 

```{r}
#| eval: False

gwr_bw_test_adaptive <- bw.gwr(resale_price ~ floor_area_sqm +
                  storey_order + remaining_lease_mths +
                  PROX_CBD + PROX_ELDERLYCARE + PROX_HAWKER +
                  PROX_MRT + PROX_PARK + PROX_MALL + 
                  PROX_SUPERMARKET + WITHIN_350M_KINDERGARTEN +
                  WITHIN_350M_CHILDCARE + WITHIN_350M_BUS +
                  WITHIN_1KM_PRISCH,
                  data=test_data_sp,
                  approach="CV",
                  kernel="gaussian",
                  adaptive=TRUE,
                  longlat=FALSE)
```
```{r}
#| eval: False

write_rds(gwr_bw_test_adaptive, "data/rds/gwr_bw_test_adaptive.rds" ) 
```

```{r}
gwr_bw_test_adaptive <- read_rds("data/rds/gwr_bw_test_adaptive.rds" )
```

```{r}
gwr_bw_test_adaptive
```


# 4.4 Computing predicted values of the test data

```{r}
# gwr_pred <- gwr.predict(formula = resale_price ~
#                          floor_area_sqm + storey_order +
#                          remaining_lease_mths + PROX_CBD + 
#                          PROX_ELDERLYCARE + PROX_HAWKER + 
#                          PROX_MRT + PROX_PARK + PROX_MALL + 
#                          PROX_SUPERMARKET + WITHIN_350M_KINDERGARTEN + WITHIN_350M_CHILDCARE + WITHIN_350M_BUS + WITHIN_1KM_PRISCH, 
#                        data=train_data_sp, 
#                        predictdata = test_data_sp, 
#                        bw= 40, 
#                        kernel = 'gaussian', 
#                        adaptive=TRUE, 
#                        longlat = FALSE)
```

# 5.0 preparing coordinates 

## 5.1 extracting coordinates data

```{r}
#| eval: False

coords <- st_coordinates(mdata)
coords_train <- st_coordinates(train_data)
coords_test <- st_coordinates(test_data)
```

```{r}
#| eval: False

write_rds(coords_train, "data/rds/coords_train.rds" )
write_rds(coords_test, "data/rds/coords_test.rds" )
```

```{r}
coords_train <- read_rds("data/rds/coords_train.rds" )
coords_test <- read_rds("data/rds/coords_test.rds" )
```

```{r}
coords_train
```

```{r}
coords_test
```



```{r}
#| eval: False

train_data <- train_data %>% 
  st_drop_geometry()
```

# 6.0 calibrating random forest model 

```{r}
#| eval: False

set.seed(1234)
rf <- ranger(resale_price ~ floor_area_sqm + storey_order + 
               remaining_lease_mths + PROX_CBD + PROX_ELDERLYCARE + 
               PROX_HAWKER + PROX_MRT + PROX_PARK + PROX_MALL + 
               PROX_SUPERMARKET + WITHIN_350M_KINDERGARTEN +
               WITHIN_350M_CHILDCARE + WITHIN_350M_BUS + 
               WITHIN_1KM_PRISCH,
             data=train_data)
rf
```

```{r}
#| eval: False

write_rds(rf, "data/rds/rf.rds" )
```

```{r}
rf <- read_rds("data/rds/rf.rds" )
```

```{r}
rf
```


# 7.0 calibrating geographical random forest 

```{r}
class(train_data$storey_order)
```


```{r}
set.seed(1234)
gwRF_adaptive <- grf(formula = resale_price ~ floor_area_sqm + storey_order +
                       remaining_lease_mths + PROX_CBD + PROX_ELDERLYCARE +
                       PROX_HAWKER + PROX_MRT + PROX_PARK + PROX_MALL +
                       PROX_SUPERMARKET + WITHIN_350M_KINDERGARTEN +
                       WITHIN_350M_CHILDCARE + WITHIN_350M_BUS +
                       WITHIN_1KM_PRISCH,
                     dframe=train_data, 
                     bw=55,
                     kernel="adaptive",
                     coords=coords_train)
```


```{r}
# write_rds(gwRF_adaptive, "data/rds/gwRF_adaptive.rds" )
```

```{r}
```

