---
title: "In class Exercise 03 part 2"
execute: 
  warning: false # show warnings
  eval: true # evaluate the code
  echo: true # show the code
date: "`r Sys.Date()`"
---

Hands on Exercise 03 part 2 :D

# Getting started

## installing and loading

```{r}
pacman::p_load(maptools, sf, raster, spatstat, 
               tmap, tidyverse, spNetwork, classInt, virdis)
```

## import data 

```{r}
network <- st_read(dsn="data/geospatial", layer="Punggol_St")
childcare <- st_read(dsn="data/geospatial", layer="Punggol_CC")
```
tmap mode to plot

```{r}
tmap_mode("view")
tm_shape(childcare) + tm_dots()+
  tm_shape(network) + tm_lines()
tmap_mode("plot")
```

## create line segments 
-- mindist is half of the distance of 750. therefore 375
```{r}
lixels <- lixelize_lines(network,750 ,mindist = 375)
```

## ??
```{r}
samples <- lines_center(lixels)
```

## genrating line_center(lixels)
```{r}
densities <- nkde(network, events = childcare, w = rep(1, nrow(childcare)), samples = samples, kernel_name ="quartic", bw = 300, div= "bw", method = "simple", digits = 1, tol = 1, grid_shape = c(1,1), max_depth = 8, agg = 5, sparse = TRUE, verbose = FALSE
                  )
```

## plot
```{r}
samples$density <- densities
lixels$density <- densities
```

```{r}
# rescaling to help the mapping
samples$density <- samples$density*1000
lixels$density <- lixels$density*1000
```

```{r}
tmap_mode('view')
tm_shape(lixels)+
  tm_lines(col="density")+
tm_shape(childcare)+
  tm_dots()
```

# Network Constrained G- and K-Function Analysis

## G-Function
